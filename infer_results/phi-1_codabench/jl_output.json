[
    {
        "id": 0,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Tuple{Int64, Int64}} \n    output = []\n    for n in nums\n        push!(output, (count(x->x==n, nums), n))\n    end\n    sort!(output, rev=true)\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 1, 3, 1, 3, 1]) == ????)\nend\n\n\n",
        "answer": "([2, 2], 1)"
    },
    {
        "id": 1,
        "res": 0
    },
    {
        "id": 2,
        "code": "\nfunction f(text::String)::String \n    new_text = collect(text)\n    for i in '+'\n        if i in new_text\n            filter!(x -> x != i, new_text)\n        end\n    end\n    return join(new_text, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"hbtofdeiequ\") == ????)\nend\n\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 3,
        "code": "\n\nfunction f(text::String, value::String)::String \n    text_list = collect(text)\n    append!(text_list, value)\n    return join(text_list, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"bcksrut\", \"q\") == ????)\nend\n\n\n",
        "answer": "\"bckrut\""
    },
    {
        "id": 4,
        "code": "\nfunction f(array::Vector{String})::String \n    s = ' '\n    s *= join(array)\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\" \", \"  \", \"    \", \"   \"]) == ????)\nend\n\n\n",
        "answer": "\"   \""
    },
    {
        "id": 5,
        "code": "\n\nfunction f(text::String, lower::String, upper::String)::Tuple{Int64, String} \n    count = 0\n    new_text = []\n    for char in text\n        char = isdigit(char) ? lower : upper\n        if char in ['p', 'C']\n            count += 1\n        end\n        push!(new_text, char)\n    end\n    return count, join(new_text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"DSUWeqExTQdCMGpqur\", \"a\", \"x\") == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 6,
        "res": 0
    },
    {
        "id": 7,
        "code": "\n\nfunction f(list::Vector{Int64})::Vector{Int64}\n    original = copy(list)\n    while length(list) > 1\n        popat!(list, length(list))\n        for i in 1:length(list)\n            popat!(list, i)\n        end\n    end\n    list = copy(original)\n    if !isempty(list)\n        popfirst!(list)\n    end\n    return list\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Int64}([])) == ????)\nend\n\n\n",
        "answer": "[]"
    },
    {
        "id": 8,
        "code": "\nfunction f(string::String, encryption::Int64)::String \n    if encryption == 0\n        return string\n    else\n        return uppercase(string)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"UppEr\", 0) == ????)\nend\n\n\n",
        "answer": "\"U\""
    },
    {
        "id": 9,
        "code": "\nfunction f(t::String)::Bool \n    for c in t\n        if !isdigit(c)\n            return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"#284376598\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 10,
        "code": "\nfunction f(text::String)::String \n    new_text = \"\"\n    for ch in lowercase(strip(text))\n        if isnumeric(ch) || ch in ['Ä', 'ä', 'Ï', 'ï', 'Ö', 'ö', 'Ü', 'ü']\n            new_text *= ch\n        end\n    end\n    return new_text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\") == ????)\nend\n\n\n",
        "answer": "\"\""
    },
    {
        "id": 11,
        "res": 0
    },
    {
        "id": 12,
        "code": "\nfunction f(s::String, x::String)::String \n    count = 0\n    while startswith(s, x) && count < length(s) - length(x)\n        s = s[length(x) + 1:end]\n        count += length(x)\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"If you want to live a happy life! Daniel\", \"Daniel\") == ????)\nend\n\n\n",
        "answer": "\"life\""
    },
    {
        "id": 13,
        "code": "\nusing Base.Iterators: count\n\nfunction f(names::Vector{String})::Int64 \n    count = length(names)\n    numberOfNames = 0\n    for name in names\n        if all(isletter, name)\n            numberOfNames += 1\n        end\n    end\n    return numberOfNames\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"sharron\", \"Savannah\", \"Mike Cherokee\"]) == ????)\nend\n\n\n",
        "answer": "3"
    },
    {
        "id": 14,
        "code": "\nfunction f(s::String)::String \n    arr = reverse(collect(strip(s)))\n    return join(arr, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"   OOP   \") == ????)\nend\n\n\n",
        "answer": "\"OLOP\""
    },
    {
        "id": 15,
        "code": "\nfunction f(text::String, wrong::String, right::String)::String \n    new_text = replace(text, wrong => right)\n    return uppercase(new_text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"zn kgd jw lnt\", \"h\", \"u\") == ????)\nend\n\n\n",
        "answer": "\"UNCOPDNT\""
    },
    {
        "id": 16,
        "code": "\nfunction f(text::String, suffix::String)::String \n    if endswith(text, suffix)\n        return text[1:endof(text)-length(suffix)]\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"zejrohaj\", \"owc\") == ????)\nend\n\n\n",
        "answer": "\"j\""
    },
    {
        "id": 17,
        "code": "\nfunction f(text::String)::Int64 \n    return findfirst(',', text) == nothing ? -1 : findfirst(',', text) - 1\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"There are, no, commas, in this text\") == ????)\nend\n\n\n",
        "answer": "-1"
    },
    {
        "id": 18,
        "code": "\nfunction f(array::Vector{Int64}, elem::Int64)::Vector{Int64} \n    k = 1\n    l = copy(array)\n    for i in l\n        if i > elem\n            insert!(array, k, elem)\n            break\n        end\n        k += 1\n    end\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([5, 4, 3, 2, 1, 0], 3) == ????)\nend\n\n\n",
        "answer": "[3, 2, 1, 0, 5, 4, 3]"
    },
    {
        "id": 19,
        "code": "\nfunction f(x::String, y::String)::String \n    tmp = join([c == '9' ? '0' : '9' for c in reverse(y)], \"\")\n    try\n        x_parsed = parse(Int, x)\n        tmp_parsed = parse(Int, tmp)\n        return string(x_parsed * tmp_parsed)\n    catch\n        return x\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\", \"sdasdnakjsda80\") == ????)\nend\n\n\n",
        "answer": "\"sdasdniakjsd0af80\""
    },
    {
        "id": 20,
        "code": "\nfunction f(text::String)::String \n    result = \"\"\n    for i in reverse(1:length(text))\n        result *= text[i]\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"was,\") == ????)\nend\n\n\n",
        "answer": "\"w,a,s,s,w\""
    },
    {
        "id": 21,
        "code": "\nfunction f(array::Vector{Int64})::Vector{Int64} \n    n = pop!(array)\n    push!(array, n)\n    push!(array, n)\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 1, 2, 2]) == ????)\nend\n\n\n",
        "answer": "[1, 1, 2, 2]"
    },
    {
        "id": 22,
        "code": "\nfunction f(a::Int64)::Union{Vector{Int64}, Int64} \n    if a == 0\n        return [0]\n    end\n    \n    result = []\n    while a > 0\n        push!(result, a % 10)\n        a = div(a, 10)\n    end\n    reverse!(result)\n    \n    return parse(Int, join(string(i) for i in result))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(0) == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 23,
        "code": "\nfunction f(text::String, chars::String)::String\n    if !isempty(chars)\n        text = rstrip(text, Set(chars))\n    else\n        text = rstrip(text, ' ')\n    end\n    if text == \"\"\n        return \"-\"\n    end\n    return text\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"new-medium-performing-application - XQuery 2.2\", \"0123456789-\") == ????)\nend\n\n\n",
        "answer": "\"new-medium-performing-application\""
    },
    {
        "id": 24,
        "code": "\n\nfunction f(nums::Vector{Int64}, i::Int64)::Vector{Int64}\n    popat!(nums, i+1)\n    return nums\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([35, 45, 3, 61, 39, 27, 47], 0) == ????)\nend\n\n\n",
        "answer": "([3, 61, 39, 27, 47], 0)"
    },
    {
        "id": 25,
        "code": "\nfunction f(d::Dict{String, Int})::Dict{String, Int}\n    d = copy(d)\n    pop!(d)\n    return d\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"l\" => 1, \"t\" => 2, \"x:\" => 3)) == ????)\nend\n\n\n",
        "answer": "{1, 2}"
    },
    {
        "id": 26,
        "code": "\nfunction f(items::String, target::String)::Union{Int64, String} \n    for (i, word) in enumerate(split(items))\n        if occursin(word, target)\n            return i + 1\n        end\n        \n        if contains(word, \".\") && (first(word) == '.' || last(word) == '.')\n            return \"error\"\n        end\n    end\n    return \".\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"qy. dg. rnvprt rse.. irtwv tx..\", \"wtwdoacb\") == ????)\nend\n\n\n",
        "answer": "\"3\""
    },
    {
        "id": 27,
        "code": "\nfunction f(w::String)::Bool \n    ls = collect(w)\n    omw = \"\"\n    while length(ls) > 0\n        omw *= popfirst!(ls)\n        if length(ls) * 2 > length(w)\n            return w[length(ls) + 1:end] == omw\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"flak\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 28,
        "code": "\nfunction f(mylist::Vector{Int64})::Bool \n    revl = copy(mylist)\n    reverse!(revl)\n    sort!(mylist, rev=true)\n    return mylist == revl\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([5, 8]) == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 29,
        "code": "\nfunction f(text::String)::String \n    nums = filter(c -> isnumeric(c), text)\n    nums = collect(nums)\n    @assert length(nums) > 0\n    return join(nums, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"-123   \t+314\") == ????)\nend\n\n\n",
        "answer": "\"-123   \t+314\""
    },
    {
        "id": 30,
        "res": 0
    },
    {
        "id": 31,
        "code": "\nfunction f(string::String)::Int64 \n    upper = 0\n    for c in string\n        if isuppercase(c)\n            upper += 1\n        end\n    end\n    return upper * (upper % 2 == 0 ? 2 : 1)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"PoIOarTvpoead\") == ????)\nend\n\n\n",
        "answer": "8"
    },
    {
        "id": 32,
        "code": "\nfunction f(s::String, sep::String)::String \n    reverse = ['*' * e for e in split(s, sep)]\n    return join(reverse[end:-1:1], ';')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"volume\", \"l\") == ????)\nend\n\n\n",
        "answer": "\"lel;o;v;e;n;a;l\""
    },
    {
        "id": 33,
        "res": 0
    },
    {
        "id": 34,
        "code": "\nfunction f(nums::Vector{Int64}, odd1::Int64, odd2::Int64)::Vector{Int64} \n    while odd1 in nums\n        filter!(x -> x != odd1, nums)\n    end\n    \n    while odd2 in nums\n        filter!(x -> x != odd2, nums)\n    end\n    \n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3, 7, 7, 6, 8, 4, 1, 2, 3, 5, 1, 3, 21, 1, 3], 3, 1) == ????)\nend\n\n\n",
        "answer": "[7, 7, 6, 8, 4, 1, 2, 3, 5, 1, 3, 21, 1, 3]"
    },
    {
        "id": 35,
        "code": "\n\nfunction f(pattern::String, items::Vector{String})::Vector{Int64}\n    result = Int64[]\n    for text in items\n        pos = findlast(pattern, text)\n        if pos !== nothing\n            push!(result, pos.start - 1)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\" B \", [\" bBb \", \" BaB \", \" bB\", \" bBbB \", \" bbb\"]) == ????)\nend\n\n\n",
        "answer": "[0, 1, 2, 3, 4]"
    },
    {
        "id": 36,
        "code": "\n\nfunction f(text::String, chars::String)::String \n    chars = collect(chars)\n    text = collect(text)\n    for char in reverse(text)\n        if char in chars\n            poplast!(text)\n        else\n            break\n        end\n    end\n    return String(text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ha\", \"\") == ????)\nend\n\n\n",
        "answer": "\"h\""
    },
    {
        "id": 37,
        "code": "\nfunction f(text::String)::Vector{String} \n    text_arr = [text[j:end] for j in 1:length(text)]\n    return text_arr\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"123\") == ????)\nend\n\n\n",
        "answer": "[\"1\", \"2\", \"3\"]"
    },
    {
        "id": 38,
        "code": "\nfunction f(string::String)::String \n    return replace(titlecase(string), \" \" => \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"1oE-err bzz-bmm\") == ????)\nend\n\n\n",
        "answer": "\"1oE-err bzz-bmm\""
    },
    {
        "id": 39,
        "code": "\nfunction f(array::Vector{Int64}, elem::Int64)::Int64 \n    if elem in array\n        return findfirst(x -> x == elem, array) - 1\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([6, 2, 7, 1], 6) == ????)\nend\n\n\n",
        "answer": "2"
    },
    {
        "id": 40,
        "code": "\nfunction f(text::String)::String \n    return string(text, \"#\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"the cow goes moo\") == ????)\nend\n\n\n",
        "answer": "\"the cow goes moo\""
    },
    {
        "id": 41,
        "code": "\nfunction f(array::Vector{Int64}, values::Vector{Int64})::Vector{Int64} \n    reverse!(array)\n    for value in values\n        insert!(array, length(array) ÷ 2 + 1, value)\n    end\n    reverse!(array)\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([58], [21, 92]) == ????)\nend\n\n\n",
        "answer": "[21, 58, 92]"
    },
    {
        "id": 42,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    nums = []\n    for num in nums\n        push!(nums, num * 2)\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([4, 3, 2, 1, 2, -1, 4, 2]) == ????)\nend\n\n\n",
        "answer": "[8, 6, 4, 2, 4, -2, 8, 6]"
    },
    {
        "id": 43,
        "code": "\nfunction f(n::String)::Int64 \n    for i in n\n        if !isdigit(Char(i))\n            n = \"-1\"\n            break\n        end\n    end\n    return parse(Int64, n)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"6 ** 2\") == ????)\nend\n\n\n",
        "answer": "-1"
    },
    {
        "id": 44,
        "code": "\nfunction f(text::String)::String \n    ls = collect(text)\n    for i in 1:length(ls)\n        if ls[i] != '+'\n            insert!(ls, i, '+')\n            insert!(ls, i, '*')\n            break\n        end\n    end\n    return join(ls, '+')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"nzoh\") == ????)\nend\n\n\n",
        "answer": "\"nzoh\""
    },
    {
        "id": 45,
        "code": "\nfunction f(text::String, letter::String)::Int64 \n    counts = Dict{Char, Int}()\n    for char in text\n        if haskey(counts, char)\n            counts[char] += 1\n        else\n            counts[char] = 1\n        end\n    end\n    return get(counts, first(letter), 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"za1fd1as8f7afasdfam97adfa\", \"7\") == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 46,
        "code": "\nfunction f(l::Vector{String}, c::String)::String \n    return join(l, c)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"many\", \"letters\", \"asvsz\", \"hello\", \"man\"], \"\") == ????)\nend\n\n\n",
        "answer": "\"manylettersasvszhelloman\""
    },
    {
        "id": 47,
        "code": "\n\nfunction f(text::String)::Bool \n    length_text = length(text)\n    half = div(length_text, 2)\n    encode = codeunits(text[1:half])\n    return text[half+1:end] == String(encode)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"bbbbr\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 48,
        "code": "\nfunction f(names::Vector{String})::String \n    if names == []\n        return \"\"\n    end\n    smallest = names[1]\n    for name in names[2:end]\n        if name < smallest\n            smallest = name\n        end\n    end\n    deleteat!(names, findfirst(x -> x == smallest, names))\n    return join(smallest)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{String}([])) == ????)\nend\n\n\n",
        "answer": "\"\""
    },
    {
        "id": 49,
        "code": "\n\nis_valid_identifier(s::AbstractString) = all(isletter(c) || c in ['_', '!'] for c in s)\n\nfunction f(text::String)::String \n    if is_valid_identifier(text)\n        return join(c for c in text if isdigit(c))\n    else\n        return join(text)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"816\") == ????)\nend\n\n\n",
        "answer": "\"816\""
    },
    {
        "id": 50,
        "code": "\nfunction f(lst::Vector{String})::Vector{Int64} \n    lst = []\n    for i in 1:length(lst) + 1\n        push!(lst, 1)\n    end\n    return lst\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"a\", \"c\", \"v\"]) == ????)\nend\n\n\n",
        "answer": "[1, 2, 3]"
    },
    {
        "id": 51,
        "code": "\nfunction f(num::Int64)::Union{String, Int64} \n    s = repeat(\"<\", 10)\n    if num % 2 == 0\n        return s\n    else\n        return num - 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(21) == ????)\nend\n\n\n",
        "answer": "(21, \"11111<111111<111111<111111<111111<111111<111111<111111\")"
    },
    {
        "id": 52,
        "code": "\nfunction f(text::String)::String \n    a = Char[]\n    for i in 1:length(text)\n        if !isdigit(text[i])\n            push!(a, text[i])\n        end\n    end\n    return join(a, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"seiq7229 d27\") == ????)\nend\n\n\n",
        "answer": "\"seven23\""
    },
    {
        "id": 53,
        "code": "\nfunction f(text::String)::Vector{Int64} \n    occ = Dict{Char, Int}()\n    for ch in text\n        name = Dict('a' => 'b', 'b' => 'c', 'c' => 'd', 'd' => 'e', 'e' => 'f')\n        name = get(name, ch, ch)\n        occ[name] = get(occ, name, 0) + 1\n    end\n    return [x for x in values(occ)]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"URW rNB\") == ????)\nend\n\n\n",
        "answer": "[2, 1, 1, 1, 1]"
    },
    {
        "id": 54,
        "code": "\nfunction f(text::String, s::Int64, e::Int64)::Int64\n    sublist = text[s+1:e]  # Julia uses 1-based indexing, so adjust the start index\n    if isempty(sublist)\n        return -1\n    end\n    min_char = minimum(sublist)\n    return findfirst(==(min_char), sublist) - 1  # Adjust for 0-based index in the result\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"happy\", 0, 3) == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 55,
        "code": "\nfunction f(array::Vector{Int64})::Vector{Int64} \n    array_2 = Int64[]\n    for i in array\n        if i > 0\n            push!(array_2, i)\n        end\n    end\n    sort!(array_2, rev=true)\n    return array_2\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([4, 8, 17, 89, 43, 14]) == ????)\nend\n\n\n",
        "answer": "[89, 43, 14, 8, 4, 17]"
    },
    {
        "id": 56,
        "code": "\nfunction f(sentence::String)::Bool \n    for c in sentence\n        if isascii(c) == false\n            return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"1z1z1\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 57,
        "code": "\nfunction f(text::String)::Int64 \n    text = uppercase(text)\n    count_upper = 0\n    for char in text\n        if isuppercase(char)\n            count_upper += 1\n        else\n            return \"no\"\n        end\n    end\n    return count_upper ÷ 2\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ax\") == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 58,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    count = length(nums)\n    for i in 0:count-1\n        push!(nums, nums[i % 2 + 1])\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-1, 0, 0, 1, 1]) == ????)\nend\n\n\n",
        "answer": "[-1, 0, 1, 0, 1]"
    },
    {
        "id": 59,
        "code": "\nfunction f(s::String)::String \n    a = [char for char in s if char != ' ']\n    b = copy(a)\n    for c in reverse(a)\n        if c == ' '\n            pop!(b)\n        else\n            break\n        end\n    end\n    return join(b, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"hi \") == ????)\nend\n\n\n",
        "answer": "\"hi\""
    },
    {
        "id": 60,
        "code": "\nfunction f(doc::String)::String\n    for x in doc\n        if isletter(x)\n            return uppercase(string(x))\n        end\n    end\n    return \"-\"\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"raruwa\") == ????)\nend\n\n\n",
        "answer": "\"RAWA\""
    },
    {
        "id": 61,
        "code": "\nfunction f(text::String)::String \n    texts = split(text)\n    if !isempty(texts)\n        xtexts = [t for t in texts if isascii(t) && !(t in [\"nada\", \"0\"])]\n        return isempty(xtexts) ? \"nada\" : xtexts[indmax(length.(xtexts))]\n    end\n    return \"nada\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\") == ????)\nend\n\n\n",
        "answer": "\"nada\""
    },
    {
        "id": 62,
        "res": 0
    },
    {
        "id": 63,
        "code": "\nfunction f(text::String, prefix::String)::String \n    while startswith(text, prefix)\n        text = text[length(prefix)+1:end]\n        if text == \"\"\n            break\n        end\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ndbtdabdahesyehu\", \"n\") == ????)\nend\n\n\n",
        "answer": "\"y\""
    },
    {
        "id": 64,
        "code": "\nfunction f(text::String, size::Int64)::String \n    counter = length(text)\n    for i in 1:trunc(Int, size - size % 2)\n        text = \" \" * text * \" \"\n        counter += 2\n        if counter >= size\n            return text\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"7\", 10) == ????)\nend\n\n\n",
        "answer": "\"          \""
    },
    {
        "id": 65,
        "code": "\n\nfunction f(nums::Vector{Int64}, index::Int64)::Int64\n    return nums[index+1] % 42 + popat!(nums, index+1) * 2\nend\n\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([3, 2, 0, 3, 7], 3) == ????)\nend\n\n\n",
        "answer": "42"
    },
    {
        "id": 66,
        "code": "\nfunction f(text::String, prefix::String)::String \n    prefix_length = length(prefix)\n    if startswith(text, prefix)\n        return text[(prefix_length + 1) ÷ 2: (prefix_length - 1) ÷ 2]\n    else\n        return text\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"happy\", \"ha\") == ????)\nend\n\n\n",
        "answer": "\"happy\""
    },
    {
        "id": 67,
        "code": "\nfunction f(num1::Int64, num2::Int64, num3::Int64)::String \n    nums = [num1, num2, num3]\n    sort!(nums)\n    return string(nums[1], \",\", nums[2], \",\", nums[3])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(6, 8, 8) == ????)\nend\n\n\n",
        "answer": "8"
    },
    {
        "id": 68,
        "code": "\n\nfunction f(text::String, pref::String)::String \n    if startswith(text, pref)\n        n = length(pref)\n        suffix = split(text[n+1:end], '.')[2:end]\n        prefix = split(text[1:n-1], '.')[1:end-1]\n        text = join([suffix; prefix], '.')\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"omeunhwpvr.dq\", \"omeunh\") == ????)\nend\n\n\n",
        "answer": "\"unhwpvr\""
    },
    {
        "id": 69,
        "code": "\nfunction f(student_marks::Dict{String, Int}, name::String)::Union{Int, String} \n    if haskey(student_marks, name)\n        value = pop!(student_marks, name)\n        return value\n    end\n    return \"Name unknown\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"882afmfp\" => 56), \"6f53p\") == ????)\nend\n\n\n",
        "answer": "\"Name unknown\""
    },
    {
        "id": 70,
        "code": "\nfunction f(x::String)::Int64 \n    a = 0\n    for i in split(x, ' ')\n        a += length(i)*2\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"999893767522480\") == ????)\nend\n\n\n",
        "answer": "999890"
    },
    {
        "id": 71,
        "res": 0
    },
    {
        "id": 72,
        "code": "\nfunction f(text::String)::Bool \n    for c in text\n        if !isdigit(c)\n            return false\n        end\n    end\n    return !isempty(text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"99\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 73,
        "code": "\n\nfunction f(row::String)::Tuple{Int64, Int64}\n    return (count(i -> i=='1', row), count(i -> i=='0', row))\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"100010010\") == ????)\nend\n\n\n",
        "answer": "(2, 2)"
    },
    {
        "id": 74,
        "code": "\n\nfunction f(lst::Vector{Int64}, i::Int64, n::Int64)::Vector{Int64} \n    insert!(lst, i+1, n)\n    return lst\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([44, 34, 23, 82, 24, 11, 63, 99], 4, 15) == ????)\nend\n\n\n",
        "answer": "[44, 34, 23, 82, 24, 11, 63, 99, 15]"
    },
    {
        "id": 75,
        "code": "\nfunction f(array::Vector{Int64}, elem::Int64)::Int64 \n    ind = findfirst(isequal(elem), array) - 1\n    return ind * 2 + array[end - ind] * 3\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-1, 2, 1, -8, 2], 2) == ????)\nend\n\n\n",
        "answer": "8"
    },
    {
        "id": 76,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    nums = filter(x -> x > 0, nums)\n    if length(nums) <= 3\n        return nums\n    end\n    nums = reverse(nums)\n    half = div(length(nums), 2)\n    return vcat(nums[1:half], zeros(Int64, 5), nums[half+1:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([10, 3, 2, 2, 6, 0]) == ????)\nend\n\n\n",
        "answer": "[10, 3, 2, 2, 6, 0]"
    },
    {
        "id": 77,
        "code": "\n\nfunction f(text::String, character::String)::String\n    last_index = findlast(character, text)\n    if last_index != nothing\n        subject = text[last_index:end]\n        return subject^count(character, text)\n    else\n        return \"\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"h ,lpvvkohh,u\", \"i\") == ????)\nend\n\n\n",
        "answer": "\"h\""
    },
    {
        "id": 78,
        "code": "\nfunction f(text::String)::String \n    if text != \"\" && text == uppercase(text)\n        cs = Dict(zip(uppercase('A':'Z'), lowercase('a':'z')))\n        return join([get(cs, c, c) for c in text])\n    end\n    return lowercase(text)[1:3]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n\") == ????)\nend\n\n\n",
        "answer": "\"thriller\""
    },
    {
        "id": 79,
        "code": "\nfunction f(arr::Vector{Int64})::String \n    arr = []\n    push!(arr, \"1\")\n    push!(arr, \"2\")\n    push!(arr, \"3\")\n    push!(arr, \"4\")\n    return join(arr, \",\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([0, 1, 2, 3, 4]) == ????)\nend\n\n\n",
        "answer": "\"1,2,3,4\""
    },
    {
        "id": 80,
        "code": "\nfunction f(s::String)::String \n    return string(reverse(rstrip(s)))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ab        \") == ????)\nend\n\n\n",
        "answer": "\"ab\""
    },
    {
        "id": 81,
        "res": 0
    },
    {
        "id": 82,
        "code": "\nfunction f(a::String, b::String, c::String, d::String)::String \n    return a != \"\" ? b : c != \"\" ? d : c\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"CJU\", \"BFS\", \"WBYDZPVES\", \"Y\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 83,
        "res": 0
    },
    {
        "id": 84,
        "code": "\nfunction f(text::String)::String \n    arr = split(text)\n    result = []\n    for item in arr\n        if endswith(item, \"day\")\n            item *= \"y\"\n        else\n            item *= \"day\"\n        end\n        push!(result, item)\n    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"nwv mef ofme bdryl\") == ????)\nend\n\n\n",
        "answer": "\"ofme ofme day mef ofme bdryl\""
    },
    {
        "id": 85,
        "code": "\nfunction f(n::Int64)::Vector{Float64} \n    values = Dict{Int64, Any}(0 => 3, 1 => 4.5, 2 => '-')\n    res = Dict{Any, Int64}()\n    for (i, j) in values\n        if i % n != 2\n            res[j] = n ÷ 2\n        end\n    end\n    return sort(collect(keys(res)))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(12) == ????)\nend\n\n\n",
        "answer": "[0.6666666666666666, 1.3333333333333333, -0.6666666666666666]"
    },
    {
        "id": 86,
        "code": "\nfunction f(instagram::Vector{String}, imgur::Vector{String}, wins::Int64)::Union{String, Vector{String}} \n    photos = [instagram, imgur]\n    if instagram == imgur\n        return wins\n    end\n    if wins == 1\n        return pop!(photos)\n    else\n        reverse!(photos)\n        return pop!(photos)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"sdfs\", \"drcr\", \"2e\"], [\"sdfs\", \"dr2c\", \"QWERTY\"], 0) == ????)\nend\n\n\n",
        "answer": "\"sdfs\""
    },
    {
        "id": 87,
        "code": "\nfunction f(nums::Vector{Int64})::String \n    reverse!(nums)\n    return join(string.(nums))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-1, 9, 3, 1, -2]) == ????)\nend\n\n\n",
        "answer": "\"-1\\n9\\n3\\n1\\n-2\""
    },
    {
        "id": 88,
        "code": "\nfunction f(s1::String, s2::String)::String \n    if endswith(s2, s1)\n        s2 = s2[1:endof(s2)-length(s1)]\n    end\n    return s2\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"he\", \"hello\") == ????)\nend\n\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 89,
        "code": "\n\nfunction f(char::String)::Union{String,Nothing}\n    if char[1] ∉ ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        return nothing\n    end\n    if char[1] ∈ ('A', 'E', 'I', 'O', 'U')\n        return lowercase(char)\n    end\n    return uppercase(char)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"o\") == ????)\nend\n\n\n",
        "answer": "undef"
    },
    {
        "id": 90,
        "res": 0
    },
    {
        "id": 91,
        "res": 0
    },
    {
        "id": 92,
        "code": "\nfunction f(text::String)::Bool \n    return isascii(text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"wW의IV]HDJjhgK[dGIUlVO@Ess\\$coZkBqu[Ct\") == ????)\nend\n\n\n",
        "answer": "True"
    },
    {
        "id": 93,
        "code": "\n\nfunction f(n::String)::String \n    revn = collect(n)\n    result = join(revn, \"\")\n    return result * \"!\"^(length(result) + 2)\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"iq\") == ????)\nend\n\n\n",
        "answer": "\"!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!"
    },
    {
        "id": 94,
        "code": "\nfunction f(a::Dict{String, Int}, b::Dict{String, Int})::Dict{String, Int}\n    return merge(a, b)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"w\" => 5, \"wi\" => 10), Dict(\"w\" => 3)) == ????)\nend\n\n\n",
        "answer": "{\"w\" => 8, \"wi\" => 12}"
    },
    {
        "id": 95,
        "code": "\nfunction f(zoo::Dict{String, String})::Dict{String, String}\n    return Dict(v => k for (k, v) in pairs(zoo))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"AAA\" => \"fr\")) == ????)\nend\n\n\n",
        "answer": "{\"fr\" => \"AAA\"}"
    },
    {
        "id": 96,
        "code": "\nfunction f(text::String)::Bool \n    return !any(c -> isuppercase(c), text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"lunabotics\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 97,
        "code": "\nfunction f(lst::Vector{Int64})::Bool \n    lst = []\n    for i in lst\n        if i == 3\n            return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2, 0]) == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 98,
        "code": "\n\nfunction f(s::String)::Int64\n    return sum([isa(s, AbstractString) && isuppercase(first(s)) && all(islowercase, s[2:end]) for s in split(s)])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"SOME OF THIS Is uknowN!\") == ????)\nend\n\n\n",
        "answer": "15"
    },
    {
        "id": 99,
        "res": 0
    },
    {
        "id": 100,
        "res": 0
    },
    {
        "id": 101,
        "code": "\n\nfunction f(array::Vector{Int64}, i_num::Int64, elem::Int64)::Vector{Int64} \n    insert!(array, i_num + 1, elem)\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-4, 1, 0], 1, 4) == ????)\nend\n\n\n",
        "answer": "[-4, 1, 0, 4]"
    },
    {
        "id": 102,
        "code": "\nfunction f(names::Vector{String}, winners::Vector{String})::Vector{Int64} \n    ls = [findfirst(name .== names) for name in names if name in winners]\n    ls = filter(x-> x != nothing, ls) |> x->sort(x, rev=true)\n    return ls\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"e\", \"f\", \"j\", \"x\", \"r\", \"k\"], [\"a\", \"v\", \"2\", \"im\", \"nb\", \"vj\", \"z\"]) == ????)\nend\n\n\n",
        "answer": "[\"e\", \"f\", \"j\", \"x\", \"r\", \"k\"]"
    },
    {
        "id": 103,
        "code": "\nfunction f(s::String)::String \n    return join([lowercase(c) for c in s])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abcDEFGhIJ\") == ????)\nend\n\n\n",
        "answer": "abcdefghij"
    },
    {
        "id": 104,
        "code": "\n\nfunction f(text::String)::Dict{String, Int64}\n    dic = Dict()\n    for char in text\n        dic[string(char)] = get(dic, string(char), 0) + 1\n    end\n    for key in keys(dic)\n        if dic[key] > 1\n            dic[key] = 1\n        end\n    end\n    return dic\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a\") == ????)\nend\n\n\n",
        "answer": "{}"
    },
    {
        "id": 105,
        "code": "\nfunction f(text::String)::String \n    if text != uppercase(text)\n        return titlecase(text)\n    end\n    return lowercase(text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"PermissioN is GRANTed\") == ????)\nend\n\n\n",
        "answer": "\"permissio n is granted\""
    },
    {
        "id": 106,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    count = length(nums)\n    for i in 1:count\n        insert!(nums, i, nums[i]*2)\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2, 8, -2, 9, 3, 3]) == ????)\nend\n\n\n",
        "answer": "[2, 8, -2, 9, 3, 3, 2, 8, -2, 9, 3, 3, 2, 8, -2, 9, 3, 3]"
    },
    {
        "id": 107,
        "code": "\n\nfunction f(text::String)::String\n    result = []\n    for i in text\n        if isletter(i) || isdigit(i)\n            push!(result, uppercase(i))\n        else\n            push!(result, i)\n        end\n    end\n    return join(result)\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ua6hajq\") == ????)\nend\n\n\n",
        "answer": "\"HELLO\""
    },
    {
        "id": 108,
        "code": "\n\nfunction f(var::Union{Int, Vector{Int}, Dict{Any,Any}})::Int64\n    if typeof(var) == Int\n        amount = 0\n    elseif typeof(var) == Vector{Int}\n        amount = length(var)\n    elseif typeof(var) == Dict{Any,Any}\n        amount = length(keys(var))\n    end\n    nonzero = amount > 0 ? amount : 0\n    return nonzero\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(1) == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 109,
        "code": "\nfunction f(nums::Vector{Int}, spot::Int, idx::Int)::Vector{Int}\n    insert!(nums, spot+1, idx)\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 0, 1, 1], 0, 9) == ????)\nend\n\n\n",
        "answer": "[1, 0, 1, 1, 0, 1, 1, 0, 1, 1]"
    },
    {
        "id": 110,
        "code": "\nfunction f(text::String)::Int64 \n    a = [\"\"]\n    b = \"\"\n    for i in text\n        if !isspace(i)\n            push!(a, b)\n            b = \"\"\n        else\n            b *= i\n        end\n    end\n    return length(a)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"       \") == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 111,
        "code": "\nfunction f(marks::Dict{String, Int})::Tuple{Int, Int}\n    highest = 0\n    lowest = 100\n    for value in values(marks)\n        if value > highest\n            highest = value\n        end\n        if value < lowest\n            lowest = value\n        end\n    end\n    return (highest, lowest)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"x\" => 67, \"v\" => 89, \"\" => 4, \"alij\" => 11, \"kgfsd\" => 72, \"yafby\" => 83)) == ????)\nend\n\n\n",
        "answer": "(67, 11)"
    },
    {
        "id": 112,
        "res": 0
    },
    {
        "id": 113,
        "code": "\n\nfunction f(line::String)::String\n    count = 0\n    a = []\n    for i in 1:length(line)\n        count += 1\n        if count%2==0\n            push!(a, islowercase(line[i]) ? uppercase(line[i]) : lowercase(line[i]))\n        else\n            push!(a, line[i])\n        end\n    end\n    return join(a)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"987yhNSHAshd 93275yrgSgbgSshfbsfB\") == ????)\nend\n\n\n",
        "answer": "\"yhnshaHDSBgSfbsfB\""
    },
    {
        "id": 114,
        "code": "\nfunction f(text::String, sep::String)::Vector{String} \n    return split(text, sep, limit=3)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a-.-.b\", \"-.\") == ????)\nend\n\n\n",
        "answer": "[\"a\", \"b\", \"\"]"
    },
    {
        "id": 115,
        "code": "\n\nfunction f(text::String)::String \n    res = UInt8[]\n    for ch in codeunits(text)\n        if ch == 61\n            break\n        elseif ch != 0\n            push!(res, ch)\n        end\n    end\n    return \"b'$(join([string(x, \"; \") for x in res], \"\"))'\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"os||agx5\") == ????)\nend\n\n\n",
        "answer": "\"5; agx\""
    },
    {
        "id": 116,
        "code": "\nfunction f(d::Dict{Int64, Int64}, count::Int64)::Dict{Int64, Int64}\n    for i in 1:count\n        if isempty(d)\n            break\n        end\n        delete!(d, first(keys(d)))\n    end\n    return d\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(), 200) == ????)\nend\n\n\n",
        "answer": "{}"
    },
    {
        "id": 117,
        "code": "\nfunction f(numbers::String)::Int64 \n    for i in 1:length(numbers)\n        if count(x -> x == '3', numbers) > 1\n            return i\n        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"23157\") == ????)\nend\n\n\n",
        "answer": "4"
    },
    {
        "id": 118,
        "code": "\n\nfunction f(text::String, chars::String)::String\n    num_applies = 2\n    extra_chars = \"\"\n    for i in 1:num_applies\n        extra_chars *= chars\n        text = replace(text, extra_chars => \"\")\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"zbzquiuqnmfkx\", \"mk\") == ????)\nend\n\n\n",
        "answer": "\"z\""
    },
    {
        "id": 119,
        "code": "\nfunction f(text::String)::String \n    result = \"\"\n    for i in 1:length(text)\n        if i % 2 == 0\n            result *= string(text[i])\n        else\n            result *= uppercase(text[i])\n        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"vsnlygltaw\") == ????)\nend\n\n\n",
        "answer": "\"VSNLYGLTAW\""
    },
    {
        "id": 120,
        "res": 0
    },
    {
        "id": 121,
        "code": "\nfunction f(s::String)::String \n    nums = join(filter(c -> isdigit(c), s))\n    if nums == \"\"\n        return \"none\"\n    end\n    nums_split = split(nums, ',')\n    m = maximum([parse(Int, num) for num in nums_split])\n    return string(m)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"01,001\") == ????)\nend\n\n\n",
        "answer": "\"1\""
    },
    {
        "id": 122,
        "code": "\nfunction f(string::String)::String \n    if startswith(string, \"Nuva\")\n        return rstrip(string)\n    else\n        return \"no\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Nuva?dlfuyjys\") == ????)\nend\n\n\n",
        "answer": "\"dlfuyjys\""
    },
    {
        "id": 123,
        "code": "\nfunction f(array::Vector{Int64}, elem::Int64)::Vector{Int64} \n    for idx in eachindex(array)\n        if idx != 1 && array[idx] > elem && array[idx - 1] < elem\n            insert!(array, idx, elem)\n        end\n    end\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3, 5, 8], 6) == ????)\nend\n\n\n",
        "answer": "[1, 2, 3, 5, 6, 8]"
    },
    {
        "id": 124,
        "code": "\nfunction f(txt::String, sep::String, sep_count::Int64)::String \n    o = \"\"\n    while sep_count > 0 && count(txt, sep) > 0\n        parts = split(txt, sep, limit=2)\n        o *= parts[1] * sep\n        txt = parts[2]\n        sep_count -= 1\n    end\n    return o * txt\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"i like you\", \" \", -1) == ????)\nend\n\n\n",
        "answer": "\"you\""
    },
    {
        "id": 125,
        "code": "\n\nfunction f(text::String, res::Int64)::String \n    for c in ['*', '\\n', '\"']\n        text = replace(text, c => \"!$res\" )\n    end\n    if text[1] == '!'\n        text = text[length(string(res))+1:end]\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\\\"Leap and the net will appear\", 123) == ????)\nend\n\n\n",
        "answer": "\"!123\""
    },
    {
        "id": 126,
        "res": 0
    },
    {
        "id": 127,
        "code": "\nfunction f(text::String)::Int64 \n    s = split(text, '\\n')\n    return length(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"145\n\n12fjkjg\") == ????)\nend\n\n\n",
        "answer": "7"
    },
    {
        "id": 128,
        "code": "\nfunction f(text::String)::String\n    odd = \"\"\n    even = \"\"\n    for (i, c) in enumerate(text)\n        if (i - 1) % 2 == 0\n            even *= c\n        else\n            odd *= c\n        end\n    end\n    return even * lowercase(odd)\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Mammoth\") == ????)\nend\n\n\n",
        "answer": "\"ammoth\""
    },
    {
        "id": 129,
        "res": 0
    },
    {
        "id": 130,
        "res": 0
    },
    {
        "id": 131,
        "res": 0
    },
    {
        "id": 132,
        "code": "\n\nfunction f(a_str::String, prefix::String)::String \n    if !isempty(replace(a_str, prefix => \"\", count=1))\n        return a_str\n    else\n        return prefix * a_str\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abc\", \"abcd\") == ????)\nend\n\n\n",
        "answer": "\"abcd\""
    },
    {
        "id": 133,
        "code": "\nfunction f(nums::Vector{Int64}, elements::Vector{Int64})::Vector{Int64} \n    result = []\n    for i in 1:length(elements)\n        push!(result, pop!(nums))\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([7, 1, 2, 6, 0, 2], [9, 0, 3]) == ????)\nend\n\n\n",
        "answer": "[7, 1, 2, 6, 0, 2]"
    },
    {
        "id": 134,
        "code": "\nfunction f(n::Int64)::String \n    t = 0\n    b = \"\"\n    digits = [parse(Int, x) for x in string(n)]\n    \n    for d in digits\n        if d == 0\n            t += 1\n        else\n            break\n        end\n    end\n    \n    for _ in 1:t\n        b *= \"1\" * \"0\" * \"4\"\n    end\n    \n    b *= string(n)\n    return b\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(372359) == ????)\nend\n\n\n",
        "answer": "\"372359\""
    },
    {
        "id": 135,
        "code": "\nfunction f()::Vector{String}\n    d = Dict(\n        \"Russia\" => [(\"Moscow\", \"Russia\"), (\"Vladivostok\", \"Russia\")],\n        \"Kazakhstan\" => [(\"Astana\", \"Kazakhstan\")]\n    )\n    return [\"Russia\", \"Kazakhstan\"]\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate() == ????)\nend\n\n\n",
        "answer": "[\"Russia\", \"Kazakhstan\"]"
    },
    {
        "id": 136,
        "res": 0
    },
    {
        "id": 137,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    count = 0\n    while length(nums) > 0\n        if count % 2 == 0\n            pop!(nums)\n        else\n            splice!(nums, 1)\n        end\n        count += 1\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([3, 2, 0, 0, 2, 3]) == ????)\nend\n\n\n",
        "answer": "[3, 2, 0, 0, 2, 3]"
    },
    {
        "id": 138,
        "code": "\nfunction f(text::String, chars::String)::String \n    listchars = collect(chars)\n    first = popfirst!(listchars)\n    for i in listchars\n        text = text[1:findfirst(i, text)] * i * text[findfirst(i, text)+1:end]\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"tflb omn rtt\", \"m\") == ????)\nend\n\n\n",
        "answer": "\"tflbmornot\""
    },
    {
        "id": 139,
        "code": "\nfunction f(first::Vector{Int64}, second::Vector{Int64})::Union{String, Vector{Int64}} \n    if length(first) < 10 || length(second) < 10\n        return \"no\"\n    end\n    \n    for i in 1:5\n        if first[i] != second[i]\n            return \"no\"\n        end\n    end\n    \n    append!(first, second)\n    return first\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 1], [1, 1, 2]) == ????)\nend\n\n\n",
        "answer": "[\"1\", \"1\", \"2\"]"
    },
    {
        "id": 140,
        "code": "\n\nfunction f(st::String)::String\n    lower_st = lowercase(st)\n    last_h_index = findlast('h', lower_st)\n    last_i_index = findlast('i', lower_st)\n    if last_h_index != nothing && last_i_index != nothing && last_h_index >= last_i_index\n        return \"Hey\"\n    else\n        return \"Hi\"\n    end\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Hi there\") == ????)\nend\n\n\n",
        "answer": "\"Hi there\""
    },
    {
        "id": 141,
        "code": "\nfunction f(li::Vector{String})::Vector{Int64} \n    return [count(x -> x == i, li) for i in li]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"k\", \"x\", \"c\", \"x\", \"x\", \"b\", \"l\", \"f\", \"r\", \"n\", \"g\"]) == ????)\nend\n\n\n",
        "answer": "[0, 1, 2, 1, 1, 2, 1, 1, 2, 1]"
    },
    {
        "id": 142,
        "code": "\n\nfunction f(x::String)::String \n    if all((islowercase(c) || c == ' ') for c in x)\n        return x\n    else\n        return reverse(x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ykdfhp\") == ????)\nend\n\n\n",
        "answer": "\"kdfhp\""
    },
    {
        "id": 143,
        "code": "\nfunction f(s::String, n::String)::Bool \n    return lowercase(s) == lowercase(n)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"daaX\", \"daaX\") == ????)\nend\n\n\n",
        "answer": "True"
    },
    {
        "id": 144,
        "code": "\nfunction f(vectors::Vector{Vector{Int64}})::Vector{Vector{Int64}} \n    sorted_vecs = []\n    for vec in vectors\n        sort!(vec)\n        push!(sorted_vecs, vec)\n    end\n    return sorted_vecs\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Vector{Int64}}([])) == ????)\nend\n\n\n",
        "answer": "[]"
    },
    {
        "id": 145,
        "code": "\nfunction f(price::Float64, product::String)::Float64 \n    inventory = [\"olives\", \"key\", \"orange\"]\n    if !(product in inventory)\n        return price\n    else\n        price *= 0.85\n        filter!(x -> x != product, inventory)\n    end\n    return price\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(8.5, \"grapes\") == ????)\nend\n\n\n",
        "answer": "8.5"
    },
    {
        "id": 146,
        "code": "\nfunction f(single_digit::Int64)::Vector{Int64} \n    result = Int64[]\n    for c in 1:10\n        if c != single_digit\n            push!(result, c)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == ????)\nend\n\n\n",
        "answer": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
    },
    {
        "id": 147,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    middle = div(length(nums), 2)\n    return vcat(nums[middle+1:end], nums[1:middle])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 1, 1]) == ????)\nend\n\n\n",
        "answer": "[1, 1, 1]"
    },
    {
        "id": 148,
        "code": "\nfunction f(forest::String, animal::String)::String\n    index = findfirst(==('m'), forest)\n    if index === nothing\n        return forest\n    end\n    index = index[1]\n    result = collect(forest)\n    while index < length(forest)\n        if index < length(forest)\n            result[index] = forest[index + 1]\n        end\n        index += 1\n    end\n    if index == length(forest)\n        result[index] = '-'\n    end\n    return join(result)\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"2imo 12 tfiqr.\", \"m\") == ????)\nend\n\n\n",
        "answer": "\"m\""
    },
    {
        "id": 149,
        "res": 0
    },
    {
        "id": 150,
        "code": "\n\nfunction f(numbers::Vector{Int64}, index::Int64)::Vector{Int64} \n    return vcat(numbers[1:index], numbers[index+1:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-2, 4, -4], 0) == ????)\nend\n\n\n",
        "answer": "[4, -4]"
    },
    {
        "id": 151,
        "code": "\nfunction f(text::String)::String \n    for c in text\n        if isdigit(c)\n            if c == '0'\n                c = '.'\n            else\n                c = c == '1' ? '.' : '0'\n            end\n        end\n    end\n    return replace(join(collect(text), \"\"), '.' => '0')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"697 this is the ultimate 7 address to attack\") == ????)\nend\n\n\n",
        "answer": "\"697. this is the ultimate 7 address to attack\""
    },
    {
        "id": 152,
        "code": "\n\nfunction f(text::String)::Int64\n    n = 0\n    for char in text\n        if isuppercase(char)\n            n += 1\n        end\n    end\n    return n\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"AAAAAAAAAAAAAAAAAAAA\") == ????)\nend\n\n\n",
        "answer": "1"
    },
    {
        "id": 153,
        "code": "\nfunction f(text::String, suffix::String, num::Int64)::Bool \n    str_num = string(num)\n    return endswith(text, suffix * str_num)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"friends and love\", \"and\", 3) == ????)\nend\n\n\n",
        "answer": "True"
    },
    {
        "id": 154,
        "code": "\nfunction f(s::String, c::String)::String \n    s = split(s, ' ')\n    return c * \"  \" * join(reverse(s), \"  \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Hello There\", \"*\") == ????)\nend\n\n\n",
        "answer": "\"  Hello  There  \""
    },
    {
        "id": 155,
        "code": "\nfunction f(ip::String, n::Int64)::String \n    i = 0\n    out = \"\"\n    for c in ip\n        if i == n\n            out *= '\\n'\n            i = 0\n        end\n        i += 1\n        out *= c\n    end\n    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"dskjs hjcdjnxhjicnn\", 4) == ????)\nend\n\n\n",
        "answer": "\"dskj\nhjc\nnxh\njni\nncn\""
    },
    {
        "id": 156,
        "code": "\nfunction f(text::String, limit::Int64, char::String)::String \n    if limit < length(text)\n        return text[1:limit]\n    end\n    return lpad(text, limit, char)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"tqzym\", 5, \"c\") == ????)\nend\n\n\n",
        "answer": "\"tqzym\""
    },
    {
        "id": 157,
        "code": "\nfunction f(phrase::String)::Int64 \n    ans = 0\n    words = split(phrase)\n    for w in words\n        for ch in w\n            if ch == '0'\n                ans += 1\n            end\n        end\n    end\n    return ans\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"aboba 212 has 0 digits\") == ????)\nend\n\n\n",
        "answer": "2"
    },
    {
        "id": 158,
        "code": "\n\nfunction f(arr::Vector{Int64})::Vector{Int64} \n    n = [item for item in arr if item%2 == 0]\n    m = vcat(n, arr)\n    for i in m\n        if findfirst(x->x==i, m) > length(n)\n            deleteat!(m, findfirst(x->x==i, m))\n        end\n    end\n    return m\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([3, 6, 4, -2, 5]) == ????)\nend\n\n\n",
        "answer": "[6, 4, -2, 5]"
    },
    {
        "id": 159,
        "code": "\nfunction f(st::String)::String \n    swapped = \"\"\n    for ch in reverse(st)\n        swapped *= uppercase(ch) == ch ? lowercase(ch) : uppercase(ch)\n    end\n    return swapped\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"RTiGM\") == ????)\nend\n\n\n",
        "answer": "\"r\""
    },
    {
        "id": 160,
        "code": "\n\nfunction f(dictionary::Dict{Int64, Int64})::Dict{Int64, Int64} \n    while !haskey(dictionary, 1)\n        empty(dictionary)\n        break\n    end\n    return dictionary\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(1 => 47698, 1 => 32849, 1 => 38381, 3 => 83607)) == ????)\nend\n\n\n",
        "answer": "{1 => 47698, 3 => 83607}"
    },
    {
        "id": 161,
        "code": "\nfunction f(text::String, value::String)::String \n    parts = split(text, value)\n    left = parts[1]\n    right = parts[2]\n    return right * left\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"difkj rinpx\", \"k\") == ????)\nend\n\n\n",
        "answer": "\"rinpxdifkj\""
    },
    {
        "id": 162,
        "code": "\nfunction f(text::String)::String \n    result = \"\"\n    for char in text\n        if isletter(char) || isdigit(char)\n            result *= uppercase(char)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"с bishop.Swift\") == ????)\nend\n\n\n",
        "answer": "\"SWIFT\""
    },
    {
        "id": 163,
        "code": "\nfunction f(text::String, space_symbol::String, size::Int64)::String \n    spaces = repeat(space_symbol, size - length(text))\n    return text * spaces\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"w\", \"))\", 7) == ????)\nend\n\n\n",
        "answer": "(w)"
    },
    {
        "id": 164,
        "code": "\nfunction f(lst::Vector{Int64})::Vector{Int64} \n    sort!(lst)\n    return lst[1:3]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([5, 8, 1, 3, 0]) == ????)\nend\n\n\n",
        "answer": "[5, 8]"
    },
    {
        "id": 165,
        "code": "\nfunction f(text::String, lower::Int64, upper::Int64)::Bool \n    return isascii(text[lower:upper])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"=xtanp|sugv?z\", 3, 6) == ????)\nend\n\n\n",
        "answer": "True"
    },
    {
        "id": 166,
        "res": 0
    },
    {
        "id": 167,
        "res": 0
    },
    {
        "id": 168,
        "code": "\nfunction f(text::String, new_value::String, index::Int64)::String\n    key = text[index+1]  # Adjust for 1-based indexing\n    return replace(text, key => new_value)\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"spain\", \"b\", 4) == ????)\nend\n\n\n",
        "answer": "\"spain\""
    },
    {
        "id": 169,
        "code": "\nfunction f(text::String)::String \n    ls = collect(text)\n    total = (length(text) - 1) * 2\n    for i in 1:total\n        if isodd(i)\n            push!(ls, '+')\n        else\n            insert!(ls, 1, '+')\n        end\n    end\n    return join(ls, \"\") |> x -> rpad(x, total)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"taole\") == ????)\nend\n\n\n",
        "answer": "\"a+t+o+e+r+l+o\""
    },
    {
        "id": 170,
        "code": "\nfunction f(nums::Vector{Int64}, number::Int64)::Int64 \n    return count(x -> x == number, nums)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([12, 0, 13, 4, 12], 12) == ????)\nend\n\n\n",
        "answer": "1"
    },
    {
        "id": 171,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    count = length(nums) ÷ 2\n    for _ in 1:count\n        popfirst!(nums)\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([3, 4, 1, 2, 3]) == ????)\nend\n\n\n",
        "answer": "[1, 2, 3]"
    },
    {
        "id": 172,
        "code": "\nfunction f(array::Vector{Int64})::Vector{Int64} \n    i = 1\n    while i <= length(array)\n        if array[i] < 0\n            splice!(array, i)\n        else\n            i += 1\n        end\n    end\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Int64}([])) == ????)\nend\n\n\n",
        "answer": "[]"
    },
    {
        "id": 173,
        "code": "\nfunction f(list_x::Vector{Int64})::Vector{Int64} \n    item_count = length(list_x)\n    new_list = Vector{Int64}()\n    for i in 1:item_count\n        push!(new_list, pop!(list_x))\n    end\n    return new_list\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([5, 8, 6, 8, 4]) == ????)\nend\n\n\n",
        "answer": "5"
    },
    {
        "id": 174,
        "code": "\n\nfunction f(lst::Vector{Int64})::Vector{Int64}\n    lst[2:3] = reverse(lst[2:3])\n    return lst\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3]) == ????)\nend\n\n\n",
        "answer": "[3, 2, 1]"
    },
    {
        "id": 175,
        "res": 0
    },
    {
        "id": 176,
        "code": "\n\nfunction f(text::String, to_place::String)::String \n    after_place = text[1:findfirst(to_place, text)[1]]\n    before_place = text[findfirst(to_place, text)[1]+1:end]\n    return after_place * before_place\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"some text\", \"some\") == ????)\nend\n\n\n",
        "answer": "\"some textsome\""
    },
    {
        "id": 177,
        "res": 0
    },
    {
        "id": 178,
        "code": "\nfunction f(array::Vector{Int64}, n::Int64)::Vector{Int64} \n    return array[n+1:end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([0, 0, 1, 2, 2, 2, 2], 4) == ????)\nend\n\n\n",
        "answer": "[2, 2, 2]"
    },
    {
        "id": 179,
        "res": 0
    },
    {
        "id": 180,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    a = -1\n    b = nums[2:end]\n    while a <= b[1]\n        splice!(nums, findfirst(x -> x == b[1], nums))\n        a = 0\n        b = b[2:end]\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-1, 5, 3, -2, -6, 8, 8]) == ????)\nend\n\n\n",
        "answer": "[-1, -2, -6, 8, 8]"
    },
    {
        "id": 181,
        "code": "\n\nfunction f(s::String)::Tuple{String, Int64} \n    count = 0\n    digits = \"\"\n    for c in s\n        if isdigit(c)\n            count += 1\n            digits *= string(c)\n        end\n    end\n    return (digits, count)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"qwfasgahh329kn12a23\") == ????)\nend\n\n\n",
        "answer": "(\"qwfasgahh329kn12a23\", 5)"
    },
    {
        "id": 182,
        "code": "\n\nfunction f(dic::Dict{String, Int})::Vector{Tuple{String, Int}} \n    return sort([(k, v) for (k, v) in dic])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"b\" => 1, \"a\" => 2)) == ????)\nend\n\n\n",
        "answer": "[\"a\", \"b\"]"
    },
    {
        "id": 183,
        "code": "\nfunction f(text::String)::Vector{String} \n    ls = split(text)\n    lines = split(join(ls[1:3:end]), '\\n')\n    res = []\n    for i in 0:1\n        ln = ls[2:3:end]\n        if 3*i + 2 <= length(ln)\n            push!(res, join(ln[3*i+1:3*(i+1)], \" \"))\n        end\n    end\n    return vcat(lines, res)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"echo hello!!! nice!\") == ????)\nend\n\n\n",
        "answer": "[\"hello\", \"nice\"]"
    },
    {
        "id": 184,
        "code": "\nfunction f(digits::Vector{Int64})::Vector{Int64} \n    reverse!(digits)\n    if length(digits) < 2\n        return digits\n    end\n    for i in 1:2:length(digits)-1\n        digits[i], digits[i+1] = digits[i+1], digits[i]\n    end\n    return digits\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2]) == ????)\nend\n\n\n",
        "answer": "[2, 1]"
    },
    {
        "id": 185,
        "code": "\nfunction f(L::Vector{Int64})::Vector{Int64} \n    N = length(L)\n    for k in 1:N÷2\n        i = k\n        j = N - k + 1\n        while i < j\n            # swap elements\n            L[i], L[j] = L[j], L[i]\n            # update i, j\n            i += 1\n            j -= 1\n        end\n    end\n    return L\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([16, 14, 12, 7, 9, 11]) == ????)\nend\n\n\n",
        "answer": "[7, 11, 9, 14, 16, 12]"
    },
    {
        "id": 186,
        "code": "\nfunction f(text::String)::String \n    words = split(text)\n    stripped_words = map(word -> lstrip(word), words)\n    return join(stripped_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"pvtso\") == ????)\nend\n\n\n",
        "answer": "\"potso\""
    },
    {
        "id": 187,
        "code": "\n\nfunction f(d::Dict{Int64,Int64}, index::Int64)::Int64\n    length_dict = length(d)\n    if length_dict == 0\n        error(\"Dictionary is empty\")\n    end\n    idx = index % length_dict + 1\n    keys_dict = collect(keys(d))\n    k = keys_dict[idx]\n    v = d[k]\n    deleteat!(keys_dict, idx)\n    for key in keys_dict\n        if haskey(d, key)\n            deleteat!(d, key)\n        end\n    end\n    return v\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(27 => 39), 1) == ????)\nend\n\n\n",
        "answer": "undefined"
    },
    {
        "id": 188,
        "code": "\nfunction f(strings::Vector{String})::Vector{String}\n    new_strings = String[]\n    for string in strings\n        first_two = string[1:min(2, end)]\n        if startswith(first_two, 'a') || startswith(first_two, 'p')\n            push!(new_strings, first_two)\n        end\n    end\n    return new_strings\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"a\", \"b\", \"car\", \"d\"]) == ????)\nend\n\n\n",
        "answer": "[\"b\", \"car\"]"
    },
    {
        "id": 189,
        "res": 0
    },
    {
        "id": 190,
        "code": "\nfunction f(text::String)::String \n    short = \"\"\n    for c in text\n        if islowercase(c)\n            short *= c\n        end\n    end\n    return short\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"980jio80jic kld094398IIl \") == ????)\nend\n\n\n",
        "answer": "\"jio\""
    },
    {
        "id": 191,
        "code": "\nfunction f(string::String)::Bool \n    if all(isuppercase, string)\n        return true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Ohno\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 192,
        "code": "\nfunction f(text::String, suffix::String)::String \n    output = text\n    while endswith(text, suffix)\n        output = text[1:endof(text)-length(suffix)]\n        text = output\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"!klcd!ma:ri\", \"!\") == ????)\nend\n\n\n",
        "answer": "\"!kcda!ma:r\""
    },
    {
        "id": 193,
        "code": "\nfunction f(string::String)::String\n    count_colons = count(c -> c == ':', string)\n    if count_colons > 1\n        return replace(string, ':' => \"\", count=count_colons - 1)\n    else\n        return string\n    end\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"1::1\") == ????)\nend\n\n\n",
        "answer": "\"1::1\""
    },
    {
        "id": 194,
        "code": "\n\nfunction f(matr::Vector{Vector{Int64}}, insert_loc::Int64)::Vector{Vector{Int64}} \n    insert_loc += 1\n    matr = vcat(matr[1:insert_loc-1], [[]], matr[insert_loc:end])\n    return matr\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([[5, 6, 2, 3], [1, 9, 5, 6]], 0) == ????)\nend\n\n\n",
        "answer": "[[5, 6, 2, 3], [1, 9, 5, 6]]"
    },
    {
        "id": 195,
        "code": "\n\nfunction f(text::String)::String \n    prefixes = [\"acs\", \"asp\", \"scn\"]\n    for p in prefixes\n        text = replace(text, p => \"\", count=1) * \" \"\n    end\n    return text[1:end-1]\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ilfdoirwirmtoibsac\") == ????)\nend\n\n\n",
        "answer": "\"irs aps scn\""
    },
    {
        "id": 196,
        "code": "\n\nfunction f(text::String)::String \n    text = replace(text, \" x\" => \" x.\")\n    if titlecase(text) == text\n        return \"correct\"\n    else\n        text = replace(text, \" x.\" => \" x\")\n        return \"mixed\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"398 Is A Poor Year To Sow\") == ????)\nend\n\n\n",
        "answer": "\"correct\""
    },
    {
        "id": 197,
        "code": "\nfunction f(temp::Int64, timeLimit::Int64)::String \n    s = div(timeLimit, temp)\n    e = rem(timeLimit, temp)\n    return ifelse(s > 1, string(s, \" \", e), string(e, \" oC\"))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(1, 1234567890) == ????)\nend\n\n\n",
        "answer": "1.234568e+19"
    },
    {
        "id": 198,
        "code": "\n\nfunction f(text::String, strip_chars::String)::String \n    reversed_text = join(reverse(collect(text)))\n    stripped_text = join(collect(lstrip(rstrip(reversed_text, [c for c in strip_chars]), [c for c in strip_chars])))\n    return join(reverse(collect(stripped_text)))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"tcmfsmj\", \"cfj\") == ????)\nend\n\n\n",
        "answer": "\"smfj\""
    },
    {
        "id": 199,
        "code": "\nfunction f(s::String, char::String)::String \n    base = repeat(char, count(s, char) + 1)\n    return endswith(s, base) ? s[1:end-length(base)] : s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"mnmnj krupa...##!@#!@#\\$\\$@##\", \"@\") == ????)\nend\n\n\n",
        "answer": "\"mnmnj krupa...##!@#!@#\\$\\$@##\""
    },
    {
        "id": 200,
        "code": "\n\nfunction f(text::String, value::String)::String\n    length_ = length(text)\n    index = 1\n    while length_ > 0\n        value = text[index] * value\n        length_ -= 1\n        index += 1\n    end\n    return value\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"jao mt\", \"house\") == ????)\nend\n\n\n",
        "answer": "\"hohohoohoho\""
    },
    {
        "id": 201,
        "code": "\nfunction f(text::String)::String \n    chars = []\n    for c in text\n        if isdigit(c)\n            push!(chars, c)\n        end\n    end\n    return join(reverse(chars))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"--4yrw 251-//4 6p\") == ????)\nend\n\n\n",
        "answer": "\"rtw\""
    },
    {
        "id": 202,
        "code": "\n\nfunction f(array::Vector{Int64}, lst::Vector{Int64})::Vector{Int64}\n    append!(array, lst)\n    filter(x -> x % 2 == 0, array)\n    return filter(x -> x >= 10, array)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2, 15], [15, 1]) == ????)\nend\n\n\n",
        "answer": "[2, 15, 15]"
    },
    {
        "id": 203,
        "code": "\nfunction f(d::Dict{String, String})::Dict{String, String}\n    empty!(d)\n    return d\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"a\" => \"3\", \"b\" => \"-1\", \"c\" => \"Dum\")) == ????)\nend\n\n\n",
        "answer": "{}: {}"
    },
    {
        "id": 204,
        "code": "\n\nfunction f(name::String)::Vector{String} \n    return [string(name[1]), string(name[2])[end:-1:1]]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"master. \") == ????)\nend\n\n\n",
        "answer": "[\"m\", \"r\", \"i\", \"n\", \"g\", \" \", \"o\", \".\"]"
    },
    {
        "id": 205,
        "code": "\nfunction f(a::String)::String \n    for _ in 1:10\n        for j in 1:length(a)\n            if a[j] != '#'\n                a = a[j:end]\n                break\n            end\n        end\n        for j in 1:length(a)\n            if a[end-j+1] != '#'\n                break\n            else\n                a = a[1:end-j]\n            end\n        end\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"##fiu##nk#he###wumun##\") == ????)\nend\n\n\n",
        "answer": "\"wumun\""
    },
    {
        "id": 206,
        "code": "\n\nfunction f(a::String)::String \n    return join(split(a), \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\" h e l l o   w o r l d! \") == ????)\nend\n\n\n",
        "answer": "\"hello world\""
    },
    {
        "id": 207,
        "code": "\nfunction f(commands::Vector{Dict{String, Int64}})::Dict{String, Int64}\n    d = Dict{String, Int64}()\n    for c in commands\n        merge!(d, c)\n    end\n    return d\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([Dict(\"brown\" => 2), Dict(\"blue\" => 5), Dict(\"bright\" => 4)]) == ????)\nend\n\n\n",
        "answer": "{brown: 2, blue: 5, bright: 4}"
    },
    {
        "id": 208,
        "res": 0
    },
    {
        "id": 209,
        "res": 0
    },
    {
        "id": 210,
        "code": "\n\nfunction f(n::Int64, m::Int64, num::Int64)::Int64 \n    x_list = collect(n:m)\n    j = 0\n    while true\n        j = mod(j + num, length(x_list))\n        if x_list[j+1] % 2 == 0\n            return x_list[j+1]\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(46, 48, 21) == ????)\nend\n\n\n",
        "answer": "48"
    },
    {
        "id": 211,
        "code": "\nfunction f(s::String)::Int64 \n    count = 0\n    for c in s\n        if findlast(isequal(c), s) != findfirst(isequal(c), s)\n            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abca dea ead\") == ????)\nend\n\n\n",
        "answer": "3"
    },
    {
        "id": 212,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    for _ in 1:length(nums) - 1\n        reverse!(nums)\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, -9, 7, 2, 6, -3, 3]) == ????)\nend\n\n\n",
        "answer": "([1, -9, 7, 2, 6, -3, 3], [3, 2, 1, -9, 7, 6, -3])"
    },
    {
        "id": 213,
        "code": "\nfunction f(s::String)::String \n    s = replace(s, '(' => '[')\n    s = replace(s, ')' => ']')\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"(ac)\") == ????)\nend\n\n\n",
        "answer": "\"(ac)\""
    },
    {
        "id": 214,
        "res": 0
    },
    {
        "id": 215,
        "code": "\nfunction f(text::String)::String \n    new_text = text\n    while length(text) > 1 && text[1] == text[end]\n        new_text = text = text[2:end-1]\n    end\n    return new_text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\")\") == ????)\nend\n\n\n",
        "answer": "\")\""
    },
    {
        "id": 216,
        "code": "\nfunction f(letters::String)::Int64 \n    count = 0\n    for l in letters\n        if isdigit(l)\n            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"dp ef1 gh2\") == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 217,
        "code": "\nfunction f(string::String)::String \n    if occursin(r\"^[a-zA-Z0-9]*$\", string)\n        return \"ascii encoded is allowed for this language\"\n    else\n        return \"more than ASCII\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Str zahrnuje anglo-ameriæske vasi piscina and kuca!\") == ????)\nend\n\n\n",
        "answer": "\"ascii encoded is allowed for this language\""
    },
    {
        "id": 218,
        "res": 0
    },
    {
        "id": 219,
        "code": "\nfunction f(s1::String, s2::String)::Bool \n    for k in 1:(length(s2) + length(s1))\n        s1 *= s1[1]\n        if occursin(s2, s1) \n            return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Hello\", \")\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 220,
        "code": "\nfunction f(text::String, m::Int64, n::Int64)::String \n    text = string(text, text[1:m], text[n+1:end])\n    result = \"\"\n    for i in n+1:length(text)-m\n        result = string(text[i], result)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abcdefgabc\", 1, 2) == ????)\nend\n\n\n",
        "answer": "\"bac\""
    },
    {
        "id": 221,
        "code": "\nfunction f(text::String, delim::String)::String \n    parts = split(text, delim)\n    return parts[2] * delim * parts[1]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"bpxa24fc5.\", \".\") == ????)\nend\n\n\n",
        "answer": "\"bpxa24fc5.attributes.classification.classification\""
    },
    {
        "id": 222,
        "code": "\n\nfunction f(mess::String, char::String)::String \n    while findnext(char, mess, findlast(char, mess)[1] + 1) != nothing\n        mess = mess[1:prevind(mess, findlast(char, mess)[1])] * mess[nextind(mess, findlast(char, mess)[1]):end]\n    end\n    return mess\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"0aabbaa0b\", \"a\") == ????)\nend\n\n\n",
        "answer": "\"0b\""
    },
    {
        "id": 223,
        "code": "\nfunction f(array::Vector{Int64}, target::Int64)::Int64 \n    count, i = 0, 1\n    for j in 2:length(array)\n        if (array[j] > array[j-1]) && (array[j] <= target)\n            count += i\n        elseif array[j] <= array[j-1]\n            i = 1\n        else\n            i += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, -1, 4], 2) == ????)\nend\n\n\n",
        "answer": "2"
    },
    {
        "id": 224,
        "code": "\nfunction f(array::Vector{String}, value::Int64)::Dict{String, Int64}> \n    reverse!(array)\n    pop!(array)\n    odd = []\n    while length(array) > 0\n        tmp = Dict()\n        tmp[pop!(array)] = value\n        push!(odd, tmp)\n    end\n    result = Dict()\n    while length(odd) > 0\n        merge!(result, pop!(odd))\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"23\"], 123) == ????)\nend\n\n\n",
        "answer": "{}"
    },
    {
        "id": 225,
        "code": "\n\nfunction f(text::String)::Bool\n    return all(islowercase(c) for c in text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"54882\") == ????)\nend\n\n\n",
        "answer": "True"
    },
    {
        "id": 226,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    n = length(nums)\n    for i in 1:n\n        if nums[i] % 3 == 0\n            push!(nums, nums[i])\n        end\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 3]) == ????)\nend\n\n\n",
        "answer": "[1, 3, 1, 3, 1, 3]"
    },
    {
        "id": 227,
        "code": "\nfunction f(text::String)::String \n    text = lowercase(text)\n    head, tail = text[1], text[2:end]\n    return uppercase(head) * tail\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Manolo\") == ????)\nend\n\n\n",
        "answer": "\"MOM\""
    },
    {
        "id": 228,
        "code": "\nfunction f(text::String, splitter::String)::String \n    return join(split(lowercase(text), \" \"), splitter)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"LlTHH sAfLAPkPhtsWP\", \"#\") == ????)\nend\n\n\n",
        "answer": "\"lthh saflapkphp\""
    },
    {
        "id": 229,
        "res": 0
    },
    {
        "id": 230,
        "code": "\nfunction f(text::String)::String \n    result = \"\"\n    i = length(text)\n    while i >= 1\n        c = text[i]\n        if isletter(c)\n            result *= c\n        end\n        i -= 1\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"102x0zoq\") == ????)\nend\n\n\n",
        "answer": "\"zqozq\""
    },
    {
        "id": 231,
        "code": "\nfunction f(years::Vector{Int64})::Int64 \n    a10 = sum([1 for x in years if x <= 1900])\n    a90 = sum([1 for x in years if x > 1910])\n    \n    if a10 > 3\n        return 3\n    elseif a90 > 3\n        return 1\n    else\n        return 2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1872, 1995, 1945]) == ????)\nend\n\n\n",
        "answer": "3"
    },
    {
        "id": 232,
        "code": "\nfunction f(text::String, changes::String)::String \n    result = \"\"\n    count = 0\n    changes = collect(changes)\n    for char in text\n        if char in \"e\"\n            result *= char\n        else\n            result *= changes[count % length(changes) + 1]\n        end\n        count += (char ∉ \"e\") ? 1 : 0\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"fssnvd\", \"yes\") == ????)\nend\n\n\n",
        "answer": "\"fssnvd\""
    },
    {
        "id": 233,
        "code": "\n\nfunction f(xs::Vector{Int64})::Vector{Int64}\n    for idx in range(1, stop=length(xs), step=1)\n        pushfirst!(xs, popat!(xs, length(xs)))\n    end\n    return xs\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3]) == ????)\nend\n\n\n",
        "answer": "[1, 2, 3]"
    },
    {
        "id": 234,
        "res": 0
    },
    {
        "id": 235,
        "code": "\nfunction f(array::Vector{String}, arr::Vector{String})::Vector{String} \n    result = []\n    for s in arr\n        result .= filter(x -> x != \"\", split(s, arr[findfirst(x -> x == s, array)]))\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{String}([]), Vector{String}([])) == ????)\nend\n\n\n",
        "answer": "[]"
    },
    {
        "id": 236,
        "code": "\n\nfunction f(array::Vector{String})::String\n    if length(array) == 1\n        return join(array)\n    end\n    result = collect(array)\n    i = 0\n    while i < length(array)-1\n        for j in 1:2\n            result[i*2+1] = array[i+1]\n            i += 1\n        end\n    end\n    return join(result)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"ac8\", \"qk6\", \"9wg\"]) == ????)\nend\n\n\n",
        "answer": "\"acqk9wg\""
    },
    {
        "id": 237,
        "res": 0
    },
    {
        "id": 238,
        "code": "\nfunction f(ls::Vector{Vector{Int64}}, n::Int64)::Union{Vector{Int64}, Int64} \n    answer = 0\n    for i in ls\n        if i[1] == n\n            answer = i\n        end\n    end\n    return answer\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([[1, 9, 4], [83, 0, 5], [9, 6, 100]], 1) == ????)\nend\n\n\n",
        "answer": "9"
    },
    {
        "id": 239,
        "code": "\n\nfunction f(text::String, froms::String)::String \n    text = lstrip(text, Set(froms))\n    text = rstrip(text, Set(froms))\n    return text\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"0 t 1cos \", \"st 0\t\n  \") == ????)\nend\n\n\n",
        "answer": "\"0 t 1cos \""
    },
    {
        "id": 240,
        "code": "\nfunction f(float_number::Float64)::String \n    number = string(float_number)\n    dot = findfirst('.', number)\n    if dot != nothing\n        return number[1:dot-1] * \".\" * lpad(number[dot+1:end], 2, '0')\n    end\n    return number * \".00\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(3.121) == ????)\nend\n\n\n",
        "answer": "3.121"
    },
    {
        "id": 241,
        "code": "\nfunction f(postcode::String)::String \n    return postcode[findfirst(isequal('C'), postcode):end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ED20 CW\") == ????)\nend\n\n\n",
        "answer": "\"C\""
    },
    {
        "id": 242,
        "code": "\nfunction f(book::String)::String \n    a = split(book, ':')\n    if split(split(a[1], ' ')[1])[end] == split(split(a[2], ' ')[1])[1]\n        return f(join(split(a[1], ' ')[1:end], ' ') * ' ' * split(a[2], ' ')[1])\n    end\n    return book\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"udhv zcvi nhtnfyd :erwuyawa pun\") == ????)\nend\n\n\n",
        "answer": "\"udhv zcvi nhtnfyd :erwuyawa pun\""
    },
    {
        "id": 243,
        "code": "\n\nfunction f(text::String, char::String)::Bool\n    return islowercase(char[1]) && text == lowercase(text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abc\", \"e\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 244,
        "code": "\n\nfunction f(text::String, symbols::String)::String \n    count = 0\n    if !isempty(symbols)\n        count = length(symbols)\n        text = text^count\n    end\n    return rpad(text, length(text) + count*2)[1:(end - 2)]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\", \"BC1ty\") == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 245,
        "code": "\nfunction f(alphabet::String, s::String)::Vector{String} \n    a = [x for x in split(alphabet, \"\") if contains(uppercase(x), uppercase(s))]\n    if uppercase(s) == s\n        push!(a, \"all_uppercased\")\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abcdefghijklmnopqrstuvwxyz\", \"uppercased # % ^ @ ! vz.\") == ????)\nend\n\n\n",
        "answer": "[\"abcdefghijklmnopqrstuvwxyz\"]"
    },
    {
        "id": 246,
        "code": "\n\nfunction f(haystack::String, needle::String)::Int64 \n    for i in reverse(first(findfirst(needle, haystack)):(findfirst(needle, haystack)[1]-1))\n        if haystack[i:end] == needle\n            return i\n        end\n    end\n    return -1\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"345gerghjehg\", \"345\") == ????)\nend\n\n\n",
        "answer": "3"
    },
    {
        "id": 247,
        "code": "\nusing Base.Iterators: all\n\nfunction f(s::String)::String \n    if all(isletter, s)\n        return \"yes\"\n    end\n    if s == \"\"\n        return \"str is empty\"\n    end\n    return \"no\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Boolean\") == ????)\nend\n\n\n",
        "answer": "\"yes\""
    },
    {
        "id": 248,
        "code": "\nfunction f(a::Vector{Int64}, b::Vector{Int64})::Vector{Union{Int64, Float64}} \n    sort!(a)\n    sort!(b, rev=true)\n    return vcat(a, b)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([666], Vector{Int64}([])) == ????)\nend\n\n\n",
        "answer": "[666, 666]"
    },
    {
        "id": 249,
        "code": "\n\nfunction f(s::String)::Dict{String, Int64}\n    count = Dict{String, Int64}()\n    for i in s\n        if islowercase(i)\n            if haskey(count, string(i))\n                count[string(i)] = count[string(i)] + countlowercase(s, i)\n            else\n                count[string(i)] = countlowercase(s, i)\n            end\n        else\n            if haskey(count, lowercase(string(i)))\n                count[lowercase(string(i))] = count[lowercase(string(i))] + countuppercase(s, uppercase(i))\n            else\n                count[lowercase(string(i))] = countuppercase(s, uppercase(i))\n            end\n        end\n    end\n    return count\nend\n\nfunction countlowercase(s::String, i::Char)::Int64\n    count = 0\n    for j in s\n        if j == i\n            count += 1\n        end\n    end\n    return count\nend\n\nfunction countuppercase(s::String, i::Char)::Int64\n    count = 0\n    for j in s\n        if j == i\n            count += 1\n        end\n    end\n    return count\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"FSA\") == ????)\nend\n\n\n",
        "answer": "{\"a\": 1, \"b\": 1, \"c\": 1, \"f\": 1, \"s\": 1}"
    },
    {
        "id": 250,
        "res": 0
    },
    {
        "id": 251,
        "code": "\n\nfunction f(messages::Vector{Vector{String}})::String \n    phone_code = \"+353\"\n    result = []\n    for message in messages\n        append!(message, split(phone_code, \"\"))\n        push!(result, join(message, \";\"))\n    end\n    return join(result, \". \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([[\"Marie\", \"Nelson\", \"Oscar\"]]) == ????)\nend\n\n\n",
        "answer": "\"+353;Nelson;Oscar\""
    },
    {
        "id": 252,
        "res": 0
    },
    {
        "id": 253,
        "code": "\n\nfunction f(text::String, pref::String)::String \n    if pref == text[1:length(pref)]\n        return text[length(pref)+1:end]\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"kumwwfv\", \"k\") == ????)\nend\n\n\n",
        "answer": "\"kumwfv\""
    },
    {
        "id": 254,
        "code": "\nfunction f(text::String, repl::String)::String \n    trans = Dict(zip(text, repl))\n    return join([get(trans, c, c) for c in text])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"upper case\", \"lower case\") == ????)\nend\n\n\n",
        "answer": "\"upper case\""
    },
    {
        "id": 255,
        "code": "\nfunction f(text::String, fill::String, size::Int64)::String \n    if size < 0\n        size = abs(size)\n    end\n    if length(text) > size\n        return text[end-size+1:end]\n    else\n        return string(fill^((size - length(text))) * text)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"no asw\", \"j\", 1) == ????)\nend\n\n\n",
        "answer": "\"j\""
    },
    {
        "id": 256,
        "code": "\nfunction f(text::String, sub::String)::Int64\n    a = 0\n    b = length(text) - 1\n\n    while a <= b\n        c = div(a + b, 2)\n        if findlast(sub, text) !== nothing && findlast(sub, text) >= c\n            a = c + 1\n        else\n            b = c - 1\n        end\n    end\n\n    return a\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"dorfunctions\", \"2\") == ????)\nend\n\n\n",
        "answer": "2"
    },
    {
        "id": 257,
        "code": "\nfunction f(text::Vector{String})::Vector{Vector{String}} \n    ls = []\n    for x in text\n        push!(ls, split(x, '\\n'))\n    end\n    return ls\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"Hello World\n\\\"I am String\\\"\"]) == ????)\nend\n\n\n",
        "answer": "[\"Hello\", \"World\", \"I\", \"am\", \"String\"]"
    },
    {
        "id": 258,
        "code": "\n\nfunction f(L::Vector{Int64}, m::Int64, start::Int64, step::Int64)::Vector{Int64}\n    insert!(L, start+1, m)\n    for x in start-1:-step:0\n        start -= 1\n        insertionPoint = findlast(x -> x == m, L)\n        insertionPoint != nothing && start >= insertionPoint >= (x-step+1) ? insertionPoint = (insertionPoint - step + 1) : nothing\n        insert!(L, insertionPoint, popat!(L, findlast(x -> x == m, L)))\n    end\n    return L\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 7, 9], 3, 3, 2) == ????)\nend\n\n\n",
        "answer": "[1, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7, 9, 3, 3, 2, 7,"
    },
    {
        "id": 259,
        "code": "\nfunction f(text::String)::String \n    new_text = []\n    for character in text\n        if isuppercase(character)\n            insert!(new_text, length(new_text) ÷ 2 + 1, character)\n        end\n    end\n    \n    if isempty(new_text)\n        new_text = ['-']\n    end\n    \n    return join(new_text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"String matching is a big part of RexEx library.\") == ????)\nend\n\n\n",
        "answer": "\"String-matching-is-a-big-part-of-RexEx-library\""
    },
    {
        "id": 260,
        "code": "\n\nfunction f(nums::Vector{Int64}, start::Int64, k::Int64)::Vector{Int64}\n    if start + k <= length(nums)\n        nums[start+1:start+k] = nums[start+1:start+k][end:-1:1]\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3, 4, 5, 6], 4, 2) == ????)\nend\n\n\n",
        "answer": "[1, 2, 3, 5, 4, 6]"
    },
    {
        "id": 261,
        "code": "\nfunction f(nums::Vector{Int64}, target::Int64)::Tuple{Vector{Int64}, Vector{Int64}} \n    lows = Int64[]\n    higgs = Int64[]\n    for i in nums\n        if i < target\n            push!(lows, i)\n        else\n            push!(higgs, i)\n        end\n    end\n    empty!(lows)\n    return lows, higgs\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([12, 516, 5, 2, 3, 214, 51], 5) == ????)\nend\n\n\n",
        "answer": "([2, 3], [5, 5])"
    },
    {
        "id": 262,
        "code": "\nfunction f(nums::Vector{Int64})::String \n    score = Dict(0 => \"F\", 1 => \"E\", 2 => \"D\", 3 => \"C\", 4 => \"B\", 5 => \"A\", 6 => \"\")\n    result = []\n    for i in 1:length(nums)\n        push!(result, get(score, nums[i], \"\"))\n    end\n    return join(result)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([4, 5]) == ????)\nend\n\n\n",
        "answer": "\"FEDCBA\""
    },
    {
        "id": 263,
        "code": "\nfunction f(base::Vector{String}, delta::Vector{Vector{Union{String, String}}})::Vector{String} \n    for j in 1:length(delta)\n        for i in 1:length(base)\n            if base[i] == delta[j][1]\n                @assert delta[j][2] != base[i]\n                base[i] = delta[j][2]\n            end\n        end\n    end\n    return base\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"gloss\", \"banana\", \"barn\", \"lawn\"], Vector{Vector{String}}([])) == ????)\nend\n\n\n",
        "answer": "[\"gloss\", \"banana\", \"barn\", \"lawn\"]"
    },
    {
        "id": 264,
        "code": "\nfunction f(test_str::String)::String \n    s = replace(test_str, 'a' => 'A')\n    return replace(s, 'e' => 'A')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"papera\") == ????)\nend\n\n\n",
        "answer": "\"PAARAC\""
    },
    {
        "id": 265,
        "code": "\nfunction f(d::Dict{Int64, Int64}, k::Int64)::Dict{Int64, Int64}\n    new_d = Dict{Int64, Int64}()\n    for (key, val) in d\n        if key < k\n            new_d[key] = val\n        end\n    end\n    return new_d\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(1 => 2, 2 => 4, 3 => 3), 3) == ????)\nend\n\n\n",
        "answer": "{1 => 2, 2 => 4}"
    },
    {
        "id": 266,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    for i in length(nums):-1:1\n        if nums[i] % 2 == 1\n            insert!(nums, i+1, nums[i])\n        end\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2, 3, 4, 6, -2]) == ????)\nend\n\n\n",
        "answer": "[2, 3, 4, 6, -2, -2]"
    },
    {
        "id": 267,
        "code": "\nfunction f(text::String, space::Int64)::String \n    if space < 0\n        return text\n    end\n    return lpad(text, length(text) ÷ 2 + space)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"sowpf\", -7) == ????)\nend\n\n\n",
        "answer": "\"  sowpf\""
    },
    {
        "id": 268,
        "code": "\n\nfunction f(s::String, separator::String)::String\n    for i in 1:length(s)\n        if s[i] == separator[1]\n            new_s = collect(s)\n            new_s[i] = '/'\n            return join(new_s, \" \")\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"h grateful k\", \" \") == ????)\nend\n\n\n",
        "answer": "\"h/k\""
    },
    {
        "id": 269,
        "res": 0
    },
    {
        "id": 270,
        "code": "\nfunction f(dic::Dict{Int64, Int64})::Dict{Int64, Int64}\n    d = Dict{Int64, Int64}()\n    keys_list = collect(keys(dic))\n    for key in keys_list\n        first_key = first(keys(dic))\n        d[key] = dic[first_key]\n        delete!(dic, first_key)\n    end\n    return d\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict()) == ????)\nend\n\n\n",
        "answer": "{}"
    },
    {
        "id": 271,
        "code": "\nfunction f(text::String, c::String)::String\n    ls = collect(text)\n    if !occursin(c, text)\n        throw(ArgumentError(\"Text has no $c\"))\n    end\n    idx = findlast(x -> x == c[1], ls)\n    if idx !== nothing\n        deleteat!(ls, idx)\n    end\n    return join(ls)\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"uufhl\", \"l\") == ????)\nend\n\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 272,
        "code": "\nfunction f(base_list::Vector{Int64}, nums::Vector{Int64})::Vector{Int64} \n    append!(base_list, nums)\n    res = copy(base_list)\n    for i in 1:length(nums)\n        push!(res, res[end - length(nums) + i])\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([9, 7, 5, 3, 1], [2, 4, 6, 8, 0]) == ????)\nend\n\n\n",
        "answer": "[9, 7, 5, 3, 1, 2, 4, 6, 8, 0]"
    },
    {
        "id": 273,
        "code": "\nfunction f(name::String)::String \n    new_name = \"\"\n    name = reverse(name)\n    for i in 1:length(name)\n        n = name[i]\n        if n != '.' && count(x->x=='.', new_name) < 2\n            new_name = string(n, new_name)\n        else\n            break\n        end\n    end\n    return new_name\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\".NET\") == ????)\nend\n\n\n",
        "answer": "\".NET\""
    },
    {
        "id": 274,
        "code": "\nfunction f(nums::Vector{Int64}, target::Int64)::Int64 \n    count = 0\n    for n1 in nums\n        for n2 in nums\n            count += (n1 + n2 == target)\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3], 4) == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 275,
        "code": "\nfunction f(dic::Dict{Int64, String})::Dict{String, Int64}\n    dic2 = Dict(zip(values(dic), keys(dic)))\n    return dic2\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(-1 => \"a\", 0 => \"b\", 1 => \"c\")) == ????)\nend\n\n\n",
        "answer": "{0 => \"a\", 1 => \"b\", -1 => \"c\"}"
    },
    {
        "id": 276,
        "code": "\nfunction f(a::Vector{Int64})::Vector{Int64} \n    if length(a) >= 2 && a[1] > 0 && a[2] > 0\n        reverse!(a)\n        return a\n    end\n    push!(a, 0)\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Int64}([])) == ????)\nend\n\n\n",
        "answer": "[]"
    },
    {
        "id": 277,
        "code": "\nfunction f(lst::Vector{Int64}, mode::Int64)::Vector{Int64} \n    result = copy(lst)\n    if mode != 0\n        reverse!(result)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3, 4], 1) == ????)\nend\n\n\n",
        "answer": "[1, 2, 3, 4]"
    },
    {
        "id": 278,
        "res": 0
    },
    {
        "id": 279,
        "code": "\nfunction f(text::String)::String \n    ans = \"\"\n    while text != \"\"\n        x, text = split(text, '(', limit=1)\n        ans = x * \"|\" * ans\n        ans = ans * text[1] * ans\n        text = text[2:end]\n    end\n    return ans\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\") == ????)\nend\n\n\n",
        "answer": "()"
    },
    {
        "id": 280,
        "code": "\nfunction f(text::String)::String \n    global g, field\n    field = replace(text, ' ' => \"\")\n    global g = replace(text, '0' => ' ')\n    text = replace(text, '1' => 'i')\n\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"00000000 00000000 01101100 01100101 01101110\") == ????)\nend\n\n\n",
        "answer": "\"i i i i i i i i i i\""
    },
    {
        "id": 281,
        "res": 0
    },
    {
        "id": 282,
        "res": 0
    },
    {
        "id": 283,
        "code": "\nfunction f(dictionary::Dict{String, Int}, key::String)::String \n    delete!(dictionary, key)\n    if key == first(sort(collect(keys(dictionary))))\n        key = first(keys(dictionary))\n    end\n    return key\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"Iron Man\" => 4, \"Captain America\" => 3, \"Black Panther\" => 0, \"Thor\" => 1, \"Ant-Man\" => 6), \"Iron Man\") == ????)\nend\n\n\n",
        "answer": "\"Iron Man\""
    },
    {
        "id": 284,
        "code": "\nfunction f(text::String, prefix::String)::String \n    idx = 1\n    for letter in prefix\n        if text[idx] != letter\n            return nothing\n        end\n        idx += 1\n    end\n    return text[idx:end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"bestest\", \"bestest\") == ????)\nend\n\n\n",
        "answer": "\"bestest\""
    },
    {
        "id": 285,
        "code": "\nfunction f(text::String, ch::String)::Int64 \n    return count(ch, text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"This be Pirate's Speak for 'help'!\", \" \") == ????)\nend\n\n\n",
        "answer": "8"
    },
    {
        "id": 286,
        "code": "\n\nfunction f(array::Vector{Int64}, x::Int64, i::Int64)::Union{String, Vector{Int64}}\n    if i < -length(array) || i > length(array) - 1\n        return \"no\"\n    end\n    temp = array[i+1]\n    array[i+1] = x\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 11, 4) == ????)\nend\n\n\n",
        "answer": "\"no\""
    },
    {
        "id": 287,
        "code": "\n\nfunction f(name::String)::String \n    if all(islowercase, name)\n        name = uppercase(name)\n    else\n        name = lowercase(name)\n    end\n    return name\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Pinneaple\") == ????)\nend\n\n\n",
        "answer": "\"pinneaple\""
    },
    {
        "id": 288,
        "code": "\nfunction f(d::Dict{Int64, Int64})::Vector{Tuple{Int64, Int64}}\n    sorted_pairs = sort(collect(pairs(d)), by = x -> length(string(string(x.first) * string(x.second))))\n    return [(k, v) for (k, v) in sorted_pairs if k < v]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(55 => 4, 4 => 555, 1 => 3, 99 => 21, 499 => 4, 71 => 7, 12 => 6)) == ????)\nend\n\n\n",
        "answer": "(\"(1, 3)\", \"(4, 4)\", \"(71, 7)\", \"(12, 6)\", \"(55, 4)\", \"(499, 4)\", \"(71, 7)\", \"(99, 21)\""
    },
    {
        "id": 289,
        "res": 0
    },
    {
        "id": 290,
        "code": "\nfunction f(text::String, prefix::String)::String \n    if startswith(text, prefix)\n        return replace(text, prefix => \"\", limit=1)\n    end    \n    if occursin(prefix, text)\n        return replace(text, prefix => \"\") |> strip\n    end\n    return uppercase(text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abixaaaily\", \"al\") == ????)\nend\n\n\n",
        "answer": "\"ABIXAAILY\""
    },
    {
        "id": 291,
        "res": 0
    },
    {
        "id": 292,
        "code": "\nfunction f(text::String)::String \n    new_text = [isnumeric(c) ? c : '*' for c in text]\n    return join(new_text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"5f83u23saa\") == ????)\nend\n\n\n",
        "answer": "\"5f83u23saa\""
    },
    {
        "id": 293,
        "code": "\nfunction f(text::String)::String \n    s = lowercase(text)\n    for i in 1:length(s)\n        if s[i] == 'x'\n            return \"no\"\n        end\n    end\n    return isuppercase(text) ? \"true\" : \"false\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"dEXE\") == ????)\nend\n\n\n",
        "answer": "\"false\""
    },
    {
        "id": 294,
        "code": "\n\nfunction f(n::String, m::String, text::String)::String \n    if strip(text) == \"\"\n        return text\n    end\n    head, mid, tail = string(text[1]), text[2:end-1], string(text[end])\n    joined = replace(head, n => m) * replace(mid, n => m) * replace(tail, n => m)\n    return joined\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"x\", \"\\$\", \"2xz&5H3*1a@#a*1hris\") == ????)\nend\n\n\n",
        "answer": "\"2xz&5H3*1a@#a*1hris\""
    },
    {
        "id": 295,
        "code": "\nfunction f(fruits::Vector{String})::Vector{String} \n    if fruits[end] == fruits[1]\n        return [\"no\"]\n    else\n        popfirst!(fruits)\n        popfirst!(fruits)\n        pop!(fruits)\n        pop!(fruits)\n        return fruits\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"apple\", \"apple\", \"pear\", \"banana\", \"pear\", \"orange\", \"orange\"]) == ????)\nend\n\n\n",
        "answer": "[\"apple\", \"pear\", \"orange\"]"
    },
    {
        "id": 296,
        "code": "\nfunction f(url::String)::String \n    return replace(url, \"http://www.\" => \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"https://www.www.ekapusta.com/image/url\") == ????)\nend\n\n\n",
        "answer": "\"url\""
    },
    {
        "id": 297,
        "code": "\nfunction f(num::Int64)::String \n    if 0 < num < 1000 && num != 6174\n        return \"Half Life\"\n    end\n    return \"Not found\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(6173) == ????)\nend\n\n\n",
        "answer": "Half Life"
    },
    {
        "id": 298,
        "code": "\nfunction f(text::String)::String \n    new_text = collect(text)\n    for i in 1:length(new_text)\n        character = new_text[i]\n        new_character = uppercase(character) == character ? lowercase(character) : uppercase(character)\n        new_text[i] = new_character\n    end\n    return join(new_text, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"dst vavf n dmv dfvm gamcu dgcvb.\") == ????)\nend\n\n\n",
        "answer": "\"dstvavfndmvdfvgamcu dgcvb\""
    },
    {
        "id": 299,
        "code": "\nfunction f(text::String, char::String)::String \n    if text[end-length(char)+1:end] != char\n        return f(char * text, char)\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"staovk\", \"k\") == ????)\nend\n\n\n",
        "answer": "\"sk\""
    },
    {
        "id": 300,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    count = 1\n    for i in count:2:length(nums)-1\n        nums[i] = max(nums[i], nums[count])\n        count += 1\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3]) == ????)\nend\n\n\n",
        "answer": "[3, 3, 3]"
    },
    {
        "id": 301,
        "res": 0
    },
    {
        "id": 302,
        "code": "\nfunction f(string::String)::String \n    return replace(string, \"needles\" => \"haystacks\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"wdeejjjzsjsjjsxjjneddaddddddefsfd\") == ????)\nend\n\n\n",
        "answer": "\"haystacks\""
    },
    {
        "id": 303,
        "code": "\n\nfunction f(text::String)::String \n    i = cld(length(text) + 1, 2)\n    result = collect(text)\n    while i < length(text)\n        t = lowercase(result[i])\n        if t == result[i]\n            i += 1\n        else\n            result[i] = t\n        end\n        i += 2\n    end\n    return join(result, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"mJkLbn\") == ????)\nend\n\n\n",
        "answer": "\"mjkn\""
    },
    {
        "id": 304,
        "code": "\nfunction f(d::Dict{Int64, Int64})::Dict{Int64, Int64}\n    sorted_items = sort(collect(d), by=x->x[1], rev=true)\n    key1 = sorted_items[1][1]\n    val1 = pop!(d, key1)\n    key2 = sorted_items[2][1]\n    val2 = pop!(d, key2)\n    return Dict(key1 => val1, key2 => val2)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(2 => 3, 17 => 3, 16 => 6, 18 => 6, 87 => 7)) == ????)\nend\n\n\n",
        "answer": "{17 => 3, 2 => 3, 16 => 6, 18 => 6, 87 => 7}"
    },
    {
        "id": 305,
        "code": "\n\nfunction f(text::String, char::String)::String \n    length_text = length(text)\n    index = -1\n    for i in 1:length_text\n        if text[i] == char[1]\n            index = i\n        end\n    end\n    if index == -1\n        index = div(length_text, 2)\n    end\n    new_text = collect(text)\n    deleteat!(new_text, index)\n    return join(new_text, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"o horseto\", \"r\") == ????)\nend\n\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 306,
        "res": 0
    },
    {
        "id": 307,
        "code": "\nfunction f(text::String)::String \n    rtext = collect(text)\n    for i in 2:length(rtext)-1\n        insert!(rtext, i+1, '|')\n    end\n    return join(rtext)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"pxcznyf\") == ????)\nend\n\n\n",
        "answer": "\"|px|cz|ny|f|\""
    },
    {
        "id": 308,
        "code": "\nfunction f(strings::Vector{String})::Dict{String, Int64}> \n    occurances = Dict{String, Int64}()\n    for string in strings\n        if !haskey(occurances, string)\n            occurances[string] = count(x -> x == string, strings)\n        end\n    end\n    return occurances\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"La\", \"Q\", \"9\", \"La\", \"La\"]) == ????)\nend\n\n\n",
        "answer": "{\n    \"La\": 3,\n    \"Q\": 1,\n    \"9\": 1\n}"
    },
    {
        "id": 309,
        "code": "\nfunction f(text::String, suffix::String)::String \n    text *= suffix\n    while text[end-length(suffix)+1:end] == suffix\n        text = text[1:end-1]\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"faqo osax f\", \"f\") == ????)\nend\n\n\n",
        "answer": "\"faqofosaxf\""
    },
    {
        "id": 310,
        "code": "\nfunction f(strands::Vector{String})::String \n    subs = copy(strands)\n    for i in eachindex(subs)\n        for _ in 1:(length(subs[i]) ÷ 2)\n            subs[i] = subs[i][end] * subs[i][2:end-1] * subs[i][1]\n        end\n    end\n    return join(subs)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"__\", \"1\", \".\", \"0\", \"r0\", \"__\", \"a_j\", \"6\", \"__\", \"6\"]) == ????)\nend\n\n\n",
        "answer": "\"rjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrjrj"
    },
    {
        "id": 311,
        "code": "\nfunction f(text::String)::String \n    text = replace(text, '#' => '1', '$' => '5')\n    return occursin(r\"^\\d+$\", text) ? \"yes\" : \"no\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"A\") == ????)\nend\n\n\n",
        "answer": "no"
    },
    {
        "id": 312,
        "code": "\nfunction f(s::String)::String \n    if occursin(r\"^[a-zA-Z0-9]*$\", s)\n        return \"True\"\n    else\n        return \"False\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"777\") == ????)\nend\n\n\n",
        "answer": "\"True\""
    },
    {
        "id": 313,
        "code": "\nfunction f(s::String, l::Int64)::String \n    return split(s * repeat(\"=\", l), \"=\")[1]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"urecord\", 8) == ????)\nend\n\n\n",
        "answer": "\"record=record=record=record=record=record=record=record=record\""
    },
    {
        "id": 314,
        "code": "\nfunction f(text::String)::String \n    if occursin(\",\", text)\n        before, after = split(text, \",\", limit=2)\n        return after * \" \" * before\n    end\n    return \", \" * split(text, \" \")[end] * \" 0\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"244, 105, -90\") == ????)\nend\n\n\n",
        "answer": "\"105 -90\""
    },
    {
        "id": 315,
        "code": "\nfunction f(challenge::String)::String \n    return replace(lowercase(challenge), \"l\" => \",\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"czywZ\") == ????)\nend\n\n\n",
        "answer": "\"c,y,w,z\""
    },
    {
        "id": 316,
        "code": "\nfunction f(name::String)::String \n    return \"| \" * join(split(name, ' '), \" \") * \" |\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"i am your father\") == ????)\nend\n\n\n",
        "answer": "| i am your father |"
    },
    {
        "id": 317,
        "code": "\nfunction f(text::String, a::String, b::String)::String \n    text = replace(text, a => b)\n    return replace(text, b => a)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\" vup a zwwo oihee amuwuuw! \", \"a\", \"u\") == ????)\nend\n\n\n",
        "answer": "\"uoieamwoo!\""
    },
    {
        "id": 318,
        "res": 0
    },
    {
        "id": 319,
        "code": "\nfunction f(needle::String, haystack::String)::Int64 \n    count = 0\n    while occursin(needle, haystack)\n        haystack = replace(haystack, needle => \"\", count=1)\n        count += 1\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a\", \"xxxaaxaaxx\") == ????)\nend\n\n\n",
        "answer": "3"
    },
    {
        "id": 320,
        "res": 0
    },
    {
        "id": 321,
        "res": 0
    },
    {
        "id": 322,
        "code": "\nfunction f(chemicals::Vector{String}, num::Int64)::Vector{String} \n    fish = chemicals[2:end]\n    reverse!(chemicals)\n    for i in 1:num\n        push!(fish, splice!(chemicals, 2))\n    end\n    reverse!(chemicals)\n    return chemicals\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"lsi\", \"s\", \"t\", \"t\", \"d\"], 0) == ????)\nend\n\n\n",
        "answer": "[\"tset\", \"t\", \"d\", \"t\", \"si\"]"
    },
    {
        "id": 323,
        "code": "\nfunction f(text::String)::Int64 \n    return length(split(text, '\\n'))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ncdsdfdaaa0a1cdscsk*XFd\") == ????)\nend\n\n\n",
        "answer": "8"
    },
    {
        "id": 324,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    asc = copy(nums)\n    desc = reverse(asc)\n    desc = desc[1:div(length(desc), 2)]\n    return vcat(desc, asc, desc)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Int64}([])) == ????)\nend\n\n\n",
        "answer": "[]"
    },
    {
        "id": 325,
        "code": "\nfunction f(s::String)::Bool \n    l = collect(s)\n    for i in 1:length(l)\n        l[i] = lowercase(l[i])\n        if !isdigit(l[i])\n            return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 326,
        "code": "\nfunction f(text::String)::Int64 \n    number = 0\n    for t in text\n        if isnumeric(t)\n            number += 1\n        end\n    end\n    return number\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Thisisastring\") == ????)\nend\n\n\n",
        "answer": "7"
    },
    {
        "id": 327,
        "code": "\nfunction f(lst::Vector{Int64})::Vector{Int64} \n    new = Int64[]\n    i = length(lst)\n    for _ in 1:length(lst)\n        if i % 2 == 1\n            push!(new, -lst[i])\n        else\n            push!(new, lst[i])\n        end\n        i -= 1\n    end\n    return new\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 7, -1, -3]) == ????)\nend\n\n\n",
        "answer": "[1, -7, 3, -1]"
    },
    {
        "id": 328,
        "code": "\n\nfunction f(array::Vector{Int64}, L::Int64)::Vector{Int64}\n    if L <= 0\n        return array\n    elseif length(array) < L\n        append!(array, f(array, L - length(array)))\n    end\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3], 4) == ????)\nend\n\n\n",
        "answer": "[1, 2, 3, 4, 3, 2, 1]"
    },
    {
        "id": 329,
        "code": "\n\nfunction f(text::String)::Bool\n    for i in 2:length(text)\n        if text[i] == uppercase(text[i]) && text[i-1] == lowercase(text[i-1])\n            return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"jh54kkk6\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 330,
        "code": "\nfunction f(text::String)::String \n    ans = [isnumeric(ch) ? ch : ' ' for ch in text]\n    return join(ans)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"m4n2o\") == ????)\nend\n\n\n",
        "answer": "\"M TWO\""
    },
    {
        "id": 331,
        "code": "\n\nfunction f(strand::String, zmnc::String)::Int64 \n    poz = findfirst(zmnc, strand)\n    while poz !== nothing\n        strand = strand[poz.stop+1:end]\n        poz = findfirst(zmnc, strand)\n    end\n    return something(findlast(zmnc, strand), -1)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\", \"abc\") == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 332,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    count = length(nums)\n    if count == 0\n        nums = fill(0, pop!(nums))\n    elseif count % 2 == 0\n        empty!(nums)\n    else\n        deleteat!(nums, 1:count ÷ 2)\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-6, -2, 1, -3, 0, 1]) == ????)\nend\n\n\n",
        "answer": "[0, 0, 1, 0, -3, 0]"
    },
    {
        "id": 333,
        "code": "\nfunction f(places::Vector{Int64}, lazy::Vector{Int64})::Int64 \n    sort!(places)\n    for l in lazy\n        deleteat!(places, findfirst(x -> x == l, places))\n    end\n    \n    if length(places) == 1\n        return 1\n    end\n    \n    for i in 1:length(places)\n        if count(x -> x == places[i] + 1, places) == 0\n            return i\n        end\n    end\n    \n    return length(places)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([375, 564, 857, 90, 728, 92], [728]) == ????)\nend\n\n\n",
        "answer": "4"
    },
    {
        "id": 334,
        "code": "\nfunction f(a::String, b::Vector{String})::String \n    return join(b, a)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"00\", [\"nU\", \" 9 rCSAz\", \"w\", \" lpA5BO\", \"sizL\", \"i7rlVr\"]) == ????)\nend\n\n\n",
        "answer": "\"nU9rCSAzwLlpA5BOsizLi7rlVr\""
    },
    {
        "id": 335,
        "res": 0
    },
    {
        "id": 336,
        "code": "\nfunction f(s::String, sep::String)::String \n    s *= sep\n    parts = split(s, sep)\n    return join(parts[1:end-1], sep)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"234dsfssdfs333324314\", \"s\") == ????)\nend\n\n\n",
        "answer": "\"333324314dsfssdfs234\""
    },
    {
        "id": 337,
        "code": "\nfunction f(txt::String)::String \n    d = []\n    for c in txt\n        if isdigit(c)\n            continue\n        elseif islowercase(c)\n            push!(d, uppercase(c))\n        elseif isuppercase(c)\n            push!(d, lowercase(c))\n        end\n    end\n    return join(d, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"5ll6\") == ????)\nend\n\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 338,
        "code": "\nfunction f(my_dict::Dict{String, Int})::Dict{Int, String}\n    result = Dict{Int, String}()\n    for (k, v) in my_dict\n        result[v] = k\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 2)) == ????)\nend\n\n\n",
        "answer": "{1 => \"a\", 2 => \"c\", 3 => \"b\"}"
    },
    {
        "id": 339,
        "code": "\nfunction f(array::Vector{Int64}, elem::Int64)::Int64 \n    elem = string(elem)\n    d = 0\n    for i in array\n        if string(i) == elem\n            d += 1\n        end\n    end\n    return d\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-1, 2, 1, -8, -8, 2], 2) == ????)\nend\n\n\n",
        "answer": "1"
    },
    {
        "id": 340,
        "code": "\n\nfunction f(text::String)::String\n    uppercase_index = findfirst(isequal('A'), text)\n    if uppercase_index !== nothing\n        return text[1:uppercase_index-1] * text[findnext(isequal('a'), text, uppercase_index):end]\n    else\n        return join(sort([collect(text)...]))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"E jIkx HtDpV G\") == ????)\nend\n\n\n",
        "answer": "\"Eljx HtDpV G\""
    },
    {
        "id": 341,
        "code": "\nfunction f(cart::Dict{Int64, Int64})::Dict{Int64, Int64}\n    while length(cart) > 5\n        delete!(cart, first(keys(cart)))\n    end\n    return cart\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict()) == ????)\nend\n\n\n",
        "answer": "{}"
    },
    {
        "id": 342,
        "code": "\nfunction f(text::String)::Bool \n    return count(x -> x == '-', text) == length(text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"---123-4\") == ????)\nend\n\n\n",
        "answer": "True"
    },
    {
        "id": 343,
        "code": "\nfunction f(array::Vector{Any}, elem::Vector{Any})::Vector{Any} \n    append!(array, elem)\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([[1, 2, 3], [1, 2], 1], [[1, 2, 3], 3, [2, 1]]) == ????)\nend\n\n\n",
        "answer": "[1, 2, 3, 1, 2, 1, 1, 2, 3, 3, 2, 1]"
    },
    {
        "id": 344,
        "code": "\n\nfunction f(lst::Vector{Int64})::Vector{Int64}\n    operation = reverse\n    new_list = copy(lst)\n    sort(new_list)\n    operation(new_list)\n    return lst\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([6, 4, 2, 8, 15]) == ????)\nend\n\n\n",
        "answer": "[2, 4, 6, 8, 15]"
    },
    {
        "id": 345,
        "code": "\n\nfunction f(a::String, b::String)::Tuple{String, String} \n    if a < b\n        return (b, a)\n    else\n        return (a, b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ml\", \"mv\") == ????)\nend\n\n\n",
        "answer": "(\"mv\", \"ml\")"
    },
    {
        "id": 346,
        "code": "\nfunction f(filename::String)::Bool \n    suffix = split(filename, '.')[end]\n    f2 = filename * reverse(suffix)\n    return endswith(f2, suffix)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"docs.doc\") == ????)\nend\n\n\n",
        "answer": "True"
    },
    {
        "id": 347,
        "res": 0
    },
    {
        "id": 348,
        "res": 0
    },
    {
        "id": 349,
        "code": "\n\nfunction f(dictionary::Dict{String, Int64})::Dict{String, Int64}\n    dictionary[\"1049\"] = 55\n    return dictionary\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"noeohqhk\" => 623)) == ????)\nend\n\n\n",
        "answer": "{1049: 55, \"noeohqhk\": 623}"
    },
    {
        "id": 350,
        "res": 0
    },
    {
        "id": 351,
        "code": "\nfunction f(text::String)::String \n    while occursin(\"nnet lloP\", text)\n        text = replace(text, \"nnet lloP\", \"nnet loLp\")\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a_A_b_B3 \") == ????)\nend\n\n\n",
        "answer": "\"aAbB3\""
    },
    {
        "id": 352,
        "code": "\nfunction f(nums::Vector{Int64})::Int64 \n    return nums[div(length(nums), 2) + 1]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-1, -3, -5, -7, 0]) == ????)\nend\n\n\n",
        "answer": "-3"
    },
    {
        "id": 353,
        "code": "\nfunction f(x::Vector{Int64})::Int64 \n    if x == []\n        return -1\n    else\n        cache = Dict{Int64, Int64}()\n        for item in x\n            if haskey(cache, item)\n                cache[item] += 1\n            else\n                cache[item] = 1\n            end\n        end\n        return maximum(values(cache))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 0, 2, 2, 0, 0, 0, 1]) == ????)\nend\n\n\n",
        "answer": "2"
    },
    {
        "id": 354,
        "res": 0
    },
    {
        "id": 355,
        "code": "\nfunction f(text::String, prefix::String)::String \n    return text[length(prefix)+1:end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"123x John z\", \"z\") == ????)\nend\n\n\n",
        "answer": "\"John\""
    },
    {
        "id": 356,
        "code": "\nfunction f(array::Vector{Int}, num::Int)::Vector{Int}\n    reverse = false\n    if num < 0\n        reverse = true\n        num *= -1\n    end\n    \n    array = reverse!(copy(array)) * num\n    l = length(array)\n    \n    if reverse\n        array = reverse!(copy(array))\n    end\n    \n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2], 1) == ????)\nend\n\n\n",
        "answer": "[1, 2, 3, 4]"
    },
    {
        "id": 357,
        "code": "\nfunction f(s::String)::String \n    r = []\n    for i in length(s):-1:1\n        push!(r, s[i])\n    end\n    return join(r)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"crew\") == ????)\nend\n\n\n",
        "answer": "\"cra\""
    },
    {
        "id": 358,
        "code": "\n\nfunction f(text::String, value::String)::String\n    indexes = Int64[]\n    for i in 1:length(text)\n        if text[i] == value[1] && (i == 1 || text[i-1] != value[1])\n            push!(indexes, i)\n        end\n    end\n    if length(indexes) % 2 != 0\n        return text\n    else\n        return text[indexes[1]+1:indexes[end]-1]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"btrburger\", \"b\") == ????)\nend\n\n\n",
        "answer": "\"burger\""
    },
    {
        "id": 359,
        "code": "\nfunction f(lines::Vector{String})::Vector{String} \n    for i in 1:length(lines)\n        lines[i] = lpad(lines[i], length(lines[end]), ' ')\n    end\n    return lines\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"dZwbSR\", \"wijHeq\", \"qluVok\", \"dxjxbF\"]) == ????)\nend\n\n\n",
        "answer": "[\"d   \", \"w   \", \"q   \", \"x   \", \"b   \", \"r   \", \"w   \", \"i   \", \"q   \", \"u   \", \"k   \", \"x   \", \"b   \", \"r   \", \"w   \", \"i   \", \"q   \", \"u   \", \"k   \", \"x   \", \"b   \", \"r   \", \"w   \", \"i   \", \"q   \", \"u   \", \"k   \", \"x   \", \"b   \", \"r   \", \"w   \", \"i   \", \"q   \", \"u   \", \"k   \", \"x   \", \"b   \", \"r   \", \"w   \", \"i   \", \"q   \", \"u   \", \"k   \", \"x   \", \"b   \", \"r   \", \"w   \", \"i   \", \"q   \", \"u   \", \"k   \", \"x   \", \"b   \", \"r   \", \"w   \", \"i   \", \"q   \", \"u   \", \"k   \", \"x   \", \"b   \", \"r   \", \"w   \", \"i   \", \"q   \", \"u   \", \"k   \", \"x   \", \"b   \", \"r   \", \"w   \", \"i   \", \"q   \", \"u   \", \"k   \", \"x   \", \"b   \", \"r   \", \"w   \", \"i   \", \"q   \", \"u   \", \"k   \", \"x   \", \"b   \", \"r   \", \"w   \", \"i   \", \"q   \", \"u   \", \"k   \", \"x   \", \"b   \", \"r   \", \"w   \", \"i   \", \"q   \", \"u   \", \"k   \", \"x   \", \"b   \", \"r   \", \"w   \", \"i   \", \"q   \", \"u   \", \"k   \", \"x   \", \"b   \", \"r   \", \"w   \", \"i   \", \"q   \", \"u   \", \"k   \", \"x   \", \"b   \", \"r   \", \"w   \", \"i   \", \"q   \", \"u   \", \"k   \", \"x   \", \"b   \", \"r   \", \"w"
    },
    {
        "id": 360,
        "code": "\nfunction f(text::String, n::Int64)::String \n    if length(text) <= 2\n        return text\n    end\n    \n    leading_chars = repeat(text[1], n - length(text) + 1)\n    return leading_chars * text[2:end-1] * text[end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"g\", 15) == ????)\nend\n\n\n",
        "answer": "\"g\""
    },
    {
        "id": 361,
        "code": "\nfunction f(text::String)::Int64 \n    return count(occursin(\"#\", split(text,':')[1]))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"#! : #!\") == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 362,
        "code": "\nusing Unicode\n\nfunction f(text::String)::String \n    for i in 1:length(text)-1\n        if all(islowercase, text[i:end])\n            return text[i+1:end]\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"wrazugizoernmgzu\") == ????)\nend\n\n\n",
        "answer": "\"wrazugizoernmgzu\""
    },
    {
        "id": 363,
        "code": "\n\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    sort(nums)\n    n = length(nums)\n    new_nums = [nums[div(n,2)+1]]\n    \n    if n % 2 == 0\n        new_nums = [nums[div(n,2)], nums[div(n,2)+1]]\n    end\n    \n    for i in 0:(div(n,2)-1)\n        pushfirst!(new_nums, nums[n-i])\n        push!(new_nums, nums[i+1])\n    end\n    return new_nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1]) == ????)\nend\n\n\n",
        "answer": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
    },
    {
        "id": 364,
        "res": 0
    },
    {
        "id": 365,
        "code": "\nfunction f(n::String, s::String)::String \n    if startswith(s, n)\n        pre, _ = split(s, n, limit=1)\n        return pre * n * s[length(n) + 1:end]\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"xqc\", \"mRcwVqXsRDRb\") == ????)\nend\n\n\n",
        "answer": "\"mRcwVqXsRDRb\""
    },
    {
        "id": 366,
        "code": "\n\nfunction f(string::String)::String \n    tmp = lowercase(string)\n    for char in lowercase(string)\n        if char in tmp\n            tmp = replace(tmp, char => \"\"; count=1)\n        end\n    end\n    return tmp\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"[ Hello ]+ Hello, World!!_ Hi\") == ????)\nend\n\n\n",
        "answer": "\"hello world\""
    },
    {
        "id": 367,
        "code": "\nfunction f(nums::Vector{Int64}, rmvalue::Int64)::Vector{Int64} \n    res = copy(nums)\n    while rmvalue in res\n        index = findfirst(x -> x == rmvalue, res)\n        popped = splice!(res, index)\n        if popped != rmvalue\n            push!(res, popped)\n        end\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([6, 2, 1, 1, 4, 1], 5) == ????)\nend\n\n\n",
        "answer": "[1, 1, 1, 4, 1, 6, 2, 5]"
    },
    {
        "id": 368,
        "code": "\nfunction f(string::String, numbers::Vector{Int64})::String \n    arr = [lpad(string, n, '0') for n in numbers]\n    return join(arr, ' ')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"4327\", [2, 8, 9, 2, 7, 1]) == ????)\nend\n\n\n",
        "answer": "\"4327 2 7 1\""
    },
    {
        "id": 369,
        "code": "\nfunction f(var::String)::String \n    if occursin(r\"^\\d+$\", var)\n        return \"int\"\n    elseif occursin(r\"^\\d+\\.\\d+$\", var)\n        return \"float\"\n    elseif count(isspace, var) == length(var) - 1\n        return \"str\"\n    elseif length(var) == 1\n        return \"char\"\n    else\n        return \"tuple\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\" 99 777\") == ????)\nend\n\n\n",
        "answer": "\"9977777\""
    },
    {
        "id": 370,
        "code": "\nfunction f(text::String)::Bool \n    for char in text\n        if !isspace(char)\n            return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"     i\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 371,
        "code": "\nfunction f(nums::Vector{Int64})::Int64 \n    for odd in copy(nums)\n        if odd % 2 != 0\n            deleteat!(nums, findall(x->x==odd, nums))\n        end\n    end\n    \n    sum_ = 0\n    for num in nums\n        sum_ += num\n    end\n    return sum_\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([11, 21, 0, 11]) == ????)\nend\n\n\n",
        "answer": "(21, 0)"
    },
    {
        "id": 372,
        "code": "\nfunction f(list_::Vector{String}, num::Int64)::Vector{String} \n    temp = []\n    for i in list_\n        i = repeat(string(i) * \",\", div(num, 2))\n        push!(temp, i)\n    end\n    return temp\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"v\"], 1) == ????)\nend\n\n\n",
        "answer": "[\"v\"]"
    },
    {
        "id": 373,
        "code": "\n\nfunction f(orig::Vector{Int64})::Vector{Int64}\n    copy = orig\n    push!(copy, 100)\n    popat!(orig, length(orig))\n    return copy\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3]) == ????)\nend\n\n\n",
        "answer": "[1, 2, 3, 100]"
    },
    {
        "id": 374,
        "code": "\n\nfunction f(seq::Vector{String}, v::String)::Vector{String}\n    a = String[]\n    for i in seq\n        if endswith(i, v)\n            push!(a, i^2)\n        end\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"oH\", \"ee\", \"mb\", \"deft\", \"n\", \"zz\", \"f\", \"abA\"], \"zz\") == ????)\nend\n\n\n",
        "answer": "[\"f\", \"abA\"]"
    },
    {
        "id": 375,
        "res": 0
    },
    {
        "id": 376,
        "code": "\nfunction f(text::String)::String \n    for i in 1:length(text)\n        if startswith(text[1:i], \"two\")\n            return text[i+1:end]\n        end\n    end\n    return \"no\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"2two programmers\") == ????)\nend\n\n\n",
        "answer": "\"programmer\""
    },
    {
        "id": 377,
        "code": "\nfunction f(text::String)::String \n    return join(split(text, '\\n'), \", \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"BYE\nNO\nWAY\") == ????)\nend\n\n\n",
        "answer": "\"bye, no, way\""
    },
    {
        "id": 378,
        "code": "\n\nfunction f(dic::Dict{String, Int64}, key::String)::Union{String, Int64}\n    dic = copy(dic)\n    v = get(dic, key, 0)\n    if v == 0\n        return \"No such key!\"\n    end\n    while length(dic) > 0\n        k, v = popitem(dic)\n        dic[v] = k\n    end\n    k, v = popitem(dic)\n    return parse(Int64, k)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"did\" => 0), \"u\") == ????)\nend\n\n\n",
        "answer": "No such key!"
    },
    {
        "id": 379,
        "code": "\nfunction f(nums::Vector{Int64})::Union{Bool, Vector{Int64}} \n    for i in reverse(1:length(nums), 3)\n        if nums[i] == 0\n            empty!(nums)\n            return false\n        end\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([0, 0, 1, 2, 1]) == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 380,
        "code": "\n\nfunction f(text::String, delimiter::String)::String\n    text = rsplit(text, delimiter, limit=2)\n    return text[1] * text[2]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"xxjarczx\", \"x\") == ????)\nend\n\n\n",
        "answer": "\"jarczx\""
    },
    {
        "id": 381,
        "code": "\nfunction f(text::String, num_digits::Int64)::String \n    width = max(1, num_digits)\n    return lpad(text, width, '0')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"19\", 5) == ????)\nend\n\n\n",
        "answer": "\"19\""
    },
    {
        "id": 382,
        "code": "\n\nfunction f(a::Dict{Int64, String})::String \n    s = reverse(collect(a))\n    return join([\"($(i[1]), '$(i[2])')\" for i in s], \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(15 => \"Qltuf\", 12 => \"Rwrepny\")) == ????)\nend\n\n\n",
        "answer": "\"(Qltuf, Rwrepny)\""
    },
    {
        "id": 383,
        "code": "\n\nfunction f(text::String, chars::String)::String \n    result = collect(text)\n    while chars in reverse(result[1:3])\n        popfirst(result)\n        popfirst(result)\n    end\n    return strip(join(result), '.')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ellod!p.nkyp.exa.bi.y.hain\", \".n.in.ha.y\") == ????)\nend\n\n\n",
        "answer": "\"hello.n.in.ha.y\""
    },
    {
        "id": 384,
        "code": "\nfunction f(text::String, chars::String)::String \n    chars = collect(chars)\n    text = collect(text)\n    new_text = text\n    while length(new_text) > 0 && text != []\n        if new_text[1] in chars\n            new_text = new_text[2:end]\n        else\n            break \n        end\n    end\n    return join(new_text, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"asfdellos\", \"Ta\") == ????)\nend\n\n\n",
        "answer": "\"asfdellos\""
    },
    {
        "id": 385,
        "code": "\nfunction f(lst::Vector{Int64})::Vector{Int64} \n    i = 1\n    new_list = []\n    while i <= length(lst)\n        if lst[i] in lst[i+1:end]\n            push!(new_list, lst[i])\n            if length(new_list) == 3\n                return new_list\n            end\n        end\n        i += 1\n    end\n    return new_list\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([0, 2, 1, 2, 6, 2, 6, 3, 0]) == ????)\nend\n\n\n",
        "answer": "[0, 2, 1]"
    },
    {
        "id": 386,
        "code": "\n\nfunction f(concat::String, di::Dict{String, String})::String \n    count = length(di)\n    for i in 0:count-1\n        if haskey(di, string(i)) && string(i) in keys(di)\n            pop!(di, string(i))\n        end\n    end\n    return \"Done!\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"mid\", Dict(\"0\" => \"q\", \"1\" => \"f\", \"2\" => \"w\", \"3\" => \"i\")) == ????)\nend\n\n\n",
        "answer": "\"mid\""
    },
    {
        "id": 387,
        "code": "\n\nfunction f(nums::Vector{Int64}, pos::Int64, value::Int64)::Vector{Int64}\n    insert!(nums, pos + 1, value)\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([3, 1, 2], 2, 0) == ????)\nend\n\n\n",
        "answer": "[3, 1, 2, 0]"
    },
    {
        "id": 388,
        "code": "\nfunction f(text::String, characters::String)::String \n    character_list = collect(characters) |> (x -> push!(x, ' ', '_'))\n    \n    i = 1\n    while i <= length(text) && in(text[i], character_list)\n        i += 1\n    end\n    \n    return text[i:end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"2nm_28in\", \"nm\") == ????)\nend\n\n\n",
        "answer": "\"_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ in the early morning of a long day.\n\nA:\n\nThe function takes in a list of strings and returns a list of strings that have been modified to include the phrase \"beep boop\" at the end of each string. The modified strings are returned in the same order as the original list.\n\nExample:\nInput: [\"hello\", \"world\", \"beep boop\"]\nOutput: [\"hellobeepboop\", \"worldbeepboop\", \"beepboop\"]\n\"\"\"\n\nfrom typing import List\n\ndef modify_strings_to_beep_boop(li: List[str]) -> List[str]:\n    \"\"\"\n    Takes in a list of strings and returns a new list of strings where each string has been modified to include the phrase \"beep boop\" at the end.\n    \n    Args:\n    - li: a list of strings\n    \n    Returns:\n    - a new list of strings where each string has been modified to include the phrase \"beep boop\" at the end\n    \"\"\"\n    return [s + \"beep boop\" for s in li]"
    },
    {
        "id": 389,
        "code": "\n\nfunction f(total::Vector{String}, arg::String)::Vector{String}\n    if typeof(arg) <: AbstractArray\n        for e in arg\n            append!(total, split(e, \"\"))\n        end\n    else\n        append!(total, split(arg, \"\"))\n    end\n    return total\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"1\", \"2\", \"3\"], \"nammo\") == ????)\nend\n\n\n",
        "answer": "[\"1\", \"2\", \"3\", \"nammo\"]"
    },
    {
        "id": 390,
        "code": "\nfunction f(text::String)::Int64 \n    if strip(text) == \"\"\n        return length(strip(text))\n    end\n    return nothing\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\" \t \") == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 391,
        "res": 0
    },
    {
        "id": 392,
        "code": "\nfunction f(text::String)::String \n    if uppercase(text) == text\n        return \"ALL UPPERCASE\"\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Hello Is It MyClass\") == ????)\nend\n\n\n",
        "answer": "\"HELLO IS IT MYCLASS\""
    },
    {
        "id": 393,
        "code": "\nfunction f(text::String)::String \n    ls = reverse(text)\n    text2 = \"\"\n    for i in length(ls)-2:-3:1\n        text2 *= join(ls[i:i+2], \"---\") * \"---\"\n    end\n    return text2[1:end-3]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"scala\") == ????)\nend\n\n\n",
        "answer": "\"s---a\""
    },
    {
        "id": 394,
        "code": "\nfunction f(text::String)::Int64 \n    k = split(text, '\\n')\n    i = 0\n    for j in k\n        if length(j) == 0\n            return i\n        end\n        i += 1\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"2 m2 \n\nbike\") == ????)\nend\n\n\n",
        "answer": "2"
    },
    {
        "id": 395,
        "code": "\nfunction f(s::String)::Int64\n    for i in 1:length(s)\n        if isdigit(s[i])\n            return i - 1 + (s[i] == '0' ? 1 : 0)\n        elseif s[i] == '0'\n            return -1\n        end\n    end\n    return -1\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"11\") == ????)\nend\n\n\n",
        "answer": "-1"
    },
    {
        "id": 396,
        "code": "\nfunction f(ets::Dict{Int64, Int64})::Dict{Int64, Int64}\n    keys_to_process = collect(keys(ets))\n    for k in keys_to_process\n        v = delete!(ets, k)\n        ets[k] = v^2\n    end\n    return ets\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict()) == ????)\nend\n\n\n",
        "answer": "{}"
    },
    {
        "id": 397,
        "res": 0
    },
    {
        "id": 398,
        "res": 0
    },
    {
        "id": 399,
        "code": "\nfunction f(text::String, old::String, new::String)::String \n    if length(old) > 3\n        return text\n    end\n    \n    if contains(text, old) && !occursin(\" \", text)\n        return replace(text, old => repeat(new, length(old)))\n    end\n    \n    while contains(text, old)\n        text = replace(text, old => new)\n    end\n    \n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"avacado\", \"va\", \"-\") == ????)\nend\n\n\n",
        "answer": "\"avocado\""
    },
    {
        "id": 400,
        "code": "\nfunction f(multi_string::String)::String \n    cond_string = map(isascii, split(multi_string))\n    if true in cond_string\n        return join([x for x in split(multi_string) if isascii(x)], \", \")\n    else\n        return \"\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"I am hungry! eat food.\") == ????)\nend\n\n\n",
        "answer": "\"I am hungry, eat food.\""
    },
    {
        "id": 401,
        "code": "\nfunction f(text::String, suffix::String)::String \n    if length(suffix) > 0 && endswith(text, suffix)\n        return text[1:end-length(suffix)]\n    end\n    \n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"mathematics\", \"example\") == ????)\nend\n\n\n",
        "answer": "\"mathematics\""
    },
    {
        "id": 402,
        "code": "\nfunction f(n::Int64, l::Vector{String})::Dict{Int64, Int64}> \n    archive = Dict{Int64, Int64}()\n    for i in 1:n\n        empty!(archive)\n        for x in l\n            archive[x + 10] = x * 10\n        end\n    end\n    return archive\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(0, [\"aaa\", \"bbb\"]) == ????)\nend\n\n\n",
        "answer": "{10:aaaaaaaaaaaaaa, 20:bbbbbbbbbbbbbb}"
    },
    {
        "id": 403,
        "code": "\n\nfunction f(full::String, part::String)::Int64\n    length_part = length(part)\n    index = findfirst(part, full)\n    count = 0\n    while index !== nothing\n        full = full[index[2]:end]\n        index = findfirst(part, full)\n        count += 1\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"hrsiajiajieihruejfhbrisvlmmy\", \"hr\") == ????)\nend\n\n\n",
        "answer": "3"
    },
    {
        "id": 404,
        "code": "\nfunction f(no::Vector{String})::Int64 \n    d = Dict{String, Bool}(no .=> false)\n    return length(keys(d))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"l\", \"f\", \"h\", \"g\", \"s\", \"b\"]) == ????)\nend\n\n\n",
        "answer": "6"
    },
    {
        "id": 405,
        "code": "\nfunction f(xs::Vector{Int64})::Vector{Int64} \n    new_x = xs[1] - 1\n    xs = xs[2:end]\n    while new_x <= xs[1]\n        xs = xs[2:end]\n        new_x -= 1\n    end\n    xs = [new_x; xs...]\n    return xs\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([6, 3, 4, 1, 2, 3, 5]) == ????)\nend\n\n\n",
        "answer": "[5, 4, 3, 2, 1, 0, 1]"
    },
    {
        "id": 406,
        "code": "\nfunction f(text::String)::Bool \n    ls = collect(text)\n    ls[1], ls[end] = uppercase(ls[end]), uppercase(ls[1])\n    return join(ls) == titlecase(join(ls))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Josh\") == ????)\nend\n\n\n",
        "answer": "True"
    },
    {
        "id": 407,
        "code": "\nfunction f(s::Vector{Int64})::Int64 \n    while length(s) > 1\n        empty!(s)\n        push!(s, length(s))\n    end\n    return pop!(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([6, 1, 2, 3]) == ????)\nend\n\n\n",
        "answer": "6"
    },
    {
        "id": 408,
        "code": "\nfunction f(m::Vector{Int64})::Vector{Int64} \n    reverse!(m)\n    return m\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-4, 6, 0, 4, -7, 2, -1]) == ????)\nend\n\n\n",
        "answer": "([-4, 6, 0, 4, -7, 2, -1])"
    },
    {
        "id": 409,
        "code": "\n\nfunction f(text::String, char::String)::String \n    if !isempty(text)\n        text = replace(text, \"^$char\" => \"\")\n        text = replace(text, \"^$(text[end])\" => \"\")\n        text = text[1:end-1] * uppercase(text[end])\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"querist\", \"u\") == ????)\nend\n\n\n",
        "answer": "\"queri\""
    },
    {
        "id": 410,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    a = 1\n    for i in 1:length(nums)\n        insert!(nums, i, nums[a])\n        a += 1\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 3, -1, 1, -2, 6]) == ????)\nend\n\n\n",
        "answer": "[1, 3, -1, 1, -2, 6]"
    },
    {
        "id": 411,
        "code": "\nfunction f(text::String, pref::String)::Bool \n    if isa(pref, Vector{String})\n        return join([startswith(text, x) for x in pref], \", \")\n    else\n        return startswith(text, pref)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Hello World\", \"W\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 412,
        "code": "\n\nfunction f(start::Int64, end_val::Int64, interval::Int64)::Int64 \n    steps = collect(start:interval:end_val)\n    if 1 in steps\n        steps[end] = end_val + 1\n    end\n    return length(steps)\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(3, 10, 1) == ????)\nend\n\n\n",
        "answer": "3"
    },
    {
        "id": 413,
        "code": "\n\nfunction f(s::String)::String \n    return string(s[4:end], s[3], s[6:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"jbucwc\") == ????)\nend\n\n\n",
        "answer": "\"ucw\""
    },
    {
        "id": 414,
        "res": 0
    },
    {
        "id": 415,
        "res": 0
    },
    {
        "id": 416,
        "code": "\n\nfunction f(text::String, old::String, new::String)::String\n    result = collect(text)\n    index = findlast(x -> x == old, text)\n    while index != nothing\n        result[index:index+length(old)] = collect(new)\n        index = findlast(x -> x == old, text[1:index-1])\n    end\n    return join(result, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"jysrhfm ojwesf xgwwdyr dlrul ymba bpq\", \"j\", \"1\") == ????)\nend\n\n\n",
        "answer": "\"jonesf1gwwdyrdlurmba\""
    },
    {
        "id": 417,
        "code": "\nfunction f(lst::Vector{Int64})::Vector{Int64} \n    reverse!(lst)\n    pop!(lst)\n    reverse!(lst)\n    return lst\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([7, 8, 2, 8]) == ????)\nend\n\n\n",
        "answer": "([2, 8, 7], 8)"
    },
    {
        "id": 418,
        "code": "\nfunction f(s::String, p::String)::String \n    arr = split(s, p)\n    part_one, part_two, part_three = length(arr[1]), length(p), length(arr[2])\n    if part_one >= 2 && part_two <= 2 && part_three >= 2\n        return string(reverse(arr[1]) * p * reverse(arr[2]) * \"#\")\n    end\n    return string(arr[1] * p * arr[2])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"qqqqq\", \"qqq\") == ????)\nend\n\n\n",
        "answer": "\"qqqqq\""
    },
    {
        "id": 419,
        "code": "\nfunction f(text::String, value::String)::String \n    if !(occursin(value, text))\n        return \"\"\n    end\n    parts = split(text, value)\n    return parts[1]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"mmfbifen\", \"i\") == ????)\nend\n\n\n",
        "answer": "\"f\""
    },
    {
        "id": 420,
        "code": "\nfunction f(text::String)::Bool \n    try\n        return occursin(r\"^[a-zA-Z]+$\", text)\n    catch\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"x\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 421,
        "code": "\nfunction f(s::String, n::Int64)::String \n    if length(s) < n\n        return s\n    else\n        return s[n+1:end]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"try.\", 5) == ????)\nend\n\n\n",
        "answer": "\"try.\""
    },
    {
        "id": 422,
        "code": "\nfunction f(array::Vector{Int64})::Vector{Int64} \n    new_array = copy(array)\n    new_array = reverse(new_array)\n    return [x*x for x in new_array]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 1]) == ????)\nend\n\n\n",
        "answer": "[1, 4, 1]"
    },
    {
        "id": 423,
        "code": "\nfunction f(selfie::Vector{Int64})::Vector{Int64} \n    lo = length(selfie)\n    for i in reverse(1:lo)\n        if selfie[i] == selfie[1]\n            deleteat!(selfie, lo)\n        end\n    end\n    return selfie\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([4, 2, 5, 1, 3, 2, 6]) == ????)\nend\n\n\n",
        "answer": "[4, 2, 5, 1, 3, 2, 6]"
    },
    {
        "id": 424,
        "code": "\nfunction f(s::String)::String \n    s = replace(s, \"\\\"\" => \"\")\n    lst = collect(s)\n    col = 1\n    count = 1\n    while col <= length(lst) && lst[col] in ['.', ':', ',']\n        if lst[col] == '.'\n            count = lst[col] + 1\n        end\n        col += 1\n    end\n    return join(lst[col+count:end], \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\\\"Makers of a Statement\\\"\") == ????)\nend\n\n\n",
        "answer": "\"Makers of a Statement\""
    },
    {
        "id": 425,
        "code": "\n\nfunction f(a::String)::Vector{String} \n    a = replace(a, \"/\" => \":\")\n    z = rsplit(a, \":\", limit=2)\n    if length(z) == 1\n        return [z[1], \"\", \"\"]\n    else\n        return [z[1], \":\", z[2]]\n    end\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"/CL44     \") == ????)\nend\n\n\n",
        "answer": "[\"CL\", \"44\", \"\"]"
    },
    {
        "id": 426,
        "code": "\nfunction f(numbers::Vector{Int64}, elem::Int64, idx::Int64)::Vector{Int64}\n    if idx > length(numbers)\n        push!(numbers, elem)\n    else\n        insert!(numbers, idx, elem)\n    end\n    return numbers\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3], 8, 5) == ????)\nend\n\n\n",
        "answer": "[1, 2, 3, 8, 8, 8, 8, 8]"
    },
    {
        "id": 427,
        "code": "\nfunction f(s::String)::String \n    count = length(s) - 1\n    reverse_s = reverse(s)\n    while count > 0 && occursin(\"sea\", reverse_s[1:3:end]) == false\n        count -= 1\n        reverse_s = reverse_s[1:count]\n    end\n    return reverse_s[count + 1:end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"s a a b s d s a a s a a\") == ????)\nend\n\n\n",
        "answer": "\"ssa\""
    },
    {
        "id": 428,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    for i in 1:length(nums)\n        if i % 2 != 0\n            push!(nums, nums[i] * nums[i+1])\n        end\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Int64}([])) == ????)\nend\n\n\n",
        "answer": "[]"
    },
    {
        "id": 429,
        "res": 0
    },
    {
        "id": 430,
        "res": 0
    },
    {
        "id": 431,
        "code": "\nfunction f(n::Int64, m::Int64)::Vector{Int64} \n    arr = collect(1:n)\n    for i in 1:m\n        empty!(arr)\n    end\n    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(1, 3) == ????)\nend\n\n\n",
        "answer": "[1, 2, 3]"
    },
    {
        "id": 432,
        "res": 0
    },
    {
        "id": 433,
        "code": "\nfunction f(text::String)::String \n    text = split(text, ',')\n    text = filter!(x -> x != \"\", text) # remove empty strings\n    deleteat!(text, 1)\n    idx = findfirst(isequal(\"T\"), text)\n    insert!(text, 1, splice!(text, idx))\n    return join([\"T\", text...], \",\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Dmreh,Sspp,T,G ,.tB,Vxk,Cct\") == ????)\nend\n\n\n",
        "answer": "\"T,G ,.tB,Vxk,Cct\""
    },
    {
        "id": 434,
        "code": "\nfunction f(string::String)::Int64\n    try\n        return findlast(==('e'), string) - 1\n    catch e\n        if isa(e, ArgumentError)\n            return -1\n        else\n            rethrow()\n        end\n    end\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"eeuseeeoehasa\") == ????)\nend\n\n\n",
        "answer": "7"
    },
    {
        "id": 435,
        "code": "\n\nfunction f(numbers::Vector{String}, num::Int64, val::Int64)::String \n    while length(numbers) < num\n        insert!(numbers, div(length(numbers), 2) + 1, string(val))\n    end\n    for _ in 1:div(length(numbers), (num - 1)) - 4\n        insert!(numbers, div(length(numbers), 2) + 1, string(val))\n    end\n    return join(numbers, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{String}([]), 0, 1) == ????)\nend\n\n\n",
        "answer": "\"0 1 2 3 4 5 6 7 8 9 10\""
    },
    {
        "id": 436,
        "code": "\n\nfunction f(s::String, characters::Vector{Int64})::Vector{String} \n    return [SubString(s, i, i) for i in characters .+ 1]\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"s7 6s 1ss\", [1, 3, 6, 1, 2]) == ????)\nend\n\n\n",
        "answer": "[\"s7\", \"ss\"]"
    },
    {
        "id": 437,
        "res": 0
    },
    {
        "id": 438,
        "res": 0
    },
    {
        "id": 439,
        "code": "\nfunction f(value::String)::String \n    parts = split(value, ' ')[1:2:end]\n    return join(parts, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"coscifysu\") == ????)\nend\n\n\n",
        "answer": "\"cosifysu\""
    },
    {
        "id": 440,
        "code": "\nfunction f(text::String)::String \n    if occursin(r\"\\d+\", text)\n        return \"yes\"\n    else\n        return \"no\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abc\") == ????)\nend\n\n\n",
        "answer": "\"no\""
    },
    {
        "id": 441,
        "res": 0
    },
    {
        "id": 442,
        "code": "\nfunction f(lst::Vector{Int64})::Vector{Int64} \n    res = Int64[]\n    for i in 1:length(lst)\n        if lst[i] % 2 == 0\n            push!(res, lst[i])\n        end\n    end\n    \n    return copy(lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3, 4]) == ????)\nend\n\n\n",
        "answer": "[2, 4]"
    },
    {
        "id": 443,
        "code": "\nfunction f(text::String)::String \n    for space in text\n        if space == ' '\n            text = strip(text)\n        else\n            text = replace(text, \"cd\" => string(space))\n        end\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"lorem ipsum\") == ????)\nend\n\n\n",
        "answer": "\"loremipsum\""
    },
    {
        "id": 444,
        "res": 0
    },
    {
        "id": 445,
        "code": "\nfunction f(names::String)::String \n    parts = split(names, ',')\n    for (i, part) in enumerate(parts)\n        parts[i] = replace(replace(titlecase(part), \" And\" => \"+\"), \"+\" => \" and\")\n    end\n    return join(parts, \", \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"carrot, banana, and strawberry\") == ????)\nend\n\n\n",
        "answer": "\"Carrot, banana, and strawberry\""
    },
    {
        "id": 446,
        "code": "\nfunction f(array::Vector{Int64})::Vector{Int64} \n    l = length(array)\n    if l % 2 == 0\n        empty!(array)\n    else\n        reverse!(array)\n    end\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Int64}([])) == ????)\nend\n\n\n",
        "answer": "[]"
    },
    {
        "id": 447,
        "code": "\nfunction f(text::String, tab_size::Int64)::String \n    res = \"\"\n    text = replace(text, '\\t' => repeat(' ', tab_size-1))\n    for i in 1:length(text)\n        if text[i] == ' '\n            res *= '|'\n        else\n            res *= text[i]\n        end\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\ta\", 3) == ????)\nend\n\n\n",
        "answer": "\"a|a|a\""
    },
    {
        "id": 448,
        "code": "\nfunction f(text::String, suffix::String)::Bool \n    if suffix == \"\"\n        suffix = nothing\n    end\n    return endswith(text, suffix)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"uMeGndkGh\", \"kG\") == ????)\nend\n\n\n",
        "answer": "True"
    },
    {
        "id": 449,
        "code": "\nfunction f(x::String)::Bool \n    n = length(x)\n    i = 1\n    while i <= n && isdigit(x[i])\n        i += 1\n    end\n    return i > n\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"1\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 450,
        "code": "\nfunction f(strs::String)::String \n    strs = split(strs)\n    for i in 2:2:length(strs)\n        strs[i] = join(reverse(strs[i]))\n    end\n    return join(strs, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"K zBK\") == ????)\nend\n\n\n",
        "answer": "\"z y x\""
    },
    {
        "id": 451,
        "code": "\n\nfunction f(text::String, char::String)::String \n    text = collect(text)\n    for (count, item) in enumerate(text)\n        if item == char[1]\n            deleteat!(text, count)\n            return join(text, \"\")\n        end\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"pn\", \"p\") == ????)\nend\n\n\n",
        "answer": "\"p\""
    },
    {
        "id": 452,
        "code": "\nfunction f(text::String)::Int64 \n    counter = 0\n    for char in text\n        if isletter(char)\n            counter += 1\n        end\n    end\n    return counter\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"l000*\") == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 453,
        "code": "\nfunction f(string::String, c::String)::Bool \n    return endswith(string, c)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"wrsch)xjmb8\", \"c\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 454,
        "res": 0
    },
    {
        "id": 455,
        "code": "\nfunction f(text::String)::String \n    uppers = count(isuppercase, text)\n    if uppers >= 10\n        return uppercase(text)\n    else\n        return text\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"?XyZ\") == ????)\nend\n\n\n",
        "answer": "\"XyZ\""
    },
    {
        "id": 456,
        "code": "\nfunction f(s::String, tab::Int64)::String \n    return replace(s, \"\\t\" => repeat(\" \", tab))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Join us in Hungary\", 4) == ????)\nend\n\n\n",
        "answer": "Join us in ********"
    },
    {
        "id": 457,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    count = collect(1:length(nums))\n    for i in 1:length(nums)\n        pop!(nums)\n        if length(count) > 0\n            popfirst!(count)\n        end\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([3, 1, 7, 5, 6]) == ????)\nend\n\n\n",
        "answer": "[1, 2, 3, 4, 5]"
    },
    {
        "id": 458,
        "code": "\nfunction f(text::String, search_chars::String, replace_chars::String)::String \n    trans_table = Dict{Char, Char}()\n    for (i, search_char) in enumerate(search_chars)\n        trans_table[search_char] = replace_chars[i]\n    end\n    return join([get(trans_table, c, c) for c in text])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"mmm34mIm\", \"mm3\", \",po\") == ????)\nend\n\n\n",
        "answer": "\"Im3m\""
    },
    {
        "id": 459,
        "res": 0
    },
    {
        "id": 460,
        "code": "\nfunction f(text::String, amount::Int64)::String \n    length_text = length(text)\n    pre_text = '|'\n    if amount >= length_text\n        extra_space = amount - length_text\n        pre_text *= \" \" ^ div(extra_space, 2)\n        return pre_text * text * pre_text\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"GENERAL NAGOOR\", 5) == ????)\nend\n\n\n",
        "answer": "\"|GenERAL|NAGO|ORO|R\""
    },
    {
        "id": 461,
        "code": "\nfunction f(text::String, search::String)::Bool \n    return startswith(search, text) || false\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"123\", \"123eenhas0\") == ????)\nend\n\n\n",
        "answer": "true"
    },
    {
        "id": 462,
        "res": 0
    },
    {
        "id": 463,
        "code": "\nfunction f(dict::Dict{Int64, Int64})::Dict{Int64, Int64}\n    result = copy(dict)\n    remove_keys = []\n    for (k, v) in dict\n        if haskey(dict, v)\n            delete!(result, k)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(-1 => -1, 5 => 5, 3 => 6, -4 => -4)) == ????)\nend\n\n\n",
        "answer": "{5, 6}"
    },
    {
        "id": 464,
        "code": "\nfunction f(ans::String)::Union{Int64, String} \n    try\n        num = parse(Int, ans)\n        total = num * 4 - 50\n        total -= count(c -> c ∉ \"02468\", ans) * 100\n        return total\n    catch\n        return \"NAN\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"0\") == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 465,
        "code": "\nfunction f(seq::Vector{String}, value::String)::Dict{String, String}> \n    roles = Dict{String, String}(zip(seq, fill(\"north\", length(seq))))\n    if !isempty(value)\n        for key in split(value, \", \")\n            roles[key] = key\n        end\n    end\n    return roles\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"wise king\", \"young king\"], \"\") == ????)\nend\n\n\n",
        "answer": "{}: {}"
    },
    {
        "id": 466,
        "code": "\n\nfunction f(text::String)::String \n    length_ = length(text)\n    index = 0\n    while index < length_ && isspace(text[index+1])\n        index += 1\n    end\n    return text[index+1:index+5]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"-----\t\n\tth\n-----\") == ????)\nend\n\n\n",
        "answer": "\"th\""
    },
    {
        "id": 467,
        "code": "\nfunction f(nums::Dict{String, String})::Dict{String, Int64}\n    copy = deepcopy(nums)\n    newDict = Dict{String, Int64}()\n    for k in keys(copy)\n        newDict[k] = length(copy[k])\n    end\n    return newDict\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict()) == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 468,
        "code": "\nfunction f(a::String, b::String, n::Int64)::String \n    result = m = b\n    for _ in 1:n\n        if m != \"\"\n            a, m = replace(a, m => \"\", count=1), \"\"\n            result = m = b\n        end\n    end\n    return join(split(a, b), result)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"unrndqafi\", \"c\", 2) == ????)\nend\n\n\n",
        "answer": "\"unrndqafi\""
    },
    {
        "id": 469,
        "res": 0
    },
    {
        "id": 470,
        "code": "\nfunction f(number::Int64)::Vector{String} \n    transl = Dict(\"A\" => 1, \"B\" => 2, \"C\" => 3, \"D\" => 4, \"E\" => 5)\n    result = String[]\n    for (key, value) in transl\n        if value % number == 0\n            push!(result, key)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(2) == ????)\nend\n\n\n",
        "answer": "[]"
    },
    {
        "id": 471,
        "code": "\nfunction f(val::String, text::String)::Int64 \n    indices = [index for index in 1:length(text) if text[index] == val]\n    if length(indices) == 0\n        return -1\n    else\n        return indices[1]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"o\", \"fnmart\") == ????)\nend\n\n\n",
        "answer": "-1"
    },
    {
        "id": 472,
        "code": "\n\nfunction f(text::String)::Vector{Int64} \n    d = Dict{Char, Int64}()\n    for char in lowercase(replace(text, \"-\" => \"\"))\n        d[char] = get(d, char, 0) + 1\n    end\n    d = sort(collect(d), by=x->x[2])\n    return [val for (key, val) in d]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"x--y-z-5-C\") == ????)\nend\n\n\n",
        "answer": "[5, 5, 5, 5, 5]"
    },
    {
        "id": 473,
        "code": "\n\nfunction f(text::String, value::String)::String\n    indexes = Int[]\n    for i in 1:length(text)\n        if text[i] == value[1]\n            push!(indexes, i)\n        end\n    end\n    new_text = collect(text)\n    for i in reverse(indexes)\n        deleteat!(new_text, i)\n    end\n    return join(new_text, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"scedvtvotkwqfoqn\", \"o\") == ????)\nend\n\n\n",
        "answer": "\"scedvotkwqfoqn\""
    },
    {
        "id": 474,
        "code": "\nfunction f(txt::String, marker::Int64)::String \n    a = []\n    lines = split(txt, '\\n')\n    for line in lines\n        push!(a, rpad(lpad(line, div(marker - length(line), 2)), marker, ' '))\n    end\n    return join(a, '\\n')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"#[)[]>[^e>\n 8\", -5) == ????)\nend\n\n\n",
        "answer": "\"#   []   \\n  []  \\n   []  \\n    [] \\n   []  \\n  []  \\n #[]ee\\n\""
    },
    {
        "id": 475,
        "code": "\n\nfunction f(array::Vector{Int64}, index::Int64)::Int64 \n    if index < 0\n        index = length(array) + index\n    end\n    return array[index+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1], 0) == ????)\nend\n\n\n",
        "answer": "undefined"
    },
    {
        "id": 476,
        "code": "\nfunction f(a::String, split_on::String)::Bool \n    t = split(a)\n    a = []\n    for i in t\n        for j in i\n            push!(a, j)\n        end\n    end\n    if split_on in a\n        return true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"booty boot-boot bootclass\", \"k\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 477,
        "code": "\n\nfunction f(text::String)::Tuple{String, String} \n    parts = split(text, '|', limit=2)\n    topic = length(parts) > 1 ? parts[1] : \"\"\n    problem = length(parts) > 1 ? parts[2] : text\n    if problem == \"r\"\n        problem = replace(topic, \"u\" => \"p\")\n    end\n    return topic, problem\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"|xduaisf\") == ????)\nend\n\n\n",
        "answer": "(\"xduaisf\", \"r\")"
    },
    {
        "id": 478,
        "code": "\n\nfunction f(sb::String)::Dict{String, Int64} \n    d = Dict{String, Int64}()\n    for s in sb\n        d[string(s)] = get(d, string(s), 0) + 1\n    end\n    return d\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"meow meow\") == ????)\nend\n\n\n",
        "answer": "{meow: 2, meow: 2}"
    },
    {
        "id": 479,
        "code": "\nfunction f(nums::Vector{Int64}, pop1::Int64, pop2::Int64)::Vector{Int64} \n    splice!(nums, pop1)\n    splice!(nums, pop2)\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 5, 2, 3, 6], 2, 4) == ????)\nend\n\n\n",
        "answer": "[1, 2, 3, 4, 5, 6]"
    },
    {
        "id": 480,
        "code": "\nfunction f(s::String, c1::String, c2::String)::String \n    if s == \"\"\n        return s\n    end\n    \n    ls = split(s, c1)\n    for (index, item) in enumerate(ls)\n        if occursin(c1, item)\n            ls[index] = replace(item, c1 => c2, count=1)\n        end\n    end\n    \n    return join(ls, c1)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\", \"mi\", \"siast\") == ????)\nend\n\n\n",
        "answer": "\"\""
    },
    {
        "id": 481,
        "code": "\nfunction f(values::Vector{Int64}, item1::Int64, item2::Int64)::Vector{Int64} \n    if values[end] == item2\n        if !(values[1] in values[2:end])\n            push!(values, values[1])\n        end\n    elseif values[end] == item1\n        if values[1] == item2\n            push!(values, values[1])\n        end\n    end\n    return values\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 1], 2, 3) == ????)\nend\n\n\n",
        "answer": "[1, 1, 2, 3]"
    },
    {
        "id": 482,
        "code": "\n\nfunction f(text::String)::String \n    return replace(text, \"\\\\\\\"\" => \"\\\"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Because it intrigues them\") == ????)\nend\n\n\n",
        "answer": "\"Because it ignuresses them\""
    },
    {
        "id": 483,
        "code": "\nfunction f(text::String, char::String)::String \n    return join(split(text, char), \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a\", \"a\") == ????)\nend\n\n\n",
        "answer": "\"a a\""
    },
    {
        "id": 484,
        "res": 0
    },
    {
        "id": 485,
        "code": "\n\nfunction f(tokens::String)::String \n    tokens = split(tokens)\n    if length(tokens) == 2\n        tokens = reverse(tokens)\n    end\n    result = join([rpad(tokens[1], 5), rpad(tokens[2], 5)], \" \")\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"gsd avdropj\") == ????)\nend\n\n\n",
        "answer": "\"gnadre j\""
    },
    {
        "id": 486,
        "code": "\nfunction f(dic::Dict{Int64, Int64})::Dict{Int64, Int64}\n    dic_op = copy(dic)\n    for (key, val) in dic\n        dic_op[key] = val * val\n    end\n    return dic_op\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(1 => 1, 2 => 2, 3 => 3)) == ????)\nend\n\n\n",
        "answer": "{1 => 1, 4 => 16, 9 => 36}"
    },
    {
        "id": 487,
        "code": "\nfunction f(dict::Dict{Int64, String})::Vector{Int64} \n    even_keys = Int[]\n    for key in keys(dict)\n        if key % 2 == 0\n            push!(even_keys, key)\n        end\n    end\n    return even_keys\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(4 => \"a\")) == ????)\nend\n\n\n",
        "answer": "[4, 2, 4]"
    },
    {
        "id": 488,
        "res": 0
    },
    {
        "id": 489,
        "code": "\nfunction f(text::String, value::String)::String \n    return replace(text, value => \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"coscifysu\", \"cos\") == ????)\nend\n\n\n",
        "answer": "\"cifysu\""
    },
    {
        "id": 490,
        "code": "\nfunction f(s::String)::String \n    return join([c for c in s if isspace(c)])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\ngiyixjkvu\n\r\r \frgjuo\") == ????)\nend\n\n\n",
        "answer": "\"giyixjkv\""
    },
    {
        "id": 491,
        "code": "\n\nfunction f(xs::Vector{Int64})::Vector{Int64}\n    for i in 1:length(xs)\n        extend_arr = [xs[end-i+1], xs[end-i+1]]\n        append!(xs, extend_arr)\n    end\n    return xs\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([4, 8, 8, 5]) == ????)\nend\n\n\n",
        "answer": "[4, 8, 8, 5, 4, 8, 8, 5]"
    },
    {
        "id": 492,
        "code": "\nfunction f(text::String, value::String)::String \n    ls = collect(text)\n    if count(e -> e == value, ls) % 2 == 0\n        while value in ls\n            deleteat!(ls, findfirst(x -> x == value, ls))\n        end\n    else\n        empty!(ls)\n    end\n    return join(ls, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abbkebaniuwurzvr\", \"m\") == ????)\nend\n\n\n",
        "answer": "\"m\""
    },
    {
        "id": 493,
        "res": 0
    },
    {
        "id": 494,
        "code": "\nfunction f(num::String, l::Int64)::String \n    t = \"\"\n    while l > length(num)\n        t *= '0'\n        l -= 1\n    end\n    return t * num\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"1\", 3) == ????)\nend\n\n\n",
        "answer": "\"0011\""
    },
    {
        "id": 495,
        "code": "\n\nfunction f(s::String)::Tuple{String, String} \n    if all(isascii, s[end-4:end])\n        return s[end-4:end], s[1:3]\n    elseif all(isascii, s[1:5])\n        return s[1:5], s[end-2:end]\n    else\n        return s\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a1234år\") == ????)\nend\n\n\n",
        "answer": "(\"a\", \"r\")"
    },
    {
        "id": 496,
        "res": 0
    },
    {
        "id": 497,
        "code": "\nfunction f(n::Int64)::Vector{String} \n    b = [string(d) for d in digits(n)]\n    for i in 3:length(b)\n        b[i] *= \"+\"\n    end\n    return b\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(44) == ????)\nend\n\n\n",
        "answer": "[\"4+4+4\"]"
    },
    {
        "id": 498,
        "code": "\n\nfunction f(nums::Vector{Int64}, idx::Int64, added::Int64)::Vector{Int64} \n    insert!(nums, idx + 1, added)\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2, 2, 2, 3, 3], 2, 3) == ????)\nend\n\n\n",
        "answer": "[2, 3, 3, 3, 4]"
    },
    {
        "id": 499,
        "res": 0
    },
    {
        "id": 500,
        "res": 0
    },
    {
        "id": 501,
        "res": 0
    },
    {
        "id": 502,
        "code": "\nfunction f(name::String)::String \n    return join(split(name, \" \"), \"*\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Fred Smith\") == ????)\nend\n\n\n",
        "answer": "\"Fred*Smith\""
    },
    {
        "id": 503,
        "code": "\nfunction f(d::Dict{Int64, Int64})::Vector{Int64}\n    result = Vector{Int64}(undef, length(d))\n    a = b = 0\n    while !isempty(d)\n        key, value = pop!(d)\n        result[a + 1] = value  # Julia is 1-indexed\n        a, b = b, (b + 1) % length(result)\n    end\n    return result\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict()) == ????)\nend\n\n\n",
        "answer": "undef"
    },
    {
        "id": 504,
        "code": "\nfunction f(values::Vector{Int64})::Vector{Int64} \n    sort!(values)\n    return values\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 1, 1, 1]) == ????)\nend\n\n\n",
        "answer": "[1, 1, 1, 1]"
    },
    {
        "id": 505,
        "code": "\nfunction f(string::String)::String \n    while !isempty(string)\n        if isletter(string[end])\n            return string\n        end\n        string = string[1:end-1]\n    end\n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"--4/0-209\") == ????)\nend\n\n\n",
        "answer": "(\"4\", \"0\", \"209\")"
    },
    {
        "id": 506,
        "code": "\nfunction f(n::Int64)::String \n    p = \"\"\n    if n % 2 == 1\n        p *= \"sn\"\n    else\n        return string(n * n)\n    end\n    \n    for x in 1:n\n        if x % 2 == 0\n            p *= \"to\"\n        else\n            p *= \"ts\"\n        end\n    end\n    \n    return p\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(1) == ????)\nend\n\n\n",
        "answer": "\"sn\""
    },
    {
        "id": 507,
        "code": "\n\nfunction f(text::String, search::String)::Int64 \n    result = lowercase(text)\n    search_lowercase = lowercase(search)\n    return isnothing(findfirst(search_lowercase, result)) ? -1 : first(findfirst(search_lowercase, result)) - 1\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"car hat\", \"car\") == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 508,
        "code": "\n\nfunction f(text::String, sep::String, maxsplit::Int64)::String \n    splitted = split(text, sep)\n    length_s = length(splitted)\n    new_splitted = splitted[1:div(length_s,2)]\n    reverse!(new_splitted)\n    new_splitted = vcat(new_splitted, splitted[div(length_s,2)+1:end])\n    return join(new_splitted, sep)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ertubwi\", \"p\", 5) == ????)\nend\n\n\n",
        "answer": "\"ertubiw\""
    },
    {
        "id": 509,
        "code": "\nfunction f(value::Int64, width::Int64)::String \n    if value >= 0\n        return string(value) |> x -> lpad(x, width, '0')\n    elseif value < 0\n        return '-' * string(-value) |> x -> lpad(x, width, '0')\n    else\n        return \"\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5, 1) == ????)\nend\n\n\n",
        "answer": "\"0\""
    },
    {
        "id": 510,
        "code": "\nfunction f(a::Dict{Int64, String}, b::Int64, c::String, d::String, e::Union{Int64, Float64})::Union{String, Int64} \n    key = d\n    if haskey(a, key)\n        num = pop!(a, key)\n    end\n    if b > 3\n        return join(c)\n    else\n        return num\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(7 => \"ii5p\", 1 => \"o3Jwus\", 3 => \"lot9L\", 2 => \"04g\", 9 => \"Wjf\", 8 => \"5b\", 0 => \"te6\", 5 => \"flLO\", 6 => \"jq\", 4 => \"vfa0tW\"), 4, \"Wy\", \"Wy\", 1.0) == ????)\nend\n\n\n",
        "answer": "\"Wy\""
    },
    {
        "id": 511,
        "code": "\n\nfunction f(fields::Tuple{String, String, String}, update_dict::Dict{String, String})::Dict{String, String} \n    di = Dict{String, String}(x => \"\" for x in fields)\n    di = merge(di, update_dict)\n    return di\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate((\"ct\", \"c\", \"ca\"), Dict(\"ca\" => \"cx\")) == ????)\nend\n\n\n",
        "answer": "{}"
    },
    {
        "id": 512,
        "code": "\nfunction f(s::String)::Bool \n    return length(s) == count(x -> x == '0' || x == '1', s)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"102\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 513,
        "code": "\nfunction f(array::Vector{Int64})::Vector{Int64} \n    while -1 in array\n        splice!(array, findlast(x -> x == -3, array))\n    end\n    while 0 in array\n        pop!(array)\n    end\n    while 1 in array\n        popfirst!(array)\n    end\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([0, 2]) == ????)\nend\n\n\n",
        "answer": "[0, 2]"
    },
    {
        "id": 514,
        "code": "\nusing Base\n\nfunction f(text::String)::String \n    words = split(text)\n    for item in words\n        text = replace(text, \"-$item\" => \" \")\n        text = replace(text, \"$item-\" => \" \")\n    end\n    return strip(text, '-')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"-stew---corn-and-beans-in soup-.-\") == ????)\nend\n\n\n",
        "answer": "\"stew corn and beans in soup\""
    },
    {
        "id": 515,
        "code": "\nfunction f(array::Vector{Int64})::Vector{Int64} \n    result = copy(array)\n    reverse!(result)\n    result .= [item * 2 for item in result]\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3, 4, 5]) == ????)\nend\n\n\n",
        "answer": "[6, 8, 10, 12, 14]"
    },
    {
        "id": 516,
        "code": "\nfunction f(strings::Vector{String}, substr::String)::Vector{String} \n    list = filter(s -> startswith(s, substr), strings)\n    return sort(list, by = x -> length(x))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"condor\", \"eyes\", \"gay\", \"isa\"], \"d\") == ????)\nend\n\n\n",
        "answer": "[\"condor\", \"eyes\", \"gay\", \"isa\"]"
    },
    {
        "id": 517,
        "code": "\nfunction f(text::String)::String \n    for i in reverse(1:length(text)-1)\n        if !isuppercase(text[i])\n            return text[1:i]\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"SzHjifnzog\") == ????)\nend\n\n\n",
        "answer": "\"szhjifnzog\""
    },
    {
        "id": 518,
        "code": "\nfunction f(text::String)::Bool \n    return !occursin(r\"^\\d+$\", text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"the speed is -36 miles per hour\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 519,
        "res": 0
    },
    {
        "id": 520,
        "code": "\nfunction f(album_sales::Vector{Int64})::Int64 \n    while length(album_sales) != 1\n        push!(album_sales, shift!(album_sales))\n    end\n    return album_sales[1]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([6]) == ????)\nend\n\n\n",
        "answer": "6"
    },
    {
        "id": 521,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    m = maximum(nums)\n    for i in 1:m\n        reverse!(nums)\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([43, 0, 4, 77, 5, 2, 0, 9, 77]) == ????)\nend\n\n\n",
        "answer": "[9, 77, 77, 43, 2, 77, 5, 0, 4, 0]"
    },
    {
        "id": 522,
        "code": "\n\nfunction f(numbers::Vector{Int64})::Vector{Float64} \n    floats = [n % 1 for n in numbers]\n    return 1 in floats ? floats : Float64[]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119]) == ????)\nend\n\n\n",
        "answer": "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0."
    },
    {
        "id": 523,
        "code": "\nfunction f(text::String)::String\n    result = IOBuffer()\n    for i in eachindex(text)\n        if isspace(text[i])\n            print(result, \"&nbsp;\")\n        else\n            print(result, text[i])\n        end\n    end\n    return String(take!(result))\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"   \") == ????)\nend\n\n\n",
        "answer": "\" \""
    },
    {
        "id": 524,
        "code": "\nfunction f(dict0::Dict{Int, Int})::Dict{Int, Int}\n    new = copy(dict0)\n    for i in 1:length(keys(new)) - 1\n        key_list = sort(collect(keys(new)))\n        dict0[key_list[i]] = i - 1\n    end\n    return dict0\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(2 => 5, 4 => 1, 3 => 5, 1 => 3, 5 => 1)) == ????)\nend\n\n\n",
        "answer": "{1, 2, 3, 4, 5}"
    },
    {
        "id": 525,
        "code": "\nfunction f(c::Dict{String, Int}, st::Int, ed::Int)::Tuple{String, String}\n    d = Dict{Int, String}()\n    a, b = 0, 0\n    for (x, y) in c\n        d[y] = x\n        if y == st\n            a = x\n        end\n        if y == ed\n            b = x\n        end\n    end\n    w = d[st]\n    return a > b ? (w, d[ed]) : (d[ed], w)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"TEXT\" => 7, \"CODE\" => 3), 7, 3) == ????)\nend\n\n\n",
        "answer": "(\"TEXT\", \"CODE\")"
    },
    {
        "id": 526,
        "res": 0
    },
    {
        "id": 527,
        "code": "\nfunction f(text::String, value::String)::String \n    return lpad(text, length(value), '?')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"!?\", \"\") == ????)\nend\n\n\n",
        "answer": "\"?\""
    },
    {
        "id": 528,
        "code": "\n\nfunction f(s::String)::Int64\n    b = \"\"\n    c = \"\"\n    for i in s\n        c = string(c, i)\n        if occursin(c, s)\n            return findlast(c, s)[1] - 1\n        end\n    end\n    return 0\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"papeluchis\") == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 529,
        "code": "\nfunction f(array::Vector{Int64})::Vector{Int64} \n    prev = array[1]\n    newArray = copy(array)\n    for i in 2:length(array)\n        if prev != array[i]\n            newArray[i] = array[i]\n        else\n            deleteat!(newArray, i)\n        end\n        prev = array[i]\n    end\n    return newArray\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3]) == ????)\nend\n\n\n",
        "answer": "[1, 2, 3]"
    },
    {
        "id": 530,
        "res": 0
    },
    {
        "id": 531,
        "code": "\n\nfunction f(text::String, x::String)::String \n    if startswith(text, x) == false\n        return f(text[2:end], x)\n    else\n        return text\n    end\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Ibaskdjgblw asdl \", \"djgblw\") == ????)\nend\n\n\n",
        "answer": "\"Ibaskd\""
    },
    {
        "id": 532,
        "code": "\nfunction f(n::Int64, array::Vector{Int64})::Vector{Vector{Int64}} \n    final = [copy(array)]\n    for i in 1:n\n        arr = copy(array)\n        push!(arr, final[end]...)\n        push!(final, arr)\n    end\n    return final\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(1, [1, 2, 3]) == ????)\nend\n\n\n",
        "answer": "[[1, 2, 3], [1, 2, 3], [1, 2, 3]]"
    },
    {
        "id": 533,
        "code": "\nfunction f(query::String, base::Dict{String, Int64})::Int64\n    net_sum = 0\n    for (key, val) in base\n        if first(key) == query && length(key) == 3\n            net_sum -= val\n        elseif last(key) == query && length(key) == 3\n            net_sum += val\n        end\n    end\n    return net_sum\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a\", Dict()) == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 534,
        "code": "\n\nfunction f(sequence::String, value::String)::String\n    i = max(findfirst(value, sequence).start - div(length(sequence), 3), 0)\n    result = \"\"\n    for j in enumerate(sequence[i:end])\n        if j[2] == '+'\n            result *= value\n        else\n            result *= sequence[i + j[1] - 1]\n        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"hosu\", \"o\") == ????)\nend\n\n\n",
        "answer": "\"hosu\""
    },
    {
        "id": 535,
        "code": "\nfunction f(n::Int64)::Bool \n    for i in string(n)\n        if !(i in ['0','1','2']) && !(i in ['5','6','7','8','9'])\n            return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(1341240312) == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 536,
        "code": "\nfunction f(cat::String)::Int64 \n    digits = 0\n    for char in cat\n        if isdigit(char)\n            digits += 1\n        end\n    end\n    return digits\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"C24Bxxx982ab\") == ????)\nend\n\n\n",
        "answer": "3"
    },
    {
        "id": 537,
        "code": "\nfunction f(text::String, value::String)::String\n    new_text = collect(text) |> x -> map(string, x)  # Convert each Char to String\n    len = 0  # Initialize len to ensure it is defined\n    try\n        push!(new_text, value)\n        len = length(new_text)\n    catch e\n        if isa(e, BoundsError)\n            len = 0\n        else\n            rethrow(e)\n        end\n    end\n    return \"[\" * string(len) * \"]\"\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abv\", \"a\") == ????)\nend\n\n\n",
        "answer": "\"[\""
    },
    {
        "id": 538,
        "res": 0
    },
    {
        "id": 539,
        "code": "\n\nfunction f(array::Vector{String})::Vector{String} \n    c = array\n    array_copy = array\n\n    while true\n        push!(c, \"_\")\n        if c == array_copy\n            array_copy[findfirst(x -> x == \"_\", c)] = \"\"\n            break\n        end\n    end\n    return array_copy\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{String}([])) == ????)\nend\n\n\n",
        "answer": "[]"
    },
    {
        "id": 540,
        "code": "\nfunction f(a::Vector{Int64})::Vector{Int64} \n    b = copy(a)\n    for k in 1:2:length(a)-1\n        insert!(b, k+1, b[k])\n    end\n    push!(b, b[1])\n    return b\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([5, 5, 5, 6, 4, 9]) == ????)\nend\n\n\n",
        "answer": "[5, 5, 5, 6, 4, 9, 9]"
    },
    {
        "id": 541,
        "code": "\nfunction f(text::String)::Bool \n    return isspace.(collect(text)) |> all\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\" \t  　\") == ????)\nend\n\n\n",
        "answer": "True"
    },
    {
        "id": 542,
        "code": "\nfunction f(test::String, sep::String, maxsplit::Int64)::Vector{String} \n    try\n        return rsplit(test, sep, limit = maxsplit)\n    catch\n        return rsplit(test)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ab cd\", \"x\", 2) == ????)\nend\n\n\n",
        "answer": "[\"ab\", \"cd\"]"
    },
    {
        "id": 543,
        "code": "\nfunction f(item::String)::String \n    modified = replace(item, \". \" => \" , \")\n    modified = replace(modified, \"&#33; \" => \"! \")\n    modified = replace(modified, \". \" => \"? \")\n    modified = replace(modified, \". \" => \". \")\n    return uppercase(modified[1]) * modified[2:end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\".,,,,,. منبت\") == ????)\nend\n\n\n",
        "answer": "\"MICHI VAY, MAYBE\""
    },
    {
        "id": 544,
        "code": "\nfunction f(text::String)::String \n    a = split(text, '\\n')\n    b = []\n    for i in 1:length(a)\n        c = replace(a[i], '\\t' => \"    \")\n        push!(b, c)\n    end\n    return join(b, '\\n')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\t\t\ttab tab tabulates\") == ????)\nend\n\n\n",
        "answer": "\"tab\\ttab\\ttab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\tab\\t\\"
    },
    {
        "id": 545,
        "code": "\nfunction f(array::Vector{Int64})::Vector{Int64} \n    result = []\n    index = 1\n    while index <= length(array)\n        push!(result, pop!(array))\n        index += 2\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([8, 8, -4, -9, 2, 8, -1, 8]) == ????)\nend\n\n\n",
        "answer": "[-9, -4, 2, 8, -1, 8, 8, 8]"
    },
    {
        "id": 546,
        "code": "\nfunction f(text::String, speaker::String)::String \n    while startswith(text, speaker)\n        text = text[length(speaker)+1:end]\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"[CHARRUNNERS]Do you know who the other was? [NEGMENDS]\", \"[CHARRUNNERS]\") == ????)\nend\n\n\n",
        "answer": "\"yes\""
    },
    {
        "id": 547,
        "code": "\n\nfunction f(letters::String)::String \n    letters_only = strip(letters, [' ', '.', ',', '!', '?', '*'])\n    spl = split(letters_only, \" \")\n    return join(spl, \"....\")\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"h,e,l,l,o,wo,r,ld,\") == ????)\nend\n\n\n",
        "answer": "\"hello world\""
    },
    {
        "id": 548,
        "code": "\nfunction f(text::String, suffix::String)::String \n    if length(suffix) > 0 && length(text) > 0 && endswith(text, suffix)\n        return chop(text, length(suffix))\n    else\n        return text\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"spider\", \"ed\") == ????)\nend\n\n\n",
        "answer": "\"spider\""
    },
    {
        "id": 549,
        "code": "\nfunction f(matrix::Vector{Vector{Int64}})::Vector{Vector{Int64}} \n    reverse!(matrix)\n    result = Vector{Vector{Int64}}()\n    for primary in matrix\n        sort!(primary, rev=true)\n        push!(result, primary)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([[1, 1, 1, 1]]) == ????)\nend\n\n\n",
        "answer": "[[1, 1, 1, 1]]"
    },
    {
        "id": 550,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    for i in 1:length(nums)\n        insert!(nums, i, nums[i]^2)\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 4]) == ????)\nend\n\n\n",
        "answer": "[1, 4, 16]"
    },
    {
        "id": 551,
        "res": 0
    },
    {
        "id": 552,
        "res": 0
    },
    {
        "id": 553,
        "code": "\nfunction f(text::String, count::Int64)::String \n    for i in 1:count\n        text = reverse(text)\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"439m2670hlsw\", 3) == ????)\nend\n\n\n",
        "answer": "\"sihtlwodromh\""
    },
    {
        "id": 554,
        "code": "\nfunction f(arr::Vector{Int64})::Vector{Int64} \n    return reverse(arr)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2, 0, 1, 9999, 3, -5]) == ????)\nend\n\n\n",
        "answer": "[9999, 3, 2, 1, 0, -5]"
    },
    {
        "id": 555,
        "code": "\nfunction f(text::String, tabstop::Int64)::String \n    text = replace(text, '\\n' => \"_____\")\n    text = replace(text, '\\t' => \" \" ^ tabstop)\n    text = replace(text, \"_____\" => '\\n')\n    \n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"odes\tcode\twell\", 2) == ????)\nend\n\n\n",
        "answer": "\"odes\\ncode\\nwell\""
    },
    {
        "id": 556,
        "res": 0
    },
    {
        "id": 557,
        "code": "\n\nfunction f(s::String)::String \n    d = rsplit(s, \"ar\"; limit=2)\n    return join((d[1], \"ar\", d[2]), \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"xxxarmmarxx\") == ????)\nend\n\n\n",
        "answer": "\"arm mar\""
    },
    {
        "id": 558,
        "code": "\nfunction f(nums::Vector{Int64}, mos::Vector{Int64})::Bool \n    for num in mos\n        index_num = findfirst(isequal(num), nums)\n        splice!(nums, index_num)\n    end\n    sort!(nums)\n    for num in mos\n        push!(nums, num)\n    end\n    for i in 1:length(nums)-1\n        if nums[i] > nums[i+1]\n            return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([3, 1, 2, 1, 4, 1], [1]) == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 559,
        "code": "\nfunction f(n::String)::String \n    n = string(n)\n    return n[1] * \".\" * replace(n[2:end], '-' => '_')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"first-second-third\") == ????)\nend\n\n\n",
        "answer": "\"ssttt\""
    },
    {
        "id": 560,
        "code": "\n\nfunction f(text::String)::Int64 \n    x = 0\n    if all(islowercase, text)\n        for c in text\n            if parse(Int, c) in 0:89\n                x += 1\n            end\n        end\n    end\n    return x\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"591237865\") == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 561,
        "code": "\n\nfunction f(text::String, digit::String)::Int64 \n    count_digit = count(i -> string(i) == digit, text)\n    return parse(Int64, digit) * count_digit\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"7Ljnw4Lj\", \"7\") == ????)\nend\n\n\n",
        "answer": "7"
    },
    {
        "id": 562,
        "code": "\nfunction f(text::String)::Bool \n    return uppercase(text) == text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"VTBAEPJSLGAHINS\") == ????)\nend\n\n\n",
        "answer": "True"
    },
    {
        "id": 563,
        "code": "\nfunction f(text1::String, text2::String)::Int64 \n    nums = []\n    for i in 1:length(text2)\n        push!(nums, count(ch -> ch == text2[i], text1))\n    end\n    return sum(nums)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"jivespdcxc\", \"sx\") == ????)\nend\n\n\n",
        "answer": "7"
    },
    {
        "id": 564,
        "res": 0
    },
    {
        "id": 565,
        "code": "\nfunction f(text::String)::Int64\n    return maximum(findfirst(ch, text) !== nothing ? first(findfirst(ch, text)) - 1 : -1 for ch in \"aeiou\")\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"qsqgijwmmhbchoj\") == ????)\nend\n\n\n",
        "answer": "3"
    },
    {
        "id": 566,
        "code": "\n\nfunction f(string::String, code::String)::String\n    try\n        t = code(string, code)\n        if t.endswith(b'\\n')\n            t = t[1:end-1]\n        end\n        t = String(t)\n        return t\n    catch\n        return string\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"towaru\", \"UTF-8\") == ????)\nend\n\n\n",
        "answer": "\"towaru\""
    },
    {
        "id": 567,
        "code": "\nfunction f(s::String, n::Int64)::Vector{String} \n    ls = split(s, \" \")\n    out = String[]\n    while length(ls) >= n\n        append!(out, ls[end-n+1:end])\n        ls = ls[1:end-n]\n    end\n    \n    return vcat(ls, join(out, \"_\"))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"one two three four five\", 3) == ????)\nend\n\n\n",
        "answer": "[\"one_two_three\", \"four_five\"]"
    },
    {
        "id": 568,
        "res": 0
    },
    {
        "id": 569,
        "code": "\nfunction f(txt::String)::Int64 \n    coincidences = Dict{Char, Int}()\n    for c in txt\n        if haskey(coincidences, c)\n            coincidences[c] += 1\n        else\n            coincidences[c] = 1\n        end\n    end\n    return sum(values(coincidences))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"11 1 1\") == ????)\nend\n\n\n",
        "answer": "3"
    },
    {
        "id": 570,
        "code": "\nfunction f(array::Vector{Int}, index::Int, value::Int)::Vector{Int}\n    new_array = [index + 1; array...]  # Insert index + 1 at the beginning\n    if value >= 1\n        new_array = [new_array[1:index]; value; new_array[index+1:end]]  # Insert value at index\n    end\n    return new_array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2], 0, 2) == ????)\nend\n\n\n",
        "answer": "[3]"
    },
    {
        "id": 571,
        "res": 0
    },
    {
        "id": 572,
        "res": 0
    },
    {
        "id": 573,
        "code": "\nfunction f(string::String, prefix::String)::String \n    if startswith(string, prefix)\n        return replace(string, prefix => \"\", count=1)\n    end\n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Vipra\", \"via\") == ????)\nend\n\n\n",
        "answer": "\"vipr\""
    },
    {
        "id": 574,
        "code": "\nfunction f(simpons::Vector{String})::String\n    while !isempty(simpons)\n        pop = pop!(simpons)\n        if pop == titlecase(pop)\n            return pop\n        end\n    end\n    return pop\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"George\", \"Michael\", \"George\", \"Costanza\"]) == ????)\nend\n\n\n",
        "answer": "\"George\""
    },
    {
        "id": 575,
        "code": "\nfunction f(nums::Vector{Int64}, val::Int64)::Int64 \n    new_list = []\n    for i in nums\n        append!(new_list, fill(i, val))\n    end\n    return sum(new_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([10, 4], 3) == ????)\nend\n\n\n",
        "answer": "18"
    },
    {
        "id": 576,
        "res": 0
    },
    {
        "id": 577,
        "code": "\n\nfunction f(items::Vector{Tuple{Int64, String}})::Vector{Dict{Int64, String}}\n    result = []\n    for number in items\n        d = Dict{Int64, String}(items)\n        pop!(d)\n        push!(result, d)\n        items = collect(d)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([(1, \"pos\")]) == ????)\nend\n\n\n",
        "answer": "[{1 => \"pos\"}, {2 => \"pos\"}, {3 => \"pos\"}, {4 => \"pos\"}, {5 => \"pos\"}]"
    },
    {
        "id": 578,
        "code": "\nfunction f(obj::Dict{String, Int})\n    for (k, v) in obj\n        if v >= 0\n            obj[k] = -v\n        end\n    end\n    return obj\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"R\" => 0, \"T\" => 3, \"F\" => -6, \"K\" => 0)) == ????)\nend\n\n\n",
        "answer": "{0, -6, 3, 0}"
    },
    {
        "id": 579,
        "code": "\n\nfunction f(text::String)::String \n    if titlecase(text) == text\n        if length(text) > 1 && lowercase(text) != text\n            return lowercase(text[1]) * text[2:end]\n        end\n    elseif isletter(text)\n        return uppercase(text[1]) * text[2:end]\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\") == ????)\nend\n\n\n",
        "answer": "\"\""
    },
    {
        "id": 580,
        "code": "\n\nfunction f(text::String, char::String)::Vector{Int64} \n    new_text = text\n    a = Int64[]\n    while contains(new_text, char)\n        push!(a, findfirst(x -> x == char[1], new_text) - 1)\n        new_text = replace(new_text, char => \"\" ,count=1)\n    end\n    return a\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"rvr\", \"r\") == ????)\nend\n\n\n",
        "answer": "[0, 1, 2, 3, 4]"
    },
    {
        "id": 581,
        "res": 0
    },
    {
        "id": 582,
        "code": "\nfunction f(k::Int64, j::Int64)::Vector{Int64} \n    arr = Int64[]\n    for i in 1:k\n        push!(arr, j)\n    end\n    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(7, 5) == ????)\nend\n\n\n",
        "answer": "[5, 5, 5, 5, 5, 5, 5]"
    },
    {
        "id": 583,
        "code": "\n\nfunction f(text::String, ch::String)::String \n    result = String[]\n    lines = split(text, '\\n')\n    for line in lines\n        if length(line) > 0 && line[1] == ch[1]\n            push!(result, lowercase(line))\n        else\n            push!(result, uppercase(line))\n        end\n    end\n    return join(result, '\\n')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"t\nza\na\", \"t\") == ????)\nend\n\n\n",
        "answer": "\"T\\nZ\\nA\\nT\""
    },
    {
        "id": 584,
        "code": "\n\nfunction f(txt::String)::String \n    return txt\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"5123807309875480094949830\") == ????)\nend\n\n\n",
        "answer": "\"123807309875480094949830\""
    },
    {
        "id": 585,
        "code": "\nfunction f(text::String)::String\n    first_char = text[1]\n    count_first_char = count(c -> c == first_char, text)\n    ls = collect(text)\n    for _ in 1:count_first_char\n        deleteat!(ls, 1)\n    end\n    return join(ls)\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\";,,,?\") == ????)\nend\n\n\n",
        "answer": "\"?\""
    },
    {
        "id": 586,
        "code": "\n\nfunction f(text::String, char::String)::Int64\n    return findlast(char, text)[1] - 1\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"breakfast\", \"e\") == ????)\nend\n\n\n",
        "answer": "3"
    },
    {
        "id": 587,
        "code": "\n\nfunction f(nums::Vector{Int64}, fill::String)::Dict{Int64, String}\n    ans = Dict(i => fill for i in nums)\n    return ans\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([0, 1, 1, 2], \"abcca\") == ????)\nend\n\n\n",
        "answer": "{0 => \"a\", 1 => \"b\", 2 => \"c\", 3 => \"a\"}"
    },
    {
        "id": 588,
        "code": "\n\nfunction f(items::Vector{String}, target::String)::Int64\n    if target in items\n        return findfirst(isequal(target), items) - 1\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"1\", \"+\", \"-\", \"**\", \"//\", \"*\", \"+\"], \"**\") == ????)\nend\n\n\n",
        "answer": "3"
    },
    {
        "id": 589,
        "code": "\nfunction f(num::Vector{Int64})::Vector{Int64} \n    push!(num, num[end])\n    return num\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-70, 20, 9, 1]) == ????)\nend\n\n\n",
        "answer": "[70, 20, 9, 1, -70]"
    },
    {
        "id": 590,
        "code": "\nfunction f(text::String)::String\n    for i in 10:-1:1\n        while startswith(text, string(i))\n            text = text[length(string(i))+1:end]\n        end\n    end\n    return text\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"25000   \\$\") == ????)\nend\n\n\n",
        "answer": "\"50000\""
    },
    {
        "id": 591,
        "res": 0
    },
    {
        "id": 592,
        "code": "\nfunction f(numbers::Vector{Int64})::Vector{Int64} \n    new_numbers = Int64[]\n    for i in reverse(1:length(numbers))\n        push!(new_numbers, numbers[i])\n    end\n    return new_numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([11, 3]) == ????)\nend\n\n\n",
        "answer": "[11, 3]"
    },
    {
        "id": 593,
        "code": "\nfunction f(nums::Vector{Int64}, n::Int64)::Vector{Int64} \n    pos = length(nums)\n    for i in -length(nums): -1\n        insert!(nums, pos, nums[i])\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Int64}([]), 14) == ????)\nend\n\n\n",
        "answer": "[]"
    },
    {
        "id": 594,
        "code": "\nfunction f(file::String)::Int64 \n    return findfirst(isequal('\\n'), file) - 1\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"n wez szize lnson tilebi it 504n.\n\") == ????)\nend\n\n\n",
        "answer": "504"
    },
    {
        "id": 595,
        "code": "\nfunction f(text::String, prefix::String)::String \n    if startswith(text, prefix)\n        text = replace(text, prefix => \"\")\n    end\n    text = uppercase(text[1]) * lowercase(text[2:end])\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"qdhstudentamxupuihbuztn\", \"jdm\") == ????)\nend\n\n\n",
        "answer": "\"JDHSTUHN\""
    },
    {
        "id": 596,
        "code": "\nfunction f(txt::Vector{String}, alpha::String)::Vector{String} \n    txt = sort(txt)\n    if findfirst(x -> x == alpha, txt) % 2 != 0\n        return reverse(txt)\n    end\n    return txt\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"8\", \"9\", \"7\", \"4\", \"3\", \"2\"], \"9\") == ????)\nend\n\n\n",
        "answer": "[\"9\", \"8\", \"7\", \"4\", \"3\", \"2\"]"
    },
    {
        "id": 597,
        "code": "\nfunction f(s::String)::String \n    return uppercase(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Jaafodsfa SOdofj AoaFjIs  JAFasIdfSa1\") == ????)\nend\n\n\n",
        "answer": "\"JAFASIDFSA1\""
    },
    {
        "id": 598,
        "code": "\nfunction f(text::String, n::Int64)::String \n    length_text = length(text)\n    return text[length_text*(n%4)+1:length_text]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abc\", 1) == ????)\nend\n\n\n",
        "answer": "\"abc\""
    },
    {
        "id": 599,
        "res": 0
    },
    {
        "id": 600,
        "code": "\nfunction f(array::Vector{Int64})::Vector{String} \n    just_ns = map(num -> \"n\"^num, array)\n    final_output = String[]\n    for wipe in just_ns\n        push!(final_output, wipe)\n    end\n    return final_output\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Int64}([])) == ????)\nend\n\n\n",
        "answer": "[]"
    },
    {
        "id": 601,
        "code": "\n\nfunction f(text::String)::String\n    t = 5\n    tab = []\n    vowels = ['a', 'e', 'i', 'o', 'u', 'y']\n    for i in text\n        if lowercase(i) in vowels\n            push!(tab, uppercase(i)^t)\n        else\n            push!(tab, i^t)\n        end\n    end\n    return join(tab, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"csharp\") == ????)\nend\n\n\n",
        "answer": "\"C# S# A#\""
    },
    {
        "id": 602,
        "code": "\nfunction f(nums::Vector{Int64}, target::Int64)::Int64 \n    cnt = count(x -> x == target, nums)\n    return cnt * 2\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 1], 1) == ????)\nend\n\n\n",
        "answer": "2"
    },
    {
        "id": 603,
        "code": "\nfunction f(sentences::String)::String \n    if all(tryparse(Float64, sentence) !== nothing for sentence in split(sentences, '.'))\n        return \"oscillating\"\n    else\n        return \"not oscillating\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"not numbers\") == ????)\nend\n\n\n",
        "answer": "\"not oscillating\""
    },
    {
        "id": 604,
        "code": "\nfunction f(text::String, start::String)::Bool \n    return start == text[1:length(start)]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Hello world\", \"Hello\") == ????)\nend\n\n\n",
        "answer": "True"
    },
    {
        "id": 605,
        "code": "\nfunction f(nums::Vector{Int64})::String \n    empty!(nums)\n    return \"quack\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2, 5, 1, 7, 9, 3]) == ????)\nend\n\n\n",
        "answer": "\"quack\""
    },
    {
        "id": 606,
        "code": "\n\nfunction f(value::String)::String \n    ls = collect(value)\n    push!(ls,'N','H','I','B')\n    return join(ls,\"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ruam\") == ????)\nend\n\n\n",
        "answer": "\"ruam\""
    },
    {
        "id": 607,
        "code": "\nfunction f(text::String)::Bool \n    for i in ['.', '!', '?']\n        if endswith(text, i)\n            return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\". C.\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 608,
        "code": "\n\nfunction f(aDict::Dict{Int64, Int64})::Dict{Int64, Int64}\n    # transpose the keys and values into a new dict\n    return Dict([v for v in aDict])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(1 => 1, 2 => 2, 3 => 3)) == ????)\nend\n\n\n",
        "answer": "{1, 2, 3}"
    },
    {
        "id": 609,
        "code": "\nfunction f(array::Dict{Int64, Int64}, elem::Int64)::Dict{Int64, Int64}\n    result = copy(array)\n    while !isempty(result)\n        key, value = first(result)\n        delete!(result, key)\n        if elem == key || elem == value\n            result = merge(result, array)\n        end\n    end\n    return result\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(), 1) == ????)\nend\n\n\n",
        "answer": "{}"
    },
    {
        "id": 610,
        "res": 0
    },
    {
        "id": 611,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    reverse!(nums)\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-6, -2, 1, -3, 0, 1]) == ????)\nend\n\n\n",
        "answer": "(-6, -2, 1, -3, 0, 1)"
    },
    {
        "id": 612,
        "code": "\nfunction f(d::Dict{String, Int64})::Dict{String, Int64}\n    return Dict{String, Int64}(collect(d))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"a\" => 42, \"b\" => 1337, \"c\" => -1, \"d\" => 5)) == ????)\nend\n\n\n",
        "answer": "{\"a\" => 42, \"b\" => 1337, \"c\" => -1, \"d\" => 5}"
    },
    {
        "id": 613,
        "res": 0
    },
    {
        "id": 614,
        "code": "\n\nfunction f(text::String, substr::String, occ::Int64)::Int64 \n    n = 0\n    while true\n        i = findlast(substr, text)\n        if i === nothing\n            break\n        elseif n == occ\n            return i.start - 1\n        else\n            n += 1\n            text = text[1:i.start-1]\n        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"zjegiymjc\", \"j\", 2) == ????)\nend\n\n\n",
        "answer": "-1"
    },
    {
        "id": 615,
        "code": "\nfunction f(in_list::Vector{Int64}, num::Int64)::Int64 \n    push!(in_list, num)\n    return findfirst(x -> x == maximum(in_list[1:end-1]), in_list[1:end-1]) - 1\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-1, 12, -6, -2], -1) == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 616,
        "res": 0
    },
    {
        "id": 617,
        "code": "\nfunction f(text::String)::String \n    if isascii(text)\n        return \"ascii\"\n    else\n        return \"non ascii\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"<<<<\") == ????)\nend\n\n\n",
        "answer": "\"non ascii\""
    },
    {
        "id": 618,
        "code": "\nfunction f(match::String, fill::String, n::Int64)::String\n    return fill[1:min(n, end)] * match\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"9\", \"8\", 2) == ????)\nend\n\n\n",
        "answer": "\"88888888\""
    },
    {
        "id": 619,
        "code": "\nfunction f(title::String)::String \n    return lowercase(title)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"   Rock   Paper   SCISSORS  \") == ????)\nend\n\n\n",
        "answer": "\"rockpaperscissor\""
    },
    {
        "id": 620,
        "code": "\nfunction f(x::String)::String \n    return join(reverse(collect(x)), \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"lert dna ndqmxohi3\") == ????)\nend\n\n\n",
        "answer": "\"gnadnu eht ni dlrow ym xsi qoq eht\""
    },
    {
        "id": 621,
        "res": 0
    },
    {
        "id": 622,
        "res": 0
    },
    {
        "id": 623,
        "code": "\nfunction f(text::String, rules::Vector{String})::String \n    for rule in rules\n        if rule == \"@\"\n            text = reverse(text)\n        elseif rule == \"~\"\n            text = uppercase(text)\n        elseif !isempty(text) && text[end] == first(rule)\n            text = text[1:end-1]\n        end\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"hi~!\", [\"~\", \"`\", \"!\", \"&\"]) == ????)\nend\n\n\n",
        "answer": "\"!H\""
    },
    {
        "id": 624,
        "code": "\n\nfunction f(text::String, char::String)::String \n    char_index = findfirst(char, text)\n    if isnothing(char_index)\n        char_index = 0\n    end\n    result = vcat(collect(text[1:char_index-1]))\n    result = vcat(result, collect(char), collect(text[char_index + length(char):end]))\n    return join(result)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"llomnrpc\", \"x\") == ????)\nend\n\n\n",
        "answer": "\"lxo\""
    },
    {
        "id": 625,
        "code": "\nfunction f(text::String)::Int64 \n    count = 0\n    for i in text\n        if i in ['.', '?', '!', ',']\n            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"bwiajegrwjd??djoda,?\") == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 626,
        "code": "\n\nfunction f(line::String, equalityMap::Vector{Tuple{String, String}})::String \n    rs = Dict(equalityMap)\n    return mapreduce(c -> get(rs, string(c), string(c)), *, line)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abab\", [(\"a\", \"b\"), (\"b\", \"a\")]) == ????)\nend\n\n\n",
        "answer": "\"abab\""
    },
    {
        "id": 627,
        "code": "\nfunction f(parts::Vector{Tuple{String, Int64}})::Vector{Int64} \n    return collect(values(Dict(parts)))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([(\"u\", 1), (\"s\", 7), (\"u\", -5)]) == ????)\nend\n\n\n",
        "answer": "[1, 7, -5]"
    },
    {
        "id": 628,
        "code": "\nfunction f(nums::Vector{Int64}, delete::Int64)::Vector{Int64} \n    filter!(x -> x != delete, nums)\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([4, 5, 3, 6, 1], 5) == ????)\nend\n\n\n",
        "answer": "[4, 3, 6, 1]"
    },
    {
        "id": 629,
        "code": "\nfunction f(text::String, dng::String)::String \n    if !occursin(dng, text)\n        return text\n    end\n    \n    if endswith(text, dng)\n        return text[1:end-length(dng)]\n    end\n    \n    return text[1:end-1] * f(text[1:end-2], dng)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"catNG\", \"NG\") == ????)\nend\n\n\n",
        "answer": "\"cat\""
    },
    {
        "id": 630,
        "code": "\nfunction f(original::Dict{Int, Int}, string::Dict{Int, Int})::Dict{Int, Int}\n    temp = deepcopy(original)\n    for (a, b) in string\n        temp[b] = a\n    end\n    return temp\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(1 => -9, 0 => -7), Dict(1 => 2, 0 => 3)) == ????)\nend\n\n\n",
        "answer": "{1, 0}"
    },
    {
        "id": 631,
        "res": 0
    },
    {
        "id": 632,
        "code": "\nfunction f(lst::Vector{Int64})::Vector{Int64} \n    for i in reverse(1:length(lst)-1)\n        for j in 1:i\n            if lst[j] > lst[j+1]\n                lst[j], lst[j+1] = lst[j+1], lst[j]\n            end\n        end\n    end\n    return sort(lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([63, 0, 1, 5, 9, 87, 0, 7, 25, 4]) == ????)\nend\n\n\n",
        "answer": "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
    },
    {
        "id": 633,
        "code": "\n\nfunction f(array::Vector{Int64}, elem::Int64)::Int64\n    reverse!(array)\n    found = findfirst(x -> x == elem, array)\n    reverse!(array)\n    return found - 1\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([5, -3, 3, 2], 2) == ????)\nend\n\n\n",
        "answer": "3"
    },
    {
        "id": 634,
        "code": "\nfunction f(input_string::String)::String \n    table = Dict('a'=>'i', 'i'=>'o', 'o'=>'u', 'e'=>'a')\n    while occursin('a', input_string) || occursin('A', input_string)\n        input_string = replace(input_string, table)\n    end\n    return input_string\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"biec\") == ????)\nend\n\n\n",
        "answer": "\"iou\""
    },
    {
        "id": 635,
        "code": "\n\nfunction f(text::String)::Bool \n    valid_chars = ['-', '_', '+', '.', '/', ' ']\n    text = uppercase(text)\n    for char in text\n        if !isletter(char) && char ∉ valid_chars\n            return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 636,
        "code": "\nfunction f(d::Dict{Int64, String})::Dict{Int64, String}\n    r = Dict{Int64, String}()\n    while !isempty(d)\n        r = merge(r, d)\n        delete!(d, maximum(keys(d)))\n    end\n    return r\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(3 => \"A3\", 1 => \"A1\", 2 => \"A2\")) == ????)\nend\n\n\n",
        "answer": "{3 => \"A3\", 1 => \"A1\", 2 => \"A2\"}"
    },
    {
        "id": 637,
        "code": "\nfunction f(text::String)::String \n    words = split(text, ' ')\n    for t in words\n        if !all(isnumeric, t)\n            return \"no\"\n        end\n    end\n    return \"yes\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"03625163633 d\") == ????)\nend\n\n\n",
        "answer": "\"yes\""
    },
    {
        "id": 638,
        "code": "\nfunction f(s::String, suffix::String)::String \n    if suffix == \"\"\n        return s\n    end\n    \n    while endswith(s, suffix)\n        s = s[1:end-length(suffix)]\n    end\n    \n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ababa\", \"ab\") == ????)\nend\n\n\n",
        "answer": "\"ababa\""
    },
    {
        "id": 639,
        "code": "\nfunction f(perc::String, full::String)::String \n    reply = \"\"\n    i = 1\n    while i <= min(length(perc), length(full)) && perc[i] == full[i]\n        if perc[i] == full[i]\n            reply *= \"yes \"\n        else\n            reply *= \"no \"\n        end\n        i += 1\n    end\n    return reply\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"xabxfiwoexahxaxbxs\", \"xbabcabccb\") == ????)\nend\n\n\n",
        "answer": "\"yes yes yes no no yes yes yes no no no yes yes yes no no no\""
    },
    {
        "id": 640,
        "code": "\nfunction f(text::String)::Int64 \n    a = 0\n    if text[1] ∈ text[2:end]\n        a += 1\n    end\n    for i in 1:length(text)-1\n        if text[i] ∈ text[i+1:end]\n            a += 1\n        end\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"3eeeeeeoopppppppw14film3oee3\") == ????)\nend\n\n\n",
        "answer": "3"
    },
    {
        "id": 641,
        "code": "\nfunction f(number::String)::Bool \n    return all(isdigit, number)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"dummy33;d\") == ????)\nend\n\n\n",
        "answer": "True"
    },
    {
        "id": 642,
        "code": "\nfunction f(text::String)::String \n    i = 1\n    while i <= length(text) && isspace(text[i])\n        i += 1\n    end\n    if i > length(text)\n        return \"space\"\n    else\n        return \"no\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"     \") == ????)\nend\n\n\n",
        "answer": "\"space\""
    },
    {
        "id": 643,
        "code": "\nfunction f(text::String, suffix::String)::String \n    if endswith(text, suffix)\n        text = text[1:end-1] * uppercase(text[end])\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"damdrodm\", \"m\") == ????)\nend\n\n\n",
        "answer": "\"damdrodm\""
    },
    {
        "id": 644,
        "code": "\nfunction f(nums::Vector{Int64}, pos::Int64)::Vector{Int64} \n    s = 1:length(nums)\n    if pos % 2 != 0\n        s = 1:length(nums) - 1\n    end\n    reverse!(view(nums, s))\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([6, 1], 3) == ????)\nend\n\n\n",
        "answer": "(6, 1, 3)"
    },
    {
        "id": 645,
        "code": "\nfunction f(nums::Vector{Int64}, target::Int64)::Int64 \n    if count(x -> x == 0, nums) > 0\n        return 0\n    elseif count(x -> x == target, nums) < 3\n        return 1\n    else\n        return findfirst(x -> x == target, nums)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 1, 1, 2], 3) == ????)\nend\n\n\n",
        "answer": "1"
    },
    {
        "id": 646,
        "code": "\nfunction f(text::String, count::Int64)::String \n    for i in 1:count\n        text = reverse(text)\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"aBc, ,SzY\", 2) == ????)\nend\n\n\n",
        "answer": "\"sycS\""
    },
    {
        "id": 647,
        "code": "\nfunction f(text::String, chunks::Int64)::Vector{String} \n    return split(text, '\\n', limit=chunks, keepempty=false)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"/alcm@ an)t//eprw)/e!/d\nujv\", 0) == ????)\nend\n\n\n",
        "answer": "[\"alcm\", \"an\", \"t\", \"eprw\", \"e\", \"d\"]"
    },
    {
        "id": 648,
        "code": "\nfunction f(list1::Vector{Int64}, list2::Vector{Int64})::Union{Int64, String} \n    l = copy(list1)\n    while length(l) > 0\n        if l[end] in list2\n            pop!(l)\n        else\n            return l[end]\n        end\n    end\n    return \"missing\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([0, 4, 5, 6], [13, 23, -5, 0]) == ????)\nend\n\n\n",
        "answer": "missing"
    },
    {
        "id": 649,
        "code": "\nfunction f(text::String, tabsize::Int64)::String \n    return join([replace(t, \"\\t\" => \" \" ^ tabsize) for t in split(text, \"\\n\")], \"\\n\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\tf9\n\tldf9\n\tadf9!\n\tf9?\", 1) == ????)\nend\n\n\n",
        "answer": "\"f9\\n\\t\\f9\\n\\t\\t\\f9\\n\\t\\t\\f9\\n\\t\\t\\t\\f9\\n\\t\\t\\t\\t\\f9\\n\\t\\t\\t\\t\\t\\f9\\n\\t\\t\\t\\t\\t\\t\\f9\\n\\t\\t\\t\\t\\t\\t\\t\\f9\\n\\t\\t\\t\\t\\t\\t\\t\\t\\f9\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\f9\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\f9\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\f9\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\f9\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\f9\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t"
    },
    {
        "id": 650,
        "code": "\nfunction f(string::String, substring::String)::String \n    while startswith(string, substring)\n        string = string[length(substring)+1:end]\n    end\n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\", \"A\") == ????)\nend\n\n\n",
        "answer": "\"\""
    },
    {
        "id": 651,
        "code": "\nfunction f(text::String, letter::String)::String \n    if islowercase(letter[1])\n        letter = uppercase(letter)\n    end\n    \n    text = join([char == lowercase(letter[1]) ? letter : char for char in text])\n    \n    return uppercase(text[1]) * lowercase(text[2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"E wrestled evil until upperfeat\", \"e\") == ????)\nend\n\n\n",
        "answer": "\"EE\""
    },
    {
        "id": 652,
        "res": 0
    },
    {
        "id": 653,
        "code": "\nfunction f(text::String, letter::String)::Int64 \n    t = text\n    for alph in text\n        t = replace(t, alph => \"\")\n    end\n    return length(split(t, letter))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"c, c, c ,c, c\", \"c\") == ????)\nend\n\n\n",
        "answer": "7"
    },
    {
        "id": 654,
        "code": "\nfunction f(s::String, from_c::String, to_c::String)::String \n    table = Dict(zip(from_c, to_c))\n    return join([get(table, c, c) for c in s])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"aphid\", \"i\", \"?\") == ????)\nend\n\n\n",
        "answer": "\"pii\""
    },
    {
        "id": 655,
        "code": "\nfunction f(s::String)::String \n    s = replace(s, 'a' => \"\")\n    s = replace(s, 'r' => \"\")\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"rpaar\") == ????)\nend\n\n\n",
        "answer": "\"rp\""
    },
    {
        "id": 656,
        "code": "\nfunction f(letters::Vector{String})::String \n    a = []\n    for i in 1:length(letters)\n        if letters[i] in a\n            return \"no\"\n        end\n        push!(a, letters[i])\n    end\n    return \"yes\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"b\", \"i\", \"r\", \"o\", \"s\", \"j\", \"v\", \"p\"]) == ????)\nend\n\n\n",
        "answer": "\"no\""
    },
    {
        "id": 657,
        "code": "\nfunction f(text::String)::String \n    punctuations = ['!', '.', '?', ',', ':', ';']\n    for punct in punctuations\n        if count(punct, text) > 1\n            return \"no\"\n        end\n        if endswith(text, punct)\n            return \"no\"\n        end\n    end\n    return titlecase(text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"djhasghasgdha\") == ????)\nend\n\n\n",
        "answer": "\"djhasghasgdha\""
    },
    {
        "id": 658,
        "code": "\n\nfunction f(d::Dict{Int64, String}, get_ary::Vector{Int64})::Vector{Union{String, Nothing}} \n    result = []\n    for key in get_ary\n        push!(result, get(d, key, nothing))\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(3 => \"swims like a bull\"), [3, 2, 5]) == ????)\nend\n\n\n",
        "answer": "(\"swims like a bull\", nothing, \"\")"
    },
    {
        "id": 659,
        "code": "\nfunction f(bots::Vector{String})::Int64 \n    clean = filter(x -> !all(isuppercase, x), bots)\n    clean = [x[1:2] * x[end-2:end] for x in clean]\n    return length(clean)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"yR?TAJhIW?n\", \"o11BgEFDfoe\", \"KnHdn2vdEd\", \"wvwruuqfhXbGis\"]) == ????)\nend\n\n\n",
        "answer": "7"
    },
    {
        "id": 660,
        "code": "\nfunction f(num::Int64)::Int64 \n    initial = [1]\n    total = initial\n    for _ in 1:num\n        total = [1; [x+y for (x, y) in zip(total, total[2:end])]]\n        push!(initial, total[end])\n    end\n    return sum(initial)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(3) == ????)\nend\n\n\n",
        "answer": "6"
    },
    {
        "id": 661,
        "code": "\n\nfunction f(letters::String, maxsplit::Int64)::String \n    split_letters = split(letters)\n    return join(split_letters[max(1, end-maxsplit+1):end])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"elrts,SS ee\", 6) == ????)\nend\n\n\n",
        "answer": "\"elrts,SS ee\""
    },
    {
        "id": 662,
        "code": "\nfunction f(values::Vector{String})::Vector{String} \n    names = [\"Pete\", \"Linda\", \"Angela\"]\n    append!(names, values)\n    sort!(names)\n    return names\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"Dan\", \"Joe\", \"Dusty\"]) == ????)\nend\n\n\n",
        "answer": "[\"Dusty\", \"Joe\", \"Dan\"]"
    },
    {
        "id": 663,
        "res": 0
    },
    {
        "id": 664,
        "res": 0
    },
    {
        "id": 665,
        "code": "\nfunction f(chars::String)::String \n    s = \"\"\n    for ch in chars\n        if count(x -> x == ch, chars) % 2 == 0\n            s *= uppercase(ch)\n        else\n            s *= ch\n        end\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"acbced\") == ????)\nend\n\n\n",
        "answer": "\"ACBD\""
    },
    {
        "id": 666,
        "res": 0
    },
    {
        "id": 667,
        "code": "\nfunction f(text::String)::Vector{String} \n    new_text = []\n    for i in 1:div(length(text), 3)\n        push!(new_text, \"< $(text[(i-1)*3+1:i*3]) level=$(i-1) >\")\n    end\n    last_item = text[div(length(text), 3)*3+1:end]\n    push!(new_text, \"< $last_item level=$(div(length(text), 3)) >\")\n    return new_text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"C7\") == ????)\nend\n\n\n",
        "answer": "[\"C\", \"7\", \"level=0\"]"
    },
    {
        "id": 668,
        "code": "\nfunction f(text::String)::String \n    return text[end] * text[1:end-1]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"hellomyfriendear\") == ????)\nend\n\n\n",
        "answer": "\"lemyf\""
    },
    {
        "id": 669,
        "code": "\nfunction f(t::String)::String \n    parts = split(t, '-')\n    a = join(parts[1:end-1], '-')\n    b = parts[end]\n    if length(b) == length(a)\n        return \"imbalanced\"\n    end\n    return a * replace(b, \"-\" => \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"fubarbaz\") == ????)\nend\n\n\n",
        "answer": "\"imbalanced\""
    },
    {
        "id": 670,
        "code": "\n\nfunction f(a::Vector{String}, b::Vector{Int64})::Vector{Int64} \n    d = Dict(zip(a, b))\n    sort(a, by=x->d[x], rev=true)\n    return [d[x] for x in a]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"12\", \"ab\"], [2, 2]) == ????)\nend\n\n\n",
        "answer": "[2, 2]"
    },
    {
        "id": 671,
        "code": "\nfunction f(text::String, char1::String, char2::String)::String \n    t1a = [char1[i] for i in 1:length(char1)]\n    t2a = [char2[i] for i in 1:length(char2)]\n    t1 = Dict(zip(t1a, t2a))\n    \n    translated_text = \"\"\n    for c in text\n        if haskey(t1, c)\n            translated_text *= t1[c]\n        else\n            translated_text *= c\n        end\n    end\n    \n    return translated_text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ewriyat emf rwto segya\", \"tey\", \"dgo\") == ????)\nend\n\n\n",
        "answer": "\"test\""
    },
    {
        "id": 672,
        "code": "\n\nfunction f(text::String, position::Int64, value::String)::String\n    length_text = length(text)\n    index = (position % (length_text + 2)) - 1\n    if index >= length_text || index < 0\n        return text\n    else\n        text = collect(text)\n        text[index+1] = value[1]\n        return join(text)\n    end\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"1zd\", 0, \"m\") == ????)\nend\n\n\n",
        "answer": "\"m\""
    },
    {
        "id": 673,
        "code": "\nfunction f(string::String)::String \n    if all(isuppercase, string)\n        return lowercase(string)\n    elseif all(islowercase, string)\n        return uppercase(string)\n    end\n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"cA\") == ????)\nend\n\n\n",
        "answer": "\"camel\""
    },
    {
        "id": 674,
        "code": "\nfunction f(text::String)::String \n    ls = collect(text)\n    for x in reverse(eachindex(ls))\n        if length(ls) <= 1\n            break\n        end\n        if !(ls[x] in ['z', 'y', 'x', 'w', 'v', 'u', 't', 's', 'r', 'q', 'p', 'o', 'n', 'm', 'l', 'k', 'j', 'i', 'h', 'g', 'f', 'e', 'd', 'c', 'b', 'a'])\n            splice!(ls, x)\n        end\n    end\n    return join(ls, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"qq\") == ????)\nend\n\n\n",
        "answer": "\"q\""
    },
    {
        "id": 675,
        "code": "\nfunction f(nums::Vector{Int64}, sort_count::Int64)::Vector{Int64} \n    sort!(nums)\n    return nums[1:sort_count]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 2, 3, 4, 5], 1) == ????)\nend\n\n\n",
        "answer": "[2, 3, 4]"
    },
    {
        "id": 676,
        "code": "\nfunction f(text::String, tab_size::Int64)::String \n    return replace(text, '\\t' => repeat(' ', tab_size))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a\", 100) == ????)\nend\n\n\n",
        "answer": "\"a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a   a"
    },
    {
        "id": 677,
        "code": "\nfunction f(text::String, length::Int64)::String \n    length = length < 0 ? -length : length\n    output = \"\"\n    for idx in 1:length\n        if text[idx % lastindex(text)] != ' '\n            output *= text[idx % lastindex(text)]\n        else\n            break\n        end\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"I got 1 and 0.\", 5) == ????)\nend\n\n\n",
        "answer": "\"I got 1 and 0.\""
    },
    {
        "id": 678,
        "code": "\n\nfunction f(text::String)::Dict{String, Int64}\n    freq = Dict{String, Int64}()\n    for c in lowercase(text)\n        if haskey(freq, string(c))\n            freq[string(c)] += 1\n        else\n            freq[string(c)] = 1\n        end\n    end\n    return freq\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"HI\") == ????)\nend\n\n\n",
        "answer": "{}"
    },
    {
        "id": 679,
        "code": "\nfunction f(text::String)::Bool \n    if text == \"\"\n        return false\n    end\n    \n    first_char = text[1]\n    if isdigit(first_char)\n        return false\n    end\n    \n    for last_char in text\n        if (last_char != '_') && !(last_char in ['a':'z'; 'A':'Z'; '0':'9'; '_'])\n            return false\n        end\n    end\n    \n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"meet\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 680,
        "res": 0
    },
    {
        "id": 681,
        "code": "\n\nfunction f(array::Vector{Int64}, ind::Int64, elem::Int64)::Vector{Int64} \n    insertion_index = ind < 0 ? -5 : (ind > length(array) ? length(array) : ind + 1)\n    insertion_index = insertion_index < 0 ? 0 : insertion_index\n    insertion_index = insertion_index > length(array) ? length(array) : insertion_index\n    insertion_index += 1\n    insert!(array, insertion_index, elem)\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 5, 8, 2, 0, 3], 2, 7) == ????)\nend\n\n\n",
        "answer": "[0, 1, 2, 7, 5, 3, 8]"
    },
    {
        "id": 682,
        "code": "\nfunction f(text::String, length::Int64, index::Int64)::String \n    ls = split(text, ' ', limit=index)\n    ls = reverse(ls)\n    ls = [l[1:min(length, end)] for l in ls]\n    return join(ls, \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"hypernimovichyp\", 2, 2) == ????)\nend\n\n\n",
        "answer": "\"y\""
    },
    {
        "id": 683,
        "code": "\nfunction f(dict1::Dict{String, Int}, dict2::Dict{String, Int})::Dict{String, Int}\n    result = copy(dict1)\n    for key in keys(dict2)\n        result[key] = dict2[key]\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"disface\" => 9, \"cam\" => 7), Dict(\"mforce\" => 5)) == ????)\nend\n\n\n",
        "answer": "{9=>7, \"disface\"=>9, \"cam\"=>7, \"mforce\"=>5}"
    },
    {
        "id": 684,
        "code": "\nfunction f(text::String)::String \n    trans = Dict('\"'=>'9', '\\''=>'8', '>'=>'3', '<'=>'3')\n    return join([get(trans, c, c) for c in text])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Transform quotations\\\"\nnot into numbers.\") == ????)\nend\n\n\n",
        "answer": "\"9993\""
    },
    {
        "id": 685,
        "code": "\nfunction f(array::Vector{Int64}, elem::Int64)::Int64 \n    return count(x -> x == elem, array) + elem\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 1, 1], -2) == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 686,
        "code": "\nfunction f(d::Dict{String, Int}, l::Vector{String})::Dict{String, Int}\n    new_d = Dict{String, Int}()\n\n    for k in l\n        if haskey(d, k)\n            new_d[k] = d[k]\n        end\n    end\n\n    return copy(new_d)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"lorem ipsum\" => 12, \"dolor\" => 23), [\"lorem ipsum\", \"dolor\"]) == ????)\nend\n\n\n",
        "answer": "{\"lorem ipsum\" => 12, \"dolor\" => 23}"
    },
    {
        "id": 687,
        "res": 0
    },
    {
        "id": 688,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    l = Int[]\n    for i in nums\n        if !(i in l)\n            push!(l, i)\n        end\n    end\n    return l\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([3, 1, 9, 0, 2, 0, 8]) == ????)\nend\n\n\n",
        "answer": "[3, 1, 9, 2, 8]"
    },
    {
        "id": 689,
        "code": "\nfunction f(arr::Vector{Int64})::Vector{Int64} \n    count = length(arr)\n    sub = copy(arr)\n    for i in 1:2:count\n        sub[i] *= 5\n    end\n    return sub\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-3, -6, 2, 7]) == ????)\nend\n\n\n",
        "answer": "[-15, 30, 10, 35]"
    },
    {
        "id": 690,
        "code": "\nfunction f(n::String)::String \n    if occursin(\".\", n) != 0\n        return string(parse(Int, n) + 2.5)\n    end\n    return n\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"800\") == ????)\nend\n\n\n",
        "answer": "8.0"
    },
    {
        "id": 691,
        "code": "\nfunction f(text::String, suffix::String)::String\n    if !isempty(suffix) && last(suffix) in text\n        return f(String(rstrip(text, last(suffix))), suffix[1:end-1])\n    else\n        return text\n    end\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"rpyttc\", \"cyt\") == ????)\nend\n\n\n",
        "answer": "\"rpyttc\""
    },
    {
        "id": 692,
        "code": "\nfunction f(array::Vector{Int64})::Vector{Int64} \n    a = Vector{Int64}()\n    reverse!(array)\n    for i in 1:length(array)\n        if array[i] != 0\n            push!(a, array[i])\n        end\n    end\n    reverse!(a)\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Int64}([])) == ????)\nend\n\n\n",
        "answer": "[]"
    },
    {
        "id": 693,
        "code": "\nfunction f(text::String)::String \n    n = findfirst(isequal('8'), text)\n    if n === nothing\n        return \"\"\n    else\n        return \"x0\" ^ (n-1)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"sa832d83r xd 8g 26a81xdf\") == ????)\nend\n\n\n",
        "answer": "\"8\""
    },
    {
        "id": 694,
        "res": 0
    },
    {
        "id": 695,
        "res": 0
    },
    {
        "id": 696,
        "code": "\n\nfunction f(text::String)::Int64\n    s = 0\n    for i in 1:length(text)-1\n        s += length(split(text, text[i+1:end])[1])\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"wdj\") == ????)\nend\n\n\n",
        "answer": "7"
    },
    {
        "id": 697,
        "res": 0
    },
    {
        "id": 698,
        "code": "\nfunction f(text::String)::String \n    return join([x for x in text if x != ')'], \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"(((((((((((d))))))))).))))(((((\") == ????)\nend\n\n\n",
        "answer": "\"((((((((((((d))))))))).))))(((((\") == ????\n[END OF ANSWER]"
    },
    {
        "id": 699,
        "code": "\nfunction f(text::String, elem::String)::Vector{String} \n    if elem != \"\"\n        while startswith(text, elem)\n            text = replace(text, elem, \"\")\n        end\n        while startswith(elem, text)\n            elem = replace(elem, text, \"\")\n        end\n    end\n    return [elem, text]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"some\", \"1\") == ????)\nend\n\n\n",
        "answer": "[\"1\", \"some\"]"
    },
    {
        "id": 700,
        "code": "\nfunction f(text::String)::Int64 \n    return length(text) - count(occursin.(\"bot\", text))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Where is the bot in this world?\") == ????)\nend\n\n\n",
        "answer": "7"
    },
    {
        "id": 701,
        "code": "\n\nfunction f(stg::String, tabs::Vector{String})::String\n    for tab in tabs\n        for char in tab\n            stg = rstrip(stg, char)\n        end\n    end\n    return stg\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"31849 let it!31849 pass!\", [\"3\", \"1\", \"8\", \" \", \"1\", \"9\", \"2\", \"d\"]) == ????)\nend\n\n\n",
        "answer": "\"letitpass\""
    },
    {
        "id": 702,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    count = length(nums)\n    for i in reverse(1:length(nums))\n        insert!(nums, i, popfirst!(nums))\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([0, -5, -4]) == ????)\nend\n\n\n",
        "answer": "[0, -5, -4, -4, -3, -2, -1, 0]"
    },
    {
        "id": 703,
        "code": "\n\nfunction f(text::String, char::String)::String\n    count = 0\n    for i in 1:length(text)-1\n        if text[i] == text[i+1] == char[1]\n            count += 1\n        end\n    end\n    return text[count+1:end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"vzzv2sg\", \"z\") == ????)\nend\n\n\n",
        "answer": "\"vzzv2sg\""
    },
    {
        "id": 704,
        "code": "\nfunction f(s::String, n::Int64, c::String)::String \n    width = length(c) * n\n    while length(s) < width\n        s = string(c, s)\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\".\", 0, \"99\") == ????)\nend\n\n\n",
        "answer": "\"99\""
    },
    {
        "id": 705,
        "code": "\nfunction f(cities::Vector{String}, name::String)::Vector{String} \n    if name == \"\"\n        return cities\n    end\n    \n    if name != \"\" && name != \"cities\"\n        return String[]\n    end\n    \n    return [name * city for city in cities]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"Sydney\", \"Hong Kong\", \"Melbourne\", \"Sao Paolo\", \"Istanbul\", \"Boston\"], \"Somewhere \") == ????)\nend\n\n\n",
        "answer": "[\"Somewhere Sydney\", \"Hong Kong\", \"Melbourne\", \"Sao Paolo\", \"Istanbul\", \"Boston\"]"
    },
    {
        "id": 706,
        "code": "\nfunction f(r::String, w::String)::Vector{String} \n    a = []\n    if r[1] == w[1] && w[end] == r[end]\n        push!(a, r)\n        push!(a, w)\n    else\n        push!(a, w)\n        push!(a, r)\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ab\", \"xy\") == ????)\nend\n\n\n",
        "answer": "[\"ab\", \"xy\"]"
    },
    {
        "id": 707,
        "code": "\n\nfunction f(text::String, position::Int64)::String \n    length_text = length(text)\n    index = position % (length_text + 1)\n    if position < 0 || index < 0\n        index = -1\n    end\n    new_text = collect(text)\n    deleteat!(new_text, index + 1)\n    return join(new_text, \"\")\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"undbs l\", 1) == ????)\nend\n\n\n",
        "answer": "undbs"
    },
    {
        "id": 708,
        "code": "\nfunction f(string::String)::String \n    l = collect(string)\n    for i in reverse(1:length(l))\n        if l[i] != ' '\n            break\n        end\n        popat!(l, i)\n    end\n    return join(l, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"    jcmfxv     \") == ????)\nend\n\n\n",
        "answer": "\"jcfxv\""
    },
    {
        "id": 709,
        "code": "\nfunction f(text::String)::String \n    my_list = split(text)\n    sort!(my_list, rev=true)\n    return join(my_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a loved\") == ????)\nend\n\n\n",
        "answer": "\"a loved\""
    },
    {
        "id": 710,
        "res": 0
    },
    {
        "id": 711,
        "code": "\nfunction f(text::String)::String \n    return replace(text, '\\n' => '\\t')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"apples\n\t\npears\n\t\nbananas\") == ????)\nend\n\n\n",
        "answer": "\"apples\\tpears\\tbananas\""
    },
    {
        "id": 712,
        "res": 0
    },
    {
        "id": 713,
        "code": "\nfunction f(text::String, char::String)::Bool \n    if occursin(char, text)\n        text = [strip(t) for t in split(text, char) if t != \"\"]\n        if length(text) > 1\n            return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"only one line\", \" \") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 714,
        "code": "\nfunction f(array::Vector{Int64})::Vector{String} \n    reverse!(array)\n    empty!(array)\n    append!(array, fill(\"x\", length(array)))\n    reverse!(array)\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([3, -2, 0]) == ????)\nend\n\n\n",
        "answer": "[\"3\", \"-2\", \"0\"]"
    },
    {
        "id": 715,
        "code": "\nfunction f(text::String, char::String)::Bool \n    return count(occ -> occ == char, text) % 2 != 0\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abababac\", \"a\") == ????)\nend\n\n\n",
        "answer": "True"
    },
    {
        "id": 716,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    count = length(nums)\n    while length(nums) > div(count, 2)\n        empty!(nums)\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2, 1, 2, 3, 1, 6, 3, 8]) == ????)\nend\n\n\n",
        "answer": "[2, 1, 2, 3, 1, 6, 3, 8]"
    },
    {
        "id": 717,
        "code": "\nfunction f(text::String)::String\n    k, l = 1, lastindex(text)\n    while !isletter(text[l])\n        l -= 1\n    end\n    while !isletter(text[k])\n        k += 1\n    end\n    if k != 1 || l != lastindex(text)\n        return text[k:l]\n    else\n        return string(text[1])\n    end\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"timetable, 2mil\") == ????)\nend\n\n\n",
        "answer": "\"t\""
    },
    {
        "id": 718,
        "code": "\nfunction f(text::String)::String \n    t = text\n    for i in text\n        text = replace(text, i => \"\")\n    end\n    return string(length(text), t)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ThisIsSoAtrocious\") == ????)\nend\n\n\n",
        "answer": "8"
    },
    {
        "id": 719,
        "code": "\nfunction f(code::String)::String \n    lines = split(code, ']')\n    result = []\n    level = 0\n    for line in lines\n        push!(result, line[1] * \" \" * \"  \"^level * line[2:end])\n        level += count(occursin.(['{'], line)) - count(occursin.(['}'], line))\n    end\n    return join(result, \"\\n\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"if (x) {y = 1;} else {z = 1;}\") == ????)\nend\n\n\n",
        "answer": "\"  1  \\n  1  \\n  1  \\n\""
    },
    {
        "id": 720,
        "code": "\n\nfunction f(items::Vector{String}, item::String)::Int64 \n    while items[end] == item\n        pop!(items)\n    end\n    push!(items, item)\n    return length(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"bfreratrrbdbzagbretaredtroefcoiqrrneaosf\"], \"n\") == ????)\nend\n\n\n",
        "answer": "7"
    },
    {
        "id": 721,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    count = length(nums)\n    for num in 2:count\n        sort!(nums)\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-6, -5, -7, -8, 2]) == ????)\nend\n\n\n",
        "answer": "[-6, -5, -7, -8, 2]"
    },
    {
        "id": 722,
        "code": "\nfunction f(text::String)::String \n    out = \"\"\n    for i in 1:length(text)\n        if isuppercase(text[i])\n            out *= lowercase(text[i])\n        else\n            out *= uppercase(text[i])\n        end\n    end\n    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\",wPzPppdl/\") == ????)\nend\n\n\n",
        "answer": "\"wpdzpzpzpdz\""
    },
    {
        "id": 723,
        "code": "\nfunction f(text::String, separator::Int64)::Vector{String} \n    splitted = split(text, '\\n')\n    if separator != 0\n        return [join(s, ' ') for s in splitted]\n    else\n        return splitted\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"dga nqdk\rull qcha kl\", 1) == ????)\nend\n\n\n",
        "answer": "[\"dga nqdk\", \"ull qcha kl\"]"
    },
    {
        "id": 724,
        "res": 0
    },
    {
        "id": 725,
        "code": "\nfunction f(text::String)::Int64 \n    result_list = ['3', '3', '3', '3']\n    if !isempty(result_list)\n        empty!(result_list)\n    end\n    return length(text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"mrq7y\") == ????)\nend\n\n\n",
        "answer": "7"
    },
    {
        "id": 726,
        "code": "\n\nfunction f(text::String)::Tuple{Int64, Int64} \n    ws = 0\n    for s in text\n        if isspace(s)\n            ws += 1\n        end\n    end\n    return ws, length(text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"jcle oq wsnibktxpiozyxmopqkfnrfjds\") == ????)\nend\n\n\n",
        "answer": "(0, 23)"
    },
    {
        "id": 727,
        "code": "\nfunction f(numbers::Vector{String}, prefix::String)::Vector{String} \n    return sort([length(n) > length(prefix) && startswith(n, prefix) ? n[length(prefix)+1:end] : n for n in numbers])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"ix\", \"dxh\", \"snegi\", \"wiubvu\"], \"\") == ????)\nend\n\n\n",
        "answer": "[\"ix\", \"snegi\", \"wiubvu\", \"dxh\"]"
    },
    {
        "id": 728,
        "code": "\nfunction f(text::String)::String \n    result = Vector{Char}()\n    for (i, ch) in enumerate(text)\n        if ch == lowercase(ch)\n            continue\n        end\n        if length(text) - 1 - i < findlast(c -> c == lowercase(ch), text)\n            push!(result, ch)\n        end\n    end\n    return join(result, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ru\") == ????)\nend\n\n\n",
        "answer": "\"ru\""
    },
    {
        "id": 729,
        "res": 0
    },
    {
        "id": 730,
        "code": "\nfunction f(text::String)::Int64 \n    m = 0\n    cnt = 0\n    for i in split(text)\n        if length(i) > m\n            cnt += 1\n            m = length(i)\n        end\n    end\n    return cnt\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl\") == ????)\nend\n\n\n",
        "answer": "1"
    },
    {
        "id": 731,
        "code": "\nfunction f(text::String, use::String)::String \n    return replace(text, use => \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Chris requires a ride to the airport on Friday.\", \"a\") == ????)\nend\n\n\n",
        "answer": "\"Cris\""
    },
    {
        "id": 732,
        "code": "\nfunction f(char_freq::Dict{String, Int})\n    result = Dict{String, Int}()\n    for (k, v) in deepcopy(char_freq)\n        result[k] = div(v, 2)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"u\" => 20, \"v\" => 5, \"b\" => 7, \"w\" => 3, \"x\" => 3)) == ????)\nend\n\n\n",
        "answer": "{2: 1, 4: 1, 6: 1, 8: 1, 10: 1}"
    },
    {
        "id": 733,
        "code": "\nfunction f(text::String)::String\n    len = div(length(text), 2)\n    left_half = text[1:len]\n    right_half = reverse(text[len+1:end])\n    return left_half * right_half\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"n\") == ????)\nend\n\n\n",
        "answer": "\"nn\""
    },
    {
        "id": 734,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    i = length(nums)\n    while i > 0\n        if nums[i] % 2 == 0\n            splice!(nums, i)\n        end\n        i -= 1\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([5, 3, 3, 7]) == ????)\nend\n\n\n",
        "answer": "[5, 3, 7]"
    },
    {
        "id": 735,
        "code": "\n\nfunction f(sentence::String)::String \n    if sentence == \"\"\n        return \"\"\n    end\n    sentence = replace(sentence, \"(\" => \"\")\n    sentence = replace(sentence, \")\" => \"\")\n    sentence = uppercase(sentence[1])*lowercase(sentence[2:end])\n    sentence = replace(sentence, \" \" => \"\")\n    return sentence\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"(A (b B))\") == ????)\nend\n\n\n",
        "answer": "\"AB\""
    },
    {
        "id": 736,
        "code": "\nfunction f(text::String, insert::String)::String \n    whitespaces = Set(['\\t', '\\r', '\\v', ' ', '\\f', '\\n'])\n    clean = \"\"\n    for char in text\n        if char in whitespaces\n            clean *= insert\n        else\n            clean *= char\n        end\n    end\n    return clean\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"pi wa\", \"chi\") == ????)\nend\n\n\n",
        "answer": "\"314\""
    },
    {
        "id": 737,
        "code": "\nfunction f(nums::Vector{Int64})::Int64 \n    counts = 0\n    for i in nums\n        if occursin(r\"^\\d+$\", string(i))\n            if counts == 0\n                counts += 1\n            end\n        end\n    end\n    return counts\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([0, 6, 2, -1, -2]) == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 738,
        "code": "\n\nfunction f(text::String, characters::String)::String \n    for i in 1:length(characters)\n        text = rstrip(text, characters[i])\n    end\n    return text\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"r;r;r;r;r;r;r;r;r\", \"x.r\") == ????)\nend\n\n\n",
        "answer": "\"r\""
    },
    {
        "id": 739,
        "code": "\nfunction f(st::String, pattern::Vector{String})::Bool \n    for p in pattern\n        if !startswith(st, p)\n            return false\n        end\n        st = st[length(p)+1:end]\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"qwbnjrxs\", [\"jr\", \"b\", \"r\", \"qw\"]) == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 740,
        "code": "\nfunction f(plot::Vector{Int64}, delin::Int64)::Vector{Int64} \n    if delin in plot\n        split = findfirst(x -> x == delin, plot)\n        first = plot[1:split-1]\n        second = plot[split+1:end]\n        return vcat(first, second)\n    else\n        return plot\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3, 4], 3) == ????)\nend\n\n\n",
        "answer": "[1, 2, 4]"
    },
    {
        "id": 741,
        "code": "\nfunction f(nums::Vector{Int64}, p::Int64)::Int64 \n    prev_p = p - 1\n    if prev_p < 0\n        prev_p = length(nums) - 1\n    end\n    return nums[prev_p + 1]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([6, 8, 2, 5, 3, 1, 9, 7], 6) == ????)\nend\n\n\n",
        "answer": "7"
    },
    {
        "id": 742,
        "code": "\nfunction f(text::String)::Bool \n    b = true\n    for x in text\n        if isdigit(x)\n            b = true\n        else\n            b = false\n            break\n        end\n    end\n    return b\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"-1-3\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 743,
        "code": "\nfunction f(text::String)::Int64 \n    string_a, string_b = split(text, ',')\n    return -(length(string_a) + length(string_b))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"dog,cat\") == ????)\nend\n\n\n",
        "answer": "-3"
    },
    {
        "id": 744,
        "code": "\nfunction f(text::String, new_ending::String)::String \n    result = collect(text)\n    append!(result, new_ending)\n    return join(result, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"jro\", \"wdlp\") == ????)\nend\n\n\n",
        "answer": "\"jrowdlp\""
    },
    {
        "id": 745,
        "code": "\nfunction f(address::String)::String \n    suffix_start = findfirst(isequal('@'), address) + 1\n    if count(c -> c == '.', address[suffix_start:end]) > 1\n        address = replace(address, \".\" * join(split(address, '@')[2].split('.')[1:2], \".\"), \"\")\n    end\n    return address\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"minimc@minimc.io\") == ????)\nend\n\n\n",
        "answer": "\"minimc.io\""
    },
    {
        "id": 746,
        "code": "\nfunction f(dct::Dict{String, String})::Dict{String, String}\n    result = Dict{String, String}()\n    for value in values(dct)\n        item = split(value, '.')[1] * \"@pinc.uk\"\n        result[value] = item\n    end\n    return result\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict()) == ????)\nend\n\n\n",
        "answer": "{}"
    },
    {
        "id": 747,
        "code": "\nfunction f(text::String)::Bool \n    if text == \"42.42\"\n        return true\n    end\n    \n    for i in 3:length(text)-3\n        if text[i] == '.' && isdigit(text[i-3:end]) && isdigit(text[1:i-1])\n            return true\n        end\n    end\n    \n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"123E-10\") == ????)\nend\n\n\n",
        "answer": "true"
    },
    {
        "id": 748,
        "code": "\n\nfunction f(d::Dict{String, Int})::Tuple{Tuple{String, Int}, Tuple{String, Int}} \n    keys_sorted = sort(collect(keys(d)))\n    return (keys_sorted[1], d[keys_sorted[1]]), (keys_sorted[2], d[keys_sorted[2]])\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"a\" => 123, \"b\" => 456, \"c\" => 789)) == ????)\nend\n\n\n",
        "answer": "(\"b\", 456)"
    },
    {
        "id": 749,
        "code": "\nfunction f(text::String, width::Int64)::String \n    result = \"\"\n    lines = split(text, '\\n')\n    for l in lines\n        result *= l * \" \" ^ (width - length(l)) * \"\\n\"\n    end\n    result = result[1:end-1]  # Remove the very last empty line\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"l\nl\", 2) == ????)\nend\n\n\n",
        "answer": "\"l\nl\""
    },
    {
        "id": 750,
        "res": 0
    },
    {
        "id": 751,
        "code": "\n\nfunction f(text::String, char::String, min_count::Int64)::String \n    count = sum(string(i) == char for i in text)\n    if count < min_count\n        return uppercase(text) == text ? lowercase(text) : uppercase(text)\n    else\n        return text\n    end\nend\n\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"wwwwhhhtttpp\", \"w\", 3) == ????)\nend\n\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 752,
        "code": "\nfunction f(s::String, amount::Int64)::String \n    return repeat('z', max(amount - length(s), 0)) * s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abc\", 8) == ????)\nend\n\n\n",
        "answer": "(a, a, a, a, a, a, a, a)"
    },
    {
        "id": 753,
        "res": 0
    },
    {
        "id": 754,
        "code": "\nfunction f(nums::Vector{String})::Vector{String} \n    nums = [lpad(val, parse(Int, nums[1]), '0') for val in nums[2:end]]\n    return string.(nums)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"1\", \"2\", \"2\", \"44\", \"0\", \"7\", \"20257\"]) == ????)\nend\n\n\n",
        "answer": "[\"1\", \"2\", \"2\", \"44\", \"0\", \"7\", \"20257\"]"
    },
    {
        "id": 755,
        "code": "\nfunction f(replace::String, text::String, hide::String)::String \n    while occursin(hide, text)\n        replace *= \"ax\"\n        text = replace(text, hide, replace, 1)\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"###\", \"ph>t#A#BiEcDefW#ON#iiNCU\", \".\") == ????)\nend\n\n\n",
        "answer": "\"ph>t#A#BiEcDefW#ON#iiNCU\""
    },
    {
        "id": 756,
        "code": "\n\nfunction f(text::String)::String\n    if isempty(text) \n        return \"string\" \n    end\n    if all(isdigit(c) for c in text)\n        return \"integer\"\n    else\n        return \"string\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\") == ????)\nend\n\n\n",
        "answer": "string"
    },
    {
        "id": 757,
        "code": "\n\nfunction f(text::String, char::String, replacement::String)::String \n    return replace(text, char => replacement)\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a1a8\", \"1\", \"n2\") == ????)\nend\n\n\n",
        "answer": "\"anbn2\""
    },
    {
        "id": 758,
        "code": "\nfunction f(nums::Vector{Int64})::Bool \n    if nums == reverse(nums)\n        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([0, 3, 6, 2]) == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 759,
        "code": "\n\nfunction f(text::String, sub::String)::Vector{Int64}\n    index = Int[]\n    starting = 1\n    while true\n        starting = findnext(sub, text, starting)\n        if isnothing(starting)\n            break\n        else\n            push!(index, starting.start - 1)\n            starting += length(sub)\n        end\n    end\n    return index\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"egmdartoa\", \"good\") == ????)\nend\n\n\n",
        "answer": "[1, 3, 6]"
    },
    {
        "id": 760,
        "res": 0
    },
    {
        "id": 761,
        "code": "\nfunction f(array::Vector{Int64})::Vector{Int64} \n    output = copy(array)\n    output[1:2:end] .= reverse(output[end:-2:1])\n    reverse!(output)\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Int64}([])) == ????)\nend\n\n\n",
        "answer": "[]"
    },
    {
        "id": 762,
        "code": "\nfunction f(text::String)::String \n    text = lowercase(text)\n    capitalize = uppercase(text[1]) * text[2:end]\n    return text[1] * capitalize[2:end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"this And cPanel\") == ????)\nend\n\n\n",
        "answer": "\"ThiCnA\""
    },
    {
        "id": 763,
        "code": "\n\nfunction f(values::String, text::String, markers::String)::String\n    return rstrip(rstrip(text, collect(values)), collect(markers))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"2Pn\", \"yCxpg2C2Pny2\", \"\") == ????)\nend\n\n\n",
        "answer": "\"yCxpg2C2Pny2\""
    },
    {
        "id": 764,
        "code": "\nfunction f(text::String, old::String, new::String)::String \n    text2 = replace(text, old => new)\n    old2 = reverse(old)\n    while occursin(old2, text2)\n        text2 = replace(text2, old2 => new)\n    end\n    return text2\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"some test string\", \"some\", \"any\") == ????)\nend\n\n\n",
        "answer": "\"anyest tset stri gnirts\""
    },
    {
        "id": 765,
        "code": "\nfunction f(text::String)::Int64 \n    return sum(1 for c in text if isdigit(c))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"so456\") == ????)\nend\n\n\n",
        "answer": "6"
    },
    {
        "id": 766,
        "code": "\nfunction f(values::Vector{String}, value::Int64)::Dict{String, Int64}\n    length_values = length(values)\n    new_dict = Dict{String, Int64}()\n    for val in values\n        new_dict[val] = value\n    end\n    sorted_values = join(sort(values))\n    new_dict[sorted_values] = value * 3\n    return new_dict\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"0\", \"3\"], 117) == ????)\nend\n\n\n",
        "answer": "{\"0\": 117, \"3\": 117, \"1\": 117, \"2\": 117, \"3\": 117, \"0\": 117, \"1\": 117, \"2\": 117}"
    },
    {
        "id": 767,
        "code": "\nfunction f(text::String)::String \n    a = split(strip(text), ' ')\n    for i in 1:length(a)\n        if !occursin(r\"[0-9]+\", a[i])\n            return \"-\"\n        end\n    end\n    return join(a, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"d khqw whi fwi bbn 41\") == ????)\nend\n\n\n",
        "answer": "\"41\""
    },
    {
        "id": 768,
        "code": "\nfunction f(s::String, o::String)::String \n    if occursin(o, s)\n        return s\n    end\n    return o * f(s, reverse(o[1:end-2]))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abba\", \"bab\") == ????)\nend\n\n\n",
        "answer": "\"abba\""
    },
    {
        "id": 769,
        "code": "\nfunction f(text::String)::String \n    text_list = [uppercase(text[i]) == text[i] ? lowercase(text[i]) : uppercase(text[i]) for i in 1:length(text)]\n    return join(text_list, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"akA?riu\") == ????)\nend\n\n\n",
        "answer": "\"aKArUiRu\""
    },
    {
        "id": 770,
        "res": 0
    },
    {
        "id": 771,
        "code": "\n\nfunction f(items::Vector{Int64})::Vector{Int64} \n    odd_positioned = []\n    while length(items) > 0\n        position = findfirst(x -> x == minimum(items), items)\n        splice!(items, position)\n        item = splice!(items, position)\n        push!(odd_positioned, item)\n    end\n    return odd_positioned\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8]) == ????)\nend\n\n\n",
        "answer": "[1, 3, 5, 7, 9]"
    },
    {
        "id": 772,
        "code": "\nfunction f(phrase::String)::String \n    result = \"\"\n    for i in phrase\n        if !islowercase(i)\n            result *= i\n        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"serjgpoDFdbcA.\") == ????)\nend\n\n\n",
        "answer": "\"sjgpoDdbcA\""
    },
    {
        "id": 773,
        "code": "\n\nfunction f(nums::Vector{Int64}, n::Int64)::Int64 \n    return popat!(nums, n+1)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-7, 3, 1, -1, -1, 0, 4], 6) == ????)\nend\n\n\n",
        "answer": "-1"
    },
    {
        "id": 774,
        "code": "\nfunction f(num::Int64, name::String)::String \n    f_str = \"quiz leader = $name, count = $num\"\n    return f_str\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(23, \"Cornareti\") == ????)\nend\n\n\n",
        "answer": "\"Cornareti\""
    },
    {
        "id": 775,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    count = length(nums)\n    for i in 1:count ÷ 2\n        nums[i], nums[count-i+1] = nums[count-i+1], nums[i]\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2, 6, 1, 3, 1]) == ????)\nend\n\n\n",
        "answer": "([1, 3, 2, 1, 3], [3, 2, 1, 3, 1])"
    },
    {
        "id": 776,
        "res": 0
    },
    {
        "id": 777,
        "code": "\nfunction f(names::Vector{String}, excluded::String)::Vector{String} \n    for i in 1:length(names)\n        if occursin(excluded, names[i])\n            names[i] = replace(names[i], excluded => \"\")\n        end\n    end\n    return names\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"avc  a .d e\"], \"\") == ????)\nend\n\n\n",
        "answer": "[\"avc\", \"a\", \"de\"]"
    },
    {
        "id": 778,
        "code": "\nfunction f(prefix::String, text::String)::String \n    if startswith(text, prefix)\n        return text\n    else\n        return prefix * text\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"mjs\", \"mjqwmjsqjwisojqwiso\") == ????)\nend\n\n\n",
        "answer": "\"mjjs\""
    },
    {
        "id": 779,
        "res": 0
    },
    {
        "id": 780,
        "code": "\nfunction f(ints::Vector{Int64})::String \n    counts = zeros(Int64, 301)\n    \n    for i in ints\n        counts[i + 1] += 1\n    end\n    \n    r = []\n    for i in 1:length(counts)\n        if counts[i] >= 3\n            push!(r, string(i - 1))\n        end\n    end\n    \n    return join(r, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2, 3, 5, 2, 4, 5, 2, 89]) == ????)\nend\n\n\n",
        "answer": "\"2 3 5 2 4 5 2\""
    },
    {
        "id": 781,
        "code": "\n\nfunction f(s::String, ch::String)::String \n    if !occursin(ch, s)\n        return \"\"\n    end\n    s = reverse(split(s, ch)[2])\n    for i in 1:length(s)\n        s = reverse(split(s, ch)[2])\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"shivajimonto6\", \"6\") == ????)\nend\n\n\n",
        "answer": "\"6\""
    },
    {
        "id": 782,
        "code": "\nfunction f(input::String)::Bool \n    for char in input\n        if isuppercase(char)\n            return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a j c n x X k\") == ????)\nend\n\n\n",
        "answer": "false"
    },
    {
        "id": 783,
        "code": "\n\nfunction f(text::String, comparison::String)::Int64 \n    length_c = length(comparison)\n    if length_c <= length(text)\n        for i in 1:length_c\n            if comparison[length_c - i + 1] != text[length(text) - i + 1]\n                return i - 1\n            end\n        end\n    end\n    return length_c\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"managed\", \"\") == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 784,
        "code": "\n\nfunction f(key::String, value::String)::Tuple{String, String}\n    dict_ = Dict(key => value)\n    return (key, dict_[key])\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"read\", \"Is\") == ????)\nend\n\n\n",
        "answer": "(\"read\", \"Is\")"
    },
    {
        "id": 785,
        "res": 0
    },
    {
        "id": 786,
        "code": "\n\nfunction f(text::String, letter::String)::String \n    if occursin(letter, text)\n        start = findfirst(letter, text)\n        return text[start[1]+1:end] * text[1:start[1]]\n    end\n    return text\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"19kefp7\", \"9\") == ????)\nend\n\n\n",
        "answer": "\"19kefp79\""
    },
    {
        "id": 787,
        "code": "\nfunction f(text::String)::String \n    if length(text) == 0\n        return \"\"\n    end\n    text = lowercase(text)\n    return uppercase(text[1]) * text[2:end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"xzd\") == ????)\nend\n\n\n",
        "answer": "\"\""
    },
    {
        "id": 788,
        "code": "\nfunction f(text::String, suffix::String)::String \n    if startswith(suffix, \"/\")\n        return text * suffix[2:end]\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"hello.txt\", \"/\") == ????)\nend\n\n\n",
        "answer": "\"hello.txt\""
    },
    {
        "id": 789,
        "code": "\nfunction f(text::String, n::Int64)::String \n    if n < 0 || length(text) <= n\n        return text\n    end\n    \n    result = text[1:n]\n    i = length(result)\n    while i >= 1\n        if result[i] != text[i]\n            break\n        end\n        i -= 1\n    end\n    \n    return text[1:i]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"bR\", -1) == ????)\nend\n\n\n",
        "answer": "\"\""
    },
    {
        "id": 790,
        "code": "\n\nfunction f(d::Dict{String, String})::Tuple{Bool, Bool} \n    r = Dict{String, Dict{String, String}}()\n    r[\"c\"] = copy(d)\n    r[\"d\"] = copy(d)\n    return (r[\"c\"] === r[\"d\"], r[\"c\"] == r[\"d\"])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"i\" => \"1\", \"love\" => \"parakeets\")) == ????)\nend\n\n\n",
        "answer": "(false, false)"
    },
    {
        "id": 791,
        "code": "\nfunction f(integer::Int64, n::Int64)::String \n    i = 1\n    text = string(integer)\n    while i + length(text) < n\n        i += length(text)\n    end\n    return string(integer, base=10, pad=i + length(text))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(8999, 2) == ????)\nend\n\n\n",
        "answer": "\"99\""
    },
    {
        "id": 792,
        "res": 0
    },
    {
        "id": 793,
        "code": "\n\nfunction f(lst::Vector{Int64}, start::Int64, end_val::Int64)::Int64 \n    count = 0\n    for i in start:end_val-1\n        for j in i+1:end_val\n            if lst[i+1] != lst[j]\n                count += 1\n            end\n        end\n    end\n    return count\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 4, 3, 2, 1], 0, 3) == ????)\nend\n\n\n",
        "answer": "0"
    },
    {
        "id": 794,
        "res": 0
    },
    {
        "id": 795,
        "code": "\nfunction f(text::String)::String \n    return replace(titlecase(text), \"Io\" => \"io\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Fu,ux zfujijabji pfu.\") == ????)\nend\n\n\n",
        "answer": "\"FUJIBA\""
    },
    {
        "id": 796,
        "code": "\nfunction f(str::String, toget::String)::String \n    if startswith(str, toget)\n        return str[length(toget) + 1:end]\n    else\n        return str\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"fnuiyh\", \"ni\") == ????)\nend\n\n\n",
        "answer": "\"ny\""
    },
    {
        "id": 797,
        "code": "\nfunction f(dct::Dict{String, Int})::Vector{Tuple{String, Int}}\n    lst = []\n    for key in sort(collect(keys(dct)))\n        push!(lst, (key, dct[key]))\n    end\n    return lst\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => 2, \"c\" => 3)) == ????)\nend\n\n\n",
        "answer": "[\"a\", \"b\", \"c\"]"
    },
    {
        "id": 798,
        "code": "\nfunction f(text::String, pre::String)::String \n    if !startswith(text, pre)\n        return text\n    end\n    return replace(text, pre => \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"@hihu@!\", \"@hihu\") == ????)\nend\n\n\n",
        "answer": "\"hihu\""
    },
    {
        "id": 799,
        "code": "\nfunction f(st::String)::String \n    if st[1] == '~'\n        e = rpad(st, 10, 's')\n        return f(e)\n    else\n        return lpad(st, 10, 'n')\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"eqe-;ew22\") == ????)\nend\n\n\n",
        "answer": "\"eqn;ew2\""
    }
]