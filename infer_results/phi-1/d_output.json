[
    {
        "id": 0,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpikeq2_ou.d(29): Error: using the result of a comma expression is not allowed\n/tmp/tmpikeq2_ou.d(29): Error: incompatible types for `(f([1L, 1L, 3L, 1L, 3L, 1L])) == (3L , 1L)`: `Tuple!(long, long)[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpikeq2_ou.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nTuple!(long, long)[] f(long[] nums) \n{\n    Tuple!(long, long)[] output;\n    foreach (n; nums)\n    {\n        long count = 0;\n        foreach (num; nums)\n        {\n            if (num == n)\n            {\n                count++;\n            }\n        }\n        output ~= tuple(count, n);\n    }\n    output.sort!((a, b) => a > b);\n    return output;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 1L, 3L, 1L, 3L, 1L]) == (3L, 1L));\n}\nvoid main(){}\n\n",
        "answer": "(3L, 1L)"
    },
    {
        "id": 1,
        "res": 0
    },
    {
        "id": 2,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp0p_uxjeh.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x55ed0e583335]\n??:? void tmp0p_uxjeh.__unittest_L11_C1() [0x55ed0e5797b6]\n??:? void tmp0p_uxjeh.__modtest() [0x55ed0e57a678]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55ed0e58b1b6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55ed0e57bce7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55ed0e586923]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55ed0e5869b5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55ed0e5868b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55ed0e57bcb9]\n??:? runModuleUnitTests [0x55ed0e58afeb]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text) \n{\n    auto new_text = text.replace(\"+\", \"\");\n    return new_text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"hbtofdeiequ\") == \"hello\");\n}\nvoid main(){}\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 3,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpblq6fowv.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x55cb364c3685]\n??:? void tmpblq6fowv.__unittest_L11_C1() [0x55cb364c27e9]\n??:? void tmpblq6fowv.__modtest() [0x55cb364c34a4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55cb364c8cfe]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55cb364c6cef]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55cb364cdd4f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55cb364ce221]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55cb364cdcdd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55cb364c6cc1]\n??:? runModuleUnitTests [0x55cb364c8b33]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\n\nstring f(string text, string value) \n{\n    auto text_list = text.dup;\n    text_list ~= value;\n    return text_list.idup;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"bcksrut\", \"q\") == \"bcksrut\");\n}\nvoid main(){}\n\n",
        "answer": "\"bcksrut\""
    },
    {
        "id": 4,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp_xgxq5oy.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x55e8e30156f9]\n??:? void tmp_xgxq5oy.__unittest_L12_C1() [0x55e8e3014866]\n??:? void tmp_xgxq5oy.__modtest() [0x55e8e3014a38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55e8e3022936]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55e8e301542b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55e8e301793f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55e8e30179d1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55e8e30178cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55e8e30153fd]\n??:? runModuleUnitTests [0x55e8e302276b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string[] array) \n{\n    string s = \" \";\n    foreach (str; array) {\n        s ~= str;\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\" \", \"  \", \"    \", \"   \"]) == \"   \");\n}\nvoid main(){}\n\n",
        "answer": "\"   \""
    },
    {
        "id": 5,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpvx6y1hni.d(26): Error: none of the overloads of template `std.typecons.Tuple!(long, string).Tuple.opEquals` are callable using argument types `!()(long)`\n/usr/include/dmd/phobos/std/typecons.d(796):        Candidates are: `opEquals(R)(R rhs)`\n  with `R = long`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(803):                        `opEquals(R)(R rhs) const`\n  with `R = long`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(810):                        `opEquals(R...)(auto ref R rhs)`\n  with `R = (long)`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > R.length > 1\n  - areCompatibleTuples!(typeof(this), Tuple!R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n  Tip: not satisfied constraints are marked with `>`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvx6y1hni.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\nimport std.array;\nimport std.ascii;\n\nTuple!(long, string) f(string text, string lower, string upper) {\n    long count = 0;\n    string new_text;\n    foreach (char c; text) {\n        char new_char = c.isDigit ? lower[0] : upper[0];\n        if (new_char == 'p' || new_char == 'C') {\n            count++;\n        }\n        new_text ~= new_char;\n    }\n    return tuple(count, new_text);\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"DSUWeqExTQdCMGpqur\", \"a\", \"x\") == 0L);\n}\nvoid main(){}\n\n",
        "answer": "0L"
    },
    {
        "id": 6,
        "res": 0
    },
    {
        "id": 7,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.range;\n\nlong[] f(long[] list) \n{\n    auto original = list;\n    while (list.length > 1)\n    {\n        list.length--;\n        foreach (i; 0 .. list.length)\n        {\n            list = list[0 .. i] ~ list[i+1 .. $];\n        }\n    }\n    list = original;\n    if (list.length > 0)\n    {\n        list = list[1 .. $];\n    }\n    return list;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([]) == []);\n}\nvoid main(){}\n\n",
        "answer": "[]"
    },
    {
        "id": 8,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp4i0dl1dj.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x56158c0acea9]\n??:? void tmp4i0dl1dj.__unittest_L28_C1() [0x56158c0ab8e9]\n??:? void tmp4i0dl1dj.__modtest() [0x56158c0ab964]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56158c0ba246]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56158c0acb37]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56158c0af31b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56158c0af3ad]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56158c0af2a9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56158c0acb09]\n??:? runModuleUnitTests [0x56158c0ba07b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\n\nstring f(string s, long encryption) \n{\n    if (encryption == 0)\n        return s;\n\n    s = s.toUpper();\n    string result = \"\";\n    foreach (char c; s)\n    {\n        if ('A' <= c && c <= 'Z')\n        {\n            result ~= ((c - 'A' + 13) % 26) + 'A';\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"UppEr\", 0L) == \"HELLO WORLD\");\n}\nvoid main(){}\n\n",
        "answer": "\"HELLO WORLD\""
    },
    {
        "id": 9,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpwgsbix6y.d(22): Error: undefined identifier `False`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwgsbix6y.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nbool f(string t) \n{\n    foreach (c; t)\n    {\n        if (c < '0' || c > '9')\n        {\n            return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"#284376598\") == False);\n}\nvoid main(){}\n\n",
        "answer": "False"
    },
    {
        "id": 10,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpz5n8oluj.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x561208a51e39]\n??:? void tmpz5n8oluj.__unittest_L20_C1() [0x561208a50877]\n??:? void tmpz5n8oluj.__modtest() [0x561208a508f4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x561208a5ef92]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x561208a51ac7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x561208a542ab]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x561208a5433d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x561208a54239]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x561208a51a99]\n??:? runModuleUnitTests [0x561208a5edc7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.ascii : isAlpha, isDigit;\n\nstring f(string text) \n{\n    string new_text = \"\";\n    foreach (ch; text)\n    {\n        if (isDigit(ch) || (ch == 'ä' || ch == 'Ä' || ch == 'ï' || ch == 'Ï' || ch == '�' || ch == 'Ö' || ch == '�' || ch == 'Ü'))\n        {\n            new_text ~= ch;\n        }\n    }\n    return new_text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"\") == \"aeiou\");\n}\nvoid main(){}\n\n",
        "answer": "\"aeiou\""
    },
    {
        "id": 11,
        "res": 0
    },
    {
        "id": 12,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpsih_9ylm.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x56211dff99c1]\n??:? void tmpsih_9ylm.__unittest_L13_C1() [0x56211dff9861]\n??:? void tmpsih_9ylm.__modtest() [0x56211dff992c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56211dffcf52]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56211e0031a3]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56211e00da87]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56211e001639]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56211e00da15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56211e003175]\n??:? runModuleUnitTests [0x56211dffcd87]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string s, string x) \n{\n    size_t count = 0;\n    while (s[0 .. x.length] == x && count < s.length - x.length) {\n        s = s[x.length .. $];\n        count += x.length;\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"If you want to live a happy life! Daniel\", \"Daniel\") == \"life\");\n}\nvoid main(){}\n\n",
        "answer": "\"life\""
    },
    {
        "id": 13,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmplzut5y36.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x55b477e10591]\n??:? void tmplzut5y36.__unittest_L33_C1() [0x55b477e0f8ad]\n??:? void tmplzut5y36.__modtest() [0x55b477e0f8d4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55b477e1cc52]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55b477e102c3]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55b477e11d93]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55b477e11e25]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55b477e11d21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55b477e10295]\n??:? runModuleUnitTests [0x55b477e1ca87]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong f(string[] names) \n{\n    long numberOfNames = 0;\n    foreach (i; names)\n    {\n        if (i.canBeOnlyAlpha)\n        {\n            numberOfNames++;\n        }\n    }\n    return numberOfNames;\n}\n\nbool canBeOnlyAlpha(string s)\n{\n    foreach (c; s)\n    {\n        if (!('a' <= c && c <= 'z') && !('A' <= c && c <= 'Z'))\n        {\n            return false;\n        }\n    }\n    return true;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"sharron\", \"Savannah\", \"Mike Cherokee\"]) == 3L);\n}\nvoid main(){}\n\n",
        "answer": "3L"
    },
    {
        "id": 14,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpaqd097p0.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x55652cca94d5]\n??:? void tmpaqd097p0.__unittest_L15_C1() [0x55652cca67be]\n??:? void tmpaqd097p0.__modtest() [0x55652cca7e44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55652ccb6c6e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55652cca9017]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55652ccabbc3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55652ccabc55]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55652ccabb51]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55652cca8fe9]\n??:? runModuleUnitTests [0x55652ccb6aa3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.range;\nimport std.string;\n\nstring f(string s) \n{\n    auto arr = s.strip().dup;\n    arr.reverse();\n    return arr.idup;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"   OOP   \") == \"OLOP\");\n}\nvoid main(){}\n\n",
        "answer": "\"OLOP\""
    },
    {
        "id": 15,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpqthaclio.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x563ba7f9336d]\n??:? void tmpqthaclio.__unittest_L12_C1() [0x563ba7f897f4]\n??:? void tmpqthaclio.__modtest() [0x563ba7f8a6b4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x563ba7f9b446]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x563ba7f8bd1f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x563ba7f9695b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x563ba7f969ed]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x563ba7f968e9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x563ba7f8bcf1]\n??:? runModuleUnitTests [0x563ba7f9b27b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.string;\n\nstring f(string text, string wrong, string right) \n{\n    auto new_text = text.replace(wrong, right);\n    return toUpper(new_text);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"zn kgd jw lnt\", \"h\", \"u\") == \"HELLO WORLD\");\n}\nvoid main(){}\n\n",
        "answer": "\"HELLO WORLD\""
    },
    {
        "id": 16,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp410ia1lq.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x557b376499a9]\n??:? void tmp410ia1lq.__unittest_L11_C1() [0x557b37649845]\n??:? void tmp410ia1lq.__modtest() [0x557b37649910]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x557b3764cf3a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x557b3765318b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x557b3765da6f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x557b37651621]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x557b3765d9fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x557b3765315d]\n??:? runModuleUnitTests [0x557b3764cd6f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text, string suffix) \n{\n    if (text[$-suffix.length .. $] == suffix) {\n        return text[0 .. $-suffix.length];\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"zejrohaj\", \"owc\") == \"zebra\");\n}\nvoid main(){}\n\n",
        "answer": "\"zebra\""
    },
    {
        "id": 17,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpst5pv0z1.d(15): Error: incompatible types for `(f(\"There are, no, commas, in this text\")) == (\"There are\")`: `long` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpst5pv0z1.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nlong f(string text) \n{\n    return text.indexOf(\",\");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"There are, no, commas, in this text\") == \"There are\");\n}\nvoid main(){}\n\n",
        "answer": "\"There are\""
    },
    {
        "id": 18,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmplxilh3f6.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x55e8c3d2f7cd]\n??:? void tmplxilh3f6.__unittest_L20_C1() [0x55e8c3d2e913]\n??:? void tmplxilh3f6.__modtest() [0x55e8c3d2f5ec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55e8c3d35f1a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55e8c3d33dbb]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55e8c3d3b103]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55e8c3d3b5d5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55e8c3d3b091]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55e8c3d33d8d]\n??:? runModuleUnitTests [0x55e8c3d35d4f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\n\nlong[] f(long[] array, long elem) \n{\n    long k = 0;\n    auto l = array.dup;\n    foreach (i; l)\n    {\n        if (i > elem)\n        {\n            array = array[0 .. k] ~ [elem] ~ array[k .. $];\n            break;\n        }\n        k++;\n    }\n    return array;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([5L, 4L, 3L, 2L, 1L, 0L], 3L) == [3L]);\n}\nvoid main(){}\n\n",
        "answer": "[3L]"
    },
    {
        "id": 19,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmphguwniwu.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x5593da774d91]\n??:? void tmphguwniwu.__unittest_L21_C1() [0x5593da7588a2]\n??:? void tmphguwniwu.__modtest() [0x5593da76a6f0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5593da77e66a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5593da76c25b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5593da77a7d7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5593da77a869]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5593da77a765]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5593da76c22d]\n??:? runModuleUnitTests [0x5593da77e49f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.conv;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string x, string y) {\n    char[] yMutable = y.dup;\n    yMutable.reverse();\n    string tmp = yMutable.map!(c => c == '9' ? '0' : '9').array.map!(c => c.to!string).array.join(\"\");\n    if (x.isNumeric && tmp.isNumeric) {\n        return x ~ tmp;\n    } else {\n        return x;\n    }\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"\", \"sdasdnakjsda80\") == \"sdasdnakjsda80\");\n}\nvoid main(){}\n\n",
        "answer": "\"sdasdnakjsda80\""
    },
    {
        "id": 20,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpwgjemz0x.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x55a876aa8a59]\n??:? void tmpwgjemz0x.__unittest_L13_C1() [0x55a876aa8802]\n??:? void tmpwgjemz0x.__modtest() [0x55a876aa89c0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55a876aae582]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55a876aac44b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55a876ab3367]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55a876ab3839]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55a876ab32f5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55a876aac41d]\n??:? runModuleUnitTests [0x55a876aae3b7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text) \n{\n    string result = \"\";\n    foreach (i; 0 .. text.length)\n    {\n        result = text[i] ~ result;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"was,\") == \"was,was\");\n}\nvoid main(){}\n\n",
        "answer": "\"was,was\""
    },
    {
        "id": 21,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp_8_130xm.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x555d8222dbb5]\n??:? void tmp_8_130xm.__unittest_L17_C1() [0x555d8222d8ba]\n??:? void tmp_8_130xm.__modtest() [0x555d8222da94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x555d82233fc2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x555d82231e8b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x555d8223849f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x555d82238971]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x555d8223842d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x555d82231e5d]\n??:? runModuleUnitTests [0x555d82233df7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nlong[] f(long[] array) \n{\n    if (array.length > 0) {\n        auto n = array.back;\n        array.length--;\n        array ~= n;\n        array ~= n;\n    }\n    return array;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 1L, 2L, 2L]) == [1, 1, 2, 2]);\n}\nvoid main(){}\n\n",
        "answer": "[1, 1, 2, 2]"
    },
    {
        "id": 22,
        "res": 0
    },
    {
        "id": 23,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpu7rr7u5v.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x560ca3a017dd]\n??:? void tmpu7rr7u5v.__unittest_L18_C1() [0x560ca39f6851]\n??:? void tmpu7rr7u5v.__modtest() [0x560ca39f8778]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x560ca3a09ab2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x560ca39fa0ff]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x560ca3a04e6b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x560ca3a04efd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x560ca3a04df9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x560ca39fa0d1]\n??:? runModuleUnitTests [0x560ca3a098e7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text, string chars) \n{\n    if (chars.length > 0) {\n        text = stripRight(text, chars);\n    } else {\n        text = stripRight(text, \" \");\n    }\n    if (text == \"\") {\n        return \"-\";\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"new-medium-performing-application - XQuery 2.2\", \"0123456789-\") == \"new-medium-performing-application\");\n}\nvoid main(){}\n\n",
        "answer": "\"new-medium-performing-application\""
    },
    {
        "id": 24,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmphdk12qqt.d(13): Error: using the result of a comma expression is not allowed\n/tmp/tmphdk12qqt.d(13): Error: using the result of a comma expression is not allowed\n/tmp/tmphdk12qqt.d(13): Error: using the result of a comma expression is not allowed\n/tmp/tmphdk12qqt.d(13): Error: using the result of a comma expression is not allowed\n/tmp/tmphdk12qqt.d(13): Error: using the result of a comma expression is not allowed\n/tmp/tmphdk12qqt.d(13): Error: using the result of a comma expression is not allowed\n/tmp/tmphdk12qqt.d(13): Error: incompatible types for `(f([35L, 45L, 3L, 61L, 39L, 27L, 47L], 0L)) == (35L , 45L , 3L , 61L , 39L , 27L , 47L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphdk12qqt.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] nums, long i) \n{\n    nums = nums[0 .. i] ~ nums[i + 1 .. $];\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([35L, 45L, 3L, 61L, 39L, 27L, 47L], 0L) == (35L, 45L, 3L, 61L, 39L, 27L, 47L));\n}\nvoid main(){}\n\n",
        "answer": "(35L, 45L, 3L, 61L, 39L, 27L, 47L)"
    },
    {
        "id": 25,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp7fjm34km.d(27): Error: incompatible types for `(result.get()) == (\"tuple(3L, 2L)\")`: `long[string]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7fjm34km.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm : remove;\n\nNullable!(long[string]) f(Nullable!(long[string]) d)\n{\n    if (!d.isNull)\n    {\n        auto copyD = d.get();\n        if (copyD.length > 0)\n        {\n            copyD.remove(copyD.keys[0]);\n        }\n        return Nullable!(long[string])(copyD);\n    }\n    return Nullable!(long[string]).init;\n}\n\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([\"l\": 1L, \"t\": 2L, \"x:\": 3L].nullable);\n        assert(!result.isNull && result.get == \"tuple(3L, 2L)\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"tuple(3L, 2L)\""
    },
    {
        "id": 26,
        "res": 0
    },
    {
        "id": 27,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpwi7kfdwg.d(23): Error: incompatible types for `(f(\"flak\")) == (\"flak\")`: `bool` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwi7kfdwg.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.range;\n\nbool f(string w) \n{\n    auto ls = w.dup;\n    string omw = \"\";\n    while (ls.length > 0) {\n        omw ~= ls.front;\n        ls.popFront();\n        if (ls.length * 2 > w.length && w[ls.length..$] == omw) {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"flak\") == \"flak\");\n}\nvoid main(){}\n\n",
        "answer": "\"flak\""
    },
    {
        "id": 28,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpdfq3zyzz.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x55a6206dcdf5]\n??:? void tmpdfq3zyzz.__unittest_L13_C1() [0x55a6206d07cc]\n??:? void tmpdfq3zyzz.__modtest() [0x55a6206d42a4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55a6206e53ea]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55a6206d56e7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55a6206e0eab]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55a6206e0f3d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55a6206e0e39]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55a6206d56b9]\n??:? runModuleUnitTests [0x55a6206e521f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nbool f(long[] mylist) \n{\n    auto revl = mylist.dup;\n    revl.reverse();\n    mylist.sort!\"a > b\";\n    return equal(mylist, revl);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([5L, 8L]) == false);\n}\nvoid main(){}\n\n",
        "answer": "false"
    },
    {
        "id": 29,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpdw8a95ih.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x5578161a2acd]\n??:? void tmpdw8a95ih.__unittest_L19_C1() [0x5578161a2886]\n??:? void tmpdw8a95ih.__modtest() [0x5578161a29ac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5578161a7ca6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5578161a5c97]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5578161abfeb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5578161ac4bd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5578161abf79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5578161a5c69]\n??:? runModuleUnitTests [0x5578161a7adb]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text) \n{\n    string nums;\n    foreach (char c; text)\n    {\n        if (c >= '0' && c <= '9')\n        {\n            nums ~= c;\n        }\n    }\n    \n    assert(nums.length > 0, \"No numeric characters found in the text.\");\n    \n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"-123   \t+314\") == \"123\");\n}\nvoid main(){}\n\n",
        "answer": "\"123\""
    },
    {
        "id": 30,
        "res": 0
    },
    {
        "id": 31,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nlong f(string string) \n{\n    long upper = 0;\n    foreach (c; string) {\n        if (std.ascii.isUpper(c)) {\n            upper += 1;\n        }\n    }\n    return upper * [2, 1][upper % 2];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"PoIOarTvpoead\") == 8L);\n}\nvoid main(){}\n\n",
        "answer": "8L"
    },
    {
        "id": 32,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp5dqszjnb.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x55a2ade5912d]\n??:? void tmp5dqszjnb.__unittest_L14_C1() [0x55a2ade4d819]\n??:? void tmp5dqszjnb.__modtest() [0x55a2ade50404]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55a2ade62c26]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55a2ade51967]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55a2ade5e967]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55a2ade5e9f9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55a2ade5e8f5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55a2ade51939]\n??:? runModuleUnitTests [0x55a2ade62a5b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.algorithm;\n\nstring f(string s, string sep) \n{\n    string[] parts = s.split(sep);\n    string[] reverse = parts.map!(e => \"*\" ~ e).array;\n    \n    return reverse.reverse.join(\";\");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"volume\", \"l\") == \"l*v;l*a;l*n;l*a\");\n}\nvoid main(){}\n\n",
        "answer": "\"l*v;l*a;l*n;l*a\""
    },
    {
        "id": 33,
        "res": 0
    },
    {
        "id": 34,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp5efil9h9.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x56454ef55cad]\n??:? void tmp5efil9h9.__unittest_L11_C1() [0x56454ef4b8b8]\n??:? void tmp5efil9h9.__modtest() [0x56454ef4d298]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56454ef5fd06]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56454ef4e4e7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56454ef5b4c7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56454ef5b559]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56454ef5b455]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56454ef4e4b9]\n??:? runModuleUnitTests [0x56454ef5fb3b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.algorithm;\nimport std.array;\nimport std.typecons;\n\nlong[] f(long[] nums, long odd1, long odd2) {\n    nums = nums.filter!(n => n != odd1 && n != odd2).array;\n    return nums;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, 3L, 7L, 7L, 6L, 8L, 4L, 1L, 2L, 3L, 5L, 1L, 3L, 21L, 1L, 3L], 3L, 1L) == [3L, 7L, 6L, 8L, 4L, 1L, 2L, 21L]);\n}\nvoid main(){}\n\n",
        "answer": "[3L, 7L, 6L, 8L, 4L, 1L, 2L, 21L]"
    },
    {
        "id": 35,
        "res": 0
    },
    {
        "id": 36,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpvscm2qos.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x556af94af775]\n??:? void tmpvscm2qos.__unittest_L17_C1() [0x556af94a47e6]\n??:? void tmpvscm2qos.__modtest() [0x556af94a6710]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x556af94b7a4a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x556af94a8097]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x556af94b2e03]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x556af94b2e95]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x556af94b2d91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x556af94a8069]\n??:? runModuleUnitTests [0x556af94b787f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text, string chars) \n{\n    if (text.empty)\n    {\n        return text;\n    }\n    else\n    {\n        return text.stripRight(chars);\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"ha\", \"\") == \"hello\");\n}\nvoid main(){}\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 37,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpj6mza_79.d(17): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj6mza_79.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nstring[] f(string text) \n{\n    string[] text_arr;\n    foreach (j; 0 .. text.length)\n    {\n        text_arr ~= text[j .. $];\n    }\n    return text_arr;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"123\") == \"123\");\n}\nvoid main(){}\n\n",
        "answer": "\"123\""
    },
    {
        "id": 38,
        "res": 0
    },
    {
        "id": 39,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmptezq303v.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x55b1be0808a9]\n??:? void tmptezq303v.__unittest_L13_C1() [0x55b1be0807eb]\n??:? void tmptezq303v.__modtest() [0x55b1be080810]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55b1be084fa6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55b1be083117]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55b1be089adb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55b1be089fad]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55b1be089a69]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55b1be0830e9]\n??:? runModuleUnitTests [0x55b1be084ddb]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nlong f(long[] array, long elem) \n{\n    foreach(i, value; array) {\n        if (value == elem) {\n            return i;\n        }\n    }\n    return -1;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([6L, 2L, 7L, 1L], 6L) == -1);\n}\nvoid main(){}\n\n",
        "answer": "-1"
    },
    {
        "id": 40,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmppvf3xks0.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x558279f45e19]\n??:? void tmppvf3xks0.__unittest_L11_C1() [0x558279f447a6]\n??:? void tmppvf3xks0.__modtest() [0x558279f448d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x558279f53606]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x558279f45aa7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x558279f48a6b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x558279f48afd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x558279f489f9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x558279f45a79]\n??:? runModuleUnitTests [0x558279f5343b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text) \n{\n    return text ~ \"#\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"the cow goes moo\") == \"the cow goes moo\");\n}\nvoid main(){}\n\n",
        "answer": "\"the cow goes moo\""
    },
    {
        "id": 41,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmprjrmcwgf.d(21): Error: using the result of a comma expression is not allowed\n/tmp/tmprjrmcwgf.d(21): Error: using the result of a comma expression is not allowed\n/tmp/tmprjrmcwgf.d(21): Error: incompatible types for `(f([58L], [21L, 92L])) == (58L , 21L , 92L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprjrmcwgf.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nlong[] f(long[] array, long[] values) \n{\n    array.reverse();\n    foreach (value; values)\n    {\n        array = array[0 .. array.length / 2] ~ [value] ~ array[array.length / 2 .. $];\n    }\n    array.reverse();\n    return array;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([58L], [21L, 92L]) == (58L, 21L, 92L));\n}\nvoid main(){}\n\n",
        "answer": "(58L, 21L, 92L)"
    },
    {
        "id": 42,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpt6vj1xfs.d(17): Error: using the result of a comma expression is not allowed\n/tmp/tmpt6vj1xfs.d(17): Error: using the result of a comma expression is not allowed\n/tmp/tmpt6vj1xfs.d(17): Error: using the result of a comma expression is not allowed\n/tmp/tmpt6vj1xfs.d(17): Error: using the result of a comma expression is not allowed\n/tmp/tmpt6vj1xfs.d(17): Error: using the result of a comma expression is not allowed\n/tmp/tmpt6vj1xfs.d(17): Error: using the result of a comma expression is not allowed\n/tmp/tmpt6vj1xfs.d(17): Error: using the result of a comma expression is not allowed\n/tmp/tmpt6vj1xfs.d(17): Error: incompatible types for `(f([4L, 3L, 2L, 1L, 2L, -1L, 4L, 2L])) == (4L , 3L , 2L , 1L , 2L , -1L , 4L , 2L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt6vj1xfs.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] nums) \n{\n    nums.length = 0;\n    foreach (num; nums)\n    {\n        nums ~= num * 2;\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([4L, 3L, 2L, 1L, 2L, -1L, 4L, 2L]) == (4L, 3L, 2L, 1L, 2L, -1L, 4L, 2L));\n}\nvoid main(){}\n\n",
        "answer": "(4L, 3L, 2L, 1L, 2L, -1L, 4L, 2L)"
    },
    {
        "id": 43,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\nimport std.conv;\n\nlong f(string n) \n{\n    foreach (i; n) {\n        if (!isDigit(i)) {\n            return -1;\n        }\n    }\n    return to!int(n);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"6 ** 2\") == -1);\n}\nvoid main(){}\n\n",
        "answer": "-1"
    },
    {
        "id": 44,
        "res": 0
    },
    {
        "id": 45,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpt34epqwn.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x560e7db5d2b5]\n??:? void tmpt34epqwn.__unittest_L17_C1() [0x560e7db5c884]\n??:? void tmpt34epqwn.__modtest() [0x560e7db5c8f4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x560e7db69f02]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x560e7db5d19f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x560e7db5f43f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x560e7db5f4d1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x560e7db5f3cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x560e7db5d171]\n??:? runModuleUnitTests [0x560e7db69d37]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.algorithm;\n\nlong f(string text, string letter) \n{\n    long[char] counts;\n    foreach (c; text)\n    {\n        counts[c] = counts.get(c, 0) + 1;\n    }\n    return counts.get(letter[0], 0);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"za1fd1as8f7afasdfam97adfa\", \"7\") == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 46,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nstring f(string[] l, string c) \n{\n    return l.join(c);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"many\", \"letters\", \"asvsz\", \"hello\", \"man\"], \"\") == \"manylettersasvszhelloman\");\n}\nvoid main(){}\n\n",
        "answer": "\"manylettersasvszhelloman\""
    },
    {
        "id": 47,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpx35_utc9.d(21): Error: incompatible types for `(f(\"bbbbr\")) == (\"bbbbr\")`: `bool` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx35_utc9.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nbool f(string text) \n{\n    auto length = text.length;\n    auto half = cast(size_t)(length / 2);\n    auto encode = text[0 .. half].dup.toStringz;\n    \n    if (text[half .. $] == encode.fromStringz)\n        return true;\n    else\n        return false;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"bbbbr\") == \"bbbbr\");\n}\nvoid main(){}\n\n",
        "answer": "\"bbbbr\""
    },
    {
        "id": 48,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp6b32w2ho.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x555fb026e3a5]\n??:? void tmp6b32w2ho.__unittest_L25_C1() [0x555fb026390e]\n??:? void tmp6b32w2ho.__modtest() [0x555fb0265450]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x555fb027829a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x555fb0266bdf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x555fb0273cdf]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x555fb0273d71]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x555fb0273c6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x555fb0266bb1]\n??:? runModuleUnitTests [0x555fb02780cf]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string[] names) \n{\n    if(names.length == 0)\n    {\n        return \"\";\n    }\n    string smallest = names[0];\n    foreach(name; names[1 .. $])\n    {\n        if(name < smallest)\n        {\n            smallest = name;\n        }\n    }\n    names = names.filter!(a => a != smallest).array;\n    return smallest;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([]) == \"a\");\n}\nvoid main(){}\n\n",
        "answer": "\"a\""
    },
    {
        "id": 49,
        "res": true,
        "code": "\n\nimport std.regex;\nimport std.algorithm;\nimport std.array;\nimport std.conv;\n\nstring f(string text) {\n    if (matchFirst(text, regex(r\"^[a-zA-Z_][a-zA-Z0-9_]*$\"))) {\n        return text.filter!(c => c >= '0' && c <= '9').array.to!string;\n    } else {\n        return text;\n    }\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"816\") == \"816\");\n}\nvoid main(){}\n\n",
        "answer": "\"816\""
    },
    {
        "id": 50,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpvgdoft1l.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x5569030cc651]\n??:? void tmpvgdoft1l.__unittest_L17_C1() [0x5569030cb875]\n??:? void tmpvgdoft1l.__modtest() [0x5569030cb994]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5569030d9b5e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5569030cc383]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5569030ce8e3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5569030ce975]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5569030ce871]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5569030cc355]\n??:? runModuleUnitTests [0x5569030d9993]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(string[] lst) \n{\n    lst.length = 0;\n    long[] result;\n    foreach (i; 0 .. lst.length + 1) {\n        result ~= 1;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"a\", \"c\", \"v\"]) == \"a\");\n}\nvoid main(){}\n\n",
        "answer": "\"a\""
    },
    {
        "id": 51,
        "res": 0
    },
    {
        "id": 52,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpzhz1pnpz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x562386f76a81]\n??:? void tmpzhz1pnpz.__unittest_L20_C1() [0x562386f768c2]\n??:? void tmpzhz1pnpz.__modtest() [0x562386f769e8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x562386f7bc5a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x562386f79c4b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x562386f7ff9f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x562386f80471]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x562386f7ff2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x562386f79c1d]\n??:? runModuleUnitTests [0x562386f7ba8f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.range;\nimport std.conv;\n\nstring f(string text) \n{\n    string a;\n    foreach (i; 0 .. text.length)\n    {\n        if (!('0' <= text[i] && text[i] <= '9'))\n        {\n            a ~= text[i];\n        }\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"seiq7229 d27\") == \"seven\");\n}\nvoid main(){}\n\n",
        "answer": "\"seven\""
    },
    {
        "id": 53,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpxh09d7aa.d(28): Error: undefined identifier `b`\n/tmp/tmpxh09d7aa.d(28): Error: undefined identifier `c`\n/tmp/tmpxh09d7aa.d(28): Error: undefined identifier `d`\n/tmp/tmpxh09d7aa.d(28): Error: undefined identifier `e`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxh09d7aa.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nlong[] f(string text) \n{\n    char[char] name;\n    name['a'] = 'b';\n    name['b'] = 'c';\n    name['c'] = 'd';\n    name['d'] = 'e';\n    name['e'] = 'f';\n\n    long[char] occ;\n    foreach (ch; text)\n    {\n        char name_char = name.get(ch, ch);\n        occ[name_char] = occ.get(name_char, 0) + 1;\n    }\n    return occ.values;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"URW rNB\") == [b, c, d, e, f]);\n}\nvoid main(){}\n\n",
        "answer": "[b, c, d, e, f]"
    },
    {
        "id": 54,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpqpfkk8qp.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x55f834ef43a5]\n??:? void tmpqpfkk8qp.__unittest_L17_C1() [0x55f834ee9801]\n??:? void tmpqpfkk8qp.__modtest() [0x55f834eeb340]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55f834efc67a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55f834eeccc7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55f834ef7a33]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55f834ef7ac5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55f834ef79c1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55f834eecc99]\n??:? runModuleUnitTests [0x55f834efc4af]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int function(char[][])*).runAll() [0x55f834ef5748]\n??:? void rt.dmain2._d_run_main2(char",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\n\nlong f(string text, long s, long e) \n{\n    string sublist = text[s .. e];\n    if (sublist.empty)\n    {\n        return -1;\n    }\n    return sublist.indexOf(minElement(sublist));\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"happy\", 0L, 3L) == -1);\n}\nvoid main(){}\n\n",
        "answer": "-1"
    },
    {
        "id": 55,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpxs9oyvd0.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x558ec140968d]\n??:? void tmpxs9oyvd0.__unittest_L19_C1() [0x558ec13fd8b9]\n??:? void tmpxs9oyvd0.__modtest() [0x558ec1400a48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x558ec1411b4e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x558ec1401faf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x558ec140d607]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x558ec140d699]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x558ec140d595]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x558ec1401f81]\n??:? runModuleUnitTests [0x558ec1411983]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nlong[] f(long[] array) \n{\n    long[] array_2;\n    foreach (i; array)\n    {\n        if (i > 0)\n        {\n            array_2 ~= i;\n        }\n    }\n    array_2.sort!((a, b) => a > b);\n    return array_2;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([4L, 8L, 17L, 89L, 43L, 14L]) == [14L, 17L, 43L, 89L, 89L, 89L]);\n}\nvoid main(){}\n\n",
        "answer": "[14L, 17L, 43L, 89L, 89L, 89L]"
    },
    {
        "id": 56,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpewakfau_.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x558713d16879]\n??:? void tmpewakfau_.__unittest_L15_C1() [0x558713d167bc]\n??:? void tmpewakfau_.__modtest() [0x558713d167e0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x558713d19c6a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x558713d1ff07]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x558713d2a98b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x558713d1e39d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x558713d2a919]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x558713d1fed9]\n??:? runModuleUnitTests [0x558713d19a9f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nbool f(string sentence) \n{\n    foreach (c; sentence)\n    {\n        if (c >= 0xd800 && c <= 0xdfff)\n            return false;\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"1z1z1\") == false);\n}\nvoid main(){}\n\n",
        "answer": "false"
    },
    {
        "id": 57,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp3ugs4aam.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x56446cd2ed51]\n??:? void tmp3ugs4aam.__unittest_L23_C1() [0x56446cd2d7e6]\n??:? void tmp3ugs4aam.__modtest() [0x56446cd2d80c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56446cd3b302]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56446cd2e9df]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56446cd30733]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56446cd307c5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56446cd306c1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56446cd2e9b1]\n??:? runModuleUnitTests [0x56446cd3b137]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nlong f(string text) \n{\n    auto upperCount = 0;\n    foreach (c; text.toUpper())\n    {\n        if (c == c.toUpper())\n        {\n            upperCount++;\n        }\n        else\n        {\n            return -1;\n        }\n    }\n    return upperCount / 2;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"ax\") == -1);\n}\nvoid main(){}\n\n",
        "answer": "-1"
    },
    {
        "id": 58,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpldx17cti.d(16): Error: using the result of a comma expression is not allowed\n/tmp/tmpldx17cti.d(16): Error: incompatible types for `(f([-1L, 0L, 0L, 1L, 1L])) == (0L , 0L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpldx17cti.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] nums) \n{\n    long count = nums.length;\n    foreach(i; 0 .. count) {\n        nums ~= nums[i % 2];\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([-1L, 0L, 0L, 1L, 1L]) == (0L, 0L));\n}\nvoid main(){}\n\n",
        "answer": "(0L, 0L)"
    },
    {
        "id": 59,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.algorithm;\nimport std.string;\n\nstring f(string s) \n{\n    auto a = s.strip().split(\"\");\n    auto b = a;\n    foreach_reverse (c; a)\n    {\n        if (c == \" \")\n        {\n            b.popBack();\n        }\n        else\n        {\n            break;\n        }\n    }\n    return b.join();\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"hi \") == \"hi\");\n}\nvoid main(){}\n\n",
        "answer": "\"hi\""
    },
    {
        "id": 60,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp9kg2_zil.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x55950266be79]\n??:? void tmp9kg2_zil.__unittest_L18_C1() [0x5595026527fa]\n??:? void tmp9kg2_zil.__modtest() [0x559502661890]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55950267401e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5595026633fb]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55950267012b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5595026701bd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5595026700b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5595026633cd]\n??:? runModuleUnitTests [0x559502673e53]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\nimport std.ascii;\nimport std.conv;\n\nstring f(string doc) {\n    foreach (x; doc) {\n        if (x.isAlpha) {\n            return std.ascii.toUpper(x).to!string;\n        }\n    }\n    return \"-\";\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"raruwa\") == \"RARAWA\");\n}\nvoid main(){}\n\n",
        "answer": "\"RARAWA\""
    },
    {
        "id": 61,
        "res": 0
    },
    {
        "id": 62,
        "res": 0
    },
    {
        "id": 63,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmptsh70qzy.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x56258d25de39]\n??:? void tmptsh70qzy.__unittest_L16_C1() [0x56258d25c819]\n??:? void tmptsh70qzy.__modtest() [0x56258d25c8f4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56258d26a28a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56258d25dac7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56258d25f81f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56258d25f8b1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56258d25f7ad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56258d25da99]\n??:? runModuleUnitTests [0x56258d26a0bf]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.range;\nimport std.string;\n\nstring f(string text, string prefix) \n{\n    while (text.startsWith(prefix)) {\n        text = text[prefix.length .. $];\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"ndbtdabdahesyehu\", \"n\") == \"ndbtdabdahesyehu\");\n}\nvoid main(){}\n\n",
        "answer": "\"ndbtdabdahesyehu\""
    },
    {
        "id": 64,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpwevij1sm.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x5570cf5e2ba1]\n??:? void tmpwevij1sm.__unittest_L18_C1() [0x5570cf5e2818]\n??:? void tmpwevij1sm.__modtest() [0x5570cf5e2b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5570cf5e8502]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5570cf5e654b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5570cf5ed2e7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5570cf5ed7b9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5570cf5ed275]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5570cf5e651d]\n??:? runModuleUnitTests [0x5570cf5e8337]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text, long size) \n{\n    ulong counter = text.length;\n    for (long i = 0; i < size - cast(long)(size % 2); i++)\n    {\n        text = \" \" ~ text ~ \" \";\n        counter += 2;\n        if (counter >= size)\n        {\n            return text;\n        }\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"7\", 10L) == \"          \");\n}\nvoid main(){}\n\n",
        "answer": "\"          \""
    },
    {
        "id": 65,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpsc8nfatq.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x56395e8baa21]\n??:? void tmpsc8nfatq.__unittest_L12_C1() [0x56395e8ba84f]\n??:? void tmpsc8nfatq.__modtest() [0x56395e8ba98c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56395e8c0586]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56395e8be2ff]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56395e8c54ab]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56395e8c597d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56395e8c5439]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56395e8be2d1]\n??:? runModuleUnitTests [0x56395e8c03bb]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nlong f(long[] nums, long index) \n{\n    auto element = nums[index];\n    nums = nums[0 .. index] ~ nums[(index + 1) .. $];\n    return element % 42 + element * 2;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([3L, 2L, 0L, 3L, 7L], 3L) == 42);\n}\nvoid main(){}\n\n",
        "answer": "42"
    },
    {
        "id": 66,
        "res": 0
    },
    {
        "id": 67,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpuw5m84sr.d(18): Error: found `8L` when expecting `)`\n/tmp/tmpuw5m84sr.d(19): Error: found `8L` when expecting `;` following expression\n/tmp/tmpuw5m84sr.d(17):        expression: `assert(candidate(6L, 8L, 8L) == 6L)`\n/tmp/tmpuw5m84sr.d(19): Error: found `)` instead of statement\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuw5m84sr.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.format;\n\nstring f(long num1, long num2, long num3) \n{\n    long[] nums = [num1, num2, num3];\n    nums.sort();\n    return format(\"%s,%s,%s\", nums[0], nums[1], nums[2]);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(6L, 8L, 8L) == 6L\n8L\n8L);\n}\nvoid main(){}\n\n",
        "answer": "6L\n8L\n8L"
    },
    {
        "id": 68,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp3nbsf0si.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x5640a02e29b5]\n??:? void tmp3nbsf0si.__unittest_L16_C1() [0x5640a02d5999]\n??:? void tmp3nbsf0si.__modtest() [0x5640a02d974c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5640a02ec9aa]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5640a02db1ef]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5640a02e827b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5640a02e830d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5640a02e8209]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5640a02db1c1]\n??:? runModuleUnitTests [0x5640a02ec7df]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string text, string pref) {\n    if (text.startsWith(pref)) {\n        size_t n = pref.length;\n        string[] parts = text[n..$].split('.');\n        string[] prefParts = text[0..n].split('.');\n        text = parts[1..$].join(\".\") ~ (parts.length > 1 && prefParts.length > 1 ? \".\" : \"\") ~ prefParts[0..$-1].join(\".\");\n    }\n    return text;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"omeunhwpvr.dq\", \"omeunh\") == \"omeunhwpvr.dq\");\n}\nvoid main(){}\n\n",
        "answer": "\"omeunhwpvr.dq\""
    },
    {
        "id": 69,
        "res": 0
    },
    {
        "id": 70,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmplqthl0xc.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x5654b041bd2d]\n??:? void tmplqthl0xc.__unittest_L17_C1() [0x5654b04117d7]\n??:? void tmplqthl0xc.__modtest() [0x5654b0412efc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5654b0425e7a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5654b0414567]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5654b04216ff]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5654b0421791]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5654b042168d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5654b0414539]\n??:? runModuleUnitTests [0x5654b0425caf]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.conv;\nimport std.string;\n\nlong f(string x) \n{\n    long a = 0;\n    foreach (i; x.split())\n    {\n        a += i.length * 2;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"999893767522480\") == 999878787880);\n}\nvoid main(){}\n\n",
        "answer": "999878787880"
    },
    {
        "id": 71,
        "res": 0
    },
    {
        "id": 72,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp5nd6ct2t.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x563df5d3dd31]\n??:? void tmp5nd6ct2t.__unittest_L19_C1() [0x563df5d3c7bc]\n??:? void tmp5nd6ct2t.__modtest() [0x563df5d3c7ec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x563df5d4a042]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x563df5d3d9bf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x563df5d3f713]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x563df5d3f7a5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x563df5d3f6a1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x563df5d3d991]\n??:? runModuleUnitTests [0x563df5d49e77]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.ascii;\n\nbool f(string text) \n{\n    foreach (c; text)\n    {\n        if (!isDigit(c))\n        {\n            return false;\n        }\n    }\n    return !text.empty;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"99\") == false);\n}\nvoid main(){}\n\n",
        "answer": "false"
    },
    {
        "id": 73,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpihsm6ly2.d(27): Error: using the result of a comma expression is not allowed\n/tmp/tmpihsm6ly2.d(27): Error: none of the overloads of template `std.typecons.Tuple!(long, long).Tuple.opEquals` are callable using argument types `!()(long)`\n/usr/include/dmd/phobos/std/typecons.d(796):        Candidates are: `opEquals(R)(R rhs)`\n  with `R = long`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(803):                        `opEquals(R)(R rhs) const`\n  with `R = long`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(810):                        `opEquals(R...)(auto ref R rhs)`\n  with `R = (long)`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > R.length > 1\n  - areCompatibleTuples!(typeof(this), Tuple!R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n  Tip: not satisfied constraints are marked with `>`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpihsm6ly2.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nTuple!(long, long) f(string row) \n{\n    long count1 = 0;\n    long count0 = 0;\n    foreach (c; row)\n    {\n        if (c == '1')\n        {\n            count1++;\n        }\n        if (c == '0')\n        {\n            count0++;\n        }\n    }\n    return tuple(count1, count0);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"100010010\") == (2L, 2L));\n}\nvoid main(){}\n\n",
        "answer": "(2L, 2L)"
    },
    {
        "id": 74,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp3q9hzmzy.d(12): unittest failure\n----------------\n??:? _d_unittestp [0x560af8462c59]\n??:? void tmp3q9hzmzy.__unittest_L8_C1() [0x560af84628a8]\n??:? void tmp3q9hzmzy.__modtest() [0x560af8462bc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x560af84685f6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x560af84664ef]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x560af846d51b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x560af846d9ed]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x560af846d4a9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x560af84664c1]\n??:? runModuleUnitTests [0x560af846842b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int f",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] lst, long i, long n) \n{\n    return lst[0 .. i] ~ [n] ~ lst[i .. $];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([44L, 34L, 23L, 82L, 24L, 11L, 63L, 99L], 4L, 15L) == \"tuple(44L, 34L, 23L, 82L, 24L, 11L, 63L, 99L)\");\n}\nvoid main(){}\n\n",
        "answer": "\"tuple(44L, 34L, 23L, 82L, 24L, 11L, 63L, 99L)\""
    },
    {
        "id": 75,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp7io0ctal.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x564344e45901]\n??:? void tmp7io0ctal.__unittest_L20_C1() [0x564344e45843]\n??:? void tmp7io0ctal.__modtest() [0x564344e45868]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x564344e4a1c6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x564344e481b7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x564344e4ecfb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x564344e4f1cd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x564344e4ec89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x564344e48189]\n??:? runModuleUnitTests [0x564344e49ffb]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.range;\n\nlong f(long[] array, long elem) \n{\n    long ind = -1;\n    foreach (i, n; array)\n    {\n        if (n == elem)\n        {\n            ind = i;\n            break;\n        }\n    }\n    return ind * 2 + array[array.length - ind - 1] * 3;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([-1L, 2L, 1L, -8L, 2L], 2L) == 8L);\n}\nvoid main(){}\n\n",
        "answer": "8L"
    },
    {
        "id": 76,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpsv7zyk6b.d(21): Error: using the result of a comma expression is not allowed\n/tmp/tmpsv7zyk6b.d(21): Error: incompatible types for `(f([10L, 3L, 2L, 2L, 6L, 0L])) == (5L , 12L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsv7zyk6b.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.algorithm;\nimport std.array;\nimport std.math;\nimport std.typecons;\n\nlong[] f(long[] nums) {\n    nums = nums.filter!(y => y > 0).array;\n    if (nums.length <= 3) {\n        return nums;\n    }\n    nums.reverse();\n    size_t half = nums.length / 2;\n    return nums[0 .. half].array ~ [0L, 0L, 0L, 0L, 0L] ~ nums[half .. $].array;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([10L, 3L, 2L, 2L, 6L, 0L]) == (5L, 12L));\n}\nvoid main(){}\n\n",
        "answer": "(5L, 12L)"
    },
    {
        "id": 77,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpgetsofu9.d(23): Error: undefined escape sequence \\)\n/tmp/tmpgetsofu9.d(23): Error: unterminated string constant starting at /tmp/tmpgetsofu9.d(23)\n/tmp/tmpgetsofu9.d(27): Error: found `End of File` when expecting `)`\n/tmp/tmpgetsofu9.d(27): Error: found `End of File` when expecting `;` following expression\n/tmp/tmpgetsofu9.d(23):        expression: `assert(candidate(\"h ,lpvvkohh,u\", \"i\") == \"\")`\n/tmp/tmpgetsofu9.d(27): Error: matching `}` expected following compound statement, not `End of File`\n/tmp/tmpgetsofu9.d(20):        unmatched `{`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgetsofu9.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\nimport std.array;\n\nstring f(string text, string character) \n{\n    auto idx = text.lastIndexOf(character);\n    if (idx == -1) {\n        return \"\";\n    }\n    auto subject = text[idx .. $];\n    return subject.replicate(text.count(character));\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"h ,lpvvkohh,u\", \"i\") == \"h\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\);\n}\nvoid main(){}\n\n",
        "answer": "\"h\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "id": 78,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp6dwtuob_.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x5593ce6fbfb5]\n??:? void tmp6dwtuob_.__unittest_L16_C1() [0x5593ce6f98da]\n??:? void tmp6dwtuob_.__modtest() [0x5593ce6fa924]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5593ce70aaf6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5593ce6fbaf7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5593ce6ff77b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5593ce6ff80d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5593ce6ff709]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5593ce6fbac9]\n??:? runModuleUnitTests [0x5593ce70a92b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.ascii;\nimport std.algorithm;\n\nstring f(string text) \n{\n    if (text.length > 0 && text.toUpper() == text) {\n        auto cs = text.translate(dup(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"), dup(\"abcdefghijklmnopqrstuvwxyz\"));\n        return text.translate(cs);\n    }\n    return text.toLower()[0 .. min(3, text.length)];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n\") == \"turtle\");\n}\nvoid main(){}\n\n",
        "answer": "\"turtle\""
    },
    {
        "id": 79,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.array;\n\nstring f(long[] arr) \n{\n    string[] newArr;\n    newArr ~= \"1\";\n    newArr ~= \"2\";\n    newArr ~= \"3\";\n    newArr ~= \"4\";\n    return newArr.join(\",\");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([0L, 1L, 2L, 3L, 4L]) == \"1,2,3,4\");\n}\nvoid main(){}\n\n",
        "answer": "\"1,2,3,4\""
    },
    {
        "id": 80,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpk_w3fhd6.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x55b1fc5f4285]\n??:? void tmpk_w3fhd6.__unittest_L15_C1() [0x55b1fc5e97e2]\n??:? void tmpk_w3fhd6.__modtest() [0x55b1fc5eb508]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55b1fc5fcd2e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55b1fc5ecb77]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55b1fc5f84a3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55b1fc5f8535]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55b1fc5f8431]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55b1fc5ecb49]\n??:? runModuleUnitTests [0x55b1fc5fcb63]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.algorithm;\nimport std.string;\n\nstring f(string s) \n{\n    s = s.replace(\" \", \"\");\n    auto reversed_s = s.dup.reverse;\n    return reversed_s.idup;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"ab        \") == \"bab\");\n}\nvoid main(){}\n\n",
        "answer": "\"bab\""
    },
    {
        "id": 81,
        "res": 0
    },
    {
        "id": 82,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpg1at4yop.d(12): unittest failure\n----------------\n??:? _d_unittestp [0x5570ac037959]\n??:? void tmpg1at4yop.__unittest_L8_C1() [0x5570ac0377f5]\n??:? void tmpg1at4yop.__modtest() [0x5570ac0378c0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5570ac03ad4a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5570ac040f9b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5570ac04ba1f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5570ac03f431]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5570ac04b9ad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5570ac040f6d]\n??:? runModuleUnitTests [0x5570ac03ab7f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int f",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string a, string b, string c, string d) \n{\n    return a.length > 0 ? b : c.length > 0 ? d : \"\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"CJU\", \"BFS\", \"WBYDZPVES\", \"Y\") == \"0\");\n}\nvoid main(){}\n\n",
        "answer": "\"0\""
    },
    {
        "id": 83,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpi2fog7nw.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x558a3ada2c05]\n??:? void tmpi2fog7nw.__unittest_L14_C1() [0x558a3ad97892]\n??:? void tmpi2fog7nw.__modtest() [0x558a3ad99b70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x558a3adab946]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x558a3ad9b4f7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x558a3ada6d33]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x558a3ada6dc5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x558a3ada6cc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x558a3ad9b4c9]\n??:? runModuleUnitTests [0x558a3adab77b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.conv;\n\nstring f(string text) \n{\n    auto l = text.lastIndexOf('0');\n    if (l == -1)\n        return \"-1:-1\";\n    return to!string(text[0 .. l].length) ~ \":\" ~ to!string(text[l + 1 .. $].indexOf('0') + 1);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"qq0tt\") == \"5\");\n}\nvoid main(){}\n\n",
        "answer": "\"5\""
    },
    {
        "id": 84,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpiwdo3_1i.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x5612c322c4fd]\n??:? void tmpiwdo3_1i.__unittest_L24_C1() [0x5612c322191e]\n??:? void tmpiwdo3_1i.__modtest() [0x5612c32236cc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5612c323676a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5612c3224d37]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5612c3231fd3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5612c3232065]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5612c3231f61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5612c3224d09]\n??:? runModuleUnitTests [0x5612c323659f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nstring f(string text) \n{\n    auto arr = text.split();\n    string[] result;\n    foreach (item; arr)\n    {\n        if (item[$-3..$] == \"day\")\n        {\n            item ~= \"y\";\n        }\n        else\n        {\n            item ~= \"day\";\n        }\n        result ~= item;\n    }\n    return result.join(\" \");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"nwv mef ofme bdryl\") == \"ofme bdryl\");\n}\nvoid main(){}\n\n",
        "answer": "\"ofme bdryl\""
    },
    {
        "id": 85,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpwcwovfge.d(26): Error: incompatible types for `(f(12L)) == (-0.5)`: `float[]` and `double`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwcwovfge.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nfloat[] f(long n) \n{\n    auto values = [0: 3, 1: 4.5, 2: '-'];\n    auto res = new float[0];\n    foreach (i, j; values)\n    {\n        if (i % n != 2)\n        {\n            res ~= j;\n        }\n    }\n    res.sort();\n    return res;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(12L) == -0.5);\n}\nvoid main(){}\n\n",
        "answer": "-0.5"
    },
    {
        "id": 86,
        "res": 0
    },
    {
        "id": 87,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpx_1h5t50.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x5574a87b8ffd]\n??:? void tmpx_1h5t50.__unittest_L12_C1() [0x5574a87ae7f8]\n??:? void tmpx_1h5t50.__modtest() [0x5574a87b0160]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5574a87c1b1a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5574a87b18ef]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5574a87bd22b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5574a87bd2bd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5574a87bd1b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5574a87b18c1]\n??:? runModuleUnitTests [0x5574a87c194f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.string;\n\nstring f(long[] nums) {\n    nums.reverse();\n    return nums.map!(n => n.to!string).join();\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([-1L, 9L, 3L, 1L, -2L]) == \"9L -2L 3L 1L -1L\");\n}\nvoid main(){}\n\n",
        "answer": "\"9L -2L 3L 1L -1L\""
    },
    {
        "id": 88,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string s1, string s2) \n{\n    if (s2[$-s1.length .. $] == s1) {\n        s2 = s2[0 .. $-s1.length];\n    }\n    return s2;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"he\", \"hello\") == \"hello\");\n}\nvoid main(){}\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 89,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpipoyq3ir.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x5648b97d04e9]\n??:? void tmpipoyq3ir.__unittest_L16_C1() [0x5648b97ce802]\n??:? void tmpipoyq3ir.__modtest() [0x5648b97cec8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5648b97dcfb6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5648b97d0177]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5648b97d1f63]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5648b97d1ff5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5648b97d1ef1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5648b97d0149]\n??:? runModuleUnitTests [0x5648b97dcdeb]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string ch) {\n    if (\"aeiouAEIOU\".indexOf(ch) == -1) {\n        return null;\n    }\n    if (\"AEIOU\".indexOf(ch) != -1) {\n        return ch.toLower();\n    }\n    return ch.toUpper();\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"o\") == \"Hello\");\n}\nvoid main(){}\n\n",
        "answer": "\"Hello\""
    },
    {
        "id": 90,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp0gp_b32y.d(16): Error: incompatible types for array comparison: `long[][]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0gp_b32y.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[][] f(long[][] array) \n{\n    long[][] return_arr;\n    foreach (a; array) {\n        return_arr ~= a.dup;\n    }\n    return return_arr;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([[1L, 2L, 3L], [], [1L, 2L, 3L]]) == \"1234\");\n}\nvoid main(){}\n\n",
        "answer": "\"1234\""
    },
    {
        "id": 91,
        "res": 0
    },
    {
        "id": 92,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.conv;\n\nbool f(string text) \n{\n    foreach (c; text)\n    {\n        int codePoint = cast(int) c;\n        if (codePoint < 0 || codePoint > 127)\n        {\n            return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"wW의IV]HDJjhgK[dGIUlVO@Ess$coZkBqu[Ct\") == false);\n}\nvoid main(){}\n\n",
        "answer": "false"
    },
    {
        "id": 93,
        "res": 0
    },
    {
        "id": 94,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpr81in1f3.d(22): Error: none of the overloads of template `std.typecons.Tuple!(long, long).Tuple.opEquals` are callable using argument types `!()(long[string])`\n/usr/include/dmd/phobos/std/typecons.d(796):        Candidates are: `opEquals(R)(R rhs)`\n  with `R = long[string]`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(803):                        `opEquals(R)(R rhs) const`\n  with `R = long[string]`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(810):                        `opEquals(R...)(auto ref R rhs)`\n  with `R = (long[string])`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > R.length > 1\n  - areCompatibleTuples!(typeof(this), Tuple!R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n  Tip: not satisfied constraints are marked with `>`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr81in1f3.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\n\nNullable!(long[string]) f(Nullable!(long[string]) a, Nullable!(long[string]) b) \n{\n    if (!a.isNull && !b.isNull) {\n        long[string] result = a.get();\n        foreach (key, value; b.get()) {\n            result[key] = value;\n        }\n        return Nullable!(long[string])(result);\n    }\n    return Nullable!(long[string]).init;\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([\"w\": 5L, \"wi\": 10L].nullable, [\"w\": 3L].nullable);\n        assert(!result.isNull && result.get == tuple(5L, 10L));\n}\n\n}\nvoid main(){}\n\n",
        "answer": "tuple(5L, 10L)"
    },
    {
        "id": 95,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpwt75led7.d(26): Error: incompatible types for `(result.get()) == (\"fr\")`: `string[string]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwt75led7.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nNullable!(string[string]) f(Nullable!(string[string]) zoo)\n{\n    if (!zoo.isNull) {\n        auto result = zoo.get();\n        foreach (key, value; result) {\n            result[value] = key;\n            result.remove(key);\n        }\n        return Nullable!(string[string])(result);\n    }\n    return Nullable!(string[string]).init;\n}\n\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([\"AAA\": \"fr\"].nullable);\n        assert(!result.isNull && result.get == \"fr\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"fr\""
    },
    {
        "id": 96,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpue_napt9.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x55585758a871]\n??:? void tmpue_napt9.__unittest_L17_C1() [0x55585758a7b4]\n??:? void tmpue_napt9.__modtest() [0x55585758a7d8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55585758dc76]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x555857593f13]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55585759e997]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5558575923a9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55585759e925]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x555857593ee5]\n??:? runModuleUnitTests [0x55585758daab]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nbool f(string text) \n{\n    foreach (c; text)\n    {\n        if (isUpper(c))\n        {\n            return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"lunabotics\") == false);\n}\nvoid main(){}\n\n",
        "answer": "false"
    },
    {
        "id": 97,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp_3ovyu5y.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x55ecc7604891]\n??:? void tmp_3ovyu5y.__unittest_L14_C1() [0x55ecc76047d4]\n??:? void tmp_3ovyu5y.__modtest() [0x55ecc76047f8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55ecc7608f8e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55ecc76070ff]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55ecc760dac3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55ecc760df95]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55ecc760da51]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55ecc76070d1]\n??:? runModuleUnitTests [0x55ecc7608dc3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nbool f(long[] lst) \n{\n    lst.length = 0;\n    foreach (i; lst) {\n        if (i == 3) {\n            return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([2L, 0L]) == false);\n}\nvoid main(){}\n\n",
        "answer": "false"
    },
    {
        "id": 98,
        "res": 0
    },
    {
        "id": 99,
        "res": 0
    },
    {
        "id": 100,
        "res": 0
    },
    {
        "id": 101,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpy8dhh_mf.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x5640bd08fc79]\n??:? void tmpy8dhh_mf.__unittest_L11_C1() [0x5640bd08f8b1]\n??:? void tmpy8dhh_mf.__modtest() [0x5640bd08fbe0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5640bd095616]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5640bd09350f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5640bd09a53b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5640bd09aa0d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5640bd09a4c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5640bd0934e1]\n??:? runModuleUnitTests [0x5640bd09544b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nlong[] f(long[] array, long i_num, long elem) \n{\n    auto newArray = array[0 .. i_num] ~ [elem] ~ array[i_num .. $];\n    return newArray;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([-4L, 1L, 0L], 1L, 4L) == [-4L, 1L, 0L] ~ [4L] ~ [1L, 0L]);\n}\nvoid main(){}\n\n",
        "answer": "[-4L, 1L, 0L] ~ [4L] ~ [1L, 0L]"
    },
    {
        "id": 102,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpmpk7yrxk.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x56018863955d]\n??:? void tmpmpk7yrxk.__unittest_L14_C1() [0x56018862a9ef]\n??:? void tmpmpk7yrxk.__modtest() [0x560188630830]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5601886431aa]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x560188631d97]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56018863ec83]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56018863ed15]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56018863ec11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x560188631d69]\n??:? runModuleUnitTests [0x560188642fdf]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.algorithm;\nimport std.array;\nimport std.stdio;\nimport std.range;\n\nlong[] f(string[] names, string[] winners) {\n    auto indices = names.enumerate.filter!(x => winners.canFind(x.value)).map!(x => cast(long)x.index).array;\n    indices.sort!((a, b) => b < a);\n    return indices;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"e\", \"f\", \"j\", \"x\", \"r\", \"k\"], [\"a\", \"v\", \"2\", \"im\", \"nb\", \"vj\", \"z\"]) == [0, 1, 2, 3, 4, 5]);\n}\nvoid main(){}\n\n",
        "answer": "[0, 1, 2, 3, 4, 5]"
    },
    {
        "id": 103,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nstring f(string s) \n{\n    string result = \"\";\n    foreach (char c; s)\n    {\n        result ~= toLower(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"abcDEFGhIJ\") == \"abcdefghij\");\n}\nvoid main(){}\n\n",
        "answer": "\"abcdefghij\""
    },
    {
        "id": 104,
        "res": 0
    },
    {
        "id": 105,
        "res": 0
    },
    {
        "id": 106,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp0wn20elw.d(20): Error: using the result of a comma expression is not allowed\n/tmp/tmp0wn20elw.d(20): Error: using the result of a comma expression is not allowed\n/tmp/tmp0wn20elw.d(20): Error: using the result of a comma expression is not allowed\n/tmp/tmp0wn20elw.d(20): Error: using the result of a comma expression is not allowed\n/tmp/tmp0wn20elw.d(20): Error: using the result of a comma expression is not allowed\n/tmp/tmp0wn20elw.d(20): Error: incompatible types for `(f([2L, 8L, -2L, 9L, 3L, 3L])) == (2L , 8L , -2L , 9L , 3L , 3L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0wn20elw.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nlong[] f(long[] nums) \n{\n    long count = nums.length;\n    for (long i = 0; i < count; i++)\n    {\n        nums = nums[0..i] ~ nums[i]*2 ~ nums[i..$];\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([2L, 8L, -2L, 9L, 3L, 3L]) == (2L, 8L, -2L, 9L, 3L, 3L));\n}\nvoid main(){}\n\n",
        "answer": "(2L, 8L, -2L, 9L, 3L, 3L)"
    },
    {
        "id": 107,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpex3ex8pi.d(34): Error: undefined identifier `False`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpex3ex8pi.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text) \n{\n    string result = \"\";\n    foreach (i, c; text)\n    {\n        if (c >= ' ' && c <= '~')\n        {\n            if (c >= 'a' && c <= 'z')\n            {\n                result ~= c.toUpper();\n            } \n            else \n            {\n                result ~= c;\n            }\n        } \n        else \n        {\n            return \"False\";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"ua6hajq\") == False);\n}\nvoid main(){}\n\n",
        "answer": "False"
    },
    {
        "id": 108,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nlong f(long var)\n{\n    long amount = 0;\n    return amount;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(1L) == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 109,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpqjehugpl.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x556397f4cb01]\n??:? void tmpqjehugpl.__unittest_L24_C1() [0x556397f4c94d]\n??:? void tmpqjehugpl.__modtest() [0x556397f4ca68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x556397f51e0e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x556397f4fdff]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x556397f562eb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x556397f567bd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x556397f56279]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x556397f4fdd1]\n??:? runModuleUnitTests [0x556397f51c43]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nlong[] f(long[] nums, long spot, long idx) \n{\n    if (spot <= nums.length)\n    {\n        nums ~= idx;\n        for (long i = nums.length - 1; i > spot; i--)\n        {\n            auto temp = nums[i];\n            nums[i] = nums[i - 1];\n            nums[i - 1] = temp;\n        }\n        return nums;\n    }\n    else\n    {\n        return nums;\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 0L, 1L, 1L], 0L, 9L) == [1, 0, 1, 1, 1]);\n}\nvoid main(){}\n\n",
        "answer": "[1, 0, 1, 1, 1]"
    },
    {
        "id": 110,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpbuzcxovh.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x55d46ea0b799]\n??:? void tmpbuzcxovh.__unittest_L26_C1() [0x55d46ea0a8c1]\n??:? void tmpbuzcxovh.__modtest() [0x55d46ea0aadc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55d46ea18da6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55d46ea0b4cb]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55d46ea0da53]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55d46ea0dae5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55d46ea0d9e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55d46ea0b49d]\n??:? runModuleUnitTests [0x55d46ea18bdb]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\nimport std.array;\nimport std.conv;\n\nlong f(string text) \n{\n    string[] a = [\"\"];\n    string b = \"\";\n    foreach (char i; text)\n    {\n        if (!isWhite(i))\n        {\n            a ~= b;\n            b = \"\";\n        }\n        else\n        {\n            b ~= i;\n        }\n    }\n    return to!int(a.length);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"       \") == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 111,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpx18z9wmu.d(23): Error: using the result of a comma expression is not allowed\n/tmp/tmpx18z9wmu.d(23): Error: none of the overloads of template `std.typecons.Tuple!(long, long).Tuple.opEquals` are callable using argument types `!()(long)`\n/usr/include/dmd/phobos/std/typecons.d(796):        Candidates are: `opEquals(R)(R rhs)`\n  with `R = long`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(803):                        `opEquals(R)(R rhs) const`\n  with `R = long`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(810):                        `opEquals(R...)(auto ref R rhs)`\n  with `R = (long)`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > R.length > 1\n  - areCompatibleTuples!(typeof(this), Tuple!R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n  Tip: not satisfied constraints are marked with `>`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx18z9wmu.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nTuple!(long, long) f(Nullable!(long[string]) marks) \n{\n    long highest = 0;\n    long lowest = 100;\n    \n    foreach (value; marks.get())\n    {\n        if (value > highest)\n            highest = value;\n        if (value < lowest)\n            lowest = value;\n    }\n    \n    return tuple(highest, lowest);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"x\": 67L, \"v\": 89L, \"\": 4L, \"alij\": 11L, \"kgfsd\": 72L, \"yafby\": 83L].nullable) == (67L, 89L));\n}\nvoid main(){}\n\n",
        "answer": "(67L, 89L)"
    },
    {
        "id": 112,
        "res": 0
    },
    {
        "id": 113,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpley7ut59.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x55a9532ffb05]\n??:? void tmpley7ut59.__unittest_L28_C1() [0x55a9532fd9ae]\n??:? void tmpley7ut59.__modtest() [0x55a9532fe474]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55a95330cf46]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55a9532ff647]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55a9533021a3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55a953302235]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55a953302131]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55a9532ff619]\n??:? runModuleUnitTests [0x55a95330cd7b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.algorithm;\nimport std.array;\nimport std.string;\nimport std.conv;\nimport std.ascii : isUpper, isLower, toLower, toUpper;\n\nstring f(string line) {\n    int count = 0;\n    char[] a;\n    foreach (i, c; line) {\n        count += 1;\n        if (count % 2 == 0) {\n            if (isUpper(c)) {\n                a ~= toLower(c);\n            } else if (isLower(c)) {\n                a ~= toUpper(c);\n            } else {\n                a ~= c;\n            }\n        } else {\n            a ~= c;\n        }\n    }\n    return a.to!string;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"987yhNSHAshd 93275yrgSgbgSshfbsfB\") == \"987yhnshaShd93275yrgSgbgSshfbsfB\");\n}\nvoid main(){}\n\n",
        "answer": "\"987yhnshaShd93275yrgSgbgSshfbsfB\""
    },
    {
        "id": 114,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp5olipech.d(18): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5olipech.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.algorithm;\nimport std.string;\n\nstring[] f(string text, string sep) \n{\n    auto words = text.split(sep);\n    return words[0..$].array;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"a-.-.b\", \"-.\") == \"a\");\n}\nvoid main(){}\n\n",
        "answer": "\"a\""
    },
    {
        "id": 115,
        "res": 0
    },
    {
        "id": 116,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpwbd_pu5r.d(27): Error: incompatible types for `(result.get()) == (\"banana\")`: `long[long]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwbd_pu5r.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nNullable!(long[long]) f(Nullable!(long[long]) d, long count) \n{\n    if (!d.isNull) {\n        auto dict = d.get();\n        for(long i = 0; i < count; i++) {\n            if (dict.length > 0) {\n                dict.remove(dict.keys[0]);\n            } else {\n                break;\n            }\n        }\n        return Nullable!(long[long])(dict);\n    }\n    return Nullable!(long[long]).init;\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate(Nullable!(long[long]).init, 200L);\n        assert(!result.isNull && result.get == \"banana\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"banana\""
    },
    {
        "id": 117,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpkr9w0ebl.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x55f551545899]\n??:? void tmpkr9w0ebl.__unittest_L21_C1() [0x55f5515457dd]\n??:? void tmpkr9w0ebl.__modtest() [0x55f551545800]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55f551548c8a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55f55154ef27]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55f5515599ab]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55f55154d3bd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55f551559939]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55f55154eef9]\n??:? runModuleUnitTests [0x55f551548abf]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\n\nlong f(string numbers) \n{\n    int count = 0;\n    foreach (char c; numbers) {\n        if (c == '3') {\n            count++;\n        }\n    }\n\n    for (int i = 0; i < numbers.length; i++) {\n        if (count > 1) {\n            return i;\n        }\n    }\n    return -1;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"23157\") == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 118,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp06juis8k.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x5574b10a04ad]\n??:? void tmp06juis8k.__unittest_L18_C1() [0x5574b1096831]\n??:? void tmp06juis8k.__modtest() [0x5574b10977f0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5574b10a8d76]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5574b1098e5f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5574b10a44e3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5574b10a4575]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5574b10a4471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5574b1098e31]\n??:? runModuleUnitTests [0x5574b10a8bab]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string text, string chars) \n{\n    int num_applies = 2;\n    string extra_chars = \"\";\n    foreach(i; 0 .. num_applies) {\n        extra_chars ~= chars;\n        text = text.replace(extra_chars, \"\");\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"zbzquiuqnmfkx\", \"mk\") == \"zqui\");\n}\nvoid main(){}\n\n",
        "answer": "\"zqui\""
    },
    {
        "id": 119,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpqfpd14cm.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x5636eb3a0ad1]\n??:? void tmpqfpd14cm.__unittest_L18_C1() [0x5636eb3a08e6]\n??:? void tmpqfpd14cm.__modtest() [0x5636eb3a0a38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5636eb3a5cbe]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5636eb3a3caf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5636eb3aa003]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5636eb3aa4d5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5636eb3a9f91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5636eb3a3c81]\n??:? runModuleUnitTests [0x5636eb3a5af3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nstring f(string text) \n{\n    string result = \"\";\n    foreach(i; 0 .. text.length) {\n        if (i % 2 == 0) {\n            result ~= toUpper(text[i]);\n        } else {\n            result ~= text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"vsnlygltaw\") == \"VSNLYGLTAW\");\n}\nvoid main(){}\n\n",
        "answer": "\"VSNLYGLTAW\""
    },
    {
        "id": 120,
        "res": 0
    },
    {
        "id": 121,
        "res": 0
    },
    {
        "id": 122,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpu4w62rgz.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x55bc2885f685]\n??:? void tmpu4w62rgz.__unittest_L17_C1() [0x55bc2885d7fe]\n??:? void tmpu4w62rgz.__modtest() [0x55bc2885e020]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55bc2886be72]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55bc2885f1f7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55bc288611ef]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55bc28861281]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55bc2886117d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55bc2885f1c9]\n??:? runModuleUnitTests [0x55bc2886bca7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string string) \n{\n    if (string[0..4] != \"Nuva\")\n    {\n        return \"no\";\n    }\n    else\n    {\n        return string.strip();\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Nuva?dlfuyjys\") == \"no\");\n}\nvoid main(){}\n\n",
        "answer": "\"no\""
    },
    {
        "id": 123,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpyrlck1ap.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x55d176991d09]\n??:? void tmpyrlck1ap.__unittest_L19_C1() [0x55d176991953]\n??:? void tmpyrlck1ap.__modtest() [0x55d176991c70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55d17699786e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55d1769955e7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55d17699c793]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55d17699cc65]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55d17699c721]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55d1769955b9]\n??:? runModuleUnitTests [0x55d1769976a3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.typecons;\nimport std.array;\n\nlong[] f(long[] array, long elem)\n{\n    foreach (idx, e; array)\n    {\n        if (e > elem && array[idx - 1] < elem)\n        {\n            array = array[0 .. idx] ~ [elem] ~ array[idx .. $];\n            break;\n        }\n    }\n    return array;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, 3L, 5L, 8L], 6L) == [1, 2, 3, 5, 8]);\n}\nvoid main(){}\n\n",
        "answer": "[1, 2, 3, 5, 8]"
    },
    {
        "id": 124,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp9btlfhq5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x55cdb151b71d]\n??:? void tmp9btlfhq5.__unittest_L20_C1() [0x55cdb15108b8]\n??:? void tmp9btlfhq5.__modtest() [0x55cdb15126b8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55cdb1524636]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55cdb151403f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55cdb151f91b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55cdb151f9ad]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55cdb151f8a9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55cdb1514011]\n??:? runModuleUnitTests [0x55cdb152446b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string txt, string sep, long sep_count) \n{\n    string o = \"\";\n    while (sep_count > 0 && txt.canFind(sep) != -1)\n    {\n        size_t index = txt.lastIndexOf(sep);\n        o ~= txt[0 .. index + sep.length];\n        txt = txt[index + sep.length .. $];\n        sep_count--;\n    }\n    return o ~ txt;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"i like you\", \" \", -1L) == \"you\");\n}\nvoid main(){}\n\n",
        "answer": "\"you\""
    },
    {
        "id": 125,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmptvspcjs1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x555e0a3256fd]\n??:? void tmptvspcjs1.__unittest_L20_C1() [0x555e0a31a8cc]\n??:? void tmptvspcjs1.__modtest() [0x555e0a31c984]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x555e0a32e5ee]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x555e0a31dfef]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x555e0a32980b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x555e0a32989d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x555e0a329799]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x555e0a31dfc1]\n??:? runModuleUnitTests [0x555e0a32e423]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.conv;\nimport std.string;\n\nstring f(string text, long res) \n{\n    foreach (c; \"*\\n\\\"\") {\n        text = text.replace(c, \"!\" ~ to!string(res));\n    }\n    \n    if (text.startsWith(\"!\")) {\n        text = text[res.to!string.length .. $];\n    }\n    \n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"\\\"Leap and the net will appear\", 123L) == \"!\");\n}\nvoid main(){}\n\n",
        "answer": "\"!\""
    },
    {
        "id": 126,
        "res": 0
    },
    {
        "id": 127,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpjf4q0573.d(16): Error: incompatible types for `(f(\"145\\n\\n12fjkjg\")) == (\"145\")`: `long` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjf4q0573.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nlong f(string text) \n{\n    auto s = text.splitLines();\n    return s.length;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"145\n\n12fjkjg\") == \"145\");\n}\nvoid main(){}\n\n",
        "answer": "\"145\""
    },
    {
        "id": 128,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpmmgxeza1.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x562b3f128f91]\n??:? void tmpmmgxeza1.__unittest_L19_C1() [0x562b3f1278ca]\n??:? void tmpmmgxeza1.__modtest() [0x562b3f127a4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x562b3f13759e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x562b3f128c1f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x562b3f12c673]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x562b3f12c705]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x562b3f12c601]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x562b3f128bf1]\n??:? runModuleUnitTests [0x562b3f1373d3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text) \n{\n    string odd = \"\";\n    string even = \"\";\n    foreach(i, c; text) {\n        if (i % 2 == 0) {\n            even ~= c;\n        } else {\n            odd ~= c;\n        }\n    }\n    return even ~ toLower(odd);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Mammoth\") == \"mammoth\");\n}\nvoid main(){}\n\n",
        "answer": "\"mammoth\""
    },
    {
        "id": 129,
        "res": 0
    },
    {
        "id": 130,
        "res": 0
    },
    {
        "id": 131,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp6ryq3rb6.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x56258141e785]\n??:? void tmp6ryq3rb6.__unittest_L25_C1() [0x562581410859]\n??:? void tmp6ryq3rb6.__modtest() [0x56258141551c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x562581428ade]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x562581416fbf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5625814241a3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x562581424235]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x562581424131]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x562581416f91]\n??:? runModuleUnitTests [0x562581428913]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nlong f(string text) \n{\n    long a = text.length;\n    long count = 0;\n    while (text.length > 0)\n    {\n        if (text.startsWith('a'))\n        {\n            count += text.indexOf(' ');\n        }\n        else\n        {\n            count += text.indexOf('\\n');\n        }\n        text = text.split('\\n')[1..$].join(\"\\n\");\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"a\nkgf\nasd\n\") == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 132,
        "res": 0
    },
    {
        "id": 133,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmprfxupyrm.d(17): Error: using the result of a comma expression is not allowed\n/tmp/tmprfxupyrm.d(17): Error: incompatible types for `(f([7L, 1L, 2L, 6L, 0L, 2L], [9L, 0L, 3L])) == (7L , 9L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprfxupyrm.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] nums, long[] elements) \n{\n    long[] result;\n    foreach (i; 0 .. elements.length) {\n        result ~= nums[$-1];\n        nums = nums[0 .. $-1];\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([7L, 1L, 2L, 6L, 0L, 2L], [9L, 0L, 3L]) == (7L, 9L));\n}\nvoid main(){}\n\n",
        "answer": "(7L, 9L)"
    },
    {
        "id": 134,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.conv;\nimport std.range;\nimport std.string;\n\nstring f(long n) \n{\n    long t = 0;\n    string b = \"\";\n    auto digits = n.text.dup;\n    foreach(d; 0 .. digits.length)\n    {\n        if(digits[d] == '0') t += 1;\n        else break;\n    }\n    foreach(ix; 0 .. t)\n        b ~= \"104\";\n    return b ~ n.text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(372359L) == \"372359\");\n}\nvoid main(){}\n\n",
        "answer": "\"372359\""
    },
    {
        "id": 135,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpy1e7xpq1.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x55e1f9460889]\n??:? void tmpy1e7xpq1.__unittest_L13_C1() [0x55e1f9457959]\n??:? void tmpy1e7xpq1.__modtest() [0x55e1f9458338]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55e1f94696ce]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55e1f945936b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55e1f9464e87]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55e1f9464f19]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55e1f9464e15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55e1f945933d]\n??:? runModuleUnitTests [0x55e1f9469503]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nstring[] f() \n{\n    auto d = [\"Russia\": [tuple(\"Moscow\", \"Russia\"), tuple(\"Vladivostok\", \"Russia\")],\n              \"Kazakhstan\": [tuple(\"Astana\", \"Kazakhstan\")]];\n    return d.keys;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate() == [\"Moscow\", \"Vladivostok\", \"Astana\", \"Kazakhstan\"]);\n}\nvoid main(){}\n\n",
        "answer": "[\"Moscow\", \"Vladivostok\", \"Astana\", \"Kazakhstan\"]"
    },
    {
        "id": 136,
        "res": 0
    },
    {
        "id": 137,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpyexfl_3v.d(25): Error: using the result of a comma expression is not allowed\n/tmp/tmpyexfl_3v.d(25): Error: using the result of a comma expression is not allowed\n/tmp/tmpyexfl_3v.d(25): Error: using the result of a comma expression is not allowed\n/tmp/tmpyexfl_3v.d(25): Error: using the result of a comma expression is not allowed\n/tmp/tmpyexfl_3v.d(25): Error: using the result of a comma expression is not allowed\n/tmp/tmpyexfl_3v.d(25): Error: incompatible types for `(f([3L, 2L, 0L, 0L, 2L, 3L])) == (3L , 2L , 0L , 0L , 2L , 3L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyexfl_3v.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] nums) \n{\n    long count = 0;\n    while (nums.length > 0)\n    {\n        if (count % 2 == 0)\n        {\n            nums = nums[0 .. $-1];\n        }\n        else\n        {\n            nums = nums[1 .. $];\n        }\n        count++;\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([3L, 2L, 0L, 0L, 2L, 3L]) == (3L, 2L, 0L, 0L, 2L, 3L));\n}\nvoid main(){}\n\n",
        "answer": "(3L, 2L, 0L, 0L, 2L, 3L)"
    },
    {
        "id": 138,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpw5idci_d.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x5577a31017d5]\n??:? void tmpw5idci_d.__unittest_L18_C1() [0x5577a30f6931]\n??:? void tmpw5idci_d.__modtest() [0x5577a30f8744]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5577a310a526]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5577a30fa0c7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5577a31059e7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5577a3105a79]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5577a3105975]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5577a30fa099]\n??:? runModuleUnitTests [0x5577a310a35b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string text, string chars) \n{\n    auto listchars = chars.dup;\n    auto first = listchars[$-1];\n    foreach (i; listchars[0..$-1]) {\n        size_t index = text.indexOf(i);\n        text = text[0..index] ~ i ~ text[index+1..$];\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"tflb omn rtt\", \"m\") == \"tflbo mrn\");\n}\nvoid main(){}\n\n",
        "answer": "\"tflbo mrn\""
    },
    {
        "id": 139,
        "res": 0
    },
    {
        "id": 140,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string st) \n{\n    auto lower_st = st.toLower();\n    auto last_h_index = lower_st.lastIndexOf('h');\n    auto last_i_index = lower_st.lastIndexOf('i');\n    if (last_h_index >= last_i_index)\n    {\n        return \"Hey\";\n    }\n    else\n    {\n        return \"Hi\";\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Hi there\") == \"Hey\");\n}\nvoid main(){}\n\n",
        "answer": "\"Hey\""
    },
    {
        "id": 141,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp2xrl_0yh.d(25): Error: using the result of a comma expression is not allowed\n/tmp/tmp2xrl_0yh.d(25): Error: incompatible types for `(f([\"k\", \"x\", \"c\", \"x\", \"x\", \"b\", \"l\", \"f\", \"r\", \"n\", \"g\"])) == (5L , 12L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2xrl_0yh.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.conv;\n\nlong countOccurrences(string[] arr, string element)\n{\n    return count(arr, element);\n}\n\nlong[] f(string[] li) \n{\n    long[] result;\n    foreach (i; li) {\n        result ~= countOccurrences(li, i);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"k\", \"x\", \"c\", \"x\", \"x\", \"b\", \"l\", \"f\", \"r\", \"n\", \"g\"]) == (5L, 12L));\n}\nvoid main(){}\n\n",
        "answer": "(5L, 12L)"
    },
    {
        "id": 142,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpg6g8z7t8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x556fdbe7bd79]\n??:? void tmpg6g8z7t8.__unittest_L18_C1() [0x556fdbe7a80a]\n??:? void tmpg6g8z7t8.__modtest() [0x556fdbe7a830]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x556fdbe8846e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x556fdbe7ba07]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x556fdbe7d7ab]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x556fdbe7d83d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x556fdbe7d739]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x556fdbe7b9d9]\n??:? runModuleUnitTests [0x556fdbe882a3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.string;\n\nstring f(string x) \n{\n    if (x == x.toLower)\n        return x;\n    else\n    {\n        auto reversed = x[$-1..0];\n        return reversed;\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"ykdfhp\") == \"kdfh\");\n}\nvoid main(){}\n\n",
        "answer": "\"kdfh\""
    },
    {
        "id": 143,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpexanzooi.d(15): Error: incompatible types for `(f(\"daaX\", \"daaX\")) == (\"daaX\")`: `bool` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpexanzooi.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.string;\n\nbool f(string s, string n) \n{\n    return equal(s.toLower(), n.toLower());\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"daaX\", \"daaX\") == \"daaX\");\n}\nvoid main(){}\n\n",
        "answer": "\"daaX\""
    },
    {
        "id": 144,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp8yjsl8w3.d(19): Error: incompatible types for array comparison: `long[][]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8yjsl8w3.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nlong[][] f(long[][] vectors) \n{\n    long[][] sorted_vecs = [];\n    foreach (vec; vectors) {\n        vec.sort();\n        sorted_vecs ~= vec;\n    }\n    return sorted_vecs;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([]) == \"list of lists of strings\");\n}\nvoid main(){}\n\n",
        "answer": "\"list of lists of strings\""
    },
    {
        "id": 145,
        "res": true,
        "code": "\n\nimport std.algorithm;\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nfloat f(float price, string product) \n{\n    auto inventory = [\"olives\", \"key\", \"orange\"];\n    if (!inventory.canFind(product))\n    {\n        return price;\n    }\n    else\n    {\n        price *= 0.85;\n        inventory.remove(product);\n    }\n    return price;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(8.5, \"grapes\") == 8.5);\n}\nvoid main(){}\n\n",
        "answer": "8.5"
    },
    {
        "id": 146,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmppl1yl97r.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x556a3203b9c1]\n??:? void tmppl1yl97r.__unittest_L14_C1() [0x556a3203b810]\n??:? void tmppl1yl97r.__modtest() [0x556a3203b92c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x556a32040c0a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x556a3203ebfb]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x556a320450e7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x556a320455b9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x556a32045075]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x556a3203ebcd]\n??:? runModuleUnitTests [0x556a32040a3f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long single_digit) \n{\n    long[] result;\n    foreach(c; 1 .. 11) {\n        if (c != single_digit) {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L) == \"5\");\n}\nvoid main(){}\n\n",
        "answer": "\"5\""
    },
    {
        "id": 147,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpslnl_w4f.d(13): unittest failure\n----------------\n??:? _d_unittestp [0x55d111ad3a91]\n??:? void tmpslnl_w4f.__unittest_L9_C1() [0x55d111ad381f]\n??:? void tmpslnl_w4f.__modtest() [0x55d111ad39fc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55d111ad942e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55d111ad7327]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55d111ade353]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55d111ade825]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55d111ade2e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55d111ad72f9]\n??:? runModuleUnitTests [0x55d111ad9263]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int f",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] nums) \n{\n    auto middle = nums.length / 2;  \n    return nums[middle .. $] ~ nums[0 .. middle];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 1L, 1L]) == \"1\");\n}\nvoid main(){}\n\n",
        "answer": "\"1\""
    },
    {
        "id": 148,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpy1qswiky.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x55f8bb2c52dd]\n??:? void tmpy1qswiky.__unittest_L22_C1() [0x55f8bb2c28b9]\n??:? void tmpy1qswiky.__modtest() [0x55f8bb2c3930]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55f8bb2d2896]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55f8bb2c4e1f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55f8bb2c79cb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55f8bb2c7a5d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55f8bb2c7959]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55f8bb2c4df1]\n??:? runModuleUnitTests [0x55f8bb2d26cb]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string forest, string animal) \n{\n    auto result = cast(char[])forest.dup;\n    auto index = forest.indexOf(animal);\n    while (index < forest.length - 1) \n    {\n        result[index] = forest[index + 1];\n        index++;\n    }\n    if (index == forest.length - 1) \n    {\n        result[index] = '-';\n    }\n    return result.idup;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"2imo 12 tfiqr.\", \"m\") == \"tfiqr-\");\n}\nvoid main(){}\n\n",
        "answer": "\"tfiqr-\""
    },
    {
        "id": 149,
        "res": 0
    },
    {
        "id": 150,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpq7t7x8l4.d(16): Error: using the result of a comma expression is not allowed\n/tmp/tmpq7t7x8l4.d(16): Error: using the result of a comma expression is not allowed\n/tmp/tmpq7t7x8l4.d(16): Error: incompatible types for `(f([-2L, 4L, -4L], 0L)) == (-2L , 4L , -4L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq7t7x8l4.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] numbers, long index) \n{\n    foreach (n; numbers[index .. $]) {\n        numbers = numbers[0 .. index] ~ [n] ~ numbers[index .. $];\n        index++;\n    }\n    return numbers[0 .. index];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([-2L, 4L, -4L], 0L) == (-2L, 4L, -4L));\n}\nvoid main(){}\n\n",
        "answer": "(-2L, 4L, -4L)"
    },
    {
        "id": 151,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpk4k2qhi9.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x555bd850d3bd]\n??:? void tmpk4k2qhi9.__unittest_L12_C1() [0x555bd8503842]\n??:? void tmpk4k2qhi9.__modtest() [0x555bd8504704]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x555bd851523e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x555bd8505d6f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x555bd85109ab]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x555bd8510a3d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x555bd8510939]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x555bd8505d41]\n??:? runModuleUnitTests [0x555bd8515073]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.string;\n\nstring f(string text) \n{\n    text = text.replace(\"1\", \".\");\n    text = text.replace(\"0\", \"1\");\n    text = text.replace(\".\", \"0\");\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"697 this is the ultimate 7 address to attack\") == \"697. this is the ultimate 7 address to attack\");\n}\nvoid main(){}\n\n",
        "answer": "\"697. this is the ultimate 7 address to attack\""
    },
    {
        "id": 152,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpfbm707op.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x55f90d714d21]\n??:? void tmpfbm707op.__unittest_L19_C1() [0x55f90d7137b9]\n??:? void tmpfbm707op.__modtest() [0x55f90d7137dc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55f90d7211b6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55f90d7149af]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55f90d716703]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55f90d716795]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55f90d716691]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55f90d714981]\n??:? runModuleUnitTests [0x55f90d720feb]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.uni : isUpper;\n\nlong f(string text) \n{\n    long n = 0;\n    foreach (c; text)\n    {\n        if (isUpper(c))\n        {\n            n++;\n        }\n    }\n    return n;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"AAAAAAAAAAAAAAAAAAAA\") == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 153,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpp3pjbizl.d(17): Error: undefined identifier `False`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp3pjbizl.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.conv;\n\nbool f(string text, string suffix, long num) \n{\n    string str_num = to!string(num);\n    return text.length >= suffix.length + str_num.length &&\n           text[$-suffix.length-str_num.length .. $-suffix.length] == suffix &&\n           text[$-str_num.length .. $] == str_num;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"friends and love\", \"and\", 3L) == False);\n}\nvoid main(){}\n\n",
        "answer": "False"
    },
    {
        "id": 154,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpyr7pcic1.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x55889c3c0e2d]\n??:? void tmpyr7pcic1.__unittest_L14_C1() [0x55889c3b5849]\n??:? void tmpyr7pcic1.__modtest() [0x55889c3b8220]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55889c3caa46]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55889c3b9667]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55889c3c6667]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55889c3c66f9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55889c3c65f5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55889c3b9639]\n??:? runModuleUnitTests [0x55889c3ca87b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nstring f(string s, string c) \n{\n    auto words = s.split(\" \").array;\n    words.reverse();\n    return c ~ \"  \" ~ words.join(\"  \");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Hello There\", \"*\") == \"dlrow olleH\");\n}\nvoid main(){}\n\n",
        "answer": "\"dlrow olleH\""
    },
    {
        "id": 155,
        "res": 0
    },
    {
        "id": 156,
        "res": true,
        "code": "\nimport std.string;\nimport std.algorithm;\nimport std.typecons;\n\nstring f(string text, long limit, string padChar) {\n    if (limit < text.length) {\n        return text[0 .. limit];\n    }\n    return text.leftJustify(limit, padChar[0]);\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"tqzym\", 5L, \"c\") == \"tqzym\");\n}\nvoid main(){}\n\n",
        "answer": "\"tqzym\""
    },
    {
        "id": 157,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpavsz0s49.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x563eb47433c5]\n??:? void tmpavsz0s49.__unittest_L21_C1() [0x563eb473880d]\n??:? void tmpavsz0s49.__modtest() [0x563eb473a7bc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x563eb474cebe]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x563eb473bbff]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x563eb4748afb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x563eb4748b8d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x563eb4748a89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x563eb473bbd1]\n??:? runModuleUnitTests [0x563eb474ccf3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nlong f(string phrase) \n{\n    long ans = 0;\n    foreach(word; phrase.split(\" \"))\n    {\n        foreach(ch; word)\n        {\n            if (ch == '0')\n            {\n                ans++;\n            }\n        }\n    }\n    return ans;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"aboba 212 has 0 digits\") == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 158,
        "res": 0
    },
    {
        "id": 159,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpe92soxoe.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x5636f59365fd]\n??:? void tmpe92soxoe.__unittest_L23_C1() [0x5636f592c836]\n??:? void tmpe92soxoe.__modtest() [0x5636f592d8b4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5636f593ec3e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5636f592ef1f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5636f5939e17]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5636f5939ea9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5636f5939da5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5636f592eef1]\n??:? runModuleUnitTests [0x5636f593ea73]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\nimport std.range;\n\nstring f(string st) \n{\n    string swapped = \"\";\n    foreach (ch; st.retro)\n    {\n        if ('a' <= ch && ch <= 'z')\n            swapped ~= (ch + 'A' - 'a');\n        else if ('A' <= ch && ch <= 'Z')\n            swapped ~= (ch + 'a' - 'A');\n        else\n            swapped ~= ch;\n    }\n    return swapped;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"RTiGM\") == \"r\");\n}\nvoid main(){}\n\n",
        "answer": "\"r\""
    },
    {
        "id": 160,
        "res": 0
    },
    {
        "id": 161,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp_ruh09gk.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x55eab86229bd]\n??:? void tmp_ruh09gk.__unittest_L11_C1() [0x55eab8617825]\n??:? void tmp_ruh09gk.__modtest() [0x55eab8619870]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55eab862c69a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55eab861b1f7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55eab86282d7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55eab8628369]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55eab8628265]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55eab861b1c9]\n??:? runModuleUnitTests [0x55eab862c4cf]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text, string value) \n{\n    auto result = text.split(value);\n    return result[1] ~ result[0];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"difkj rinpx\", \"k\") == \"rinpx\");\n}\nvoid main(){}\n\n",
        "answer": "\"rinpx\""
    },
    {
        "id": 162,
        "res": 0
    },
    {
        "id": 163,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmppcueb5oz.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x55fa56b1d4fd]\n??:? void tmppcueb5oz.__unittest_L11_C1() [0x55fa56b1c7ce]\n??:? void tmppcueb5oz.__modtest() [0x55fa56b1d318]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55fa56b234c2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55fa56b21267]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55fa56b28fb3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55fa56b29485]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55fa56b28f41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55fa56b21239]\n??:? runModuleUnitTests [0x55fa56b232f7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nstring f(string text, string space_symbol, long size) \n{\n    auto spaces = replicate(space_symbol, cast(int)(size - text.length));\n    return text ~ spaces;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"w\", \"))\", 7L) == \"w\");\n}\nvoid main(){}\n\n",
        "answer": "\"w\""
    },
    {
        "id": 164,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nlong[] f(long[] lst) \n{\n    lst.sort();\n    return lst[0..3];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([5L, 8L, 1L, 3L, 0L]) == [0, 1, 3]);\n}\nvoid main(){}\n\n",
        "answer": "[0, 1, 3]"
    },
    {
        "id": 165,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmptchc_hh2.d(22): Error: undefined identifier `True`, did you mean struct `Take(Range) if (isInputRange!(Unqual!Range) && !(!isInfinite!(Unqual!Range) && hasSlicing!(Unqual!Range) || is(Range T == Take!T)))`?\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptchc_hh2.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.range;\nimport std.ascii;\n\nbool f(string text, long lower, long upper) \n{\n    foreach (char c; text[lower..upper]) \n    {\n        if (c < 0 || c > 127) \n        {\n            return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"=xtanp|sugv?z\", 3L, 6L) == True);\n}\nvoid main(){}\n\n",
        "answer": "True"
    },
    {
        "id": 166,
        "res": 0
    },
    {
        "id": 167,
        "res": 0
    },
    {
        "id": 168,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmppkymnj2n.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x5568ea10b161]\n??:? void tmppkymnj2n.__unittest_L14_C1() [0x5568ea109882]\n??:? void tmppkymnj2n.__modtest() [0x5568ea109b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5568ea118d46]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5568ea10ad37]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5568ea10de77]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5568ea10df09]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5568ea10de05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5568ea10ad09]\n??:? runModuleUnitTests [0x5568ea118b7b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text, string new_value, size_t index) \n{\n    if (index >= text.length)\n        throw new Exception(\"Index out of range\");\n\n    return text[0 .. index] ~ new_value ~ text[index + 1 .. $];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"spain\", \"b\", 4L) == \"spain\");\n}\nvoid main(){}\n\n",
        "answer": "\"spain\""
    },
    {
        "id": 169,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpbd06kl5y.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x557f1ad27a35]\n??:? void tmpbd06kl5y.__unittest_L21_C1() [0x557f1ad25826]\n??:? void tmpbd06kl5y.__modtest() [0x557f1ad263a4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x557f1ad35e12]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x557f1ad27577]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x557f1ad2b2ab]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x557f1ad2b33d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x557f1ad2b239]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x557f1ad27549]\n??:? runModuleUnitTests [0x557f1ad35c47]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.conv : to;\n\nstring f(string text) {\n    auto ls = text.dup;\n    int total = cast(int)((text.length - 1) * 2);\n    for (int i = 1; i <= total; ++i) {\n        if (i % 2 != 0) {\n            ls ~= \"+\";\n        } else {\n            ls = \"+\" ~ ls;\n        }\n    }\n    return cast(string)ls;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"taole\") == \"t\");\n}\nvoid main(){}\n\n",
        "answer": "\"t\""
    },
    {
        "id": 170,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpft510xx8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x5612e0c3e8a1]\n??:? void tmpft510xx8.__unittest_L18_C1() [0x5612e0c3e7e6]\n??:? void tmpft510xx8.__modtest() [0x5612e0c3e80c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5612e0c42f9e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5612e0c4110f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5612e0c47ad3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5612e0c47fa5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5612e0c47a61]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5612e0c410e1]\n??:? runModuleUnitTests [0x5612e0c42dd3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.stdio;\n\nlong f(long[] nums, long number) \n{\n    long count = 0;\n    foreach (num; nums)\n    {\n        if (num == number)\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([12L, 0L, 13L, 4L, 12L], 12L) == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 171,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpodql1icj.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x55b7bf971981]\n??:? void tmpodql1icj.__unittest_L12_C1() [0x55b7bf971827]\n??:? void tmpodql1icj.__modtest() [0x55b7bf9718ec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55b7bf97621e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55b7bf97423f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55b7bf97ad53]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55b7bf97b225]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55b7bf97ace1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55b7bf974211]\n??:? runModuleUnitTests [0x55b7bf976053]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] nums) \n{\n    auto count = nums.length / 2;\n    foreach (_; 0 .. count) {\n        nums = nums[1 .. $];\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([3L, 4L, 1L, 2L, 3L]) == \"1 2 3\");\n}\nvoid main(){}\n\n",
        "answer": "\"1 2 3\""
    },
    {
        "id": 172,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpip0nonpk.d(20): Error: incompatible types for `(f([])) == (0)`: `long[]` and `int`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpip0nonpk.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] array) \n{\n    for (int i = 0; i < array.length; i++)\n    {\n        if (array[i] < 0)\n        {\n            array = array[0 .. i] ~ array[i + 1 .. $];\n            i--; // Adjust index after removing element\n        }\n    }\n    return array;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([]) == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 173,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp0ns1mzne.d(18): Error: using the result of a comma expression is not allowed\n/tmp/tmp0ns1mzne.d(18): Error: incompatible types for `(f([5L, 8L, 6L, 8L, 4L])) == (5L , 12L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ns1mzne.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] list_x) \n{\n    auto item_count = list_x.length;\n    long[] new_list;\n    foreach (_; 0 .. item_count) {\n        new_list ~= list_x[$ - 1];\n        list_x = list_x[0 .. $ - 1];\n    }\n    return new_list;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([5L, 8L, 6L, 8L, 4L]) == (5L, 12L));\n}\nvoid main(){}\n\n",
        "answer": "(5L, 12L)"
    },
    {
        "id": 174,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp6_5v1ayz.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x564c80bbca99]\n??:? void tmp6_5v1ayz.__unittest_L16_C1() [0x564c80bbc85e]\n??:? void tmp6_5v1ayz.__modtest() [0x564c80bbca00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x564c80bc14fe]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x564c80bbf39f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x564c80bc6033]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x564c80bc6505]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x564c80bc5fc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x564c80bbf371]\n??:? runModuleUnitTests [0x564c80bc1333]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] lst) \n{\n    if (lst.length > 4)\n        lst[1..4].reverse();\n    else if (lst.length > 1)\n        lst[1..$].reverse();\n    return lst;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, 3L]) == [1, 2, 3, 4]);\n}\nvoid main(){}\n\n",
        "answer": "[1, 2, 3, 4]"
    },
    {
        "id": 175,
        "res": 0
    },
    {
        "id": 176,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp7rxq8aa5.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x5645bd6ab631]\n??:? void tmp7rxq8aa5.__unittest_L15_C1() [0x5645bd6a984d]\n??:? void tmp7rxq8aa5.__modtest() [0x5645bd6a9dd4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5645bd6b913e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5645bd6ab2bf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5645bd6ae31b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5645bd6ae3ad]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5645bd6ae2a9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5645bd6ab291]\n??:? runModuleUnitTests [0x5645bd6b8f73]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string text, string to_place) \n{\n    size_t index = text.indexOf(to_place) + 1;\n    auto after_place = text[0 .. index];\n    auto before_place = text[index .. $];\n    return after_place ~ before_place;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"some text\", \"some\") == \"text\");\n}\nvoid main(){}\n\n",
        "answer": "\"text\""
    },
    {
        "id": 177,
        "res": 0
    },
    {
        "id": 178,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpm2q2bt67.d(12): unittest failure\n----------------\n??:? _d_unittestp [0x55b00156c961]\n??:? void tmpm2q2bt67.__unittest_L8_C1() [0x55b00156c7fe]\n??:? void tmpm2q2bt67.__modtest() [0x55b00156c8c8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55b0015711fe]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55b00156f21f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55b001575d33]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55b001576205]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55b001575cc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55b00156f1f1]\n??:? runModuleUnitTests [0x55b001571033]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int f",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] array, long n) \n{\n    return array[n..$];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([0L, 0L, 1L, 2L, 2L, 2L, 2L], 4L) == \"2L2L2L2\");\n}\nvoid main(){}\n\n",
        "answer": "\"2L2L2L2\""
    },
    {
        "id": 179,
        "res": 0
    },
    {
        "id": 180,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp466m1h7u.d(22): Error: incompatible types for `(f([-1L, 5L, 3L, -2L, -6L, 8L, 8L])) == (-1)`: `long[]` and `int`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp466m1h7u.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] nums) \n{\n    long a = -1;\n    long[] b = nums[1..$];\n    while (a <= b[0]) {\n        nums = nums.filter!(x => x != b[0]).array;\n        a = 0;\n        b = b[1..$];\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([-1L, 5L, 3L, -2L, -6L, 8L, 8L]) == -1);\n}\nvoid main(){}\n\n",
        "answer": "-1"
    },
    {
        "id": 181,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpa4dqeqe4.d(25): Error: none of the overloads of template `std.typecons.Tuple!(string, long).Tuple.opEquals` are callable using argument types `!()(string)`\n/usr/include/dmd/phobos/std/typecons.d(796):        Candidates are: `opEquals(R)(R rhs)`\n  with `R = string`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(803):                        `opEquals(R)(R rhs) const`\n  with `R = string`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(810):                        `opEquals(R...)(auto ref R rhs)`\n  with `R = (string)`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.ascii;\nimport std.range;\nimport std.conv;\n\nTuple!(string, long) f(string s) \n{\n    long count = 0;\n    string digits = \"\";\n    foreach (c; s) {\n        if (c.isDigit) {\n            count++;\n            digits ~= c;\n        }\n    }\n    return tuple(digits, count);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"qwfasgahh329kn12a23\") == \"qwfasgahh3n1a2\");\n}\nvoid main(){}\n\n",
        "answer": "\"qwfasgahh3n1a2\""
    },
    {
        "id": 182,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpf7vdb23f.d(25): Error: using the result of a comma expression is not allowed\n/tmp/tmpf7vdb23f.d(25): Error: incompatible types for `(f(nullable([\"b\":1L, \"a\":2L]))) == (\"a\" , 2L)`: `Tuple!(string, long)[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf7vdb23f.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nTuple!(string, long)[] f(Nullable!(long[string]) dic) \n{\n    Tuple!(string, long)[] output;\n    if (!dic.isNull) \n    {\n        foreach (key, value; dic.get()) \n        {\n            output ~= tuple(key, value);\n        }\n        output.sort();\n    }\n    return output;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"b\": 1L, \"a\": 2L].nullable) == (\"a\", 2L));\n}\nvoid main(){}\n\n",
        "answer": "(\"a\", 2L)"
    },
    {
        "id": 183,
        "res": 0
    },
    {
        "id": 184,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp4dbyaqwi.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x5616105105e5]\n??:? void tmp4dbyaqwi.__unittest_L20_C1() [0x56161050f8ba]\n??:? void tmp4dbyaqwi.__modtest() [0x561610510404]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x561610515bba]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x561610513bab]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56161051ada3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56161051b275]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56161051ad31]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x561610513b7d]\n??:? runModuleUnitTests [0x5616105159ef]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.range;\n\nlong[] f(long[] digits) \n{\n    digits = digits.dup.reverse;\n    if(digits.length < 2){\n        return digits;\n    }\n    for(size_t i = 0; i < digits.length; i += 2){\n        auto temp = digits[i];\n        digits[i] = digits[i+1];\n        digits[i+1] = temp;\n    }\n    return digits;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L]) == \"12L\");\n}\nvoid main(){}\n\n",
        "answer": "\"12L\""
    },
    {
        "id": 185,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmphpiipcoo.d(26): Error: using the result of a comma expression is not allowed\n/tmp/tmphpiipcoo.d(26): Error: using the result of a comma expression is not allowed\n/tmp/tmphpiipcoo.d(26): Error: using the result of a comma expression is not allowed\n/tmp/tmphpiipcoo.d(26): Error: using the result of a comma expression is not allowed\n/tmp/tmphpiipcoo.d(26): Error: using the result of a comma expression is not allowed\n/tmp/tmphpiipcoo.d(26): Error: incompatible types for `(f([16L, 14L, 12L, 7L, 9L, 11L])) == (16L , 14L , 12L , 7L , 9L , 11L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphpiipcoo.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] L) \n{\n    auto N = L.length;\n    foreach (k; 1 .. N / 2 + 1) {\n        auto i = k - 1;\n        auto j = N - k;\n        while (i < j) {\n            // swap elements:\n            L[i] = L[i] + L[j];\n            L[j] = L[i] - L[j];\n            L[i] = L[i] - L[j];\n            // update i, j:\n            i++;\n            j--;\n        }\n    }\n    return L;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([16L, 14L, 12L, 7L, 9L, 11L]) == (16L, 14L, 12L, 7L, 9L, 11L));\n}\nvoid main(){}\n\n",
        "answer": "(16L, 14L, 12L, 7L, 9L, 11L)"
    },
    {
        "id": 186,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.stdio;\nimport std.string;\n\nstring f(string text) \n{\n    return text.strip();\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"pvtso\") == \"pvtso\");\n}\nvoid main(){}\n\n",
        "answer": "\"pvtso\""
    },
    {
        "id": 187,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp8vqr99jf.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x55dd7e2ea925]\n??:? void tmp8vqr99jf.__unittest_L20_C1() [0x55dd7e2cf8c6]\n??:? void tmp8vqr99jf.__modtest() [0x55dd7e2dfda0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55dd7e2f374e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55dd7e2e1ab3]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55dd7e2ef9e7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55dd7e2efb71]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55dd7e2ef975]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55dd7e2e1a85]\n??:? runModuleUnitTests [0x55dd7e2f3583]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nlong f(Nullable!(long[long]) d, long index) \n{\n    if (!d.isNull) {\n        auto map = d.get;\n        auto length = map.length;\n        auto idx = index % length;\n        auto v = map[map.keys[0]];\n        for (int i = 0; i < idx; ++i) {\n            map.remove(map.keys[0]);\n        }\n        return v;\n    }\n    return 0;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([27L: 39L].nullable, 1L) == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 188,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp_nhc8xr0.d(24): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_nhc8xr0.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.algorithm;\nimport std.string;\n\nstring[] f(string[] strings) \n{\n    string[] new_strings;\n    foreach (string; strings) {\n        if(string.startsWith(\"a\") || string.startsWith(\"p\")) {\n            new_strings ~= string;\n        }\n    }\n    return new_strings;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"a\", \"b\", \"car\", \"d\"]) == \"apple\");\n}\nvoid main(){}\n\n",
        "answer": "\"apple\""
    },
    {
        "id": 189,
        "res": 0
    },
    {
        "id": 190,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpqzzizzby.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x55d99359be11]\n??:? void tmpqzzizzby.__unittest_L19_C1() [0x55d99359a84e]\n??:? void tmpqzzizzby.__modtest() [0x55d99359a8cc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55d9935a8f56]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55d99359ba9f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55d99359e283]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55d99359e315]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55d99359e211]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55d99359ba71]\n??:? runModuleUnitTests [0x55d9935a8d8b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text) \n{\n    string result = \"\";\n    foreach (c; text)\n    {\n        if ('a' <= c && c <= 'z')\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"980jio80jic kld094398IIl \") == \"980jio80jic kld094398IIl \");\n}\nvoid main(){}\n\n",
        "answer": "\"980jio80jic kld094398IIl \""
    },
    {
        "id": 191,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp4hsydfji.d(14): Error: incompatible types for `(f(\"Ohno\")) == (\"OhNO\")`: `bool` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4hsydfji.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nbool f(string str) \n{\n    return str.toUpper == str;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Ohno\") == \"OhNO\");\n}\nvoid main(){}\n\n",
        "answer": "\"OhNO\""
    },
    {
        "id": 192,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpnl7zfbrs.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x55f188f9a9d1]\n??:? void tmpnl7zfbrs.__unittest_L13_C1() [0x55f188f9a871]\n??:? void tmpnl7zfbrs.__modtest() [0x55f188f9a93c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55f188f9df62]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55f188fa41b3]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55f188faea97]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55f188fa2649]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55f188faea25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55f188fa4185]\n??:? runModuleUnitTests [0x55f188f9dd97]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text, string suffix) \n{\n    string output = text;\n    while (text[$-suffix.length .. $] == suffix) {\n        output = text[0 .. $-suffix.length];\n        text = output;\n    }\n    return output;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"!klcd!ma:ri\", \"!\") == \"kcit\");\n}\nvoid main(){}\n\n",
        "answer": "\"kcit\""
    },
    {
        "id": 193,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp_g7marw7.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x5651843b678d]\n??:? void tmp_g7marw7.__unittest_L14_C1() [0x5651843aa8ae]\n??:? void tmp_g7marw7.__modtest() [0x5651843adb80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5651843c021a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5651843aefc7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5651843bbe3b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5651843bbecd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5651843bbdc9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5651843aef99]\n??:? runModuleUnitTests [0x5651843c004f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nstring f(string s) \n{\n    size_t count = s.count(\":\");\n    auto parts = s.split(\":\");\n    return parts[0..$-2].join(\":\") ~ \":\" ~ parts[$-1];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"1::1\") == \"1::1\");\n}\nvoid main(){}\n\n",
        "answer": "\"1::1\""
    },
    {
        "id": 194,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpksyi8xxg.d(17): Error: incompatible types for `(f([[5L, 6L, 2L, 3L], [1L, 9L, 5L, 6L]], 0L)) == (6L)`: `long[][]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpksyi8xxg.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.algorithm;\n\nlong[][] f(long[][] matr, long insert_loc) \n{\n    matr = matr[0..insert_loc] ~ [[]] ~ matr[insert_loc..$];\n    return matr;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([[5L, 6L, 2L, 3L], [1L, 9L, 5L, 6L]], 0L) == 6L);\n}\nvoid main(){}\n\n",
        "answer": "6L"
    },
    {
        "id": 195,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpfl2fibjd.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x5646f8e6f159]\n??:? void tmpfl2fibjd.__unittest_L19_C1() [0x5646f8e6d95a]\n??:? void tmpfl2fibjd.__modtest() [0x5646f8e6dc14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5646f8e7ca02]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5646f8e6ede7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5646f8e71d17]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5646f8e71da9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5646f8e71ca5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5646f8e6edb9]\n??:? runModuleUnitTests [0x5646f8e7c837]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.algorithm;\nimport std.string;\n\nstring f(string text) {\n    foreach (p; [\"acs\", \"asp\", \"scn\"]) {\n        if (text.startsWith(p)) {\n            text = text[p.length .. $] ~ \" \";\n        } else {\n            text = text ~ \" \";\n        }\n    }\n    if (text.startsWith(\" \")) {\n        text = text[1 .. $];\n    }\n    return text[0 .. $ - 1];\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"ilfdoirwirmtoibsac\") == \"acs asp scn\");\n}\nvoid main(){}\n\n",
        "answer": "\"acs asp scn\""
    },
    {
        "id": 196,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string text) \n{\n    text = text.replace(\" x\", \" x.\");\n    if (text.front.toUpper == text.front)\n    {\n        return \"correct\";\n    }\n    text = text.replace(\" x.\", \" x\");\n    return \"mixed\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"398 Is A Poor Year To Sow\") == \"correct\");\n}\nvoid main(){}\n\n",
        "answer": "\"correct\""
    },
    {
        "id": 197,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmphkkpm6sg.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x55d0f70b9445]\n??:? void tmphkkpm6sg.__unittest_L12_C1() [0x55d0f70b785d]\n??:? void tmphkkpm6sg.__modtest() [0x55d0f70b8638]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55d0f70c7d1a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55d0f70b902b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55d0f70bcb2b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55d0f70bcbbd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55d0f70bcab9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55d0f70b8ffd]\n??:? runModuleUnitTests [0x55d0f70c7b4f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.conv;\n\nstring f(long temp, long timeLimit) \n{\n    long s = timeLimit / temp;\n    long e = timeLimit % temp;\n    return [to!string(e) ~ \" oC\", to!string(s) ~ \" \" ~ to!string(e)][s > 1];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(1L, 1234567890L) == \"0.038181818181818182\");\n}\nvoid main(){}\n\n",
        "answer": "\"0.038181818181818182\""
    },
    {
        "id": 198,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp3wb8z9u7.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x55c00d271b7d]\n??:? void tmp3wb8z9u7.__unittest_L14_C1() [0x55c00d2667ed]\n??:? void tmp3wb8z9u7.__modtest() [0x55c00d268b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55c00d279e52]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55c00d26a49f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55c00d27520b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55c00d27529d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55c00d275199]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55c00d26a471]\n??:? runModuleUnitTests [0x55c00d279c87]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.range;\nimport std.string;\n\nstring f(string text, string strip_chars) \n{\n    auto reversedText = text.retro.strip(strip_chars);\n    return reversedText.retro;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"tcmfsmj\", \"cfj\") == \"tcmfsmj\");\n}\nvoid main(){}\n\n",
        "answer": "\"tcmfsmj\""
    },
    {
        "id": 199,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string s, string ch) {\n    size_t count = s.count(ch) + 1;\n    string base;\n    foreach (i; 0 .. count) {\n        base ~= ch;\n    }\n    return s.endsWith(base) ? s[0 .. $ - base.length] : s;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"mnmnj krupa...##!@#!@#$$@##\", \"@\") == \"mnmnj krupa...##!@#!@#$$@##\");\n}\nvoid main(){}\n\n",
        "answer": "\"mnmnj krupa...##!@#!@#$$@##\""
    },
    {
        "id": 200,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp2zu36uap.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x563a3984ba69]\n??:? void tmp2zu36uap.__unittest_L15_C1() [0x563a3984b815]\n??:? void tmp2zu36uap.__modtest() [0x563a3984b9d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x563a39851592]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x563a3984f45b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x563a39856377]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x563a39856849]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x563a39856305]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x563a3984f42d]\n??:? runModuleUnitTests [0x563a398513c7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text, string value) \n{\n    size_t length = text.length;\n    size_t index = 0;\n    while (length > 0) {\n        value = text[index] ~ value;\n        length--;\n        index++;\n    }\n    return value;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"jao mt\", \"house\") == \"jao mt\");\n}\nvoid main(){}\n\n",
        "answer": "\"jao mt\""
    },
    {
        "id": 201,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp9x4yz0ho.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x558cbfe2ca59]\n??:? void tmp9x4yz0ho.__unittest_L16_C1() [0x558cbfe2c802]\n??:? void tmp9x4yz0ho.__modtest() [0x558cbfe2c9c0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x558cbfe323ce]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x558cbfe30417]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x558cbfe371b3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x558cbfe37685]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x558cbfe37141]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x558cbfe303e9]\n??:? runModuleUnitTests [0x558cbfe32203]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nstring f(string text) \n{\n    string result = \"\";\n    foreach (char c; text) {\n        if (isDigit(c)) {\n            result = c ~ result;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"--4yrw 251-//4 6p\") == \"___//_\");\n}\nvoid main(){}\n\n",
        "answer": "\"___//_\""
    },
    {
        "id": 202,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpjoaw7gq6.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x563a62e7ed0d]\n??:? void tmpjoaw7gq6.__unittest_L13_C1() [0x563a62e7483f]\n??:? void tmpjoaw7gq6.__modtest() [0x563a62e762fc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x563a62e88d46]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x563a62e77547]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x563a62e84507]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x563a62e84599]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x563a62e84495]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x563a62e77519]\n??:? runModuleUnitTests [0x563a62e88b7b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] array, long[] lst) {\n    array ~= lst; // Extend array with lst\n    // Return elements that are greater than or equal to 10\n    return array.filter!(e => e >= 10).array;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([2L, 15L], [15L, 1L]) == [15L, 1L]);\n}\nvoid main(){}\n\n",
        "answer": "[15L, 1L]"
    },
    {
        "id": 203,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpst1_kzmb.d(20): Error: incompatible types for `(result.get()) == (\"3\")`: `string[string]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpst1_kzmb.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nNullable!(string[string]) f(Nullable!(string[string]) d) \n{\n    if (!d.isNull) {\n        d.get().clear();\n    }\n    return Nullable!(string[string]).init;\n}\n\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([\"a\": \"3\", \"b\": \"-1\", \"c\": \"Dum\"].nullable);\n        assert(!result.isNull && result.get == \"3\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"3\""
    },
    {
        "id": 204,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpvr5p8pkt.d(17): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvr5p8pkt.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.conv; // Import std.conv for the to function\n\nstring[] f(string name) {\n    if (name.length < 2) {\n        return [];\n    }\n    return [name[0].to!string, name[1].to!string];\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"master. \") == \"master\");\n}\nvoid main(){}\n\n",
        "answer": "\"master\""
    },
    {
        "id": 205,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp2h161ofg.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x55581aaada39]\n??:? void tmp2h161ofg.__unittest_L21_C1() [0x55581aaad8d6]\n??:? void tmp2h161ofg.__modtest() [0x55581aaad9a4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55581aab1192]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55581aab73e3]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55581aac1c7f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55581aab5879]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55581aac1c0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55581aab73b5]\n??:? runModuleUnitTests [0x55581aab0fc7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\n\nstring f(string a) \n{\n    foreach (_; 0 .. 10) {\n        foreach (j; 0 .. a.length) {\n            if (a[j] != '#') {\n                a = a[j .. $];\n                break;\n            }\n        }\n        if (a.length == 0 || a[$ - 1] != '#') {\n            break;\n        }\n        a = a[0 .. $ - 1];\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"##fiu##nk#he###wumun##\") == \"fiuhewumun\");\n}\nvoid main(){}\n\n",
        "answer": "\"fiuhewumun\""
    },
    {
        "id": 206,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpkjqcounl.d(14): unittest failure\n----------------\n??:? _d_unittestp [0x55f380952295]\n??:? void tmpkjqcounl.__unittest_L10_C1() [0x55f3809477b2]\n??:? void tmpkjqcounl.__modtest() [0x55f380949460]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55f38095c502]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55f38094aacf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55f380957d6b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55f380957dfd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55f380957cf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55f38094aaa1]\n??:? runModuleUnitTests [0x55f38095c337]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string a) \n{\n    return a.split().join(\" \");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\" h e l l o   w o r l d! \") == \"hello world\");\n}\nvoid main(){}\n\n",
        "answer": "\"hello world\""
    },
    {
        "id": 207,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmps_0d4phc.d(23): Error: incompatible types for `(result.get()) == (\"brown\")`: `long[string]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps_0d4phc.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\n\nNullable!(long[string]) f(Nullable!(long[string])[] commands) \n{\n    long[string] d;\n    foreach (c; commands)\n    {\n        foreach (key, value; c.get)\n        {\n            d[key] = value;\n        }\n    }\n    return Nullable!(long[string])(d);\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([[\"brown\": 2L].nullable, [\"blue\": 5L].nullable, [\"bright\": 4L].nullable]);\n        assert(!result.isNull && result.get == \"brown\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"brown\""
    },
    {
        "id": 208,
        "res": 0
    },
    {
        "id": 209,
        "res": 0
    },
    {
        "id": 210,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpprpb5ue5.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x55e122e682ad]\n??:? void tmpprpb5ue5.__unittest_L21_C1() [0x55e122e6785a]\n??:? void tmpprpb5ue5.__modtest() [0x55e122e680cc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55e122e6c53e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55e122e6a78b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55e122e717ff]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55e122e71cd1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55e122e7178d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55e122e6a75d]\n??:? runModuleUnitTests [0x55e122e6c373]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.range;\n\nlong f(long n, long m, long num) \n{\n    auto x_list = new long[](m - n + 1);\n    foreach (i; 0 .. x_list.length) {\n        x_list[i] = n + i;\n    }\n    \n    long j = 0;\n    while (true) {\n        j = (j + num) % x_list.length;\n        if (x_list[j] % 2 == 0) {\n            return x_list[j];\n        }\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(46L, 48L, 21L) == 6L);\n}\nvoid main(){}\n\n",
        "answer": "6L"
    },
    {
        "id": 211,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpxqspa82t.d(25): Error: incompatible types for `(f(\"abca dea ead\")) == (\"a\")`: `long` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxqspa82t.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\nimport std.array;\n\nlong f(string s) \n{\n    long count = 0;\n    foreach (c; s)\n    {\n        if (s.count(c) > 1)\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"abca dea ead\") == \"a\");\n}\nvoid main(){}\n\n",
        "answer": "\"a\""
    },
    {
        "id": 212,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp4fbaps1t.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x560a349eba81]\n??:? void tmp4fbaps1t.__unittest_L14_C1() [0x560a349eb84c]\n??:? void tmp4fbaps1t.__modtest() [0x560a349eb9ec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x560a349f0346]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x560a349ee337]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x560a349f4e7b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x560a349f534d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x560a349f4e09]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x560a349ee309]\n??:? runModuleUnitTests [0x560a349f017b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] nums) \n{\n    foreach(_; 0 .. nums.length - 1) {\n        nums = nums.reverse;\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, -9L, 7L, 2L, 6L, -3L, 3L]) == [3, 2, 1, 6, 5, 4, 9, 8]);\n}\nvoid main(){}\n\n",
        "answer": "[3, 2, 1, 6, 5, 4, 9, 8]"
    },
    {
        "id": 213,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpxazhy8i7.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x5617f06cc26d]\n??:? void tmpxazhy8i7.__unittest_L11_C1() [0x5617f06c37f2]\n??:? void tmpxazhy8i7.__modtest() [0x5617f06c4718]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5617f06d3ffe]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5617f06d13af]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5617f06da9c3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5617f06dae95]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5617f06da951]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5617f06d1381]\n??:? runModuleUnitTests [0x5617f06d3e33]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nstring f(string s) \n{\n    s = s.replace(\"(\", \"[\").replace(\")\", \"]\");\n    return s;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"(ac)\") == \"ac\");\n}\nvoid main(){}\n\n",
        "answer": "\"ac\""
    },
    {
        "id": 214,
        "res": 0
    },
    {
        "id": 215,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp1nxb9a_2.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x564a8e2629c1]\n??:? void tmp1nxb9a_2.__unittest_L12_C1() [0x564a8e26285a]\n??:? void tmp1nxb9a_2.__modtest() [0x564a8e262928]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x564a8e26611a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x564a8e26c36b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x564a8e276c07]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x564a8e26a801]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x564a8e276b95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x564a8e26c33d]\n??:? runModuleUnitTests [0x564a8e265f4f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text) \n{\n    string new_text = text;\n    while (text.length > 1 && text[0] == text[$ - 1]) {\n        new_text = text = text[1..$-1];\n    }\n    return new_text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\")\") == \"hello\");\n}\nvoid main(){}\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 216,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp0s_o7d3l.d(21): Error: incompatible types for `(f(\"dp ef1 gh2\")) == (\"123\")`: `long` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0s_o7d3l.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.conv;\nimport std.ascii;\n\nlong f(string letters) \n{\n    long count = 0;\n    foreach (char l; letters) {\n        if (isDigit(l)) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"dp ef1 gh2\") == \"123\");\n}\nvoid main(){}\n\n",
        "answer": "\"123\""
    },
    {
        "id": 217,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp6fl18e0u.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x5619aa107d79]\n??:? void tmp6fl18e0u.__unittest_L25_C1() [0x5619aa10680e]\n??:? void tmp6fl18e0u.__modtest() [0x5619aa106834]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5619aa1140aa]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5619aa107a07]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5619aa10975b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5619aa1097ed]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5619aa1096e9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5619aa1079d9]\n??:? runModuleUnitTests [0x5619aa113edf]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\nimport std.string;\n\nstring f(string str) \n{\n    bool isAlphaNumeric = true;\n    foreach (char c; str)\n    {\n        if (!isAlpha(c) && !isDigit(c))\n        {\n            isAlphaNumeric = false;\n            break;\n        }\n    }\n\n    if (isAlphaNumeric) \n    {\n        return \"ascii encoded is allowed for this language\";\n    }\n    return \"more than ASCII\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Str zahrnuje anglo-ameriæske vasi piscina and kuca!\") == \"ascii encoded is allowed for this language\");\n}\nvoid main(){}\n\n",
        "answer": "\"ascii encoded is allowed for this language\""
    },
    {
        "id": 218,
        "res": 0
    },
    {
        "id": 219,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp35z28v04.d(21): Error: incompatible types for `(f(\"Hello\", \")\")) == (\"Hello\")`: `bool` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp35z28v04.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nbool f(string s1, string s2) \n{\n    foreach (k; 0 .. s2.length + s1.length)\n    {\n        s1 ~= s1[0];\n        if (s1.indexOf(s2) >= 0)\n            return true;\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Hello\", \")\") == \"Hello\");\n}\nvoid main(){}\n\n",
        "answer": "\"Hello\""
    },
    {
        "id": 220,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpljojqn3o.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x55e0fcc0bd09]\n??:? void tmpljojqn3o.__unittest_L14_C1() [0x55e0fcc0b8c0]\n??:? void tmpljojqn3o.__modtest() [0x55e0fcc0bc74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55e0fcc119d2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55e0fcc0f74b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55e0fcc167b7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55e0fcc16c89]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55e0fcc16745]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55e0fcc0f71d]\n??:? runModuleUnitTests [0x55e0fcc11807]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text, long m, long n) \n{\n    text = text ~ text[0..m] ~ text[n..$];\n    string result = \"\";\n    foreach (i; n .. text.length - m)\n    {\n        result = text[i] ~ result;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"abcdefgabc\", 1L, 2L) == \"abcdefg\");\n}\nvoid main(){}\n\n",
        "answer": "\"abcdefg\""
    },
    {
        "id": 221,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpgoehx9rv.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x55d7736a0ae5]\n??:? void tmpgoehx9rv.__unittest_L12_C1() [0x55d773695835]\n??:? void tmpgoehx9rv.__modtest() [0x55d773697998]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55d7736aa7c2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55d77369931f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55d7736a63ff]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55d7736a6491]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55d7736a638d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55d7736992f1]\n??:? runModuleUnitTests [0x55d7736aa5f7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nstring f(string text, string delim) \n{\n    auto parts = text.split(delim);\n    return parts[1] ~ delim ~ parts[0];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"bpxa24fc5.\", \".\") == \"24fc5bpxa\");\n}\nvoid main(){}\n\n",
        "answer": "\"24fc5bpxa\""
    },
    {
        "id": 222,
        "res": 0
    },
    {
        "id": 223,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpd8afxems.d(23): Error: using the result of a comma expression is not allowed\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd8afxems.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong f(long[] array, long target) \n{\n    long count = 0;\n    long i = 1;\n    for (size_t j = 1; j < array.length; j++) {\n        if ((array[j] > array[j-1]) && (array[j] <= target)) {\n            count += i;\n        } else if (array[j] <= array[j-1]) {\n            i = 1;\n        } else {\n            i += 1;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, -1L, 4L], 2L) == (2L, 2L));\n}\nvoid main(){}\n\n",
        "answer": "(2L, 2L)"
    },
    {
        "id": 224,
        "res": 0
    },
    {
        "id": 225,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nbool f(string text) \n{\n    foreach (char c; text)\n    {\n        if (!isLower(c))\n        {\n            return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"54882\") == false);\n}\nvoid main(){}\n\n",
        "answer": "false"
    },
    {
        "id": 226,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpj2jcp0wi.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x5574898c2a51]\n??:? void tmpj2jcp0wi.__unittest_L13_C1() [0x5574898c289e]\n??:? void tmpj2jcp0wi.__modtest() [0x5574898c29bc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5574898c7d5e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5574898c5d4f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5574898cc23b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5574898cc70d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5574898cc1c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5574898c5d21]\n??:? runModuleUnitTests [0x5574898c7b93]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] nums) \n{\n    foreach_reverse(i; 0 .. nums.length) {\n        if (nums[i] % 3 == 0) {\n            nums ~= nums[i];\n        }\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 3L]) == \"1 2 3\");\n}\nvoid main(){}\n\n",
        "answer": "\"1 2 3\""
    },
    {
        "id": 227,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp89sa_lv_.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x5645237dee91]\n??:? void tmp89sa_lv_.__unittest_L15_C1() [0x5645237dd822]\n??:? void tmp89sa_lv_.__modtest() [0x5645237dd948]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5645237eccce]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5645237deb1f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5645237e1b33]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5645237e1bc5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5645237e1ac1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5645237deaf1]\n??:? runModuleUnitTests [0x5645237ecb03]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.conv;\nimport std.string;\n\nstring f(string text) \n{\n    text = text.toLower();\n    auto head = text[0..1].toUpper();\n    auto tail = text[1..$];\n    return head ~ tail;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Manolo\") == \"mango\");\n}\nvoid main(){}\n\n",
        "answer": "\"mango\""
    },
    {
        "id": 228,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp6ek5rma8.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x56040c193445]\n??:? void tmp6ek5rma8.__unittest_L14_C1() [0x56040c1887e5]\n??:? void tmp6ek5rma8.__modtest() [0x56040c18a614]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56040c19d90a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56040c18bc7f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56040c198f1b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56040c198fad]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56040c198ea9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56040c18bc51]\n??:? runModuleUnitTests [0x56040c19d73f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\nimport std.array;\n\nstring f(string text, string splitter) \n{\n    auto words = text.toLower().split().array;\n    return words.join(splitter);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"LlTHH sAfLAPkPhtsWP\", \"#\") == \"hello world\");\n}\nvoid main(){}\n\n",
        "answer": "\"hello world\""
    },
    {
        "id": 229,
        "res": 0
    },
    {
        "id": 230,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmplmlk5b9i.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x556fe29d2a21]\n??:? void tmplmlk5b9i.__unittest_L19_C1() [0x556fe29d2862]\n??:? void tmplmlk5b9i.__modtest() [0x556fe29d2988]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x556fe29d7c1a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x556fe29d5c0b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x556fe29dbf5f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x556fe29dc431]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x556fe29dbeed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x556fe29d5bdd]\n??:? runModuleUnitTests [0x556fe29d7a4f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nstring f(string text) \n{\n    string result = \"\";\n    long i = text.length - 1;\n    while (i >= 0) {\n        char c = text[i];\n        if (isAlpha(c)) {\n            result ~= c;\n        }\n        i--;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"102x0zoq\") == \"qoznax\");\n}\nvoid main(){}\n\n",
        "answer": "\"qoznax\""
    },
    {
        "id": 231,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\n\nlong f(long[] years) \n{\n    int a10 = 0;\n    int a90 = 0;\n    \n    foreach (x; years) {\n        if (x <= 1900) {\n            a10++;\n        }\n        if (x > 1910) {\n            a90++;\n        }\n    }\n    \n    if (a10 > 3) {\n        return 3;\n    } else if (a90 > 3) {\n        return 1;\n    } else {\n        return 2;\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1872L, 1995L, 1945L]) == 2);\n}\nvoid main(){}\n\n",
        "answer": "2"
    },
    {
        "id": 232,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp400oli8t.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x55815c864ec1]\n??:? void tmp400oli8t.__unittest_L26_C1() [0x55815c863901]\n??:? void tmp400oli8t.__modtest() [0x55815c86397c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55815c872006]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55815c864b4f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55815c867333]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55815c8673c5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55815c8672c1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55815c864b21]\n??:? runModuleUnitTests [0x55815c871e3b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.range;\n\nstring f(string text, string changes) \n{\n    string result = \"\";\n    int count = 0;\n    foreach (c; text)\n    {\n        if (c == 'e')\n        {\n            result ~= c;\n        }\n        else\n        {\n            result ~= changes[count % changes.length];\n            count++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"fssnvd\", \"yes\") == \"fssnvdd\");\n}\nvoid main(){}\n\n",
        "answer": "\"fssnvdd\""
    },
    {
        "id": 233,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmph57p3b47.d(16): Error: using the result of a comma expression is not allowed\n/tmp/tmph57p3b47.d(16): Error: using the result of a comma expression is not allowed\n/tmp/tmph57p3b47.d(16): Error: incompatible types for `(f([1L, 2L, 3L])) == (3L , 2L , 1L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph57p3b47.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] xs) \n{\n    foreach_reverse (idx; 0 .. xs.length)\n    {\n        xs = xs[$-1 .. $] ~ xs[0 .. $-1];\n    }\n    return xs;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, 3L]) == (3L, 2L, 1L));\n}\nvoid main(){}\n\n",
        "answer": "(3L, 2L, 1L)"
    },
    {
        "id": 234,
        "res": 0
    },
    {
        "id": 235,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nstring[] f(string[] array, string[] arr) \n{\n    string[] result;\n    foreach (s; arr)\n    {\n        auto splitted = s.split(s);\n        foreach (l; splitted)\n        {\n            if (l != \"\")\n            {\n                result ~= l;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([], []) == []);\n}\nvoid main(){}\n\n",
        "answer": "[]"
    },
    {
        "id": 236,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp4aj9wgcw.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x558326aef5cd]\n??:? void tmp4aj9wgcw.__unittest_L22_C1() [0x558326ae58fa]\n??:? void tmp4aj9wgcw.__modtest() [0x558326ae6850]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x558326af7f76]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x558326ae7ebf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x558326af39b7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x558326af3a49]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x558326af3945]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x558326ae7e91]\n??:? runModuleUnitTests [0x558326af7dab]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nstring f(string[] array) \n{\n    if (array.length == 1) {\n        return array[0];\n    }\n    auto result = array.dup;\n    size_t i = 0;\n    while (i < array.length - 1) {\n        foreach (j; 0..2) {\n            result[i * 2] = array[i];\n            i++;\n        }\n    }\n    return result.join(\"\");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"ac8\", \"qk6\", \"9wg\"]) == \"ac8qk69wg\");\n}\nvoid main(){}\n\n",
        "answer": "\"ac8qk69wg\""
    },
    {
        "id": 237,
        "res": 0
    },
    {
        "id": 238,
        "res": 0
    },
    {
        "id": 239,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp7gsxqin3.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x558ad999b9ad]\n??:? void tmp7gsxqin3.__unittest_L15_C1() [0x558ad99907f1]\n??:? void tmp7gsxqin3.__modtest() [0x558ad9992948]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x558ad99a3c82]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x558ad99942cf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x558ad999f03b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x558ad999f0cd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x558ad999efc9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x558ad99942a1]\n??:? runModuleUnitTests [0x558ad99a3ab7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int function(char[][])*).runAll() [0x558ad999cd50]\n??:? void rt.dmain2._d_run_main2(char",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string text, string froms) \n{\n    auto leftStripped = text.stripLeft(froms);\n    auto rightStripped = leftStripped.stripRight(froms);\n    return rightStripped;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"0 t 1cos \", \"st 0\t\n  \") == \"t 1cos \");\n}\nvoid main(){}\n\n",
        "answer": "\"t 1cos \""
    },
    {
        "id": 240,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp076g5307.d(20): Error: incompatible types for `(f(3.121F)) == (3.1)`: `string` and `double`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp076g5307.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.conv;\n\nstring f(float float_number) {\n    string number = to!string(float_number);\n    size_t dot = number.indexOf('.');\n    if (dot != -1) {\n        return number[0 .. dot] ~ '.' ~ number[dot + 1 .. $].rightJustify(2, '0');\n    }\n    return number ~ \".00\";\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(3.121) == 3.1);\n}\nvoid main(){}\n\n",
        "answer": "3.1"
    },
    {
        "id": 241,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpqkct3wqa.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x55e763ea1ad5]\n??:? void tmpqkct3wqa.__unittest_L14_C1() [0x55e763e97802]\n??:? void tmpqkct3wqa.__modtest() [0x55e763e98a74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55e763ea9daa]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55e763e9a3f7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55e763ea5163]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55e763ea51f5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55e763ea50f1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55e763e9a3c9]\n??:? runModuleUnitTests [0x55e763ea9bdf]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.range;\nimport std.string;\n\nstring f(string postcode) \n{\n    auto index = postcode.indexOf('C');\n    return index != -1 ? postcode[index..$] : \"\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"ED20 CW\") == \"20\");\n}\nvoid main(){}\n\n",
        "answer": "\"20\""
    },
    {
        "id": 242,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp5uvsappo.d(47): unittest failure\n----------------\n??:? _d_unittestp [0x560a031116ad]\n??:? void tmp5uvsappo.__unittest_L43_C1() [0x560a03104bea]\n??:? void tmp5uvsappo.__modtest() [0x560a03108560]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x560a0311bc2e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x560a03109ee7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x560a0311711b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x560a031171ad]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x560a031170a9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x560a03109eb9]\n??:? runModuleUnitTests [0x560a0311ba63]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nstring[] rsplit(string str, string delimiter)\n{\n    size_t pos = str.lastIndexOf(delimiter);\n    if (pos == -1)\n    {\n        return [str, \"\"];\n    }\n    return [str[0 .. pos], str[pos + delimiter.length .. $]];\n}\n\nstring join(string[] arr, string delimiter)\n{\n    string result = \"\";\n    foreach (i, elem; arr)\n    {\n        if (i != 0)\n        {\n            result ~= delimiter;\n        }\n        result ~= elem;\n    }\n    return result;\n}\n\nstring f(string book)\n{\n    auto a = rsplit(book, \":\");\n    auto wordsBeforeColon = a[0].split(\" \");\n    auto wordsAfterColon = a[1].split(\" \");\n    \n    if (wordsBeforeColon[$-1] == wordsAfterColon[0]) {\n        return f(join(wordsBeforeColon[0 .. $-1], \" \") ~ \" \" ~ a[1]);\n    }\n    \n    return book;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"udhv zcvi nhtnfyd :erwuyawa pun\") == \"udhv zcvi nhtnfyd erwuyawa pun\");\n}\nvoid main(){}\n\n",
        "answer": "\"udhv zcvi nhtnfyd erwuyawa pun\""
    },
    {
        "id": 243,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp2hpy3ehu.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x563a5f49452d]\n??:? void tmp2hpy3ehu.__unittest_L11_C1() [0x563a5f4927a7]\n??:? void tmp2hpy3ehu.__modtest() [0x563a5f492ecc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x563a5f4a159a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x563a5f49409f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x563a5f49610b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x563a5f49619d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x563a5f496099]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x563a5f494071]\n??:? runModuleUnitTests [0x563a5f4a13cf]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.uni;\nimport std.algorithm;\n\nbool f(string text, string ch) {\n    return ch.all!isLower && text.all!isLower;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"abc\", \"e\") == false);\n}\nvoid main(){}\n\n",
        "answer": "false"
    },
    {
        "id": 244,
        "res": 0
    },
    {
        "id": 245,
        "res": 0
    },
    {
        "id": 246,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nlong f(string haystack, string needle) \n{\n    for (long i = haystack.indexOf(needle); i >= 0; i--) {\n        if (haystack[i .. $] == needle) {\n            return i;\n        }\n    }\n    return -1;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"345gerghjehg\", \"345\") == -1);\n}\nvoid main(){}\n\n",
        "answer": "-1"
    },
    {
        "id": 247,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nstring f(string s) \n{\n    foreach (char c; s)\n    {\n        if (!isAlpha(c))\n        {\n            return \"no\";\n        }\n    }\n\n    if (s.length == 0)\n    {\n        return \"str is empty\";\n    }\n\n    return \"yes\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Boolean\") == \"yes\");\n}\nvoid main(){}\n\n",
        "answer": "\"yes\""
    },
    {
        "id": 248,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpfk26p44g.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x55c61d6d064d]\n??:? void tmpfk26p44g.__unittest_L14_C1() [0x55c61d6c47e5]\n??:? void tmpfk26p44g.__modtest() [0x55c61d6c7b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55c61d6d91be]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55c61d6c8f6f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55c61d6d4b57]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55c61d6d4be9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55c61d6d4ae5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55c61d6c8f41]\n??:? runModuleUnitTests [0x55c61d6d8ff3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] a, long[] b) \n{\n    a.sort();\n    b.sort().reverse();\n    return a ~ b;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([666L], []) == \"666L\");\n}\nvoid main(){}\n\n",
        "answer": "\"666L\""
    },
    {
        "id": 249,
        "res": 0
    },
    {
        "id": 250,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp1z1gwpb4.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x55bf2ee33df9]\n??:? void tmp1z1gwpb4.__unittest_L16_C1() [0x55bf2ee32832]\n??:? void tmp1z1gwpb4.__modtest() [0x55bf2ee328b0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55bf2ee40f3e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55bf2ee33a87]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55bf2ee3626b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55bf2ee362fd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55bf2ee361f9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55bf2ee33a59]\n??:? runModuleUnitTests [0x55bf2ee40d73]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text) \n{\n    int count = cast(int)text.length;\n    for (int i = -count+1; i < 0; i++)\n    {\n        text ~= text[text.length + i];\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"wlace A\") == \"wlace\");\n}\nvoid main(){}\n\n",
        "answer": "\"wlace\""
    },
    {
        "id": 251,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmppy820vj4.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x563323bfe0a5]\n??:? void tmppy820vj4.__unittest_L19_C1() [0x563323bf297e]\n??:? void tmppy820vj4.__modtest() [0x563323bf4f5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x563323c07f66]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x563323bf68df]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x563323c03b87]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x563323c03c19]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x563323c03b15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x563323bf68b1]\n??:? runModuleUnitTests [0x563323c07d9b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nstring f(string[][] messages) \n{\n    string phone_code = \"+353\";\n    string[] result;\n    foreach (message; messages)\n    {\n        message ~= phone_code.split(\"\");\n        result ~= message.join(\";\");\n    }\n    return result.join(\". \");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([[\"Marie\", \"Nelson\", \"Oscar\"]]) == \"+353;. 35;. 3+\");\n}\nvoid main(){}\n\n",
        "answer": "\"+353;. 35;. 3+\""
    },
    {
        "id": 252,
        "res": 0
    },
    {
        "id": 253,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpzw2m4kip.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x5597b3da39a9]\n??:? void tmpzw2m4kip.__unittest_L12_C1() [0x5597b3da3845]\n??:? void tmpzw2m4kip.__modtest() [0x5597b3da3910]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5597b3da6f3a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5597b3dad18b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5597b3db7a6f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5597b3dab621]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5597b3db79fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5597b3dad15d]\n??:? runModuleUnitTests [0x5597b3da6d6f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text, string pref) \n{\n    size_t length = pref.length;\n    if (pref == text[0 .. length]) {\n        return text[length .. $];\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"kumwwfv\", \"k\") == \"kumwfv\");\n}\nvoid main(){}\n\n",
        "answer": "\"kumwfv\""
    },
    {
        "id": 254,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpqbftk2ip.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x565320113d6d]\n??:? void tmpqbftk2ip.__unittest_L25_C1() [0x565320109975]\n??:? void tmpqbftk2ip.__modtest() [0x56532010ae78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56532011c7ee]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56532010c68f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x565320117817]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5653201178a9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5653201177a5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56532010c661]\n??:? runModuleUnitTests [0x56532011c623]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.typecons;\nimport std.array;\nimport std.algorithm;\nimport std.string;\n\nstring f(string text, string repl) \n{\n    text = text.toLower();\n    repl = repl.toLower();\n    \n    char[char] map;\n    for(int i = 0; i < min(text.length, repl.length); i++) {\n        map[text[i]] = repl[i];\n    }\n    \n    foreach(char ch; text) {\n        text = replace(text, ch, map.get(ch, ch));\n    }\n\n    return text;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"upper case\", \"lower case\") == \"upper case\");\n}\nvoid main(){}\n\n",
        "answer": "\"upper case\""
    },
    {
        "id": 255,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp0vsgawdu.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x55fdaa889111]\n??:? void tmp0vsgawdu.__unittest_L16_C1() [0x55fdaa86e828]\n??:? void tmp0vsgawdu.__modtest() [0x55fdaa87eb2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55fdaa891282]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55fdaa880693]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55fdaa88d3c3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55fdaa88d455]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55fdaa88d351]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55fdaa880665]\n??:? runModuleUnitTests [0x55fdaa8910b7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text, string fill, long size) \n{\n    if (size < 0) {\n        size = -size;\n    }\n    if (text.length > size) {\n        return text[text.length - size .. $];\n    }\n    return format(\"%*s\", size, text);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"no asw\", \"j\", 1L) == \"no asw\");\n}\nvoid main(){}\n\n",
        "answer": "\"no asw\""
    },
    {
        "id": 256,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong f(string text, string sub) \n{\n    long a = 0;\n    long b = text.length - 1;\n\n    while (a <= b)\n    {\n        long c = (a + b) / 2;\n        if (text.endsWith(sub, c))\n        {\n            a = c + 1;\n        }\n        else\n        {\n            b = c - 1;\n        }\n    }\n\n    return a;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"dorfunctions\", \"2\") == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 257,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpu81r24nk.d(19): Error: incompatible types for array comparison: `string[][]` and `string[]`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu81r24nk.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nstring[][] f(string[] text) \n{\n    string[][] ls;\n    foreach (x; text) {\n        ls ~= x.splitLines();\n    }\n    return ls;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"Hello World\n\\\"I am String\\\"\"]) == [\"Hello World\", \"I am String\"]);\n}\nvoid main(){}\n\n",
        "answer": "[\"Hello World\", \"I am String\"]"
    },
    {
        "id": 258,
        "res": 0
    },
    {
        "id": 259,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp_r0vbj0u.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x56218dc78039]\n??:? void tmp_r0vbj0u.__unittest_L24_C1() [0x56218dc768c6]\n??:? void tmp_r0vbj0u.__modtest() [0x56218dc76af4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56218dc859da]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56218dc77cc7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56218dc7acdb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56218dc7ad6d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56218dc7ac69]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56218dc77c99]\n??:? runModuleUnitTests [0x56218dc8580f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.ascii;\n\nstring f(string text) \n{\n    string new_text = \"\";\n    foreach (i, c; text)\n    {\n        if (isUpper(c))\n        {\n            new_text = new_text[0 .. new_text.length / 2] ~ c ~ new_text[new_text.length / 2 .. $];\n        }\n    }\n    if (new_text.empty)\n    {\n        new_text = \"-\";\n    }\n    return new_text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"String matching is a big part of RexEx library.\") == \"String-matching-is-a-big-part-of-RexEx-library.\");\n}\nvoid main(){}\n\n",
        "answer": "\"String-matching-is-a-big-part-of-RexEx-library.\""
    },
    {
        "id": 260,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpf3a4tawp.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x55cf0766c4c5]\n??:? void tmpf3a4tawp.__unittest_L12_C1() [0x55cf07664932]\n??:? void tmpf3a4tawp.__modtest() [0x55cf07664cbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55cf0767472e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55cf07671a3b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55cf0767a5f7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55cf0767aac9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55cf0767a585]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55cf07671a0d]\n??:? runModuleUnitTests [0x55cf07674563]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] nums, long start, long k) \n{\n    nums[start .. start + k] = nums[start .. start + k].array.reverse();\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L], 4L, 2L) == [5L, 4L, 3L, 2L, 1L, 6L]);\n}\nvoid main(){}\n\n",
        "answer": "[5L, 4L, 3L, 2L, 1L, 6L]"
    },
    {
        "id": 261,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpx8biqa79.d(21): Error: using the result of a comma expression is not allowed\n/tmp/tmpx8biqa79.d(21): Error: none of the overloads of template `std.typecons.Tuple!(long[], long[]).Tuple.opEquals` are callable using argument types `!()(long)`\n/usr/include/dmd/phobos/std/typecons.d(796):        Candidates are: `opEquals(R)(R rhs)`\n  with `R = long`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(803):                        `opEquals(R)(R rhs) const`\n  with `R = long`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(810):                        `opEquals(R...)(auto ref R rhs)`\n  with `R = (long)`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > R.length > 1\n  - areCompatibleTuples!(typeof(this), Tuple!R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n  Tip: not satisfied constraints are marked with `>`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx8biqa79.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nTuple!(long[], long[]) f(long[] nums, long target) \n{\n    long[] lows, higgs;\n    foreach (i; nums) {\n        if (i < target) {\n            lows ~= i;\n        } else {\n            higgs ~= i;\n        }\n    }\n    lows.length = 0;\n    return tuple(lows, higgs);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([12L, 516L, 5L, 2L, 3L, 214L, 51L], 5L) == (5L, 12L));\n}\nvoid main(){}\n\n",
        "answer": "(5L, 12L)"
    },
    {
        "id": 262,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp1orogic4.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x55b9ca0a96e9]\n??:? void tmp1orogic4.__unittest_L16_C1() [0x55b9ca0a0a0a]\n??:? void tmp1orogic4.__modtest() [0x55b9ca0a1010]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55b9ca0b29a2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55b9ca0a20af]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55b9ca0adf27]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55b9ca0adfb9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55b9ca0adeb5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55b9ca0a2081]\n??:? runModuleUnitTests [0x55b9ca0b27d7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nstring f(long[] nums) \n{\n    long count = nums.length;\n    immutable score = [0: \"F\", 1: \"E\", 2: \"D\", 3: \"C\", 4: \"B\", 5: \"A\", 6: \"\"];\n    string[] result;\n    foreach (i; 0 .. count) {\n        result ~= score[cast(int)nums[i]];\n    }\n    return result.join(\"\");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([4L, 5L]) == \"FEDCBA\");\n}\nvoid main(){}\n\n",
        "answer": "\"FEDCBA\""
    },
    {
        "id": 263,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpkalr3fqa.d(27): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkalr3fqa.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.array;\n\nstring[] f(string[] base, string[][] delta) \n{\n    foreach (j; 0 .. delta.length)\n    {\n        foreach (i; 0 .. base.length)\n        {\n            if (base[i] == delta[j][0])\n            {\n                assert(delta[j][1] != base[i]);\n                base[i] = delta[j][1];\n            }\n        }\n    }\n    return base;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"gloss\", \"banana\", \"barn\", \"lawn\"], []) == \"gloss\");\n}\nvoid main(){}\n\n",
        "answer": "\"gloss\""
    },
    {
        "id": 264,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp716m9ulx.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x561760b82265]\n??:? void tmp716m9ulx.__unittest_L11_C1() [0x561760b797ee]\n??:? void tmp716m9ulx.__modtest() [0x561760b7a714]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x561760b89ff6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x561760b873a7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x561760b909bb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x561760b90e8d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x561760b90949]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x561760b87379]\n??:? runModuleUnitTests [0x561760b89e2b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nstring f(string test_str) \n{\n    auto s = test_str.replace(\"a\", \"A\");\n    return s.replace(\"e\", \"A\");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"papera\") == \"PAAR\");\n}\nvoid main(){}\n\n",
        "answer": "\"PAAR\""
    },
    {
        "id": 265,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpgfl22h85.d(26): Error: incompatible types for `(result.get()) == (\"banana\")`: `long[long]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgfl22h85.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nNullable!(long[long]) f(Nullable!(long[long]) d, long k) \n{\n    if (!d.isNull) {\n        long[long] new_d;\n        foreach (key, value; d.get()) {\n            if (key < k) {\n                new_d[key] = value;\n            }\n        }\n        return Nullable!(long[long])(new_d);\n    }\n    return Nullable!(long[long]).init;\n}\n\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([1L: 2L, 2L: 4L, 3L: 3L].nullable, 3L);\n        assert(!result.isNull && result.get == \"banana\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"banana\""
    },
    {
        "id": 266,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpwfh3yx0z.d(17): Error: using the result of a comma expression is not allowed\n/tmp/tmpwfh3yx0z.d(17): Error: using the result of a comma expression is not allowed\n/tmp/tmpwfh3yx0z.d(17): Error: using the result of a comma expression is not allowed\n/tmp/tmpwfh3yx0z.d(17): Error: using the result of a comma expression is not allowed\n/tmp/tmpwfh3yx0z.d(17): Error: incompatible types for `(f([2L, 3L, 4L, 6L, -2L])) == (2L , 3L , 4L , 6L , -2L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwfh3yx0z.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] nums) \n{\n    foreach_reverse(i; 0 .. nums.length) {\n        if (nums[i] % 2 == 1) {\n            nums = nums[0 .. i+1] ~ [nums[i]] ~ nums[i+1 .. $];\n        }\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([2L, 3L, 4L, 6L, -2L]) == (2L, 3L, 4L, 6L, -2L));\n}\nvoid main(){}\n\n",
        "answer": "(2L, 3L, 4L, 6L, -2L)"
    },
    {
        "id": 267,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nstring f(string text, long space) \n{\n    if (space < 0) {\n        return text;\n    }\n    return text ~ std.array.replicate(\" \", (text.length / 2 + space) - text.length);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"sowpf\", -7L) == \"sowpf\");\n}\nvoid main(){}\n\n",
        "answer": "\"sowpf\""
    },
    {
        "id": 268,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp0qi4rezd.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x5608087a91a1]\n??:? void tmp0qi4rezd.__unittest_L18_C1() [0x56080878f8c9]\n??:? void tmp0qi4rezd.__modtest() [0x56080879ebb8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5608087b1312]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5608087a0723]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5608087ad453]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5608087ad4e5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5608087ad3e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5608087a06f5]\n??:? runModuleUnitTests [0x5608087b1147]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.algorithm;\nimport std.array;\nimport std.string;\nimport std.conv; // Import std.conv to use the to function\n\nstring f(string s, string separator) {\n    for (size_t i = 0; i < s.length; i++) {\n        if (s[i] == separator[0]) {\n            auto new_s = s.dup;\n            new_s[i] = '/';\n            return new_s.map!(c => c.to!string).join(\" \");\n        }\n    }\n    return s; // In case no separator is found, return the original string\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"h grateful k\", \" \") == \"h/k\");\n}\nvoid main(){}\n\n",
        "answer": "\"h/k\""
    },
    {
        "id": 269,
        "res": 0
    },
    {
        "id": 270,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpchzq2gdv.d(24): Error: incompatible types for `(result.get()) == (\"banana\")`: `long[long]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpchzq2gdv.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.array;\nimport std.typecons;\n\nNullable!(long[long]) f(Nullable!(long[long]) dic) \n{\n    if (!dic.isNull) {\n        long[long] d;\n        foreach (key, value; dic.get()) {\n            d[key] = value;\n        }\n        return Nullable!(long[long])(d);\n    }\n    return Nullable!(long[long]).init;\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate(Nullable!(long[long]).init);\n        assert(!result.isNull && result.get == \"banana\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"banana\""
    },
    {
        "id": 271,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp_93l5d_4.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x55f0e6a2b409]\n??:? void tmp_93l5d_4.__unittest_L19_C1() [0x55f0e6a0f8e5]\n??:? void tmp_93l5d_4.__modtest() [0x55f0e6a20d6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55f0e6a33652]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55f0e6a228d3]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55f0e6a2f74b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55f0e6a2f7dd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55f0e6a2f6d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55f0e6a228a5]\n??:? runModuleUnitTests [0x55f0e6a33487]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.conv;\nimport std.algorithm;\nimport std.array;\n\nstring f(string text, string c) \n{\n    if (!text.canFind(c)) {\n        throw new Exception(format(\"Text has no %s\", c));\n    }\n    auto index = text.lastIndexOf(c);\n    string res = text[0..index] ~ text[(index+1)..$];\n    return res;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"uufhl\", \"l\") == \"hello\");\n}\nvoid main(){}\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 272,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp2ce6yvzo.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x557b773b4675]\n??:? void tmp2ce6yvzo.__unittest_L17_C1() [0x557b773b396b]\n??:? void tmp2ce6yvzo.__modtest() [0x557b773b4494]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x557b773b9c4a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x557b773b7c3b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x557b773bee33]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x557b773bf305]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x557b773bedc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x557b773b7c0d]\n??:? runModuleUnitTests [0x557b773b9a7f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.array;\nimport std.typecons;\n\nlong[] f(long[] base_list, long[] nums) \n{\n    base_list ~= nums;\n    auto res = base_list.dup;\n    foreach_reverse (i; 1..nums.length+1)\n    {\n        res ~= res[res.length-i];\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([9L, 7L, 5L, 3L, 1L], [2L, 4L, 6L, 8L, 0L]) == [9L, 7L, 5L, 3L, 1L, 2L, 4L, 6L, 8L, 0L]);\n}\nvoid main(){}\n\n",
        "answer": "[9L, 7L, 5L, 3L, 1L, 2L, 4L, 6L, 8L, 0L]"
    },
    {
        "id": 273,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp_trmlzkj.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x560e14549cb5]\n??:? void tmp_trmlzkj.__unittest_L26_C1() [0x560e14547832]\n??:? void tmp_trmlzkj.__modtest() [0x560e14548624]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x560e14558672]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x560e145497f7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x560e1454d6a7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x560e1454d739]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x560e1454d635]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x560e145497c9]\n??:? runModuleUnitTests [0x560e145584a7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int function(char[][])*).runAll() [0x560e1454aaac]\n??:? void rt.dmain2._d_run_main2(char",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\nimport std.array;\n\nstring f(string name) \n{\n    string new_name = \"\";\n    name = name.dup.reverse; // create a reversed copy of the string\n    foreach (i, n; name)\n    {\n        if (n != '.' && new_name.count('.') < 2)\n        {\n            new_name = n ~ new_name;\n        }\n        else\n        {\n            break;\n        }\n    }\n    return new_name;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\".NET\") == \".NET\");\n}\nvoid main(){}\n\n",
        "answer": "\".NET\""
    },
    {
        "id": 274,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp0009znwx.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x55a61cb9e8e9]\n??:? void tmp0009znwx.__unittest_L14_C1() [0x55a61cb9e82b]\n??:? void tmp0009znwx.__modtest() [0x55a61cb9e850]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55a61cba2fe6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55a61cba1157]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55a61cba7b1b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55a61cba7fed]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55a61cba7aa9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55a61cba1129]\n??:? runModuleUnitTests [0x55a61cba2e1b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nlong f(long[] nums, long target) \n{\n    long count = 0;\n    foreach (n1; nums) {\n        foreach (n2; nums) {\n            count += (n1 + n2 == target) ? 1 : 0;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, 3L], 4L) == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 275,
        "res": 0
    },
    {
        "id": 276,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp36b5jh6q.d(20): Error: `array` is not defined, perhaps `import std.array;` is needed?\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp36b5jh6q.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nlong[] f(long[] a) \n{\n    if (a.length >= 2 && a[0] > 0 && a[1] > 0) {\n        a.reverse();\n        return a;\n    }\n    a ~= 0;\n    return a;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([]) == array(0L, 0L));\n}\nvoid main(){}\n\n",
        "answer": "array(0L, 0L)"
    },
    {
        "id": 277,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp9mg9t__h.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x55ac2b83f53d]\n??:? void tmp9mg9t__h.__unittest_L14_C1() [0x55ac2b83e813]\n??:? void tmp9mg9t__h.__modtest() [0x55ac2b83f35c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55ac2b844b12]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55ac2b842b03]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55ac2b849cfb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55ac2b84a1cd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55ac2b849c89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55ac2b842ad5]\n??:? runModuleUnitTests [0x55ac2b844947]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nlong[] f(long[] lst, long mode) \n{\n    long[] result = lst.dup;\n    if (mode != 0) {\n        result = result.reverse;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, 3L, 4L], 1L) == [1, 2, 3, 4]);\n}\nvoid main(){}\n\n",
        "answer": "[1, 2, 3, 4]"
    },
    {
        "id": 278,
        "res": 0
    },
    {
        "id": 279,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpqpo_rtin.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x55de43b09035]\n??:? void tmpqpo_rtin.__unittest_L21_C1() [0x55de43afba1b]\n??:? void tmpqpo_rtin.__modtest() [0x55de43affdcc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55de43b131fa]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55de43b0186f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55de43b0e94f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55de43b0e9e1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55de43b0e8dd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55de43b01841]\n??:? runModuleUnitTests [0x55de43b1302f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text) \n{\n    string ans = \"\";\n    while (text != \"\") {\n        auto x = text.split('(')[0];\n        auto sep = text.split('(')[1];\n        text = text.split('(')[2];\n        sep = sep.replace(\"(\", \"|\");\n        ans = x ~ sep ~ ans;\n        ans = ans ~ text[0] ~ ans;\n        text = text[1..$];\n    }\n    return ans;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"\") == \"hello world\");\n}\nvoid main(){}\n\n",
        "answer": "\"hello world\""
    },
    {
        "id": 280,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpg5d42jvv.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x55e85550d3f5]\n??:? void tmpg5d42jvv.__unittest_L16_C1() [0x55e85550387a]\n??:? void tmpg5d42jvv.__modtest() [0x55e85550473c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55e855515276]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55e855505da7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55e8555109e3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55e855510a75]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55e855510971]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55e855505d79]\n??:? runModuleUnitTests [0x55e8555150ab]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring g, field;\n\nstring f(string text) \n{\n    field = text.replace(\" \", \"\");\n    g = text.replace(\"0\", \" \");\n    text = text.replace(\"1\", \"i\");\n\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"00000000 00000000 01101100 01100101 01101110\") == \"I am a machine\");\n}\nvoid main(){}\n\n",
        "answer": "\"I am a machine\""
    },
    {
        "id": 281,
        "res": 0
    },
    {
        "id": 282,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmplgg0xea6.d(23): Error: incompatible types for `(f(\"xinyyexyxx\", \"xx\")) == (\"xx\")`: `long` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplgg0xea6.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nlong f(string s1, string s2) \n{\n    long position = 1;\n    long count = 0;\n    while (position > 0)\n    {\n        position = s1.indexOf(s2, position);\n        count += 1;\n        position += 1;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"xinyyexyxx\", \"xx\") == \"xx\");\n}\nvoid main(){}\n\n",
        "answer": "\"xx\""
    },
    {
        "id": 283,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp6pvuhb0b.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x5563a815003d]\n??:? void tmp6pvuhb0b.__unittest_L20_C1() [0x5563a81339ca]\n??:? void tmp6pvuhb0b.__modtest() [0x5563a81454b8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5563a8158aca]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5563a81471cb]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5563a8154fe7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5563a8155171]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5563a8154f75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5563a814719d]\n??:? runModuleUnitTests [0x5563a81588ff]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.typecons;\n\nstring f(Nullable!(long[string]) dictionary, string key) \n{\n    if (dictionary.isNull)\n    {\n        return key;\n    }\n\n    dictionary.get().remove(key);\n    if (dictionary.get().length > 0 && dictionary.get().keys[0] == key)\n    {\n        key = dictionary.get().keys[1];\n    }\n    return key;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"Iron Man\": 4L, \"Captain America\": 3L, \"Black Panther\": 0L, \"Thor\": 1L, \"Ant-Man\": 6L].nullable, \"Iron Man\") == \"Captain America\");\n}\nvoid main(){}\n\n",
        "answer": "\"Captain America\""
    },
    {
        "id": 284,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpsf6u_p0d.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x55bd3dbcc9c1]\n??:? void tmpsf6u_p0d.__unittest_L17_C1() [0x55bd3dbcc85f]\n??:? void tmpsf6u_p0d.__modtest() [0x55bd3dbcc92c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55bd3dbd011a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55bd3dbd636b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55bd3dbe0c07]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55bd3dbd4801]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55bd3dbe0b95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55bd3dbd633d]\n??:? runModuleUnitTests [0x55bd3dbcff4f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text, string prefix) \n{\n    size_t idx = 0;\n    foreach (letter; prefix)\n    {\n        if (text[idx] != letter)\n        {\n            return null;\n        }\n        idx++;\n    }\n    return text[idx..$];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"bestest\", \"bestest\") == \"bestest\");\n}\nvoid main(){}\n\n",
        "answer": "\"bestest\""
    },
    {
        "id": 285,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp_ly1xaw6.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x5568c31674a5]\n??:? void tmp_ly1xaw6.__unittest_L11_C1() [0x5568c315d7a4]\n??:? void tmp_ly1xaw6.__modtest() [0x5568c315e7e8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5568c316fa26]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5568c315fe57]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5568c316b35b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5568c316b3ed]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5568c316b2e9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5568c315fe29]\n??:? runModuleUnitTests [0x5568c316f85b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nlong f(string text, string ch) \n{\n    return text.count(ch);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"This be Pirate's Speak for 'help'!\", \" \") == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 286,
        "res": 0
    },
    {
        "id": 287,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string name) \n{\n    if (name.toLower == name)\n    {\n        name = name.toUpper;\n    }\n    else\n    {\n        name = name.toLower;\n    }\n    return name;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Pinneaple\") == \"pinneaple\");\n}\nvoid main(){}\n\n",
        "answer": "\"pinneaple\""
    },
    {
        "id": 288,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpcey6tpw0.d(33): Error: using the result of a comma expression is not allowed\n/tmp/tmpcey6tpw0.d(33): Error: incompatible types for `(f(nullable([55L:4L, 4L:555L, 1L:3L, 99L:21L, 499L:4L, 71L:7L, 12L:6L]))) == (55L , 4L)`: `Tuple!(long, long)[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcey6tpw0.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.string;\n\nTuple!(long, long)[] f(Nullable!(long[long]) d) \n{\n    if (d.isNull) {\n        return [];\n    }\n\n    auto dict = d.get();\n    auto sorted_pairs = dict.byKeyValue.array.sort!((a, b) => \n        (a.key.to!string ~ a.value.to!string).length < (b.key.to!string ~ b.value.to!string).length\n    );\n\n    Tuple!(long, long)[] result;\n    foreach (pair; sorted_pairs) {\n        if (pair.key < pair.value) {\n            result ~= tuple(pair.key, pair.value);\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([55L: 4L, 4L: 555L, 1L: 3L, 99L: 21L, 499L: 4L, 71L: 7L, 12L: 6L].nullable) == (55L, 4L));\n}\nvoid main(){}\n\n",
        "answer": "(55L, 4L)"
    },
    {
        "id": 289,
        "res": 0
    },
    {
        "id": 290,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpx0dy3t4_.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x55fcf25c0d6d]\n??:? void tmpx0dy3t4_.__unittest_L19_C1() [0x55fcf25b6889]\n??:? void tmpx0dy3t4_.__modtest() [0x55fcf25b8020]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55fcf25c9016]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55fcf25b968f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55fcf25c444b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55fcf25c44dd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55fcf25c43d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55fcf25b9661]\n??:? runModuleUnitTests [0x55fcf25c8e4b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\n\nstring f(string text, string prefix) \n{\n    if (text.startsWith(prefix))\n    {\n        return text[prefix.length .. $];\n    }\n    if (text.canFind(prefix))\n    {\n        return text.replace(prefix, \"\").strip();\n    }\n    return text.toUpper();\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"abixaaaily\", \"al\") == \"ABIXAAILY\");\n}\nvoid main(){}\n\n",
        "answer": "\"ABIXAAILY\""
    },
    {
        "id": 291,
        "res": 0
    },
    {
        "id": 292,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpj9o7t3vw.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x5556f3d13a69]\n??:? void tmpj9o7t3vw.__unittest_L20_C1() [0x5556f3d138aa]\n??:? void tmpj9o7t3vw.__modtest() [0x5556f3d139d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5556f3d18c42]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5556f3d16c33]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5556f3d1cf87]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5556f3d1d459]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5556f3d1cf15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5556f3d16c05]\n??:? runModuleUnitTests [0x5556f3d18a77]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text) \n{\n    string new_text;\n    foreach (char c; text)\n    {\n        if (c >= '0' && c <= '9')\n        {\n            new_text ~= c;\n        }\n        else\n        {\n            new_text ~= '*';\n        }\n    }\n    return new_text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"5f83u23saa\") == \"f***u***s***a***\");\n}\nvoid main(){}\n\n",
        "answer": "\"f***u***s***a***\""
    },
    {
        "id": 293,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpz784d1tk.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x5629820db5cd]\n??:? void tmpz784d1tk.__unittest_L20_C1() [0x5629820d9836]\n??:? void tmpz784d1tk.__modtest() [0x5629820d9f6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5629820e870e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5629820db13f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5629820dd1ab]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5629820dd23d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5629820dd139]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5629820db111]\n??:? runModuleUnitTests [0x5629820e8543]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.ascii;\nimport std.string;\n\nstring f(string text) \n{\n    auto s = text.toLower();\n    foreach (i; 0 .. s.length)\n    {\n        if (s[i] == 'x')\n        {\n            return \"no\";\n        }\n    }\n    return all!(a => isUpper(a))(text) ? \"true\" : \"false\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"dEXE\") == \"false\");\n}\nvoid main(){}\n\n",
        "answer": "\"false\""
    },
    {
        "id": 294,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpj5le8jmn.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x55e4ede8f121]\n??:? void tmpj5le8jmn.__unittest_L18_C1() [0x55e4ede74993]\n??:? void tmpj5le8jmn.__modtest() [0x55e4ede84b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55e4ede971f6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55e4ede866a3]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55e4ede9327b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55e4ede9330d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55e4ede93209]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55e4ede86675]\n??:? runModuleUnitTests [0x55e4ede9702b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.conv;\n\nstring f(string n, string m, string text) \n{\n    if (text.strip().empty) {\n        return text;\n    }\n    char head = text[0];\n    string mid = text[1 .. $-1];\n    char tail = text[$-1];\n    string joined = to!string(head).replace(n, m) ~ mid.replace(n, m) ~ to!string(tail).replace(n, m);\n    return joined;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"x\", \"$\", \"2xz&5H3*1a@#a*1hris\") == \"2z&5H3*1a@#a*1hris\");\n}\nvoid main(){}\n\n",
        "answer": "\"2z&5H3*1a@#a*1hris\""
    },
    {
        "id": 295,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp1ucotyjd.d(18): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1ucotyjd.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nstring[] f(string[] fruits) \n{\n    if (fruits[$ - 1] == fruits[0]) {\n        return [\"no\"];\n    } else {\n        fruits = fruits[1..$-1];\n        fruits = fruits[1..$-1];\n        return fruits;\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"apple\", \"apple\", \"pear\", \"banana\", \"pear\", \"orange\", \"orange\"]) == \"no\");\n}\nvoid main(){}\n\n",
        "answer": "\"no\""
    },
    {
        "id": 296,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpcn3z770i.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x55ea35b55e19]\n??:? void tmpcn3z770i.__unittest_L15_C1() [0x55ea35b547f6]\n??:? void tmpcn3z770i.__modtest() [0x55ea35b548d4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55ea35b6226a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55ea35b55aa7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55ea35b577ff]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55ea35b57891]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55ea35b5778d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55ea35b55a79]\n??:? runModuleUnitTests [0x55ea35b6209f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string url) \n{\n    if (url.startsWith(\"http://www.\"))\n    {\n        return url[10..$];\n    }\n    return url;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"https://www.www.ekapusta.com/image/url\") == \"https://www.ekapusta.com/image/url\");\n}\nvoid main(){}\n\n",
        "answer": "\"https://www.ekapusta.com/image/url\""
    },
    {
        "id": 297,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpodl_b44e.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x562d8b3cd8f9]\n??:? void tmpodl_b44e.__unittest_L11_C1() [0x562d8b3cd798]\n??:? void tmpodl_b44e.__modtest() [0x562d8b3cd864]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x562d8b3d0cea]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x562d8b3d6f3b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x562d8b3e19bf]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x562d8b3d53d1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x562d8b3e194d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x562d8b3d6f0d]\n??:? runModuleUnitTests [0x562d8b3d0b1f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(long num) \n{\n    if (0 < num && num < 1000 && num != 6174) {\n        return \"Half Life\";\n    }\n    return \"Not found\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(6173L) == \"Half Life\");\n}\nvoid main(){}\n\n",
        "answer": "\"Half Life\""
    },
    {
        "id": 298,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpockeaam4.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x5649e1ad6d81]\n??:? void tmpockeaam4.__unittest_L17_C1() [0x5649e1ad5816]\n??:? void tmpockeaam4.__modtest() [0x5649e1ad583c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5649e1ae3392]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5649e1ad6a0f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5649e1ad88ef]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5649e1ad8981]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5649e1ad887d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5649e1ad69e1]\n??:? runModuleUnitTests [0x5649e1ae31c7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.conv;\nimport std.string;\n\nstring f(string text) \n{\n    string new_text = \"\";\n    foreach (i, character; text)\n    {\n        new_text ~= toUpper(character) == character ? toLower(character) : toUpper(character);\n    }\n    return new_text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"dst vavf n dmv dfvm gamcu dgcvb.\") == \"dest vavf n dmv dfvm gamcu dgcvb.\");\n}\nvoid main(){}\n\n",
        "answer": "\"dest vavf n dmv dfvm gamcu dgcvb.\""
    },
    {
        "id": 299,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp2kdtppck.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x5557df551f31]\n??:? void tmp2kdtppck.__unittest_L12_C1() [0x5557df5507fd]\n??:? void tmp2kdtppck.__modtest() [0x5557df5509e8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5557df55f872]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5557df551bbf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5557df554b87]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5557df554c19]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5557df554b15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5557df551b91]\n??:? runModuleUnitTests [0x5557df55f6a7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text, string character) \n{\n    if (!text.endsWith(character))\n        return f(character ~ text, character);\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"staovk\", \"k\") == \"staircase\");\n}\nvoid main(){}\n\n",
        "answer": "\"staircase\""
    },
    {
        "id": 300,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpebpwpxl_.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x55b2f4255a29]\n??:? void tmpebpwpxl_.__unittest_L15_C1() [0x55b2f42558ca]\n??:? void tmpebpwpxl_.__modtest() [0x55b2f4255990]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55b2f425a2ee]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55b2f42582df]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55b2f425ee23]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55b2f425f2f5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55b2f425edb1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55b2f42582b1]\n??:? runModuleUnitTests [0x55b2f425a123]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\n\nlong[] f(long[] nums) \n{\n    long count = 1;\n    foreach (i; count .. nums.length - 1)\n    {\n        nums[i] = nums[i] > nums[count - 1] ? nums[i] : nums[count - 1];\n        count += 1;\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, 3L]) == \"True\");\n}\nvoid main(){}\n\n",
        "answer": "\"True\""
    },
    {
        "id": 301,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp_9z4dzcp.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x560aefbdcb01]\n??:? void tmp_9z4dzcp.__unittest_L14_C1() [0x560aefbdc8a7]\n??:? void tmp_9z4dzcp.__modtest() [0x560aefbdca6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x560aefbe1e0e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x560aefbdfdff]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x560aefbe62eb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x560aefbe67bd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x560aefbe6279]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x560aefbdfdd1]\n??:? runModuleUnitTests [0x560aefbe1c43]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nlong[] f(long[] nums) \n{\n    for (long i = -nums.length + 1; i < 0; i++)\n    {\n        nums ~= [nums[nums.length + i], nums[nums.length + i]];\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([0L, 6L, 2L, -1L, -2L]) == [0, 6, 2, -1, -2]);\n}\nvoid main(){}\n\n",
        "answer": "[0, 6, 2, -1, -2]"
    },
    {
        "id": 302,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp1d9wdw59.d(14): unittest failure\n----------------\n??:? _d_unittestp [0x55dca2fbb235]\n??:? void tmp1d9wdw59.__unittest_L10_C1() [0x55dca2fb27ba]\n??:? void tmp1d9wdw59.__modtest() [0x55dca2fb36e0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55dca2fc2fc6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55dca2fc0377]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55dca2fc998b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55dca2fc9e5d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55dca2fc9919]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55dca2fc0349]\n??:? runModuleUnitTests [0x55dca2fc2dfb]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nstring f(string string) \n{\n    return string.replace(\"needles\", \"haystacks\");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"wdeejjjzsjsjjsxjjneddaddddddefsfd\") == \"haystacks\");\n}\nvoid main(){}\n\n",
        "answer": "\"haystacks\""
    },
    {
        "id": 303,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpvjcbm2c1.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x562fdc938079]\n??:? void tmpvjcbm2c1.__unittest_L23_C1() [0x562fdc91e902]\n??:? void tmpvjcbm2c1.__modtest() [0x562fdc92da94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x562fdc940442]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x562fdc92f5fb]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x562fdc93c32b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x562fdc93c3bd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x562fdc93c2b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x562fdc92f5cd]\n??:? runModuleUnitTests [0x562fdc940277]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.conv;\nimport std.string;\n\nstring f(string text) \n{\n    size_t i = (text.length + 1) / 2;\n    auto result = text.dup;\n    while (i < text.length) {\n        auto t = toLower(result[i].to!string)[0];\n        if (t == result[i]) {\n            i += 1;\n        } else {\n            result[i] = t;\n        }\n        i += 2;\n    }\n    return result.idup;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"mJkLbn\") == \"MJLBN\");\n}\nvoid main(){}\n\n",
        "answer": "\"MJLBN\""
    },
    {
        "id": 304,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpcg7szkti.d(31): Error: incompatible types for `(result.get()) == (\"banana\")`: `long[long]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcg7szkti.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nNullable!(long[long]) f(Nullable!(long[long]) d) \n{\n    if (!d.isNull && d.get.length > 1)\n    {\n        long[long] newDict;\n        long key1 = d.get.keys.sort().back;\n        long val1 = d.get[key1];\n        d.get.remove(key1);\n        long key2 = d.get.keys.sort().back;\n        long val2 = d.get[key2];\n        d.get.remove(key2);\n        newDict[key1] = val1;\n        newDict[key2] = val2;\n        return Nullable!(long[long])(newDict);\n    }\n    return Nullable!(long[long]).init;\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([2L: 3L, 17L: 3L, 16L: 6L, 18L: 6L, 87L: 7L].nullable);\n        assert(!result.isNull && result.get == \"banana\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"banana\""
    },
    {
        "id": 305,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpufzdw1s0.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x5642aedc4a55]\n??:? void tmpufzdw1s0.__unittest_L24_C1() [0x5642aedc28ed]\n??:? void tmpufzdw1s0.__modtest() [0x5642aedc33c0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5642aedd306a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5642aedc4597]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5642aedc83b3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5642aedc8445]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5642aedc8341]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5642aedc4569]\n??:? runModuleUnitTests [0x5642aedd2e9f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string text, string ch) {\n    size_t length = text.length;\n    long index = -1;\n    for (size_t i = 0; i < length; ++i) {\n        if (text[i] == ch[0]) {\n            index = i;\n        }\n    }\n    if (index == -1) {\n        index = length / 2;\n    }\n    auto new_text = text.dup;\n    new_text = new_text[0 .. index] ~ new_text[index + 1 .. $];\n    return cast(string)new_text;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"o horseto\", \"r\") == \"horsetto\");\n}\nvoid main(){}\n\n",
        "answer": "\"horsetto\""
    },
    {
        "id": 306,
        "res": 0
    },
    {
        "id": 307,
        "res": 0
    },
    {
        "id": 308,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpc59kn6xl.d(33): Error: incompatible types for `(result.get()) == (\"la la la\")`: `long[string]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc59kn6xl.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\n\nNullable!(long[string]) f(string[] strings) \n{\n    long[string] occurances;\n    foreach (string s; strings)\n    {\n        long count = 0;\n        foreach (string str; strings)\n        {\n            if (str == s)\n            {\n                count++;\n            }\n        }\n        \n        if (occurances.get(s, -1) == -1)\n        {\n            occurances[s] = count;\n        }\n    }\n    \n    return Nullable!(long[string])(occurances);\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([\"La\", \"Q\", \"9\", \"La\", \"La\"]);\n        assert(!result.isNull && result.get == \"la la la\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"la la la\""
    },
    {
        "id": 309,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmph7fhr5vq.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x55c6deba4ad9]\n??:? void tmph7fhr5vq.__unittest_L12_C1() [0x55c6deba4879]\n??:? void tmph7fhr5vq.__modtest() [0x55c6deba4a44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55c6deba9e52]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55c6deba7cf3]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55c6debae13f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55c6debae611]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55c6debae0cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55c6deba7cc5]\n??:? runModuleUnitTests [0x55c6deba9c87]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text, string suffix) \n{\n    text ~= suffix;\n    while (text[$-suffix.length .. $] == suffix) {\n        text = text[0 .. $-1];\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"faqo osax f\", \"f\") == \"faqo osax f\");\n}\nvoid main(){}\n\n",
        "answer": "\"faqo osax f\""
    },
    {
        "id": 310,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpgkav_ehn.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x55570ef67b99]\n??:? void tmpgkav_ehn.__unittest_L21_C1() [0x55570ef66ad6]\n??:? void tmpgkav_ehn.__modtest() [0x55570ef66ed8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55570ef7614e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55570ef678cb]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55570ef6b007]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55570ef6b099]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55570ef6af95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55570ef6789d]\n??:? runModuleUnitTests [0x55570ef75f83]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string[] strands) \n{\n    string[] subs = strands;\n    foreach (i, strand; strands)\n    {\n        foreach (_; 0 .. strand.length / 2)\n        {\n            subs[i] = strand[$-1 .. $] ~ strand[1 .. $-1] ~ strand[0 .. 1];\n        }\n    }\n    string result = \"\";\n    foreach (sub; subs)\n    {\n        result ~= sub;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"__\", \"1\", \".\", \"0\", \"r0\", \"__\", \"a_j\", \"6\", \"__\", \"6\"]) == \"r0a_j6\");\n}\nvoid main(){}\n\n",
        "answer": "\"r0a_j6\""
    },
    {
        "id": 311,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp82_xfy8w.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x564aef2d43e5]\n??:? void tmp82_xfy8w.__unittest_L19_C1() [0x564aef2ca86a]\n??:? void tmp82_xfy8w.__modtest() [0x564aef2cb72c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x564aef2dc266]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x564aef2ccd97]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x564aef2d79d3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x564aef2d7a65]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x564aef2d7961]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x564aef2ccd69]\n??:? runModuleUnitTests [0x564aef2dc09b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\nimport std.array;\n\nstring f(string text) \n{\n    text = text.replace(\"#\", \"1\").replace(\"$\", \"5\");\n    foreach (i, c; text)\n    {\n        if (!(c >= '0' && c <= '9'))\n            return \"no\";\n    }\n    return \"yes\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"A\") == \"yes\");\n}\nvoid main(){}\n\n",
        "answer": "\"yes\""
    },
    {
        "id": 312,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.stdio;\n\nstring f(string s) \n{\n    foreach (char c; s)\n    {\n        if (!(c >= '0' && c <= '9') && !(c >= 'A' && c <= 'Z') && !(c >= 'a' && c <= 'z'))\n            return \"False\";\n    }\n    return \"True\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"777\") == \"True\");\n}\nvoid main(){}\n\n",
        "answer": "\"True\""
    },
    {
        "id": 313,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp2xceqfqa.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x561eac4e4d51]\n??:? void tmp2xceqfqa.__unittest_L11_C1() [0x561eac4e37e4]\n??:? void tmp2xceqfqa.__modtest() [0x561eac4e380c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x561eac4f11ee]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x561eac4e49df]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x561eac4e6783]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x561eac4e6815]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x561eac4e6711]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x561eac4e49b1]\n??:? runModuleUnitTests [0x561eac4f1023]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string s, long l) \n{\n    return (s.length <= l) ? s : s[0 .. ((s.length-l).abs)] ;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"urecord\", 8L) == \"record\");\n}\nvoid main(){}\n\n",
        "answer": "\"record\""
    },
    {
        "id": 314,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmptm2vbvmi.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x560e6329684d]\n??:? void tmptm2vbvmi.__unittest_L15_C1() [0x560e6328a99e]\n??:? void tmptm2vbvmi.__modtest() [0x560e6328d704]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x560e632a0962]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x560e6328f087]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x560e6329c113]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x560e6329c1a5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x560e6329c0a1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x560e6328f059]\n??:? runModuleUnitTests [0x560e632a0797]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.string;\nimport std.algorithm;\nimport std.typecons;\n\nstring f(string text) {\n    if (text.canFind(',')) {\n        auto parts = text.split(\",\");\n        return parts[1 .. $].join(\",\") ~ \" \" ~ parts[0];\n    }\n    auto parts = text.split(\" \");\n    return \",\" ~ (parts.length > 1 ? parts[1 .. $].join(\" \") : \"\") ~ \" 0\";\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"244, 105, -90\") == \"105,244,-90\");\n}\nvoid main(){}\n\n",
        "answer": "\"105,244,-90\""
    },
    {
        "id": 315,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp706ejg37.d(13): unittest failure\n----------------\n??:? _d_unittestp [0x564009e8833d]\n??:? void tmp706ejg37.__unittest_L9_C1() [0x564009e7e7c2]\n??:? void tmp706ejg37.__modtest() [0x564009e7f684]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x564009e90416]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x564009e80cef]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x564009e8b92b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x564009e8b9bd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x564009e8b8b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x564009e80cc1]\n??:? runModuleUnitTests [0x564009e9024b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int f",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nstring f(string challenge) \n{\n    return challenge.toLower().replace(\"l\", \",\");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"czywZ\") == \"czyw,z\");\n}\nvoid main(){}\n\n",
        "answer": "\"czyw,z\""
    },
    {
        "id": 316,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nstring f(string name) \n{\n    return \"| \" ~ name.split(\" \").join(\" \") ~ \" |\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"i am your father\") == \"| i am your father |\");\n}\nvoid main(){}\n\n",
        "answer": "\"| i am your father |\""
    },
    {
        "id": 317,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpofnzntwd.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x5556d621438d]\n??:? void tmpofnzntwd.__unittest_L12_C1() [0x5556d620a810]\n??:? void tmpofnzntwd.__modtest() [0x5556d620b6d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5556d621c20e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5556d620cd3f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5556d621797b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5556d6217a0d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5556d6217909]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5556d620cd11]\n??:? runModuleUnitTests [0x5556d621c043]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text, string a, string b) \n{\n    string new_text = text.replace(a, b);\n    return new_text.replace(b, a);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\" vup a zwwo oihee amuwuuw! \", \"a\", \"u\") == \"vup amuwuuw!\");\n}\nvoid main(){}\n\n",
        "answer": "\"vup amuwuuw!\""
    },
    {
        "id": 318,
        "res": 0
    },
    {
        "id": 319,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpnytxz6ty.d(22): Error: incompatible types for `(f(\"a\", \"xxxaaxaaxx\")) == (\"xaxxaaxx\")`: `long` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnytxz6ty.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong f(string needle, string haystack) \n{\n    long count = 0;\n    while (haystack.canFind(needle))\n    {\n        haystack = haystack.replaceFirst(needle, \"\");\n        count += 1;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"a\", \"xxxaaxaaxx\") == \"xaxxaaxx\");\n}\nvoid main(){}\n\n",
        "answer": "\"xaxxaaxx\""
    },
    {
        "id": 320,
        "res": 0
    },
    {
        "id": 321,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpujkj9rwu.d(30): Error: incompatible types for `(result.get()) == (\"desciduous\")`: `long[string]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpujkj9rwu.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nNullable!(long[string]) f(Nullable!(long[string]) update, Nullable!(long[string]) starting) \n{\n    if (!starting.isNull) {\n        long[string] d = starting.get();\n        if (!update.isNull) {\n            foreach (key, value; update.get()) {\n                if (key in d) {\n                    d[key] += value;\n                } else {\n                    d[key] = value;\n                }\n            }\n        }\n        return Nullable!(long[string])(d);\n    }\n    return Nullable!(long[string]).init;\n}\n\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate(Nullable!(long[string]).init, [\"desciduous\": 2L].nullable);\n        assert(!result.isNull && result.get == \"desciduous\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"desciduous\""
    },
    {
        "id": 322,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpz5kiy74n.d(23): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz5kiy74n.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nstring[] f(string[] chemicals, long num) \n{\n    string[] fish = chemicals[1 .. $];\n    chemicals = chemicals.dup;\n    chemicals.reverse();\n    foreach (_; 0 .. num) {\n        fish ~= chemicals[1];\n        chemicals = chemicals[0 .. $ - 1];\n    }\n    chemicals.reverse();\n    return chemicals;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"lsi\", \"s\", \"t\", \"t\", \"d\"], 0L) == \"t\");\n}\nvoid main(){}\n\n",
        "answer": "\"t\""
    },
    {
        "id": 323,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpg7ede9ub.d(15): Error: incompatible types for `(f(\"ncdsdfdaaa0a1cdscsk*XFd\")) == (\"XFd\")`: `long` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg7ede9ub.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nlong f(string text) \n{\n    return text.split(\"\\n\").length;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"ncdsdfdaaa0a1cdscsk*XFd\") == \"XFd\");\n}\nvoid main(){}\n\n",
        "answer": "\"XFd\""
    },
    {
        "id": 324,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp_8q2wibx.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x55b0052d503d]\n??:? void tmp_8q2wibx.__unittest_L15_C1() [0x55b0052cc816]\n??:? void tmp_8q2wibx.__modtest() [0x55b0052cd774]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55b0052ded06]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55b0052dc13b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55b0052e4e4f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55b0052e5321]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55b0052e4ddd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55b0052dc10d]\n??:? runModuleUnitTests [0x55b0052deb3b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] nums) \n{\n    long[] asc = nums.dup;\n    long[] desc;\n    asc = array(std.algorithm.reverse(asc));\n    desc = asc[0 .. asc.length / 2];\n    return desc ~ asc ~ desc;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([]) == \"tuple(5L, 12L)\");\n}\nvoid main(){}\n\n",
        "answer": "\"tuple(5L, 12L)\""
    },
    {
        "id": 325,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp4f9xk06i.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x561ecf219425]\n??:? void tmp4f9xk06i.__unittest_L17_C1() [0x561ecf21884d]\n??:? void tmp4f9xk06i.__modtest() [0x561ecf219244]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x561ecf21e866]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x561ecf21c857]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x561ecf22395b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x561ecf223e2d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x561ecf2238e9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x561ecf21c829]\n??:? runModuleUnitTests [0x561ecf21e69b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nbool f(string s) \n{\n    auto l = s.dup;\n    foreach(i; 0 .. l.length) {\n        l[i] = toLower(l[i]);\n        if (!isDigit(l[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"\") == false);\n}\nvoid main(){}\n\n",
        "answer": "false"
    },
    {
        "id": 326,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpluk_7o3x.d(22): Error: incompatible types for `(f(\"Thisisastring\")) == (\"Thisisastring\")`: `long` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpluk_7o3x.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nlong f(string text) \n{\n    long number = 0;\n    foreach (char t; text)\n    {\n        if (isDigit(t))\n        {\n            number++;\n        }\n    }\n    return number;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Thisisastring\") == \"Thisisastring\");\n}\nvoid main(){}\n\n",
        "answer": "\"Thisisastring\""
    },
    {
        "id": 327,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpyxnv7w8p.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x5575a4dbcb11]\n??:? void tmpyxnv7w8p.__unittest_L18_C1() [0x5575a4dbc948]\n??:? void tmpyxnv7w8p.__modtest() [0x5575a4dbca78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5575a4dc1e1e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5575a4dbfe0f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5575a4dc62fb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5575a4dc67cd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5575a4dc6289]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5575a4dbfde1]\n??:? runModuleUnitTests [0x5575a4dc1c53]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nlong[] f(long[] lst) \n{\n    long[] new_arr;\n    for(long i = lst.length-1; i >= 0; i--)\n    {\n        if(i % 2 == 0)\n            new_arr ~= -lst[i];\n        else\n            new_arr ~= lst[i];\n    }\n    return new_arr;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 7L, -1L, -3L]) == [1L, -1L, 3L, -3L]);\n}\nvoid main(){}\n\n",
        "answer": "[1L, -1L, 3L, -3L]"
    },
    {
        "id": 328,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpt_o8_kez.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x55918fd8d59d]\n??:? void tmpt_o8_kez.__unittest_L18_C1() [0x55918fd8c80c]\n??:? void tmpt_o8_kez.__modtest() [0x55918fd8d3bc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55918fd92e46]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55918fd90beb]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55918fd9802f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55918fd98501]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55918fd97fbd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55918fd90bbd]\n??:? runModuleUnitTests [0x55918fd92c7b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] array, long L) \n{\n    if (L <= 0)\n        return array;\n    if (array.length < L) \n    {\n        array ~= array.replicate(L - array.length);\n    }\n    return array;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, 3L], 4L) == [1, 2, 3, 4]);\n}\nvoid main(){}\n\n",
        "answer": "[1, 2, 3, 4]"
    },
    {
        "id": 329,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmplvxj_kkv.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x55703260c931]\n??:? void tmplvxj_kkv.__unittest_L17_C1() [0x55703260c84c]\n??:? void tmplvxj_kkv.__modtest() [0x55703260c89c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55703260fefe]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55703261619b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x557032620bd7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x557032614631]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x557032620b65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55703261616d]\n??:? runModuleUnitTests [0x55703260fd33]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nbool f(string text) \n{\n    foreach(i; 1 .. text.length)\n    {\n        if (text[i] == toUpper(text[i]) && isLower(text[i-1]))\n        {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"jh54kkk6\") == false);\n}\nvoid main(){}\n\n",
        "answer": "false"
    },
    {
        "id": 330,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp21y_vqrh.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x5623ae389a69]\n??:? void tmp21y_vqrh.__unittest_L20_C1() [0x5623ae3898aa]\n??:? void tmp21y_vqrh.__modtest() [0x5623ae3899d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5623ae38ec42]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5623ae38cc33]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5623ae392f87]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5623ae393459]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5623ae392f15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5623ae38cc05]\n??:? runModuleUnitTests [0x5623ae38ea77]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text) \n{\n    string ans;\n    foreach (char c; text)\n    {\n        if (c >= '0' && c <= '9')\n        {\n            ans ~= c;\n        }\n        else\n        {\n            ans ~= ' ';\n        }\n    }\n    return ans;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"m4n2o\") == \"M  N  O\");\n}\nvoid main(){}\n\n",
        "answer": "\"M  N  O\""
    },
    {
        "id": 331,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpmx8kus8p.d(18): Error: incompatible types for `(f(\"\", \"abc\")) == (\"c\")`: `long` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmx8kus8p.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nlong f(string strand, string zmnc) \n{\n    long poz = strand.indexOf(zmnc);\n    while (poz != -1) {\n        strand = strand[poz + 1 .. $];\n        poz = strand.indexOf(zmnc);\n    }\n    return strand.lastIndexOf(zmnc);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"\", \"abc\") == \"c\");\n}\nvoid main(){}\n\n",
        "answer": "\"c\""
    },
    {
        "id": 332,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpq076camv.d(20): Error: using the result of a comma expression is not allowed\n/tmp/tmpq076camv.d(20): Error: incompatible types for `(f([-6L, -2L, 1L, -3L, 0L, 1L])) == (0L , 1L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq076camv.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] nums) \n{\n    auto count = nums.length;\n    if (count == 0) {\n        nums = new long[](cast(size_t)nums[$-1]);\n    } else if (count % 2 == 0) {\n        nums = [];\n    } else {\n        nums = nums[count/2..$];\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([-6L, -2L, 1L, -3L, 0L, 1L]) == (0L, 1L));\n}\nvoid main(){}\n\n",
        "answer": "(0L, 1L)"
    },
    {
        "id": 333,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpumpjpg14.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x5627dc419985]\n??:? void tmpumpjpg14.__unittest_L25_C1() [0x5627dc40d8d6]\n??:? void tmpumpjpg14.__modtest() [0x5627dc410e60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5627dc421622]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5627dc4122a7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5627dc41cfbb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5627dc41d04d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5627dc41cf49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5627dc412279]\n??:? runModuleUnitTests [0x5627dc421457]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.algorithm : sort, canFind, remove, count;\nimport std.array : array;\nimport std.stdio : writeln;\n\nlong f(long[] places, long[] lazyPlaces) {\n    places.sort();\n    foreach (lazyPlace; lazyPlaces) {\n        if (places.canFind(lazyPlace)) {\n            places = places.remove!(a => a == lazyPlace).array;\n        }\n    }\n    if (places.length == 1) {\n        return 1;\n    }\n    foreach (i, place; places) {\n        if (places.count!(a => a == place + 1) == 0) {\n            return i + 1;\n        }\n    }\n    return places.length;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([375L, 564L, 857L, 90L, 728L, 92L], [728L]) == 3);\n}\nvoid main(){}\n\n",
        "answer": "3"
    },
    {
        "id": 334,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpmk8b1xcz.d(14): unittest failure\n----------------\n??:? _d_unittestp [0x55b7ba31d2c5]\n??:? void tmpmk8b1xcz.__unittest_L10_C1() [0x55b7ba314851]\n??:? void tmpmk8b1xcz.__modtest() [0x55b7ba314e00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55b7ba325292]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55b7ba315c8b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55b7ba320887]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55b7ba320919]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55b7ba320815]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55b7ba315c5d]\n??:? runModuleUnitTests [0x55b7ba3250c7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nstring f(string a, string[] b) \n{\n    return b.join(a);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"00\", [\"nU\", \" 9 rCSAz\", \"w\", \" lpA5BO\", \"sizL\", \"i7rlVr\"]) == \"nU 9 rCSAz w lpA5BO sizL i7rlVr\");\n}\nvoid main(){}\n\n",
        "answer": "\"nU 9 rCSAz w lpA5BO sizL i7rlVr\""
    },
    {
        "id": 335,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string text, string to_remove) \n{\n    auto new_text = text.replace(to_remove, \"?\");\n    return new_text.replace(\"?\", \"\");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"sjbrlfqmw\", \"l\") == \"sjbrfqmw\");\n}\nvoid main(){}\n\n",
        "answer": "\"sjbrfqmw\""
    },
    {
        "id": 336,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\n\nstring f(string s, string sep) \n{\n    s ~= sep;\n    if(s.empty || sep.empty)\n        return \"\";\n\n    ulong startIndex = s.length;\n    int count = 0;\n    for(ulong i = s.length - sep.length; i < s.length; ++i)\n    {\n        if(s[i .. i + sep.length] == sep)\n        {\n            count++;\n            startIndex = i;\n            if(count == 2)\n                break;\n        }\n    }\n\n    if(startIndex == s.length)\n        return s;\n\n    return s[0 .. startIndex];\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"234dsfssdfs333324314\", \"s\") == \"234dsfssdfs333324314\");\n}\nvoid main(){}\n\n",
        "answer": "\"234dsfssdfs333324314\""
    },
    {
        "id": 337,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpruk5z5az.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x563cae2efda9]\n??:? void tmpruk5z5az.__unittest_L19_C1() [0x563cae2ee83e]\n??:? void tmpruk5z5az.__modtest() [0x563cae2ee864]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x563cae2fc3f6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x563cae2efa37]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x563cae2f1917]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x563cae2f19a9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x563cae2f18a5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x563cae2efa09]\n??:? runModuleUnitTests [0x563cae2fc22b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.algorithm : map, filter;\nimport std.ascii : isDigit, isLower, isUpper;\nimport std.string : toUpper, toLower;\n\nstring f(string txt) \n{\n    string result = \"\";\n    foreach (c; txt)\n    {\n        if (isDigit(c)) continue;\n        if (isLower(c)) result ~= toUpper(c);\n        else if (isUpper(c)) result ~= toLower(c);\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"5ll6\") == \"5l6\");\n}\nvoid main(){}\n\n",
        "answer": "\"5l6\""
    },
    {
        "id": 338,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpt7i9b1pr.d(23): Error: incompatible types for `(result.get()) == (\"abcd\")`: `string[long]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt7i9b1pr.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nNullable!(string[long]) f(Nullable!(long[string]) my_dict)\n{\n    if (!my_dict.isNull) {\n        string[long] result;\n        foreach (k, v; my_dict.get()) {\n            result[v] = k;\n        }\n        return Nullable!(string[long])(result);\n    }\n    return Nullable!(string[long]).init;\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([\"a\": 1L, \"b\": 2L, \"c\": 3L, \"d\": 2L].nullable);\n        assert(!result.isNull && result.get == \"abcd\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"abcd\""
    },
    {
        "id": 339,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmppsa0aueu.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x55b6027d95b5]\n??:? void tmppsa0aueu.__unittest_L15_C1() [0x55b6027d8827]\n??:? void tmppsa0aueu.__modtest() [0x55b6027d93d4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55b6027def02]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55b6027dcda3]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55b6027e3feb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55b6027e44bd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55b6027e3f79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55b6027dcd75]\n??:? runModuleUnitTests [0x55b6027ded37]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nlong f(long[] array, long elem) \n{\n    import std.conv;\n    long d = 0;\n    foreach (i; array) {\n        if(to!string(i) == to!string(elem)) {\n            d += 1;\n        }\n    }\n    return d;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([-1L, 2L, 1L, -8L, -8L, 2L], 2L) == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 340,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp6_1yh1zo.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x55b97e6ce85d]\n??:? void tmp6_1yh1zo.__unittest_L23_C1() [0x55b97e6be8ea]\n??:? void tmp6_1yh1zo.__modtest() [0x55b97e6c57c8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55b97e6d759e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55b97e6c714f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55b97e6d2a1f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55b97e6d2ab1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55b97e6d29ad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55b97e6c7121]\n??:? runModuleUnitTests [0x55b97e6d73d3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.algorithm;\nimport std.array;\nimport std.string;\nimport std.conv;\n\nstring f(string text) {\n    long uppercase_index = text.indexOf('A');\n    if (uppercase_index >= 0) {\n        long lowercase_index = text.indexOf('a');\n        if (lowercase_index >= 0) {\n            return text[0 .. uppercase_index] ~ text[lowercase_index + 1 .. $];\n        } else {\n            return text[0 .. uppercase_index];\n        }\n    } else {\n        auto sorted_text = text.dup.array;\n        sorted_text.sort();\n        return sorted_text.to!string;\n    }\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"E jIkx HtDpV G\") == \"EjIkxHtDpVg\");\n}\nvoid main(){}\n\n",
        "answer": "\"EjIkxHtDpVg\""
    },
    {
        "id": 341,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpstftqcux.d(24): Error: incompatible types for `(result.get()) == (\"banana\")`: `long[long]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpstftqcux.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array : empty;\n\nNullable!(long[long]) f(Nullable!(long[long]) cart) \n{\n    if (!cart.isNull) {\n        auto c = cart.get;\n        while (c.length > 5) {\n            c.remove(c.length-1);\n        }\n        return Nullable!(long[long])(c);\n    }\n    return Nullable!(long[long]).init;\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate(Nullable!(long[long]).init);\n        assert(!result.isNull && result.get == \"banana\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"banana\""
    },
    {
        "id": 342,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpc2o3o_1j.d(16): Error: undefined identifier `True`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc2o3o_1j.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.string;\n\nbool f(string text) \n{\n    return text.count(\"-\") == text.length;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"---123-4\") == True);\n}\nvoid main(){}\n\n",
        "answer": "True"
    },
    {
        "id": 343,
        "res": 0
    },
    {
        "id": 344,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] lst) \n{\n    long[] new_list = lst.dup;\n    new_list.sort();\n    return lst;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([6L, 4L, 2L, 8L, 15L]) == [6, 4, 2, 8, 15]);\n}\nvoid main(){}\n\n",
        "answer": "[6, 4, 2, 8, 15]"
    },
    {
        "id": 345,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp1hk3kotb.d(18): Error: none of the overloads of template `std.typecons.Tuple!(string, string).Tuple.opEquals` are callable using argument types `!()(string)`\n/usr/include/dmd/phobos/std/typecons.d(796):        Candidates are: `opEquals(R)(R rhs)`\n  with `R = string`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(803):                        `opEquals(R)(R rhs) const`\n  with `R = string`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(810):                        `opEquals(R...)(auto ref R rhs)`\n  with `R = (string)`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > R.length > 1\n  - areCompatibleTuples!(typeof(this), Tuple!R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n  Tip: not satisfied constraints are marked with `>`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1hk3kotb.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nTuple!(string, string) f(string a, string b) \n{\n    if (a < b)\n    {\n        return tuple(b, a);\n    }\n    return tuple(a, b);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"ml\", \"mv\") == \"mv\");\n}\nvoid main(){}\n\n",
        "answer": "\"mv\""
    },
    {
        "id": 346,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmplj7_k8gy.d(18): Error: incompatible types for `(f(\"docs.doc\")) == (\"docs\")`: `bool` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplj7_k8gy.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.stdio;\nimport std.string;\nimport std.algorithm;\nimport std.array;\n\nbool f(string filename) {\n    string suffix = filename.split('.')[$ - 1];\n    string f2 = filename ~ suffix.dup.reverse().idup;\n    return f2.endsWith(suffix);\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"docs.doc\") == \"docs\");\n}\nvoid main(){}\n\n",
        "answer": "\"docs\""
    },
    {
        "id": 347,
        "res": 0
    },
    {
        "id": 348,
        "res": 0
    },
    {
        "id": 349,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpp0z7jlhn.d(21): Error: incompatible types for `(result.get()) == (\"55\")`: `long[string]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp0z7jlhn.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nNullable!(long[string]) f(Nullable!(long[string]) dictionary) \n{\n    if (!dictionary.isNull) {\n        long[string] newDictionary = dictionary.get;\n        newDictionary[\"1049\"] = 55;\n        return Nullable!(long[string])(newDictionary);\n    }\n    return Nullable!(long[string]).init;\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([\"noeohqhk\": 623L].nullable);\n        assert(!result.isNull && result.get == \"55\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"55\""
    },
    {
        "id": 350,
        "res": 0
    },
    {
        "id": 351,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nstring f(string text) \n{\n    scope(exit) text = text.replace(\"nnet lloP\", \"nnet loLp\");\n    return text;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"a_A_b_B3 \") == \"a_A_b_B3 \");\n}\nvoid main(){}\n\n",
        "answer": "\"a_A_b_B3 \""
    },
    {
        "id": 352,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpcrcje8ov.d(12): unittest failure\n----------------\n??:? _d_unittestp [0x55582a550881]\n??:? void tmpcrcje8ov.__unittest_L8_C1() [0x55582a5507c9]\n??:? void tmpcrcje8ov.__modtest() [0x55582a5507ec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55582a555146]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55582a553137]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55582a559c7b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55582a55a14d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55582a559c09]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55582a553109]\n??:? runModuleUnitTests [0x55582a554f7b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int f",
        "code": "\nimport std.math;\nimport std.typecons;\nlong f(long[] nums) \n{\n    return nums[nums.length / 2];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([-1L, -3L, -5L, -7L, 0L]) == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 353,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpbj34wdrq.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x5634dc6a7079]\n??:? void tmpbj34wdrq.__unittest_L26_C1() [0x5634dc69e8ac]\n??:? void tmpbj34wdrq.__modtest() [0x5634dc69ec2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5634dc6af23e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5634dc69fc87]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5634dc6aa92f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5634dc6aa9c1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5634dc6aa8bd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5634dc69fc59]\n??:? runModuleUnitTests [0x5634dc6af073]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.algorithm;\n\nlong f(long[] x) \n{\n    if (x.empty)\n        return -1;\n    long[long] cache;\n    foreach (item; x) \n    {\n        if (item in cache) \n        {\n            cache[item]++;\n        } \n        else \n        {\n            cache[item] = 1;\n        }\n    }\n    return cache.values.maxElement;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 0L, 2L, 2L, 0L, 0L, 0L, 1L]) == 2L);\n}\nvoid main(){}\n\n",
        "answer": "2L"
    },
    {
        "id": 354,
        "res": 0
    },
    {
        "id": 355,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpcd7ejdv1.d(12): unittest failure\n----------------\n??:? _d_unittestp [0x562268a59939]\n??:? void tmpcd7ejdv1.__unittest_L8_C1() [0x562268a597d9]\n??:? void tmpcd7ejdv1.__modtest() [0x562268a598a4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x562268a5ceca]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x562268a6311b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x562268a6d9ff]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x562268a615b1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x562268a6d98d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x562268a630ed]\n??:? runModuleUnitTests [0x562268a5ccff]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int f",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text, string prefix) \n{\n    return text[prefix.length..$];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"123x John z\", \"z\") == \"John\");\n}\nvoid main(){}\n\n",
        "answer": "\"John\""
    },
    {
        "id": 356,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmprrctxfgu.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x5643c888951d]\n??:? void tmprrctxfgu.__unittest_L25_C1() [0x5643c888894b]\n??:? void tmprrctxfgu.__modtest() [0x5643c8889338]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5643c888e37e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5643c888c123]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5643c8893bbf]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5643c8894091]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5643c8893b4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5643c888c0f5]\n??:? runModuleUnitTests [0x5643c888e1b3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.algorithm;\n\nlong[] f(long[] array, long num) \n{\n    bool reverse = false;\n    if (num < 0) {\n        reverse = true;\n        num *= -1;\n    }\n    array.reverse();\n    long[] result = new long[array.length * num];\n    foreach (immutable i; 0 .. num) {\n        result[i * array.length .. (i+1) * array.length] = array;\n    }\n    if (reverse) {\n        result.reverse();\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L], 1L) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);\n}\nvoid main(){}\n\n",
        "answer": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]"
    },
    {
        "id": 357,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp7tuk9mei.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x560152660a51]\n??:? void tmp7tuk9mei.__unittest_L13_C1() [0x5601526607fe]\n??:? void tmp7tuk9mei.__modtest() [0x5601526609bc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56015266657a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x560152664443]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56015266b35f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56015266b831]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56015266b2ed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x560152664415]\n??:? runModuleUnitTests [0x5601526663af]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string s) \n{\n    string result;\n    foreach (i; 0 .. s.length)\n    {\n        result = s[i] ~ result;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"crew\") == \"c\");\n}\nvoid main(){}\n\n",
        "answer": "\"c\""
    },
    {
        "id": 358,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpsw3649zd.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x55de805edf81]\n??:? void tmpsw3649zd.__unittest_L23_C1() [0x55de805ec9bd]\n??:? void tmpsw3649zd.__modtest() [0x55de805eca38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55de805fb2d6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55de805edc0f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55de805f0443]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55de805f04d5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55de805f03d1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55de805edbe1]\n??:? runModuleUnitTests [0x55de805fb10b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nstring f(string text, string value) \n{\n    long[] indexes;\n    foreach (i; 0 .. text.length)\n    {\n        if (text[i] == value[0] && (i == 0 || text[i-1] != value[0]))\n        {\n            indexes ~= i;\n        }\n    }\n    if (indexes.length % 2 == 1)\n    {\n        return text;\n    }\n    return text[indexes[0]+1 .. indexes[$-1]];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"btrburger\", \"b\") == \"burger\");\n}\nvoid main(){}\n\n",
        "answer": "\"burger\""
    },
    {
        "id": 359,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp8z7z4ehc.d(26): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8z7z4ehc.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.stdio;\nimport std.string;\nimport std.algorithm;\n\nstring[] f(string[] lines) \n{\n    size_t maxLength = 0;\n    foreach (line; lines)\n    {\n        maxLength = max(line.length, maxLength);\n    }\n    foreach (ref line; lines)\n    {\n        line = line.center(maxLength);\n    }\n    return lines;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"dZwbSR\", \"wijHeq\", \"qluVok\", \"dxjxbF\"]) == \"  /\\\\_/\\\\\");\n}\nvoid main(){}\n\n",
        "answer": "\"  /\\\\_/\\\\\""
    },
    {
        "id": 360,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\n\nstring f(string text, long n) \n{\n    if (text.length <= 2) {\n        return text;\n    }\n    string leading_chars;\n    foreach (i; 0 .. (n - text.length + 1)) {\n        leading_chars ~= text[0];\n    }\n    return leading_chars ~ text[1 .. $-1] ~ text[$-1];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"g\", 15L) == \"g\");\n}\nvoid main(){}\n\n",
        "answer": "\"g\""
    },
    {
        "id": 361,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpe2rapsgz.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x55fd5fd7007d]\n??:? void tmpe2rapsgz.__unittest_L16_C1() [0x55fd5fd637c9]\n??:? void tmpe2rapsgz.__modtest() [0x55fd5fd66e10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55fd5fd7a13e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55fd5fd688b7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55fd5fd75a2b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55fd5fd75abd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55fd5fd759b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55fd5fd68889]\n??:? runModuleUnitTests [0x55fd5fd79f73]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nlong f(string text) \n{\n    auto tokens = text.split(':');\n    // Check if there is at least one token before counting '#'\n    if (tokens.length > 0) {\n        return tokens[0].count('#');\n    }\n    return 0;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"#! : #!\") == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 362,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpfi4ayde3.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x5617eddf99b1]\n??:? void tmpfi4ayde3.__unittest_L18_C1() [0x5617eddf984a]\n??:? void tmpfi4ayde3.__modtest() [0x5617eddf9918]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5617eddfd10a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5617ede0335b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5617ede0dbf7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5617ede017f1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5617ede0db85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5617ede0332d]\n??:? runModuleUnitTests [0x5617eddfcf3f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\n\nbool isLowercase(char c) {\n    return c >= 'a' && c <= 'z';\n}\n\nstring f(string text) \n{\n    for (size_t i = 0; i < text.length - 1; i++) {\n        if (isLowercase(text[i])) {\n            return text[i + 1..$];\n        }\n    }\n    return \"\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"wrazugizoernmgzu\") == \"wrazugizoernmgzu\");\n}\nvoid main(){}\n\n",
        "answer": "\"wrazugizoernmgzu\""
    },
    {
        "id": 363,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmport25cgi.d(24): Error: none of the overloads of template `std.typecons.Tuple!long.Tuple.opEquals` are callable using argument types `!()(long[])`\n/usr/include/dmd/phobos/std/typecons.d(796):        Candidates are: `opEquals(R)(R rhs)`\n  with `R = long[]`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(803):                        `opEquals(R)(R rhs) const`\n  with `R = long[]`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(810):                        `opEquals(R...)(auto ref R rhs)`\n  with `R = (long[])`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > R.length > 1\n  - areCompatibleTuples!(typeof(this), Tuple!R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n  Tip: not satisfied constraints are marked with `>`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmport25cgi.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] nums) \n{\n    auto n = nums.length;\n    auto new_nums = [nums[n/2]];\n    \n    if (n % 2 == 0) {\n        new_nums = [nums[n/2 - 1], nums[n/2]];\n    }\n    \n    foreach (i; 0 .. n/2) {\n        new_nums ~= nums[n-i-1];\n        new_nums ~= nums[i];\n    }\n    \n    return new_nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L]) == tuple(5L));\n}\nvoid main(){}\n\n",
        "answer": "tuple(5L)"
    },
    {
        "id": 364,
        "res": 0
    },
    {
        "id": 365,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string n, string s) \n{\n    if (s.startsWith(n)) {\n        auto pre = s[0 .. s.indexOf(n)];\n        return pre ~ n ~ s[s.length-n.length .. $];\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"xqc\", \"mRcwVqXsRDRb\") == \"mRcwVqXsRDRb\");\n}\nvoid main(){}\n\n",
        "answer": "\"mRcwVqXsRDRb\""
    },
    {
        "id": 366,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp10jk9gqj.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x55f754dfa985]\n??:? void tmp10jk9gqj.__unittest_L21_C1() [0x55f754df0832]\n??:? void tmp10jk9gqj.__modtest() [0x55f754df1c38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55f754e031e2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55f754df32a7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55f754dfe09f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55f754dfe131]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55f754dfe02d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55f754df3279]\n??:? runModuleUnitTests [0x55f754e03017]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string s) \n{\n    auto tmp = s.toLower();\n    foreach (ch; tmp)\n    {\n        if (tmp.canFind(ch))\n        {\n            tmp = tmp.replace(ch, \"\");\n        }\n    }\n    return tmp;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"[ Hello ]+ Hello, World!!_ Hi\") == \"hello world\");\n}\nvoid main(){}\n\n",
        "answer": "\"hello world\""
    },
    {
        "id": 367,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmps_3hzqtq.d(26): Error: incompatible types for `(f([6L, 2L, 1L, 1L, 4L, 1L], 5L)) == (6L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps_3hzqtq.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.range;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] nums, long rmvalue) \n{\n    auto res = nums.dup;\n    while (res.canFind(rmvalue)) {\n        auto index = res.find(rmvalue).front;\n        auto popped = res[index];\n        if (popped != rmvalue) {\n            res ~= popped;\n        }\n        res = res[0 .. index] ~ res[index + 1 .. $];\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([6L, 2L, 1L, 1L, 4L, 1L], 5L) == 6L);\n}\nvoid main(){}\n\n",
        "answer": "6L"
    },
    {
        "id": 368,
        "res": 0
    },
    {
        "id": 369,
        "res": 0
    },
    {
        "id": 370,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmppdbyj_p5.d(19): Error: incompatible types for `(f(\"     i\")) == (\"i\")`: `bool` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppdbyj_p5.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nbool f(string text) \n{\n    foreach (char c; text) {\n        if (!c.isWhite) {\n            return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"     i\") == \"i\");\n}\nvoid main(){}\n\n",
        "answer": "\"i\""
    },
    {
        "id": 371,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmprf7az_br.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x55e3db00b9a1]\n??:? void tmprf7az_br.__unittest_L20_C1() [0x55e3db00b88b]\n??:? void tmprf7az_br.__modtest() [0x55e3db00b908]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55e3db010cae]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55e3db00ec9f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55e3db01518b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55e3db01565d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55e3db015119]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55e3db00ec71]\n??:? runModuleUnitTests [0x55e3db010ae3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nlong f(long[] nums) \n{\n    long[] filteredNums;\n    foreach (num; nums) {\n        if (num % 2 == 0) {\n            filteredNums ~= num;\n        }\n    }\n    \n    long sum = 0;\n    foreach (num; filteredNums) {\n        sum += num;\n    }\n    \n    return sum;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([11L, 21L, 0L, 11L]) == (11L + 21L));\n}\nvoid main(){}\n\n",
        "answer": "(11L + 21L)"
    },
    {
        "id": 372,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp1aj_9rzv.d(21): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1aj_9rzv.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\n\nstring[] f(string[] list_, long num) \n{\n    string[] temp;\n    foreach (i; list_) {\n        string newStr;\n        for (size_t j = 0; j < num / 2; j++) {\n            newStr ~= i ~ \",\";\n        }\n        temp ~= newStr;\n    }\n    return temp;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"v\"], 1L) == \"v\");\n}\nvoid main(){}\n\n",
        "answer": "\"v\""
    },
    {
        "id": 373,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpcpt339z1.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x5622ebfdbd65]\n??:? void tmpcpt339z1.__unittest_L13_C1() [0x5622ebfd385a]\n??:? void tmpcpt339z1.__modtest() [0x5622ebfd449c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5622ebfe4b1a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5622ebfe1f4f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5622ebfeac63]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5622ebfeb135]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5622ebfeabf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5622ebfe1f21]\n??:? runModuleUnitTests [0x5622ebfe494f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nlong[] f(long[] orig) \n{\n    auto copy = orig.dup;\n    copy ~= 100;\n    copy = array(copy[0 .. $-1]);\n    return copy;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, 3L]) == \"100\");\n}\nvoid main(){}\n\n",
        "answer": "\"100\""
    },
    {
        "id": 374,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmptlu4mtn9.d(20): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptlu4mtn9.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nstring[] f(string[] seq, string v) \n{\n    string[] a;\n    foreach (i; seq)\n    {\n        if (i.length >= v.length && i[i.length - v.length .. $] == v)\n        {\n            a ~= i ~ i;\n        }\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"oH\", \"ee\", \"mb\", \"deft\", \"n\", \"zz\", \"f\", \"abA\"], \"zz\") == \"zz\");\n}\nvoid main(){}\n\n",
        "answer": "\"zz\""
    },
    {
        "id": 375,
        "res": 0
    },
    {
        "id": 376,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpy267r5ox.d(24): Error: undefined identifier `no`, did you mean struct `No`?\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy267r5ox.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.range;\nimport std.string;\n\nstring f(string text) \n{\n    for (size_t i = 0; i < text.length; i++)\n    {\n        if (text[0 .. i].startsWith(\"two\"))\n        {\n            return text[i .. $];\n        }\n    }\n    \n    return \"no\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"2two programmers\") == no);\n}\nvoid main(){}\n\n",
        "answer": "no"
    },
    {
        "id": 377,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmphn19rd03.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x561db89fd995]\n??:? void tmphn19rd03.__unittest_L18_C1() [0x561db89f2852]\n??:? void tmphn19rd03.__modtest() [0x561db89f4848]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x561db8a07672]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x561db89f61cf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x561db8a032af]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x561db8a03341]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x561db8a0323d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x561db89f61a1]\n??:? runModuleUnitTests [0x561db8a074a7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nstring f(string text) \n{\n    string result;\n    foreach(line; text.split(\"\\n\"))\n    {\n        if (!result.empty)\n            result ~= \", \";\n        result ~= line;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"BYE\nNO\nWAY\") == \"bye, no way\");\n}\nvoid main(){}\n\n",
        "answer": "\"bye, no way\""
    },
    {
        "id": 378,
        "res": 0
    },
    {
        "id": 379,
        "res": 0
    },
    {
        "id": 380,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpzgnmko2t.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x561ed5736e1d]\n??:? void tmpzgnmko2t.__unittest_L15_C1() [0x561ed572b7fd]\n??:? void tmpzgnmko2t.__modtest() [0x561ed572dcd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x561ed5740c1a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x561ed572f657]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x561ed573c83b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x561ed573c8cd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x561ed573c7c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x561ed572f629]\n??:? runModuleUnitTests [0x561ed5740a4f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\nimport std.array;\n\nstring f(string text, string delimiter) \n{\n    auto parts = text.split(delimiter);\n    parts.length -= 1;\n    return parts.join(delimiter);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"xxjarczx\", \"x\") == \"jarcz\");\n}\nvoid main(){}\n\n",
        "answer": "\"jarcz\""
    },
    {
        "id": 381,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp1cijr_er.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x560d37b76a41]\n??:? void tmp1cijr_er.__unittest_L16_C1() [0x560d37b767dc]\n??:? void tmp1cijr_er.__modtest() [0x560d37b769ac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x560d37b7c3a2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x560d37b7a3eb]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x560d37b81187]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x560d37b81659]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x560d37b81115]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x560d37b7a3bd]\n??:? runModuleUnitTests [0x560d37b7c1d7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.conv;\n\nstring f(string text, long num_digits) \n{\n    long width = num_digits > 1 ? num_digits : 1;\n    string paddedText = text;\n    while (paddedText.length < width)\n    {\n        paddedText = \"0\" ~ paddedText;\n    }\n    return paddedText;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"19\", 5L) == \"19\");\n}\nvoid main(){}\n\n",
        "answer": "\"19\""
    },
    {
        "id": 382,
        "res": 0
    },
    {
        "id": 383,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string text, string chars) \n{\n    string result = text;\n    while (result[$-3 .. $-1] == chars) {\n        result = result[0 .. $-3] ~ result[$ .. $];\n    }\n    return result.stripRight(\".\");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"ellod!p.nkyp.exa.bi.y.hain\", \".n.in.ha.y\") == \"ellod!p.nkyp.exa.bi.y.hain\");\n}\nvoid main(){}\n\n",
        "answer": "\"ellod!p.nkyp.exa.bi.y.hain\""
    },
    {
        "id": 384,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp2ufu58mv.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x55af6ed906c9]\n??:? void tmp2ufu58mv.__unittest_L21_C1() [0x55af6ed8e875]\n??:? void tmp2ufu58mv.__modtest() [0x55af6ed8f0f4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55af6ed9d59e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55af6ed902c7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55af6ed922a7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55af6ed92339]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55af6ed92235]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55af6ed90299]\n??:? runModuleUnitTests [0x55af6ed9d3d3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.range;\nimport std.string;\n\nstring f(string text, string chars) \n{\n    auto new_text = text;\n    while (new_text.length > 0 && text.length > 0) {\n        if (canFind(chars, new_text[0])) {\n            new_text = new_text[1..$];\n        } else {\n            break;\n        }\n    }\n    return new_text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"asfdellos\", \"Ta\") == \"asfdellos\");\n}\nvoid main(){}\n\n",
        "answer": "\"asfdellos\""
    },
    {
        "id": 385,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp_l51li4o.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x558090a44bc1]\n??:? void tmp_l51li4o.__unittest_L26_C1() [0x558090a4493a]\n??:? void tmp_l51li4o.__modtest() [0x558090a44b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x558090a49ece]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x558090a47ebf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x558090a4e3ab]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x558090a4e87d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x558090a4e339]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x558090a47e91]\n??:? runModuleUnitTests [0x558090a49d03]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.algorithm;\n\nlong[] f(long[] lst) \n{\n    long[] new_list;\n    long i = 0;\n    while (i < lst.length)\n    {\n        if (lst.count(lst[i]) > 1)\n        {\n            new_list ~= lst[i];\n            if (new_list.length == 3)\n            {\n                return new_list;\n            }\n        }\n        i++;\n    }\n    return new_list;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([0L, 2L, 1L, 2L, 6L, 2L, 6L, 3L, 0L]) == [0L, 2L, 1L, 2L, 6L, 2L, 6L, 3L, 0L]);\n}\nvoid main(){}\n\n",
        "answer": "[0L, 2L, 1L, 2L, 6L, 2L, 6L, 3L, 0L]"
    },
    {
        "id": 386,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmphtkdq11x.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x56260b3dd735]\n??:? void tmphtkdq11x.__unittest_L21_C1() [0x56260b3bda2d]\n??:? void tmphtkdq11x.__modtest() [0x56260b3d2bb4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56260b3e61e6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56260b3d48c3]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56260b3e2703]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56260b3e288d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56260b3e2691]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56260b3d4895]\n??:? runModuleUnitTests [0x56260b3e601b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nstring f(string concat, Nullable!(string[string]) di) \n{\n    if (!di.isNull) {\n        auto arr = di.get.keys.array;\n        arr.sort();\n        foreach (i; 0 .. arr.length) {\n            if (concat.canFind(di.get[arr[i]])) {\n                di.get.remove(arr[i]);\n            }\n        }\n    }\n    return \"Done!\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"mid\", [\"0\": \"q\", \"1\": \"f\", \"2\": \"w\", \"3\": \"i\"].nullable) == \"mid\");\n}\nvoid main(){}\n\n",
        "answer": "\"mid\""
    },
    {
        "id": 387,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp05l833_a.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x55b143053c01]\n??:? void tmp05l833_a.__unittest_L11_C1() [0x55b14305385a]\n??:? void tmp05l833_a.__modtest() [0x55b143053b6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55b14305959e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55b143057497]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55b14305e4c3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55b14305e995]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55b14305e451]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55b143057469]\n??:? runModuleUnitTests [0x55b1430593d3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] nums, long pos, long value) \n{\n    long[] before = nums[0 .. pos];\n    long[] after = nums[pos .. $];\n    \n    return before ~ [value] ~ after;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([3L, 1L, 2L], 2L, 0L) == \"3 1 2\");\n}\nvoid main(){}\n\n",
        "answer": "\"3 1 2\""
    },
    {
        "id": 388,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp0k57b57h.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x5654b01fc27d]\n??:? void tmp0k57b57h.__unittest_L19_C1() [0x5654b01f98b9]\n??:? void tmp0k57b57h.__modtest() [0x5654b01fabe8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5654b020afc2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5654b01fbdbf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5654b01ffbb7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5654b01ffc49]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5654b01ffb45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5654b01fbd91]\n??:? runModuleUnitTests [0x5654b020adf7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.array;\nimport std.algorithm;\n\nstring f(string text, string characters) {\n    auto characterList = characters.dup ~ \" \" ~ \"_\";\n\n    size_t i = 0;\n    while (i < text.length && canFind(characterList, text[i])) {\n        i++;\n    }\n\n    return text[i .. $];\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"2nm_28in\", \"nm\") == \"nm\");\n}\nvoid main(){}\n\n",
        "answer": "\"nm\""
    },
    {
        "id": 389,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmphz7ntx89.d(23): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphz7ntx89.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nstring[] f(string[] total, string arg) \n{\n    if (arg.length > 1) {\n        foreach (e; arg.split(\"\")) {\n            total ~= e;\n        }\n    } else {\n        total ~= arg;\n    }\n    return total;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"1\", \"2\", \"3\"], \"nammo\") == \"123\");\n}\nvoid main(){}\n\n",
        "answer": "\"123\""
    },
    {
        "id": 390,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nlong f(string text) \n{\n    if (text.strip().empty)\n    {\n        return text.strip().length;\n    }\n    return int.init;  // This is D's equivalent of returning None\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\" \t \") == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 391,
        "res": 0
    },
    {
        "id": 392,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nstring f(string text) \n{\n    if (text.toUpper == text) {\n        return \"ALL UPPERCASE\";\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Hello Is It MyClass\") == \"Hello Is It MyClass\");\n}\nvoid main(){}\n\n",
        "answer": "\"Hello Is It MyClass\""
    },
    {
        "id": 393,
        "res": 0
    },
    {
        "id": 394,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmptw20sh20.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x56256a8bc31d]\n??:? void tmptw20sh20.__unittest_L19_C1() [0x56256a8b17ce]\n??:? void tmptw20sh20.__modtest() [0x56256a8b31d4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56256a8c5ffa]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56256a8b4b57]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56256a8c1c37]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56256a8c1cc9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56256a8c1bc5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56256a8b4b29]\n??:? runModuleUnitTests [0x56256a8c5e2f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nlong f(string text) \n{\n    auto k = text.splitLines();\n    long i = 0;\n    foreach (j; k)\n    {\n        if (j.length == 0)\n            return i;\n        i++;\n    }\n    return -1;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"2 m2 \n\nbike\") == -1);\n}\nvoid main(){}\n\n",
        "answer": "-1"
    },
    {
        "id": 395,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmprznn7f1k.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x55b0b1862949]\n??:? void tmprznn7f1k.__unittest_L20_C1() [0x55b0b186288a]\n??:? void tmprznn7f1k.__modtest() [0x55b0b18628b0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55b0b1865f02]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55b0b186c19f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55b0b1876bdb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55b0b186a635]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55b0b1876b69]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55b0b186c171]\n??:? runModuleUnitTests [0x55b0b1865d37]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nlong f(string s) \n{\n    foreach (i; 0 .. s.length)\n    {\n        if (s[i] >= '0' && s[i] <= '9')\n        {\n            return i + (s[i] == '0' ? 1 : 0);\n        }\n        else if (s[i] == '0')\n        {\n            return -1;\n        }\n    }\n    \n    return -1;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"11\") == -1);\n}\nvoid main(){}\n\n",
        "answer": "-1"
    },
    {
        "id": 396,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpd52tkjsp.d(21): Error: incompatible types for `(result.get()) == (\"tuple(0L, 0L)\")`: `long[long]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd52tkjsp.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nNullable!(long[long]) f(Nullable!(long[long]) ets) \n{\n    if (!ets.isNull) {\n        foreach (k, v; ets.get()) {\n            ets.get()[k] = v * v;\n        }\n    }\n    return ets;\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate(Nullable!(long[long]).init);\n        assert(!result.isNull && result.get == \"tuple(0L, 0L)\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"tuple(0L, 0L)\""
    },
    {
        "id": 397,
        "res": 0
    },
    {
        "id": 398,
        "res": 0
    },
    {
        "id": 399,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpnt1f5gec.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x556afd3464c5]\n??:? void tmpnt1f5gec.__unittest_L20_C1() [0x556afd33b8d8]\n??:? void tmpnt1f5gec.__modtest() [0x556afd33d748]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x556afd34eaba]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x556afd33edb7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x556afd349cd7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x556afd349d69]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x556afd349c65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x556afd33ed89]\n??:? runModuleUnitTests [0x556afd34e8ef]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.algorithm;\nimport std.array;\nimport std.string;\nimport std.typecons;\n\nstring f(string text, string old, string newStr) {\n    if (old.length > 3) {\n        return text;\n    }\n    if (text.canFind(old) && !text.canFind(' ')) {\n        return text.replace(old, newStr.replicate(old.length));\n    }\n    while (text.canFind(old)) {\n        text = text.replace(old, newStr);\n    }\n    return text;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"avacado\", \"va\", \"-\") == \"avacado\");\n}\nvoid main(){}\n\n",
        "answer": "\"avacado\""
    },
    {
        "id": 400,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpty7hn9vd.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x5622b45f840d]\n??:? void tmpty7hn9vd.__unittest_L35_C1() [0x5622b45ed8d6]\n??:? void tmpty7hn9vd.__modtest() [0x5622b45ef5dc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5622b460267a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5622b45f0c47]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5622b45fdee3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5622b45fdf75]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5622b45fde71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5622b45f0c19]\n??:? runModuleUnitTests [0x5622b46024af]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\nimport std.array;\nimport std.conv;\n\nstring f(string multi_string) \n{\n    auto splitString = multi_string.split();\n    string[] asciiStrings;\n\n    foreach (str; splitString)\n    {\n        bool isAscii = true;\n        foreach (ch; str)\n        {\n            if (ch < 0 || ch > 127)\n            {\n                isAscii = false;\n                break;\n            }\n        }\n        if (isAscii)\n        {\n            asciiStrings ~= str;\n        }\n    }\n\n    return asciiStrings.join(\", \");\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"I am hungry! eat food.\") == \"I am hungry, eat food.\");\n}\nvoid main(){}\n\n",
        "answer": "\"I am hungry, eat food.\""
    },
    {
        "id": 401,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text, string suffix) \n{\n    if (suffix.length > 0 && text[$-suffix.length..$-1] == suffix) {\n        return text[0..$-suffix.length];\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"mathematics\", \"example\") == \"mathematics\");\n}\nvoid main(){}\n\n",
        "answer": "\"mathematics\""
    },
    {
        "id": 402,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpd38757ui.d(28): Error: unterminated string constant starting at /tmp/tmpd38757ui.d(28)\n/tmp/tmpd38757ui.d(34): Error: found `End of File` when expecting `)`\n/tmp/tmpd38757ui.d(34): Error: found `End of File` when expecting `;` following expression\n/tmp/tmpd38757ui.d(28):        expression: `assert(!result.isNull && (result.get == \"\"))`\n/tmp/tmpd38757ui.d(34): Error: matching `}` expected following compound statement, not `End of File`\n/tmp/tmpd38757ui.d(26):        unmatched `{`\n/tmp/tmpd38757ui.d(34): Error: matching `}` expected following compound statement, not `End of File`\n/tmp/tmpd38757ui.d(23):        unmatched `{`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd38757ui.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.conv;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nNullable!(long[long]) f(long n, string[] l) {\n    long[long] archive;\n    for (long i = 0; i < n; ++i) {\n        archive.clear();\n        foreach (x; l) {\n            long key = to!long(x) + 10;\n            long value = to!long(x) * 10;\n            archive[key] = value;\n        }\n    }\n    return archive.length > 0 ? archive.nullable : Nullable!(long[long]).init;\n}\n\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate(0L, [\"aaa\", \"bbb\"]);\n        assert(!result.isNull && result.getn}\n\n}\nvoid main(){}\n\n",
        "answer
    },
    {
        "id": 403,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp4h_ycms3.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x55ae1fc3e519]\n??:? void tmp4h_ycms3.__unittest_L21_C1() [0x55ae1fc3c830]\n??:? void tmp4h_ycms3.__modtest() [0x55ae1fc3ccb8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55ae1fc4ab36]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55ae1fc3e1a7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55ae1fc3ff93]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55ae1fc40025]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55ae1fc3ff21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55ae1fc3e179]\n??:? runModuleUnitTests [0x55ae1fc4a96b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.string;\n\nlong f(string full, string part) \n{\n    long length = part.length;\n    long index = full.indexOf(part);\n    long count = 0;\n    while (index >= 0)\n    {\n        full = full[index + length .. $];\n        index = full.indexOf(part);\n        count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"hrsiajiajieihruejfhbrisvlmmy\", \"hr\") == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 404,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpapb0_ibq.d(18): Error: incompatible types for `(f([\"l\", \"f\", \"h\", \"g\", \"s\", \"b\"])) == (\"hello\")`: `long` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpapb0_ibq.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nlong f(string[] no)\n{\n    bool[string] d;\n    foreach (key; no)\n        d[key] = false;\n    return d.keys.length;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"l\", \"f\", \"h\", \"g\", \"s\", \"b\"]) == \"hello\");\n}\nvoid main(){}\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 405,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmppug8o09y.d(19): Error: using the result of a comma expression is not allowed\n/tmp/tmppug8o09y.d(19): Error: incompatible types for `(f([6L, 3L, 4L, 1L, 2L, 3L, 5L])) == (5L , 12L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppug8o09y.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] xs) \n{\n    long new_x = xs[0] - 1;\n    xs = xs[1 .. $];\n    while (new_x <= xs[0]) {\n        xs = xs[1 .. $];\n        new_x--;\n    }\n    xs = [new_x] ~ xs;\n    return xs;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([6L, 3L, 4L, 1L, 2L, 3L, 5L]) == (5L, 12L));\n}\nvoid main(){}\n\n",
        "answer": "(5L, 12L)"
    },
    {
        "id": 406,
        "res": 0
    },
    {
        "id": 407,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpb7t9c6vw.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x55a8a637f951]\n??:? void tmpb7t9c6vw.__unittest_L12_C1() [0x55a8a637f840]\n??:? void tmpb7t9c6vw.__modtest() [0x55a8a637f8bc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55a8a6384c5e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55a8a6382c4f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55a8a638913b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55a8a638960d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55a8a63890c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55a8a6382c21]\n??:? runModuleUnitTests [0x55a8a6384a93]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nlong f(long[] s) \n{\n    while (s.length > 1) {\n        s.length = 0;\n        s ~= s.length;\n    }\n    return s[$-1];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([6L, 1L, 2L, 3L]) == 6);\n}\nvoid main(){}\n\n",
        "answer": "6"
    },
    {
        "id": 408,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp1k3txftb.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x55f008af7a51]\n??:? void tmp1k3txftb.__unittest_L11_C1() [0x55f008af781c]\n??:? void tmp1k3txftb.__modtest() [0x55f008af79bc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55f008afc316]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55f008afa307]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55f008b00e4b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55f008b0131d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55f008b00dd9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55f008afa2d9]\n??:? runModuleUnitTests [0x55f008afc14b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nlong[] f(long[] m) \n{\n    m.reverse();\n    return m;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([-4L, 6L, 0L, 4L, -7L, 2L, -1L]) == [-7, -1, 2, 4, 6, 0, -4]);\n}\nvoid main(){}\n\n",
        "answer": "[-7, -1, 2, 4, 6, 0, -4]"
    },
    {
        "id": 409,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp0c04rebs.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x56197d28f019]\n??:? void tmp0c04rebs.__unittest_L18_C1() [0x56197d28d8e5]\n??:? void tmp0c04rebs.__modtest() [0x56197d28dad4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56197d29cb1a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56197d28eca7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56197d291bd7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56197d291c69]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56197d291b65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56197d28ec79]\n??:? runModuleUnitTests [0x56197d29c94f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text, string prefix) {\n    if (!text.empty) {\n        if (text.startsWith(prefix)) {\n            text = text[prefix.length .. $];\n        }\n        if (!text.empty) {\n            text = text[0 .. $-1] ~ text[$-1 .. $].toUpper();\n        }\n    }\n    return text;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"querist\", \"u\") == \"QuestiS\");\n}\nvoid main(){}\n\n",
        "answer": "\"QuestiS\""
    },
    {
        "id": 410,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp18evti3k.d(22): Error: using the result of a comma expression is not allowed\n/tmp/tmp18evti3k.d(22): Error: using the result of a comma expression is not allowed\n/tmp/tmp18evti3k.d(22): Error: using the result of a comma expression is not allowed\n/tmp/tmp18evti3k.d(22): Error: using the result of a comma expression is not allowed\n/tmp/tmp18evti3k.d(22): Error: using the result of a comma expression is not allowed\n/tmp/tmp18evti3k.d(22): Error: incompatible types for `(f([1L, 3L, -1L, 1L, -2L, 6L])) == (1L , -1L , 2L , -2L , 3L , 6L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp18evti3k.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.range;\nimport std.array;\n\nlong[] f(long[] nums)\n{\n    long a = 0;\n    foreach (i; 0 .. nums.length)\n    {\n        nums = nums[0 .. i] ~ nums[a] ~ nums[i .. nums.length];\n        a += 1;\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 3L, -1L, 1L, -2L, 6L]) == (1L, -1L, 2L, -2L, 3L, 6L));\n}\nvoid main(){}\n\n",
        "answer": "(1L, -1L, 2L, -2L, 3L, 6L)"
    },
    {
        "id": 411,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nbool f(string text, string pref) \n{\n    if (pref[0] == '[' && pref[pref.length - 1] == ']') {\n        return text.startsWith(pref[1 .. $ - 1]);\n    } else {\n        return text.startsWith(pref);\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Hello World\", \"W\") == false);\n}\nvoid main(){}\n\n",
        "answer": "false"
    },
    {
        "id": 412,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp3a1ixjdk.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x55a848abe905]\n??:? void tmp3a1ixjdk.__unittest_L16_C1() [0x55a848ab67fe]\n??:? void tmp3a1ixjdk.__modtest() [0x55a848ab706c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55a848ac6b4e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55a848ac3e5b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55a848acca17]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55a848accee9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55a848acc9a5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55a848ac3e2d]\n??:? runModuleUnitTests [0x55a848ac6983]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.range;\nimport std.algorithm;\nimport std.array;\n\nlong f(long start, long end, long interval) \n{\n    auto steps = iota(start, end +  interval, interval).array;\n    if (steps.canFind(1))\n        steps[steps.length - 1] = end + 1;\n    return steps.length;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(3L, 10L, 1L) == 10L);\n}\nvoid main(){}\n\n",
        "answer": "10L"
    },
    {
        "id": 413,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpqcnwjplm.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x55d239503ba9]\n??:? void tmpqcnwjplm.__unittest_L11_C1() [0x55d23950384a]\n??:? void tmpqcnwjplm.__modtest() [0x55d239503b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55d239509872]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55d2395075eb]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55d23950e657]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55d23950eb29]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55d23950e5e5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55d2395075bd]\n??:? runModuleUnitTests [0x55d2395096a7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int function(char[][])*).runAll() [0x55d239504194]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int function(char[][])*).tryExec(scope void delegate()) [0x55d239504121]\n??:? _d_run_main2 [0x55d23950408a]\n??:? _d_run_main [0x55d239503e73]\n??:? main [0x55d239503863]\n??:? [0x7fabc39b5d8f]\n??:? __libc_start_main [0x7fabc39b5e3f]\n??:? _start [0x55d239503654]\n1/1 modules FAILED unittests\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.range;\n\nstring f(string s) \n{\n    return s[3..$] ~ s[2] ~ s[5..$];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"jbucwc\") == \"jbucwc\");\n}\nvoid main(){}\n\n",
        "answer": "\"jbucwc\""
    },
    {
        "id": 414,
        "res": 0
    },
    {
        "id": 415,
        "res": 0
    },
    {
        "id": 416,
        "res": 0
    },
    {
        "id": 417,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpu0y6aqot.d(17): Error: using the result of a comma expression is not allowed\n/tmp/tmpu0y6aqot.d(17): Error: using the result of a comma expression is not allowed\n/tmp/tmpu0y6aqot.d(17): Error: using the result of a comma expression is not allowed\n/tmp/tmpu0y6aqot.d(17): Error: incompatible types for `(f([7L, 8L, 2L, 8L])) == (7L , 8L , 2L , 8L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu0y6aqot.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] lst) \n{\n    lst = lst.dup.reverse;\n    lst = lst[0 .. $-1];\n    return lst.dup.reverse;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([7L, 8L, 2L, 8L]) == (7L, 8L, 2L, 8L));\n}\nvoid main(){}\n\n",
        "answer": "(7L, 8L, 2L, 8L)"
    },
    {
        "id": 418,
        "res": 0
    },
    {
        "id": 419,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpxvmervgs.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x56018338b4d5]\n??:? void tmpxvmervgs.__unittest_L13_C1() [0x560183380835]\n??:? void tmpxvmervgs.__modtest() [0x560183382474]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5601833939a6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x560183383df7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56018338ec8b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56018338ed1d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56018338ec19]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x560183383dc9]\n??:? runModuleUnitTests [0x5601833937db]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text, string value) \n{\n    if (text.indexOf(value) == -1)\n        return \"\";\n    auto result = text.lastIndexOf(value);\n    return text[0 .. result];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"mmfbifen\", \"i\") == \"m\");\n}\nvoid main(){}\n\n",
        "answer": "\"m\""
    },
    {
        "id": 420,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp0on14jnm.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x564916707c95]\n??:? void tmp0on14jnm.__unittest_L19_C1() [0x5649167077e8]\n??:? void tmp0on14jnm.__modtest() [0x56491670780c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56491670d39a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56491670b5bf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5649167114eb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5649167118c5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x564916711479]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56491670b591]\n??:? runModuleUnitTests [0x56491670d1cf]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nbool f(string text) \n{\n    try {\n        foreach (char c; text) {\n            if (!isAlpha(c)) {\n                return false;\n            }\n        }\n        return true;\n    } catch (Throwable) {\n        return false;\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"x\") == false);\n}\nvoid main(){}\n\n",
        "answer": "false"
    },
    {
        "id": 421,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpmtnv123f.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x55b7c9953939]\n??:? void tmpmtnv123f.__unittest_L12_C1() [0x55b7c99537d8]\n??:? void tmpmtnv123f.__modtest() [0x55b7c99538a4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55b7c9956eca]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55b7c995d11b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55b7c99679ff]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55b7c995b5b1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55b7c996798d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55b7c995d0ed]\n??:? runModuleUnitTests [0x55b7c9956cff]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string s, long n) \n{\n    if (s.length < n) {\n        return s;\n    } else {\n        return s[n..$];\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"try.\", 5L) == \"try\");\n}\nvoid main(){}\n\n",
        "answer": "\"try\""
    },
    {
        "id": 422,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpk3y7anb8.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x56221027655d]\n??:? void tmpk3y7anb8.__unittest_L17_C1() [0x562210275831]\n??:? void tmpk3y7anb8.__modtest() [0x562210276378]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56221027bb32]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x562210279b23]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x562210280d1b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5622102811ed]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x562210280ca9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x562210279af5]\n??:? runModuleUnitTests [0x56221027b967]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm: reverse;\nimport std.range: iota;\n\nlong[] f(long[] array) \n{\n    auto new_array = array.dup;\n    new_array.reverse();\n    foreach (i, ref x; new_array)\n        x = x*x;\n    return new_array;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, 1L]) == [1, 2, 1]);\n}\nvoid main(){}\n\n",
        "answer": "[1, 2, 1]"
    },
    {
        "id": 423,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp6t6kuiko.d(23): Error: incompatible types for `(f([4L, 2L, 5L, 1L, 3L, 2L, 6L])) == (6L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6t6kuiko.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nlong[] f(long[] selfie) \n{\n    long lo = selfie.length;\n    for(long i = lo - 1; i >= 0; i--)\n    {\n        if(selfie[0] == selfie[i])\n        {\n            selfie.popBack();\n        }\n    }\n    return selfie;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([4L, 2L, 5L, 1L, 3L, 2L, 6L]) == 6L);\n}\nvoid main(){}\n\n",
        "answer": "6L"
    },
    {
        "id": 424,
        "res": 0
    },
    {
        "id": 425,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpl7nscb27.d(20): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl7nscb27.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.array;\n\nstring[] f(string a) \n{\n    a = a.replace(\"/\", \":\");\n    auto z = a.split(\":\");\n    return [z.length > 0 ? z[0] : \"\", \n            z.length > 1 ? \":\" : \"\", \n            z.length > 2 ? z[1..$].join(\":\") : z.length > 1 ? z[1] : \"\"];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"/CL44     \") == \"CL44\");\n}\nvoid main(){}\n\n",
        "answer": "\"CL44\""
    },
    {
        "id": 426,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpx6su1tpz.d(16): Error: incompatible types for `(f([1L, 2L, 3L], 8L, 5L)) == (8L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx6su1tpz.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nlong[] f(long[] numbers, long elem, long idx) \n{\n    numbers ~= elem;\n    return numbers;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, 3L], 8L, 5L) == 8L);\n}\nvoid main(){}\n\n",
        "answer": "8L"
    },
    {
        "id": 427,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpe3oa131k.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x55836a348205]\n??:? void tmpe3oa131k.__unittest_L21_C1() [0x55836a3458e6]\n??:? void tmpe3oa131k.__modtest() [0x55836a346b70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55836a355872]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55836a347d47]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55836a34a8a7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55836a34a939]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55836a34a835]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55836a347d19]\n??:? runModuleUnitTests [0x55836a3556a7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int function(char[][])*).runAll() [0x55836a348f1c]\n??:? void rt.dmain2._d_run_main2(char",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string s) \n{\n    int count = cast(int)s.length - 1;\n    string reverse_s = s.dup.reverse().idup;;\n    while (count > 0 && reverse_s[0 .. count][count/2*2 .. $].find(\"sea\").length == 0)\n    {\n        count--;\n        reverse_s = reverse_s[0 .. count];\n    }\n    return reverse_s[count .. $];\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"s a a b s d s a a s a a\") == \"ssadara\");\n}\nvoid main(){}\n\n",
        "answer": "\"ssadara\""
    },
    {
        "id": 428,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpnlbjs6le.d(17): Error: unterminated string constant starting at /tmp/tmpnlbjs6le.d(17)\n/tmp/tmpnlbjs6le.d(21): Error: found `End of File` when expecting `)`\n/tmp/tmpnlbjs6le.d(21): Error: found `End of File` when expecting `;` following expression\n/tmp/tmpnlbjs6le.d(17):        expression: `assert(candidate([]) == \"\")`\n/tmp/tmpnlbjs6le.d(21): Error: matching `}` expected following compound statement, not `End of File`\n/tmp/tmpnlbjs6le.d(14):        unmatched `{`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnlbjs6le.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] nums) \n{\n    foreach(i; 0 .. nums.length) {\n        if (i % 2 == 0) {\n            nums ~= nums[i] * nums[i + 1];\n        }\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([]) == \"0L);\n}\nvoid main(){}\n\n",
        "answer": "\"0L"
    },
    {
        "id": 429,
        "res": 0
    },
    {
        "id": 430,
        "res": 0
    },
    {
        "id": 431,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpi633v6tw.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x556b2a4f0325]\n??:? void tmpi633v6tw.__unittest_L18_C1() [0x556b2a4ef831]\n??:? void tmpi633v6tw.__modtest() [0x556b2a4f0140]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x556b2a4f45b6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x556b2a4f2803]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x556b2a4f9877]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x556b2a4f9d49]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x556b2a4f9805]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x556b2a4f27d5]\n??:? runModuleUnitTests [0x556b2a4f43eb]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.range;\nimport std.array;\n\nlong[] f(long n, long m) \n{\n    long[] arr = new long[](n);\n    foreach (i; 0 .. n) {\n        arr[i] = i + 1;\n    }\n    foreach (_; 0 .. m) {\n        arr = [];\n    }\n    return arr;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(1L, 3L) == \"1 2 3\");\n}\nvoid main(){}\n\n",
        "answer": "\"1 2 3\""
    },
    {
        "id": 432,
        "res": 0
    },
    {
        "id": 433,
        "res": 0
    },
    {
        "id": 434,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpyiukn3n2.d(23): Error: found `:` when expecting `)`\n/tmp/tmpyiukn3n2.d(23): Error: found `Nuk` when expecting `;` following expression\n/tmp/tmpyiukn3n2.d(23):        expression: `assert(candidate(\"eeuseeeoehasa\") == Exception)`\n/tmp/tmpyiukn3n2.d(23): Error: found `)` instead of statement\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyiukn3n2.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.conv;\nimport std.exception;\n\nlong f(string s) \n{\n    long pos = s.length;\n    while (pos != 0) {\n        pos--;\n        if (s[pos] == 'e') {\n            return pos;\n        }\n    }\n    throw new Exception(\"Nuk\");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"eeuseeeoehasa\") == Exception: Nuk);\n}\nvoid main(){}\n\n",
        "answer": "Exception: Nuk"
    },
    {
        "id": 435,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmptv_i30hi.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x5607b5f61e01]\n??:? void tmptv_i30hi.__unittest_L26_C1() [0x5607b5f44885]\n??:? void tmptv_i30hi.__modtest() [0x5607b5f57818]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5607b5f6b04e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5607b5f59383]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5607b5f6718f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5607b5f67221]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5607b5f6711d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5607b5f59355]\n??:? runModuleUnitTests [0x5607b5f6ae83]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.algorithm;\nimport std.conv;\nimport std.string;\n\nstring f(string[] numbers, long num, long val) {\n    if (num <= 1) {\n        return numbers.join(\" \");\n    }\n\n    while (numbers.length < num) {\n        numbers.insertInPlace(numbers.length / 2, to!string(val));\n    }\n\n    long iterations = numbers.length / (num - 1) - 4;\n    for (long i = 0; i < iterations; i++) {\n        numbers.insertInPlace(numbers.length / 2, to!string(val));\n    }\n\n    return numbers.join(\" \");\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([], 0L, 1L) == \"1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}\n\n",
        "answer": "\"1 2 3 4 5 6 7 8 9 10\""
    },
    {
        "id": 436,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp2hitpjij.d(16): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2hitpjij.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nstring[] f(string s, long[] characters) \n{\n    string[] result;\n    foreach (i; characters) {\n        result ~= s[i .. i+1];\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"s7 6s 1ss\", [1L, 3L, 6L, 1L, 2L]) == \"ssss\");\n}\nvoid main(){}\n\n",
        "answer": "\"ssss\""
    },
    {
        "id": 437,
        "res": 0
    },
    {
        "id": 438,
        "res": 0
    },
    {
        "id": 439,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpb40pvz0c.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x55eccfc1cf15]\n??:? void tmpb40pvz0c.__unittest_L20_C1() [0x55eccfc1189e]\n??:? void tmpb40pvz0c.__modtest() [0x55eccfc13dcc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55eccfc26d12]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55eccfc1574f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55eccfc22933]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55eccfc229c5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55eccfc228c1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55eccfc15721]\n??:? runModuleUnitTests [0x55eccfc26b47]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nstring f(string value) \n{\n    auto parts = value.split(\" \");\n    string[] selectedParts;\n    foreach (i, part; parts)\n    {\n        if (i % 2 == 0)\n        {\n            selectedParts ~= part;\n        }\n    }\n    return selectedParts.join(\" \");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"coscifysu\") == \"cos cif ysu\");\n}\nvoid main(){}\n\n",
        "answer": "\"cos cif ysu\""
    },
    {
        "id": 440,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpi99drcue.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x556dd6ab1d59]\n??:? void tmpi99drcue.__unittest_L17_C1() [0x556dd6ab07ee]\n??:? void tmpi99drcue.__modtest() [0x556dd6ab0814]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x556dd6abe06a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x556dd6ab19e7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x556dd6ab373b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x556dd6ab37cd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x556dd6ab36c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x556dd6ab19b9]\n??:? runModuleUnitTests [0x556dd6abde9f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.ascii;\n\nstring f(string text) \n{\n    foreach (i, c; text)\n    {\n        if (!c.isDigit)\n            return \"no\";\n    }\n    return \"yes\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"abc\") == \"yes\");\n}\nvoid main(){}\n\n",
        "answer": "\"yes\""
    },
    {
        "id": 441,
        "res": 0
    },
    {
        "id": 442,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] lst) \n{\n    long[] res;\n    foreach (num; lst) {\n        if (num % 2 == 0) {\n            res ~= num;\n        }\n    }\n    \n    return lst.dup;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == [1, 2, 3, 4]);\n}\nvoid main(){}\n\n",
        "answer": "[1, 2, 3, 4]"
    },
    {
        "id": 443,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text) \n{\n    text = text.strip();\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"lorem ipsum\") == \"lorem ipsum\");\n}\nvoid main(){}\n\n",
        "answer": "\"lorem ipsum\""
    },
    {
        "id": 444,
        "res": 0
    },
    {
        "id": 445,
        "res": 0
    },
    {
        "id": 446,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpugr01nyf.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x55df8525c9f1]\n??:? void tmpugr01nyf.__unittest_L16_C1() [0x55df8525c7ba]\n??:? void tmpugr01nyf.__modtest() [0x55df8525c95c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55df8525ffaa]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55df85266247]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55df85270c83]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55df852646dd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55df85270c11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55df85266219]\n??:? runModuleUnitTests [0x55df8525fddf]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nlong[] f(long[] array) \n{\n    auto l = array.length;\n    if (l % 2 == 0) {\n        array.length = 0;\n    } else {\n        array.reverse();\n    }\n    return array;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([]) == \"olleh\");\n}\nvoid main(){}\n\n",
        "answer": "\"olleh\""
    },
    {
        "id": 447,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpw3vs0zot.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x55c32a113575]\n??:? void tmpw3vs0zot.__unittest_L24_C1() [0x55c32a1099a4]\n??:? void tmpw3vs0zot.__modtest() [0x55c32a10a8bc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55c32a11be3e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55c32a10bf27]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55c32a1175ab]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55c32a11763d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55c32a117539]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55c32a10bef9]\n??:? runModuleUnitTests [0x55c32a11bc73]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.algorithm;\nimport std.array;\nimport std.string;\nimport std.typecons;\n\nstring f(string text, long tab_size) {\n    string res = \"\";\n    string spaces = \"\";\n    for (int i = 0; i < tab_size - 1; ++i) {\n        spaces ~= ' ';\n    }\n    text = text.replace(\"\\t\", spaces);\n    foreach (i; 0 .. text.length) {\n        if (text[i] == ' ') {\n            res ~= '|';\n        } else {\n            res ~= text[i];\n        }\n    }\n    return res;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"\ta\", 3L) == \"a\");\n}\nvoid main(){}\n\n",
        "answer": "\"a\""
    },
    {
        "id": 448,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp2n2_a5j3.d(16): Error: incompatible types for `(f(\"uMeGndkGh\", \"kG\")) == (\"g\")`: `bool` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2n2_a5j3.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nbool f(string text, string suffix) \n{\n    if (suffix == \"\")\n    {\n        suffix = null;\n    }\n    return text[$-suffix.length .. $] == suffix;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"uMeGndkGh\", \"kG\") == \"g\");\n}\nvoid main(){}\n\n",
        "answer": "\"g\""
    },
    {
        "id": 449,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp_tohlxu7.d(20): Error: incompatible types for `(f(\"1\")) == (\"1\")`: `bool` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_tohlxu7.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nbool f(string x) \n{\n    auto n = x.length;\n    auto i = 0;\n    while (i < n && isDigit(x[i]))\n    {\n        i++;\n    }\n    return i == n;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"1\") == \"1\");\n}\nvoid main(){}\n\n",
        "answer": "\"1\""
    },
    {
        "id": 450,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpo9dsvnju.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x55a30ae6c935]\n??:? void tmpo9dsvnju.__unittest_L20_C1() [0x55a30ae61872]\n??:? void tmpo9dsvnju.__modtest() [0x55a30ae63b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55a30ae76ca2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55a30ae6516f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55a30ae7240b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55a30ae7249d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55a30ae72399]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55a30ae65141]\n??:? runModuleUnitTests [0x55a30ae76ad7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.conv;\n\nstring f(string strs) \n{\n    auto strsArr = strs.split();\n\n    for (size_t i = 1; i < strsArr.length; i += 2) {\n        strsArr[i] = strsArr[i].dup.reverse.idup;\n    }\n\n    return strsArr.join(\" \");\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"K zBK\") == \"zrebok cnaeb\");\n}\nvoid main(){}\n\n",
        "answer": "\"zrebok cnaeb\""
    },
    {
        "id": 451,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpz89rnuf9.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x55a573705c95]\n??:? void tmpz89rnuf9.__unittest_L17_C1() [0x55a5737038e9]\n??:? void tmpz89rnuf9.__modtest() [0x55a573704604]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55a5737144be]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55a5737057d7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55a5737095f3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55a573709685]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55a573709581]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55a5737057a9]\n??:? runModuleUnitTests [0x55a5737142f3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string text, string ch) {\n    char[] textArray = text.dup;\n    foreach (i, item; textArray) {\n        if (item == ch[0]) {\n            textArray = textArray[0 .. i] ~ textArray[i + 1 .. $];\n            return textArray.idup;\n        }\n    }\n    return text;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"pn\", \"p\") == \"p\");\n}\nvoid main(){}\n\n",
        "answer": "\"p\""
    },
    {
        "id": 452,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpqweovajx.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x563de7809871]\n??:? void tmpqweovajx.__unittest_L16_C1() [0x563de78097b9]\n??:? void tmpqweovajx.__modtest() [0x563de78097dc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x563de780cc82]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x563de7812f1f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x563de781d9a3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x563de78113b5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x563de781d931]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x563de7812ef1]\n??:? runModuleUnitTests [0x563de780cab7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nlong f(string text) \n{\n    long counter = 0;\n    foreach (char c; text) {\n        if (isAlpha(c)) {\n            counter++;\n        }\n    }\n    return counter;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"l000*\") == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 453,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmplnblewfz.d(12): Error: incompatible types for `(f(\"wrsch)xjmb8\", \"c\")) == (\"wrsch\")`: `bool` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplnblewfz.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nbool f(string string, string c) \n{\n    return string[$-c.length .. $] == c;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"wrsch)xjmb8\", \"c\") == \"wrsch\");\n}\nvoid main(){}\n\n",
        "answer": "\"wrsch\""
    },
    {
        "id": 454,
        "res": 0
    },
    {
        "id": 455,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpmceeq21v.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x558e330bdd69]\n??:? void tmpmceeq21v.__unittest_L20_C1() [0x558e330bc7fa]\n??:? void tmpmceeq21v.__modtest() [0x558e330bc820]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x558e330ca2d2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x558e330bd9f7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x558e330bf74b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x558e330bf7dd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x558e330bf6d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x558e330bd9c9]\n??:? runModuleUnitTests [0x558e330ca107]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.ascii;\n\nstring f(string text) \n{\n    size_t uppers = 0;\n    foreach (c; text)\n    {\n        if (isUpper(c))\n        {\n            uppers++;\n        }\n    }\n    \n    return uppers >= 10 ? text.toUpper : text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"?XyZ\") == \"XyZ\");\n}\nvoid main(){}\n\n",
        "answer": "\"XyZ\""
    },
    {
        "id": 456,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string s, long tab) \n{\n    string tabString = \"\";\n    for (int i = 0; i < tab; i++) {\n        tabString ~= \" \";\n    }\n    return s.replace(\"\\t\", tabString);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Join us in Hungary\", 4L) == \"Join us in Hungary\");\n}\nvoid main(){}\n\n",
        "answer": "\"Join us in Hungary\""
    },
    {
        "id": 457,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpe76fgtd4.d(23): Error: using the result of a comma expression is not allowed\n/tmp/tmpe76fgtd4.d(23): Error: using the result of a comma expression is not allowed\n/tmp/tmpe76fgtd4.d(23): Error: using the result of a comma expression is not allowed\n/tmp/tmpe76fgtd4.d(23): Error: using the result of a comma expression is not allowed\n/tmp/tmpe76fgtd4.d(23): Error: incompatible types for `(f([3L, 1L, 7L, 5L, 6L])) == (3L , 1L , 7L , 5L , 6L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe76fgtd4.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.range;\n\nlong[] f(long[] nums) \n{\n    auto count = iota(0, nums.length).array;\n    foreach (i; 0 .. nums.length)\n    {\n        nums = nums[1 .. $];\n        if (!count.empty)\n        {\n            count = count[1 .. $];\n        }\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([3L, 1L, 7L, 5L, 6L]) == (3L, 1L, 7L, 5L, 6L));\n}\nvoid main(){}\n\n",
        "answer": "(3L, 1L, 7L, 5L, 6L)"
    },
    {
        "id": 458,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp9_zk4z4i.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x55d091929e89]\n??:? void tmp9_zk4z4i.__unittest_L17_C1() [0x55d0919288c8]\n??:? void tmp9_zk4z4i.__modtest() [0x55d091928944]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55d0919370ea]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55d091929b17]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55d09192c2fb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55d09192c38d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55d09192c289]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55d091929ae9]\n??:? runModuleUnitTests [0x55d091936f1f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.array;\n\nstring f(string text, string search_chars, string replace_chars) \n{\n    auto trans_table = std.string.makeTrans(search_chars, replace_chars);\n    string result = \"\";\n    foreach (char c; text)\n    {\n        result ~= trans_table[c];\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"mmm34mIm\", \"mm3\", \",po\") == \"Im\");\n}\nvoid main(){}\n\n",
        "answer": "\"Im\""
    },
    {
        "id": 459,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpora9dqva.d(22): Error: incompatible types for `(result.get()) == (\"bvzjmcafae0\")`: `string[string]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpora9dqva.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nNullable!(string[string]) f(string[] arr, Nullable!(string[string]) d)\n{\n    if (d.isNull) {\n        d = new string[string];\n    }\n    for (int i = 1; i < arr.length; i += 2) {\n        d.get[arr[i]] = arr[i-1];\n    }\n    return d;\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([\"b\", \"vzjmc\", \"f\", \"ae\", \"0\"], Nullable!(string[string]).init);\n        assert(!result.isNull && result.get == \"bvzjmcafae0\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"bvzjmcafae0\""
    },
    {
        "id": 460,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpbsc78k85.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x55de08900be5]\n??:? void tmpbsc78k85.__unittest_L18_C1() [0x55de088fe7f0]\n??:? void tmpbsc78k85.__modtest() [0x55de088ff550]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55de0890f392]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55de08900727]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55de0890457b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55de0890460d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55de08904509]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55de089006f9]\n??:? runModuleUnitTests [0x55de0890f1c7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nstring f(string text, long amount) \n{\n    auto length = text.length;\n    string pre_text = \"|\";\n    if (amount >= length) {\n        long extra_space = amount - length;\n        pre_text ~= \" \".replicate(extra_space / 2);\n        return pre_text ~ text ~ pre_text;\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"GENERAL NAGOOR\", 5L) == \"general nago\");\n}\nvoid main(){}\n\n",
        "answer": "\"general nago\""
    },
    {
        "id": 461,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp6wdeqs4e.d(14): Error: undefined identifier `True`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6wdeqs4e.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nbool f(string text, string search) \n{\n    return search.startsWith(text);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"123\", \"123eenhas0\") == True);\n}\nvoid main(){}\n\n",
        "answer": "True"
    },
    {
        "id": 462,
        "res": 0
    },
    {
        "id": 463,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmphii7jeur.d(25): Error: incompatible types for `(result.get()) == (\"banana\")`: `long[long]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphii7jeur.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nNullable!(long[long]) f(Nullable!(long[long]) dict) \n{\n    if (!dict.isNull) {\n        long[long] result = dict.get();\n        foreach (k, v; result) {\n            if (v in result) {\n                result.remove(k);\n            }\n        }\n        return Nullable!(long[long])(result);\n    }\n    return Nullable!(long[long]).init;\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([-1L: -1L, 5L: 5L, 3L: 6L, -4L: -4L].nullable);\n        assert(!result.isNull && result.get == \"banana\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"banana\""
    },
    {
        "id": 464,
        "res": 0
    },
    {
        "id": 465,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpaz04wu66.d(33): Error: found `std` when expecting `(` following `import`\n/tmp/tmpaz04wu66.d(33): Error: found `;` when expecting `)`\n/tmp/tmpaz04wu66.d(34): Error: found `import` when expecting `)`\n/tmp/tmpaz04wu66.d(34): Error: found `std` when expecting `;` following expression\n/tmp/tmpaz04wu66.d(33):        expression: `assert(!result.isNull && (result.get == import(.math)))`\n/tmp/tmpaz04wu66.d(55): Error: found `unittest` instead of statement\n/tmp/tmpaz04wu66.d(59): Error: expression expected, not `?`\n/tmp/tmpaz04wu66.d(59): Error: expression expected, not `?`\n/tmp/tmpaz04wu66.d(59): Error: expression expected, not `)`\n/tmp/tmpaz04wu66.d(59): Error: found `;` when expecting `:`\n/tmp/tmpaz04wu66.d(60): Error: expression expected, not `}`\n/tmp/tmpaz04wu66.d(61): Error: found `void` when expecting `:`\n/tmp/tmpaz04wu66.d(61): Error: found `{` when expecting `)`\n/tmp/tmpaz04wu66.d(61): Error: found `}` when expecting `;` following expression\n/tmp/tmpaz04wu66.d(59):        expression: `assert(candidate(",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nNullable!(string[string]) f(string[] seq, string value) \n{\n    string[string] roles;\n    foreach (s; seq)\n    {\n        roles[s] = \"north\";\n    }\n\n    if (value.length != 0)\n    {\n        auto splitValues = value.split(\", \");\n        foreach (val; splitValues)\n        {\n            roles[val.strip()] = \"north\";\n        }\n    }\n    return roles.nullable;\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([\"wise king\", \"young king\"], \"\");\n        assert(!result.isNull && result.get == import std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nTuple!(long, long) f(Nullable!(long[string]) d) \n{\n    long x = 0, y = 0;\n    if (!d.isNull) {\n        auto dict = d.get();\n        foreach (key, value; dict) {\n            if (key == \"x\") {\n                x = value;\n            }\n            if (key == \"y\") {\n                y = value;\n            }\n        }\n    }\n    return tuple(x, y);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"x\": 5L, \"y\": 12L].nullable) == ????);\n}\nvoid main(){}\n\nNote: The above code is not tested and may contain errors or incomplete implementation. Please test it and provide feedback.);\n}\n\n}\nvoid main(){}\n\n",
        "answer": "import std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nTuple!(long, long) f(Nullable!(long[string]) d) \n{\n    long x = 0, y = 0;\n    if (!d.isNull) {\n        auto dict = d.get();\n        foreach (key, value; dict) {\n            if (key == \"x\") {\n                x = value;\n            }\n            if (key == \"y\") {\n                y = value;\n            }\n        }\n    }\n    return tuple(x, y);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"x\": 5L, \"y\": 12L].nullable) == ????);\n}\nvoid main(){}\n\nNote: The above code is not tested and may contain errors or incomplete implementation. Please test it and provide feedback."
    },
    {
        "id": 466,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpv93i9b6v.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x564abb55e979]\n??:? void tmpv93i9b6v.__unittest_L16_C1() [0x564abb55e816]\n??:? void tmpv93i9b6v.__modtest() [0x564abb55e8e4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x564abb5620ee]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x564abb56833f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x564abb572bdb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x564abb5667d5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x564abb572b69]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x564abb568311]\n??:? runModuleUnitTests [0x564abb561f23]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nstring f(string text) \n{\n    size_t length = text.length;\n    size_t index = 0;\n    while (index < length && isWhite(text[index]))\n    {\n        index++;\n    }\n    return text[index .. index + 5];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"-----\t\n\tth\n-----\") == \"th\");\n}\nvoid main(){}\n\n",
        "answer": "\"th\""
    },
    {
        "id": 467,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp8kk5ov9v.d(24): Error: incompatible types for `(result.get()) == (\"0L\")`: `long[string]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8kk5ov9v.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nNullable!(long[string]) f(Nullable!(string[string]) nums) \n{\n    if (!nums.isNull) {\n        auto copy = nums.get();\n        auto newDict = new long[string];\n        foreach (key, value; copy) {\n            newDict[key] = value.length;\n        }\n        return Nullable!(long[string])(newDict);\n    }\n    return Nullable!(long[string]).init;\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate(Nullable!(string[string]).init);\n        assert(!result.isNull && result.get == \"0L\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"0L\""
    },
    {
        "id": 468,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nstring f(string a, string b, long n) \n{\n    string result = b;\n    string m = b;\n    foreach (_; 0 .. n) {\n        if (m != \"\") {\n            auto index = a.indexOf(m);\n            if (index != -1) {\n                a = a[0 .. index] ~ a[index + m.length .. $];\n                m = \"\";\n                result = m = b;\n            }\n        }\n    }\n    return a.split(b).join(result);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"unrndqafi\", \"c\", 2L) == \"unrndqafi\");\n}\nvoid main(){}\n\n",
        "answer": "\"unrndqafi\""
    },
    {
        "id": 469,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpwpsckzv9.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x55d294516ec5]\n??:? void tmpwpsckzv9.__unittest_L19_C1() [0x55d29450d8b9]\n??:? void tmpwpsckzv9.__modtest() [0x55d29450e208]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55d29451ecae]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55d29450f877]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55d29451a41b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55d29451a4ad]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55d29451a3a9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55d29450f849]\n??:? runModuleUnitTests [0x55d29451eae3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text, long position, string value) \n{\n    long length = text.length;\n    long index = position % length;\n    if (position < 0)\n    {\n        index = length / 2;\n    }\n    auto new_text = text.replace(index, index, value);\n    new_text = new_text[0 .. $-2] ~ new_text[$-1 .. $];\n    return new_text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"sduyai\", 1L, \"y\") == \"y\");\n}\nvoid main(){}\n\n",
        "answer": "\"y\""
    },
    {
        "id": 470,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpkla4ctnw.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x55f2caefb7f9]\n??:? void tmpkla4ctnw.__unittest_L22_C1() [0x55f2caefa92c]\n??:? void tmpkla4ctnw.__modtest() [0x55f2caefab3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55f2caf08972]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55f2caefb52b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55f2caefd97b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55f2caefda0d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55f2caefd909]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55f2caefb4fd]\n??:? runModuleUnitTests [0x55f2caf087a7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.algorithm;\n\nstring[] f(long number) \n{\n    enum transl = [\"A\", \"B\", \"C\", \"D\", \"E\"];\n    string[] result;\n\n    foreach (i, key; transl)\n    {\n        if ((i + 1) % number == 0)\n        {\n            result ~= key;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(2L) == [\"B\", \"C\", \"D\", \"E\", \"A\"]);\n}\nvoid main(){}\n\n",
        "answer": "[\"B\", \"C\", \"D\", \"E\", \"A\"]"
    },
    {
        "id": 471,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\n\nlong f(string val, string text) \n{\n    long[] indices;\n    foreach (index; 0 .. text.length)\n    {\n        if (text[index] == val[0]) // Compare single characters\n        {\n            indices ~= index;\n        }\n    }\n    \n    if (indices.length == 0) // Check if indices array is empty\n    {\n        return -1;\n    }\n    else\n    {\n        return indices[0];\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"o\", \"fnmart\") == -1);\n}\nvoid main(){}\n\n",
        "answer": "-1"
    },
    {
        "id": 472,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmphb9sju8g.d(27): Error: using the result of a comma expression is not allowed\n/tmp/tmphb9sju8g.d(27): Error: incompatible types for `(f(\"x--y-z-5-C\")) == (5L , 12L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphb9sju8g.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm.searching;\nimport std.algorithm.sorting;\nimport std.array;\nimport std.string;\n\nlong[] f(string text) \n{\n    long[char] counts;\n    auto txt = text.replace(\"-\", \"\").toLower();\n    foreach (c; txt)\n    {\n        if (c in counts)\n            counts[c] += 1;\n        else\n            counts[c] = 1;\n    }\n    return counts.values.sort().array;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"x--y-z-5-C\") == (5L, 12L));\n}\nvoid main(){}\n\n",
        "answer": "(5L, 12L)"
    },
    {
        "id": 473,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpcs34vd8d.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x560cb2607495]\n??:? void tmpcs34vd8d.__unittest_L23_C1() [0x560cb25fd8c5]\n??:? void tmpcs34vd8d.__modtest() [0x560cb25fe7dc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x560cb260fd5e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x560cb25ffe47]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x560cb260b4cb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x560cb260b55d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x560cb260b459]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x560cb25ffe19]\n??:? runModuleUnitTests [0x560cb260fb93]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.conv;\nimport std.algorithm;\nimport std.array;\n\nstring f(string text, string value) \n{\n    char[] indexes;\n    foreach (i, ch; text)\n    {\n        if (ch == value[0])\n        {\n            indexes ~= ch;\n        }\n    }\n    auto new_text = text.replace(value, \"\");\n    return new_text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"scedvtvotkwqfoqn\", \"o\") == \"scevtvotkwqfoqn\");\n}\nvoid main(){}\n\n",
        "answer": "\"scevtvotkwqfoqn\""
    },
    {
        "id": 474,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpu65jn96t.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x564caccc70bd]\n??:? void tmpu65jn96t.__unittest_L41_C1() [0x564caccbb99a]\n??:? void tmpu65jn96t.__modtest() [0x564caccbdf70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x564caccd0eba]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x564caccbf8f7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x564caccccadb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x564caccccb6d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x564cacccca69]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x564caccbf8c9]\n??:? runModuleUnitTests [0x564caccd0cef]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\n\nstring center(string s, long width)\n{\n    if (width <= s.length)\n        return s;\n\n    string result = \"\";\n    long padding = width - s.length;\n    long leftPadding = padding / 2;\n    long rightPadding = padding - leftPadding;\n\n    for (long i = 0; i < leftPadding; ++i)\n        result ~= \" \";\n\n    result ~= s;\n\n    for (long i = 0; i < rightPadding; ++i)\n        result ~= \" \";\n\n    return result;\n}\n\nstring f(string txt, long marker) \n{\n    string[] lines = txt.split(\"\\n\");\n    string[] a;\n    foreach (line; lines)\n    {\n        string centeredLine = center(line, marker);\n        a ~= centeredLine;\n    }\n    return a.join(\"\\n\");\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"#[)[]>[^e>\n 8\", -5L) == \"#[(]>[^e>8\");\n}\nvoid main(){}\n\n",
        "answer": "\"#[(]>[^e>8\""
    },
    {
        "id": 475,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nlong f(long[] array, long index) \n{\n    if (index < 0)\n    {\n        index = array.length + index;\n    }\n    return array[index];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L], 0L) == 1L);\n}\nvoid main(){}\n\n",
        "answer": "1L"
    },
    {
        "id": 476,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmplsld9wt3.d(19): Error: undefined identifier `True`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplsld9wt3.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\nimport std.array;\n\nbool f(string a, string split_on) \n{\n    auto t = a.split();\n    char[] aa = cast(char[])a;\n    return count(aa, split_on) > 0;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"booty boot-boot bootclass\", \"k\") == True);\n}\nvoid main(){}\n\n",
        "answer": "True"
    },
    {
        "id": 477,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpk63r5tiy.d(26): Error: none of the overloads of template `std.typecons.Tuple!(string, string).Tuple.opEquals` are callable using argument types `!()(string)`\n/usr/include/dmd/phobos/std/typecons.d(796):        Candidates are: `opEquals(R)(R rhs)`\n  with `R = string`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(803):                        `opEquals(R)(R rhs) const`\n  with `R = string`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(810):                        `opEquals(R...)(auto ref R rhs)`\n  with `R = (string)`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nTuple!(string, string) f(string text) {\n    auto parts = text.split(\"|\");\n    string topic, problem;\n    if (parts.length > 1) {\n        topic = parts[0 .. $-1].join(\"|\");\n        problem = parts[$-1];\n    } else {\n        topic = \"\";\n        problem = parts[0];\n    }\n    if (problem == \"r\") {\n        problem = topic.replace(\"u\", \"p\");\n    }\n    return tuple(topic, problem);\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"|xduaisf\") == \"r|pduaisf\");\n}\nvoid main(){}\n\n",
        "answer": "\"r|pduaisf\""
    },
    {
        "id": 478,
        "res": 0
    },
    {
        "id": 479,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp8axuz81s.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x5559242e3bd9]\n??:? void tmp8axuz81s.__unittest_L18_C1() [0x5559242e3953]\n??:? void tmp8axuz81s.__modtest() [0x5559242e3b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5559242e9576]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5559242e746f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5559242ee49b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5559242ee96d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5559242ee429]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5559242e7441]\n??:? runModuleUnitTests [0x5559242e93ab]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nlong[] f(long[] nums, long pop1, long pop2) \n{\n    if (pop1 > 0 && pop1 <= nums.length)\n    {\n        nums = nums[0 .. pop1-1] ~ nums[pop1 .. $];\n    }\n    if (pop2 > 0 && pop2 <= nums.length)\n    {\n        nums = nums[0 .. pop2-1] ~ nums[pop2 .. $];\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 5L, 2L, 3L, 6L], 2L, 4L) == [1L, 5L, 2L, 3L, 6L]);\n}\nvoid main(){}\n\n",
        "answer": "[1L, 5L, 2L, 3L, 6L]"
    },
    {
        "id": 480,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpbvv2t7cf.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x561d899bebb5]\n??:? void tmpbvv2t7cf.__unittest_L25_C1() [0x561d899b2931]\n??:? void tmpbvv2t7cf.__modtest() [0x561d899b5a68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x561d899c8b4a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x561d899b73ef]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x561d899c45d3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x561d899c4665]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x561d899c4561]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x561d899b73c1]\n??:? runModuleUnitTests [0x561d899c897f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.conv;\nimport std.algorithm;\nimport std.array;\n\nstring f(string s, string c1, string c2) \n{\n    if(s.empty)\n        return s;\n    auto ls = s.split(c1);\n    foreach(immutable i, item; ls)\n    {\n        if(item.canFind(c1))\n        {\n            item.replaceFirst(c1, c2);\n            ls[i] = item;\n        }\n    }\n    return ls.join(c1);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"\", \"mi\", \"siast\") == \"sast\");\n}\nvoid main(){}\n\n",
        "answer": "\"sast\""
    },
    {
        "id": 481,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpg790idy_.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x556409e4dd35]\n??:? void tmpg790idy_.__unittest_L21_C1() [0x556409e4d9ae]\n??:? void tmpg790idy_.__modtest() [0x556409e4dc14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x556409e531e2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x556409e51083]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x556409e576bf]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x556409e57b91]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x556409e5764d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x556409e51055]\n??:? runModuleUnitTests [0x556409e53017]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] values, long item1, long item2) \n{\n    if (values.back == item2) {\n        if (count(values[1..$], values[0]) == 0) {\n            values ~= values[0];\n        }\n    } else if (values.back == item1) {\n        if (values[0] == item2) {\n            values ~= values[0];\n        }\n    }\n    return values;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 1L], 2L, 3L) == [1, 2, 3]);\n}\nvoid main(){}\n\n",
        "answer": "[1, 2, 3]"
    },
    {
        "id": 482,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmppuo24hzj.d(14): unittest failure\n----------------\n??:? _d_unittestp [0x55d5058c8235]\n??:? void tmppuo24hzj.__unittest_L10_C1() [0x55d5058bf7ba]\n??:? void tmppuo24hzj.__modtest() [0x55d5058c06e0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55d5058cffc6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55d5058cd377]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55d5058d698b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55d5058d6e5d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55d5058d6919]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55d5058cd349]\n??:? runModuleUnitTests [0x55d5058cfdfb]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nstring f(string text) \n{\n    return text.replace(`\\\\\"`, `\"`);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Because it intrigues them\") == \"Because it ignints them\");\n}\nvoid main(){}\n\n",
        "answer": "\"Because it ignints them\""
    },
    {
        "id": 483,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpt3ldjp_o.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x561a5ad57dfd]\n??:? void tmpt3ldjp_o.__unittest_L11_C1() [0x561a5ad4c7df]\n??:? void tmpt3ldjp_o.__modtest() [0x561a5ad4ecb4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x561a5ad61bfa]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x561a5ad50637]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x561a5ad5d81b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x561a5ad5d8ad]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x561a5ad5d7a9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x561a5ad50609]\n??:? runModuleUnitTests [0x561a5ad61a2f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nstring f(string text, string separator) \n{\n    return text.split(separator).join(\" \");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"a\", \"a\") == \"a a\");\n}\nvoid main(){}\n\n",
        "answer": "\"a a\""
    },
    {
        "id": 484,
        "res": 0
    },
    {
        "id": 485,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp3w1g0jvk.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x55980295be99]\n??:? void tmp3w1g0jvk.__unittest_L17_C1() [0x55980294084e]\n??:? void tmp3w1g0jvk.__modtest() [0x5598029517f8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x559802965722]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x559802953363]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5598029618c3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x559802961955]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x559802961851]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x559802953335]\n??:? runModuleUnitTests [0x559802965557]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.algorithm;\nimport std.string;\n\nstring f(string tokens) \n{\n    auto splitTokens = tokens.split();\n    if (splitTokens.length == 2) {\n        splitTokens = splitTokens.reverse;\n    }\n    return format(\"%-5s %-5s\", splitTokens[0], splitTokens[1]);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"gsd avdropj\") == \"gsd %5s %5s\");\n}\nvoid main(){}\n\n",
        "answer": "\"gsd %5s %5s\""
    },
    {
        "id": 486,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp72jcs0jp.d(25): Error: none of the overloads of template `std.typecons.Tuple!(long, long, long).Tuple.opEquals` are callable using argument types `!()(long[long])`\n/usr/include/dmd/phobos/std/typecons.d(796):        Candidates are: `opEquals(R)(R rhs)`\n  with `R = long[long]`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(803):                        `opEquals(R)(R rhs) const`\n  with `R = long[long]`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(810):                        `opEquals(R...)(auto ref R rhs)`\n  with `R = (long[long])`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > R.length > 1\n  - areCompatibleTuples!(typeof(this), Tuple!R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n  Tip: not satisfied constraints are marked with `>`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp72jcs0jp.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\n\nNullable!(long[long]) f(Nullable!(long[long]) dic) \n{\n    if(dic.isNull) {\n        return Nullable!(long[long]).init;\n    }\n    \n    long[long] dic_op = dic.get();\n    \n    foreach(key, val; dic_op) {\n        dic_op[key] = val * val;\n    }\n    \n    return Nullable!(long[long])(dic_op);\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([1L: 1L, 2L: 2L, 3L: 3L].nullable);\n        assert(!result.isNull && result.get == tuple(1L, 4L, 9L));\n}\n\n}\nvoid main(){}\n\n",
        "answer": "tuple(1L, 4L, 9L)"
    },
    {
        "id": 487,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpulmk360l.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x5596d6298f9d]\n??:? void tmpulmk360l.__unittest_L19_C1() [0x5596d627c8b9]\n??:? void tmpulmk360l.__modtest() [0x5596d628e41c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5596d62a1ac6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5596d629012b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5596d629dd5f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5596d629dee9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5596d629dced]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5596d62900fd]\n??:? runModuleUnitTests [0x5596d62a18fb]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(Nullable!(string[long]) dict) \n{\n    long[] even_keys;\n    if (dict.isNull) {\n        return even_keys;\n    }\n    \n    auto underlyingDict = dict.get();\n    foreach (key; underlyingDict.keys) {\n        if (key % 2 == 0) {\n            even_keys ~= key;\n        }\n    }\n    return even_keys;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([4L: \"a\"].nullable) == \"a\");\n}\nvoid main(){}\n\n",
        "answer": "\"a\""
    },
    {
        "id": 488,
        "res": 0
    },
    {
        "id": 489,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string text, string value) \n{\n    return text.replace(value.toLower(), \"\");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"coscifysu\", \"cos\") == \"cifysu\");\n}\nvoid main(){}\n\n",
        "answer": "\"cifysu\""
    },
    {
        "id": 490,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpbszzz6fc.d(26): Error: undefined escape sequence \\)\n/tmp/tmpbszzz6fc.d(26): Error: unterminated string constant starting at /tmp/tmpbszzz6fc.d(26)\n/tmp/tmpbszzz6fc.d(30): Error: found `End of File` when expecting `)`\n/tmp/tmpbszzz6fc.d(30): Error: found `End of File` when expecting `;` following expression\n/tmp/tmpbszzz6fc.d(22):        expression: `assert(candidate(\"\\ngiyixjkvu\\n\\n\\n \\frgjuo\") == \"\")`\n/tmp/tmpbszzz6fc.d(30): Error: matching `}` expected following compound statement, not `End of File`\n/tmp/tmpbszzz6fc.d(19):        unmatched `{`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbszzz6fc.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nstring f(string s) \n{\n    string result;\n    foreach (c; s)\n    {\n        if (isWhite(c))\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"\ngiyixjkvu\n\r\r \frgjuo\") == \"gi\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\);\n}\nvoid main(){}\n\n",
        "answer": "\"gi\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\x8c\\"
    },
    {
        "id": 491,
        "res": 0
    },
    {
        "id": 492,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpkq40th38.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x55dd55e9d03d]\n??:? void tmpkq40th38.__unittest_L25_C1() [0x55dd55e92861]\n??:? void tmpkq40th38.__modtest() [0x55dd55e94380]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55dd55ea5812]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55dd55e959ef]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55dd55ea0f7f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55dd55ea1011]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55dd55ea0f0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55dd55e959c1]\n??:? runModuleUnitTests [0x55dd55ea5647]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string text, string value) \n{\n    string ls = text;\n    immutable count = ls.count(value);\n    if (count % 2 == 0)\n    {\n        while (ls.canFind(value))\n        {\n            ls = ls.replace(value, \"\");\n        }\n    }\n    else\n    {\n        ls = \"\";\n    }\n    return ls;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"abbkebaniuwurzvr\", \"m\") == \"b\");\n}\nvoid main(){}\n\n",
        "answer": "\"b\""
    },
    {
        "id": 493,
        "res": 0
    },
    {
        "id": 494,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp7awywmi4.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x55cfd5571ad1]\n??:? void tmp7awywmi4.__unittest_L13_C1() [0x55cfd5571814]\n??:? void tmp7awywmi4.__modtest() [0x55cfd5571a38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55cfd5578042]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55cfd5575f0b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55cfd557c387]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55cfd557c859]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55cfd557c315]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55cfd5575edd]\n??:? runModuleUnitTests [0x55cfd5577e77]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string num, long l) \n{\n    string t = \"\";\n    while (l > num.length) {\n        t ~= '0';\n        l--;\n    }\n    return t ~ num;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"1\", 3L) == \"12\");\n}\nvoid main(){}\n\n",
        "answer": "\"12\""
    },
    {
        "id": 495,
        "res": 0
    },
    {
        "id": 496,
        "res": 0
    },
    {
        "id": 497,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpyjmniavk.d(21): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyjmniavk.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.conv;\nimport std.string;\n\nstring[] f(long n) {\n    auto b = to!string(n);\n    string[] result = b.split(\"\");\n    foreach (i; 2 .. result.length) {\n        result[i] ~= '+';\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(44L) == \"44\");\n}\nvoid main(){}\n\n",
        "answer": "\"44\""
    },
    {
        "id": 498,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpd7gbatzd.d(13): Error: using the result of a comma expression is not allowed\n/tmp/tmpd7gbatzd.d(13): Error: using the result of a comma expression is not allowed\n/tmp/tmpd7gbatzd.d(13): Error: using the result of a comma expression is not allowed\n/tmp/tmpd7gbatzd.d(13): Error: using the result of a comma expression is not allowed\n/tmp/tmpd7gbatzd.d(13): Error: incompatible types for `(f([2L, 2L, 2L, 3L, 3L], 2L, 3L)) == (2L , 2L , 2L , 3L , 3L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd7gbatzd.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] nums, long idx, long added) \n{\n    nums = nums[0 .. idx] ~ [added] ~ nums[idx .. $];\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([2L, 2L, 2L, 3L, 3L], 2L, 3L) == (2L, 2L, 2L, 3L, 3L));\n}\nvoid main(){}\n\n",
        "answer": "(2L, 2L, 2L, 3L, 3L)"
    },
    {
        "id": 499,
        "res": 0
    },
    {
        "id": 500,
        "res": 0
    },
    {
        "id": 501,
        "res": 0
    },
    {
        "id": 502,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string name) \n{\n    import std.array;\n    return name.split(' ').join('*');\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Fred Smith\") == \"Fred*Smith\");\n}\nvoid main(){}\n\n",
        "answer": "\"Fred*Smith\""
    },
    {
        "id": 503,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp8xnszb2n.d(28): Error: none of the overloads of template `std.typecons.Tuple!(long, long).Tuple.opEquals` are callable using argument types `!()(long[])`\n/usr/include/dmd/phobos/std/typecons.d(796):        Candidates are: `opEquals(R)(R rhs)`\n  with `R = long[]`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(803):                        `opEquals(R)(R rhs) const`\n  with `R = long[]`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(810):                        `opEquals(R...)(auto ref R rhs)`\n  with `R = (long[])`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > R.length > 1\n  - areCompatibleTuples!(typeof(this), Tuple!R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n  Tip: not satisfied constraints are marked with `>`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8xnszb2n.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.algorithm;\n\nlong[] f(Nullable!(long[long]) d) \n{\n    long[] result;\n    if (!d.isNull) {\n        result.length = d.get.length;\n        long a = 0L, b = 0L;\n        while (d.get.length != 0) {\n            result[a] = d.get[a];\n            d.get.remove(a);\n            long temp = b;\n            b = (b + 1) % result.length;\n            a = temp;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(Nullable!(long[long]).init) == tuple(5L, 12L));\n}\nvoid main(){}\n\n",
        "answer": "tuple(5L, 12L)"
    },
    {
        "id": 504,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nlong[] f(long[] values) \n{\n    values.sort();\n    return values;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 1L, 1L, 1L]) == [1, 1, 1, 1]);\n}\nvoid main(){}\n\n",
        "answer": "[1, 1, 1, 1]"
    },
    {
        "id": 505,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpgc8mktz1.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x565205134991]\n??:? void tmpgc8mktz1.__unittest_L16_C1() [0x56520513482e]\n??:? void tmpgc8mktz1.__modtest() [0x5652051348fc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56520513810a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56520513e35b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x565205148bf7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56520513c7f1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x565205148b85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56520513e32d]\n??:? runModuleUnitTests [0x565205137f3f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nstring f(string string) \n{\n    while (string.length > 0) {\n        if (isAlpha(string[string.length - 1])) {\n            return string;\n        }\n        string = string[0 .. $-1];\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"--4/0-209\") == \"hello\");\n}\nvoid main(){}\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 506,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp4yscy8vg.d(28): Error: unterminated string constant starting at /tmp/tmp4yscy8vg.d(28)\n/tmp/tmp4yscy8vg.d(32): Error: found `End of File` when expecting `)`\n/tmp/tmp4yscy8vg.d(32): Error: found `End of File` when expecting `;` following expression\n/tmp/tmp4yscy8vg.d(28):        expression: `assert(candidate(1L) == \"\")`\n/tmp/tmp4yscy8vg.d(32): Error: matching `}` expected following compound statement, not `End of File`\n/tmp/tmp4yscy8vg.d(25):        unmatched `{`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4yscy8vg.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.conv;\nimport std.range;\n\nstring f(long n) \n{\n    string p = \"\";\n    if (n % 2 == 1) {\n        p ~= \"sn\";\n    } else {\n        return to!string(n * n);\n    }\n    foreach(x; iota(1, n + 1)) {\n        if (x % 2 == 0) {\n            p ~= \"to\";\n        } else {\n            p ~= \"ts\";\n        }\n    }\n    return p;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(1L) == \"1\\n4\\n9\\n16\\n25\\n36\\n49\\n64\\n81\\n100\\n144\\n169\\n196\\n225\\n256\\n289\\n324\\n361\\n400\\n484\\n529\\n576\\n729\\n768\\n841\\n900\\n961\\n1000\\n...);\n}\nvoid main(){}\n\n",
        "answer": "\"1\\n4\\n9\\n16\\n25\\n36\\n49\\n64\\n81\\n100\\n144\\n169\\n196\\n225\\n256\\n289\\n324\\n361\\n400\\n484\\n529\\n576\\n729\\n768\\n841\\n900\\n961\\n1000\\n..."
    },
    {
        "id": 507,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nlong f(string text, string search) \n{\n    auto result = text.toLower();\n    return result.indexOf(search.toLower());\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"car hat\", \"car\") == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 508,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpz25bbacd.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x559d9089113d]\n??:? void tmpz25bbacd.__unittest_L16_C1() [0x559d90885922]\n??:? void tmpz25bbacd.__modtest() [0x559d90887ff0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x559d9089af3a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x559d90889977]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x559d90896b5b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x559d90896bed]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x559d90896ae9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x559d90889949]\n??:? runModuleUnitTests [0x559d9089ad6f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\nimport std.array;\n\nstring f(string text, string sep, long maxsplit) \n{\n    auto splitted = text.split(sep)[0 .. text.split(sep).length / 2];\n    splitted.reverse();\n    splitted ~= text.split(sep)[(text.split(sep).length / 2) .. $];\n    return splitted.join(sep);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"ertubwi\", \"p\", 5L) == \"tubiwirteb\");\n}\nvoid main(){}\n\n",
        "answer": "\"tubiwirteb\""
    },
    {
        "id": 509,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.format;\n\nstring f(long value, long width) \n{\n    if (value >= 0) {\n        return format(\"%0*d\", width, value);\n    } else {\n        return format(\"-%0*d\", width, -value);\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L, 1L) == \"5\");\n}\nvoid main(){}\n\n",
        "answer": "\"5\""
    },
    {
        "id": 510,
        "res": 0
    },
    {
        "id": 511,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpp1t1x4uq.d(27): Error: found `std` when expecting `(` following `import`\n/tmp/tmpp1t1x4uq.d(27): Error: found `;` when expecting `)`\n/tmp/tmpp1t1x4uq.d(28): Error: found `import` when expecting `)`\n/tmp/tmpp1t1x4uq.d(28): Error: found `std` when expecting `;` following expression\n/tmp/tmpp1t1x4uq.d(27):        expression: `assert(!result.isNull && (result.get == import(.math)))`\n/tmp/tmpp1t1x4uq.d(49): Error: found `unittest` instead of statement\n/tmp/tmpp1t1x4uq.d(53): Error: expression expected, not `?`\n/tmp/tmpp1t1x4uq.d(53): Error: expression expected, not `?`\n/tmp/tmpp1t1x4uq.d(53): Error: expression expected, not `)`\n/tmp/tmpp1t1x4uq.d(53): Error: found `;` when expecting `:`\n/tmp/tmpp1t1x4uq.d(54): Error: expression expected, not `}`\n/tmp/tmpp1t1x4uq.d(55): Error: found `void` when expecting `:`\n/tmp/tmpp1t1x4uq.d(55): Error: found `{` when expecting `)`\n/tmp/tmpp1t1x4uq.d(55): Error: found `}` when expecting `;` following expression\n/tmp/tmpp1t1x4uq.d(53):        expression: `assert(candidate(",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nNullable!(string[string]) f(Tuple!(string, string, string) fields, Nullable!(string[string]) update_dict) \n{\n    if (fields.empty || update_dict.isNull) {\n        return Nullable!(string[string]).init;\n    }\n    string[string] di;\n    foreach (field; fields) {\n        di[field] = \"\";\n    }\n    foreach (key, value; update_dict.get()) {\n        di[key] = value;\n    }\n    return Nullable!(string[string])(di);\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate(tuple(\"ct\", \"c\", \"ca\"), [\"ca\": \"cx\"].nullable);\n        assert(!result.isNull && result.get == import std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.typecons;\n\nTuple!(long, long) f(Nullable!(long[string]) d) \n{\n    long x = 0, y = 0;\n    if (!d.isNull) {\n        auto dict = d.get();\n        foreach (key, value; dict) {\n            if (key == \"x\") {\n                x = value;\n            }\n            if (key == \"y\") {\n                y = value;\n            }\n        }\n    }\n    return tuple(x, y);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"x\": 5L, \"y\": 12L].nullable) == ????);\n}\nvoid main(){}\n\n\ntuple(5L, 12L));\n}\n\n}\nvoid main(){}\n\n",
        "answer": "import std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.typecons;\n\nTuple!(long, long) f(Nullable!(long[string]) d) \n{\n    long x = 0, y = 0;\n    if (!d.isNull) {\n        auto dict = d.get();\n        foreach (key, value; dict) {\n            if (key == \"x\") {\n                x = value;\n            }\n            if (key == \"y\") {\n                y = value;\n            }\n        }\n    }\n    return tuple(x, y);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"x\": 5L, \"y\": 12L].nullable) == ????);\n}\nvoid main(){}\n\n\ntuple(5L, 12L)"
    },
    {
        "id": 512,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpwootrkys.d(25): Error: incompatible types for `(f(\"102\")) == (\"10101\")`: `bool` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwootrkys.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nbool f(string s) \n{\n    int count0 = 0;\n    int count1 = 0;\n    \n    foreach (char c; s)\n    {\n        if (c == '0')\n            count0++;\n        else if (c == '1')\n            count1++;\n    }\n    \n    return s.length == count0 + count1;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"102\") == \"10101\");\n}\nvoid main(){}\n\n",
        "answer": "\"10101\""
    },
    {
        "id": 513,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpexunqcm5.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x55f9ab4ebe69]\n??:? void tmpexunqcm5.__unittest_L21_C1() [0x55f9ab4eb92c]\n??:? void tmpexunqcm5.__modtest() [0x55f9ab4ebd40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55f9ab4f18f6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55f9ab4ef7ef]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55f9ab4f67cf]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55f9ab4f6ca1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55f9ab4f675d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55f9ab4ef7c1]\n??:? runModuleUnitTests [0x55f9ab4f172b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] array) \n{\n    while (array.canFind(-1)) {\n        array = array[0 .. $ - 3] ~ array[$ - 2 .. $];\n    }\n    while (array.canFind(0)) {\n        array.popBack();\n    }\n    while (array.canFind(1)) {\n        array = array[1 .. $];\n    }\n    return array;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([0L, 2L]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n}\nvoid main(){}\n\n",
        "answer": "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"
    },
    {
        "id": 514,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp7uji7jxx.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x55be196b70fd]\n??:? void tmp7uji7jxx.__unittest_L15_C1() [0x55be196aa8d2]\n??:? void tmp7uji7jxx.__modtest() [0x55be196ae2cc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55be196c1852]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55be196af937]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55be196bcacf]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55be196bcb61]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55be196bca5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55be196af909]\n??:? runModuleUnitTests [0x55be196c1687]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.algorithm;\n\nstring f(string text) \n{\n    foreach (word; text.split())\n    {\n        text = text.replace(\"-\" ~ word, \" \").replace(word ~ \"-\", \" \");\n    }\n    return text.stripLeft('-').stripRight('-');\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"-stew---corn-and-beans-in soup-.-\") == \"stew corn and beans in soup\");\n}\nvoid main(){}\n\n",
        "answer": "\"stew corn and beans in soup\""
    },
    {
        "id": 515,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp1xrxtsmm.d(21): Error: using the result of a comma expression is not allowed\n/tmp/tmp1xrxtsmm.d(21): Error: incompatible types for `(f([1L, 2L, 3L, 4L, 5L])) == (5L , 12L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1xrxtsmm.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] array) \n{\n    auto result = array.dup;\n    result = result.reverse.array;\n    foreach(ref item; result)\n    {\n        item *= 2;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == (5L, 12L));\n}\nvoid main(){}\n\n",
        "answer": "(5L, 12L)"
    },
    {
        "id": 516,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp7ura4ckc.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x5619d798e02d]\n??:? void tmp7ura4ckc.__unittest_L18_C1() [0x5619d79819ad]\n??:? void tmp7ura4ckc.__modtest() [0x5619d79853ec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5619d799623a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5619d798694f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5619d7991fa7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5619d7992039]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5619d7991f35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5619d7986921]\n??:? runModuleUnitTests [0x5619d799606f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nstring[] f(string[] strings, string substr) \n{\n    string[] list;\n    foreach(s; strings) {\n        if (s.startsWith(substr)) {\n            list ~= s;\n        }\n    }\n    list.sort!((a, b) => a.length < b.length);\n    return list;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"condor\", \"eyes\", \"gay\", \"isa\"], \"d\") == [\"condor\", \"eyes\", \"gay\", \"isa\"]);\n}\nvoid main(){}\n\n",
        "answer": "[\"condor\", \"eyes\", \"gay\", \"isa\"]"
    },
    {
        "id": 517,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpxvj08ec6.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x564fd0c15991]\n??:? void tmpxvj08ec6.__unittest_L15_C1() [0x564fd0c1582a]\n??:? void tmpxvj08ec6.__modtest() [0x564fd0c158f8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x564fd0c190fe]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x564fd0c1f34f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x564fd0c29beb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x564fd0c1d7e5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x564fd0c29b79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x564fd0c1f321]\n??:? runModuleUnitTests [0x564fd0c18f33]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nstring f(string text) \n{\n    foreach_reverse(i; 0 .. text.length) {\n        if (!isUpper(text[i])) {\n            return text[0 .. i];\n        }\n    }\n    return \"\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"SzHjifnzog\") == \"SzHjifnzog\");\n}\nvoid main(){}\n\n",
        "answer": "\"SzHjifnzog\""
    },
    {
        "id": 518,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmptd8qgpc_.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x5618924182c1]\n??:? void tmptd8qgpc_.__unittest_L20_C1() [0x56189240d7a4]\n??:? void tmptd8qgpc_.__modtest() [0x56189240f180]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5618924214fa]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5618924107ef]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56189241c6ab]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56189241c835]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56189241c639]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5618924107c1]\n??:? runModuleUnitTests [0x56189242132f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.conv;\n\nbool f(string text) \n{\n    bool isNumeric;\n    try\n    {\n        text.to!long;\n        isNumeric = true;\n    }\n    catch (ConvException)\n    {\n        isNumeric = false;\n    }\n    return !isNumeric;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"the speed is -36 miles per hour\") == false);\n}\nvoid main(){}\n\n",
        "answer": "false"
    },
    {
        "id": 519,
        "res": 0
    },
    {
        "id": 520,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nlong f(long[] album_sales) \n{\n    while (album_sales.length != 1) {\n        album_sales ~= album_sales[0]; // append to end\n        album_sales = album_sales[1..$]; // remove first element\n    }\n    return album_sales[0];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([6L]) == 6L);\n}\nvoid main(){}\n\n",
        "answer": "6L"
    },
    {
        "id": 521,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpd5z_ry71.d(19): Error: integer overflow\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd5z_ry71.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] nums) \n{\n    long m = nums.maxElement();\n    foreach (i; 0 .. m) {\n        nums = nums.reverse();\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([43L, 0L, 4L, 77L, 5L, 2L, 0L, 9L, 77L]) == 777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777);\n}\nvoid main(){}\n\n",
        "answer
    },
    {
        "id": 522,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpzipdmov3.d(23): Error: found `tuple` when expecting `)`\n/tmp/tmpzipdmov3.d(23): Error: found `)` when expecting `;` following expression\n/tmp/tmpzipdmov3.d(23): Error: found `)` instead of statement\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzipdmov3.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nfloat[] f(long[] numbers) \n{\n    float[] floats;\n    foreach (n; numbers)\n    {\n        if (n % 1 != 0)\n        {\n            floats ~= n % 1;\n        }\n    }\n    return floats;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([100L, 101L, 102L, 103L, 104L, 105L, 106L, 107L, 108L, 109L, 110L, 111L, 112L, 113L, 114L, 115L, 116L, 117L, 118L, 119L]) == [100L, 101L, 102L, 103L, 104L, 105L, 106L, 107L, 108L, 109L, 110L, 111L, 112L, 113L, 114L, 115L, 116L, 117L, 118L, 119L]\ntuple(100L, 101L, 102L, 103L, 104L, 105L, 106L, 107L, 108L, 109L, 110L, 111L, 112L, 113L, 114L, 115L, 116L, 117L, 118L, 119L));\n}\nvoid main(){}\n\n",
        "answer": "[100L, 101L, 102L, 103L, 104L, 105L, 106L, 107L, 108L, 109L, 110L, 111L, 112L, 113L, 114L, 115L, 116L, 117L, 118L, 119L]\ntuple(100L, 101L, 102L, 103L, 104L, 105L, 106L, 107L, 108L, 109L, 110L, 111L, 112L, 113L, 114L, 115L, 116L, 117L, 118L, 119L)"
    },
    {
        "id": 523,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp85tckvr0.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x560b2f20533d]\n??:? void tmp85tckvr0.__unittest_L13_C1() [0x560b2f1fb7be]\n??:? void tmp85tckvr0.__modtest() [0x560b2f1fc680]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x560b2f20d1be]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x560b2f1fdcef]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x560b2f20892b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x560b2f2089bd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x560b2f2088b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x560b2f1fdcc1]\n??:? runModuleUnitTests [0x560b2f20cff3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text) \n{\n    auto newText = text.replace(\" \", \"&nbsp;\");\n    return newText;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"   \") == \"   \");\n}\nvoid main(){}\n\n",
        "answer": "\"   \""
    },
    {
        "id": 524,
        "res": 0
    },
    {
        "id": 525,
        "res": 0
    },
    {
        "id": 526,
        "res": 0
    },
    {
        "id": 527,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpgtykx8wx.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x555bbaa8d9d9]\n??:? void tmpgtykx8wx.__unittest_L16_C1() [0x555bbaa8d81e]\n??:? void tmpgtykx8wx.__modtest() [0x555bbaa8d944]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x555bbaa92bb2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x555bbaa90ba3]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x555bbaa96ef7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x555bbaa973c9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x555bbaa96e85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x555bbaa90b75]\n??:? runModuleUnitTests [0x555bbaa929e7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nstring f(string text, string value)\n{\n    string result = text;\n    while(result.length < value.length)\n    {\n        result ~= '?';\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"!?\", \"\") == \"?\");\n}\nvoid main(){}\n\n",
        "answer": "\"?\""
    },
    {
        "id": 528,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp6p4388d1.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x561e36bb90fd]\n??:? void tmp6p4388d1.__unittest_L22_C1() [0x561e36bae865]\n??:? void tmp6p4388d1.__modtest() [0x561e36bb0098]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x561e36bc2016]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x561e36bb1a1f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x561e36bbd2fb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x561e36bbd38d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x561e36bbd289]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x561e36bb19f1]\n??:? runModuleUnitTests [0x561e36bc1e4b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nlong f(string s) \n{\n    string b = \"\";\n    string c = \"\";\n    foreach (char i; s)\n    {\n        c ~= i;\n        if (s.lastIndexOf(c) > -1)\n        {\n            return s.lastIndexOf(c);\n        }\n    }\n    return 0;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"papeluchis\") == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 529,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp1z4qkr1i.d(29): Error: using the result of a comma expression is not allowed\n/tmp/tmp1z4qkr1i.d(29): Error: incompatible types for `(f([1L, 2L, 3L])) == (5L , 12L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1z4qkr1i.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] array) \n{\n    if (array.length == 0) {\n        return [];\n    }\n\n    long prev = array[0];\n    long[] newArray = array.dup;\n\n    for (size_t i = 1; i < array.length; i++) {\n        if (prev != array[i]) {\n            newArray[i] = array[i];\n        } else {\n            newArray = newArray[0 .. i] ~ newArray[i + 1 .. $];\n            i--;\n        }\n        prev = array[i];\n    }\n\n    return newArray;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, 3L]) == (5L, 12L));\n}\nvoid main(){}\n\n",
        "answer": "(5L, 12L)"
    },
    {
        "id": 530,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpiygpa667.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x56531aa1c7c5]\n??:? void tmpiygpa667.__unittest_L19_C1() [0x56531aa11841]\n??:? void tmpiygpa667.__modtest() [0x56531aa13764]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56531aa254e2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56531aa150e7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56531aa2089b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56531aa2092d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56531aa20829]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56531aa150b9]\n??:? runModuleUnitTests [0x56531aa25317]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.string;\n\nstring f(string s, string ch) \n{\n    if(s.canFind(ch))\n    {\n        string sl = s.stripLeft(ch);\n        if(sl.length == 0)\n            sl ~= \"!?\";\n        return sl;\n    }\n    return \"no\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"@@@ff\", \"@\") == \"no\");\n}\nvoid main(){}\n\n",
        "answer": "\"no\""
    },
    {
        "id": 531,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp_lhv2b6l.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x55e59ae32f01]\n??:? void tmp_lhv2b6l.__unittest_L31_C1() [0x55e59ae318dd]\n??:? void tmp_lhv2b6l.__modtest() [0x55e59ae319b8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55e59ae3f352]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55e59ae32b8f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55e59ae348e7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55e59ae34979]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55e59ae34875]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55e59ae32b61]\n??:? runModuleUnitTests [0x55e59ae3f187]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring removePrefix(string text, string prefix)\n{\n    if (text.startsWith(prefix))\n    {\n        return text[prefix.length .. $];\n    }\n    else\n    {\n        return text;\n    }\n}\n\nstring f(string text, string x) \n{\n    if (removePrefix(text, x) == text)\n    {\n        return f(text[1 .. $], x);\n    }\n    else\n    {\n        return text;\n    }\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Ibaskdjgblw asdl \", \"djgblw\") == \"Ibaskd\");\n}\nvoid main(){}\n\n",
        "answer": "\"Ibaskd\""
    },
    {
        "id": 532,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp9pxaqo75.d(25): Error: incompatible types for `(f(1L, [1L, 2L, 3L])) == (6L)`: `long[][]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9pxaqo75.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.range;\nimport std.algorithm;\nimport std.typecons;\n\nlong[][] f(long n, long[] array) \n{\n    long[][] final_;\n    final_ ~= array.dup;\n    foreach (immutable _; 0 .. n)\n    {\n        long[] arr = array.dup;\n        arr ~= final_.back;\n        final_ ~= arr;\n    }\n    return final_;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(1L, [1L, 2L, 3L]) == 6L);\n}\nvoid main(){}\n\n",
        "answer": "6L"
    },
    {
        "id": 533,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nlong f(string query, Nullable!(long[string]) base) \n{\n    if (!base.isNull) {\n        long net_sum = 0;\n        foreach (key, val; base.get()) {\n            if (key.length == 3 && key[0] == query[0]) {\n                net_sum -= val;\n            }\n            else if (key.length == 3 && key[2] == query[0]) {\n                net_sum += val;\n            }\n        }\n        return net_sum;\n    }\n    return 0;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"a\", Nullable!(long[string]).init) == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 534,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.range;\nimport std.string;\n\nstring f(string sequence, string value) \n{\n    auto i = sequence.indexOf(value) - sequence.length / 3;\n    i = i > 0 ? i : 0;\n    string result = \"\";\n    foreach (j, v; sequence[i .. $])\n    {\n        if (v == '+')\n            result ~= value;\n        else\n            result ~= sequence[i + j];\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"hosu\", \"o\") == \"hosu\");\n}\nvoid main(){}\n\n",
        "answer": "\"hosu\""
    },
    {
        "id": 535,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.range;\nimport std.conv;\n\nbool f(long n) \n{\n    foreach (num; n.text.dup)\n    {\n        if (num < '0' || num > '2' && num < '5' || num > '9')\n        {\n            return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(1341240312L) == false);\n}\nvoid main(){}\n\n",
        "answer": "false"
    },
    {
        "id": 536,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp3xls7j23.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x555d88bde879]\n??:? void tmp3xls7j23.__unittest_L18_C1() [0x555d88bde7ba]\n??:? void tmp3xls7j23.__modtest() [0x555d88bde7e0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x555d88be1c7e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x555d88be7f1b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x555d88bf299f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x555d88be63b1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x555d88bf292d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x555d88be7eed]\n??:? runModuleUnitTests [0x555d88be1ab3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nlong f(string cat) \n{\n    long digits = 0;\n    foreach (char c; cat)\n    {\n        if (isDigit(c))\n        {\n            digits++;\n        }\n    }\n    return digits;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"C24Bxxx982ab\") == 24);\n}\nvoid main(){}\n\n",
        "answer": "24"
    },
    {
        "id": 537,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpsd6f3s0z.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x560669fae8ad]\n??:? void tmpsd6f3s0z.__unittest_L16_C1() [0x560669fad82d]\n??:? void tmpsd6f3s0z.__modtest() [0x560669fae6c8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x560669fb5336]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x560669fb31d7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x560669fba1d3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x560669fba6a5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x560669fba161]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x560669fb31a9]\n??:? runModuleUnitTests [0x560669fb516b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.conv;\nimport std.array;\n\nstring f(string text, string value) \n{\n    auto new_text = text.dup;\n    new_text ~= value; // Append value to new_text\n    auto length = new_text.length; // Get the length of new_text\n    return \"[\" ~ length.text ~ \"]\"; // Return the length as a string\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"abv\", \"a\") == \"abv\");\n}\nvoid main(){}\n\n",
        "answer": "\"abv\""
    },
    {
        "id": 538,
        "res": 0
    },
    {
        "id": 539,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpe0tr_iwh.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x555fd2d77731]\n??:? void tmpe0tr_iwh.__unittest_L26_C1() [0x555fd2d76866]\n??:? void tmpe0tr_iwh.__modtest() [0x555fd2d76a74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x555fd2d848aa]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x555fd2d77463]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x555fd2d798b3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x555fd2d79945]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x555fd2d79841]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x555fd2d77435]\n??:? runModuleUnitTests [0x555fd2d846df]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.typecons;\n\nalias string_array = string[];\n\nstring_array f(string[] array) \n{\n    auto array_copy = array[];\n    auto ptr = array_copy.ptr;\n    while (true)\n    {\n        array_copy ~= \"_\";\n        if (array_copy.ptr != ptr)\n        {\n            array_copy[$-1] = \"\";\n            break;\n        }\n    }\n    return array_copy;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([]) == []);\n}\nvoid main(){}\n\n",
        "answer": "[]"
    },
    {
        "id": 540,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpn7w8sohb.d(21): Error: incompatible types for `(f([5L, 5L, 5L, 6L, 4L, 9L])) == (6L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn7w8sohb.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.conv;\n\nlong[] f(long[] a) \n{\n    long[] b = a.dup;\n    for (long k = 0; k < a.length - 1; k += 2)\n    {\n        b = b[0 .. k] ~ b[k] ~ b[k .. $];\n    }\n    b ~= b[0];\n    return b;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([5L, 5L, 5L, 6L, 4L, 9L]) == 6L);\n}\nvoid main(){}\n\n",
        "answer": "6L"
    },
    {
        "id": 541,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpxynhl545.d(13): unittest failure\n----------------\n??:? _d_unittestp [0x56163cd265f5]\n??:? void tmpxynhl545.__unittest_L9_C1() [0x56163cd24774]\n??:? void tmpxynhl545.__modtest() [0x56163cd24f94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56163cd32de2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56163cd26167]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56163cd2815f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56163cd281f1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56163cd280ed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56163cd26139]\n??:? runModuleUnitTests [0x56163cd32c17]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int f",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nbool f(string text) \n{\n    return text.strip().length == 0;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\" \t  　\") == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 542,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpzud3pqev.d(31): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzud3pqev.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.conv;\nimport std.algorithm;\nimport std.string;\n\nstring[] f(string test, string sep = \" \", long maxsplit = -1) \n{\n    string[] result;\n    try\n    {\n        result = test.split(sep).reverse().array;\n        if (maxsplit != -1)\n            result = result[0 .. min(maxsplit, result.length)];\n    }\n    catch (Exception e)\n    {\n        result = test.split().array;\n    }\n\n    return result;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"ab cd\", \"x\", 2L) == \"ab cd\");\n}\nvoid main(){}\n\n",
        "answer": "\"ab cd\""
    },
    {
        "id": 543,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp0mll1esb.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x5574382f845d]\n??:? void tmp0mll1esb.__unittest_L12_C1() [0x5574382ef8c6]\n??:? void tmp0mll1esb.__modtest() [0x5574382f090c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x557438300202]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5574382fd5b3]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x557438306b97]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x557438307069]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x557438306b25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5574382fd585]\n??:? runModuleUnitTests [0x557438300037]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.ascii;\n\nstring f(string item) \n{\n    string modified = item.replace(\". \", \" , \").replace(\"&#33; \", \"! \").replace(\". \", \"? \").replace(\". \", \". \");\n    return toUpper(modified[0]) ~ modified[1 .. $];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\".,,,,,. منبت\") == \"MAYBE\");\n}\nvoid main(){}\n\n",
        "answer": "\"MAYBE\""
    },
    {
        "id": 544,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp2xgc7kil.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x5644f7604aed]\n??:? void tmp2xgc7kil.__unittest_L16_C1() [0x5644f75f78da]\n??:? void tmp2xgc7kil.__modtest() [0x5644f75fbdc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5644f760ebee]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5644f75fd327]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5644f760a327]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5644f760a3b9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5644f760a2b5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5644f75fd2f9]\n??:? runModuleUnitTests [0x5644f760ea23]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nstring f(string text) \n{\n    auto a = text.split('\\n');\n    string[] b;\n    foreach (i; 0 .. a.length) {\n        auto c = a[i].replace('\\t', \"    \");\n        b ~= c;\n    }\n    return b.join(\"\\n\");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"\t\t\ttab tab tabulates\") == \"tab\\n\\t\\t\\t\\ttabulates\");\n}\nvoid main(){}\n\n",
        "answer": "\"tab\\n\\t\\t\\t\\ttabulates\""
    },
    {
        "id": 545,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp5towywqv.d(20): Error: using the result of a comma expression is not allowed\n/tmp/tmp5towywqv.d(20): Error: using the result of a comma expression is not allowed\n/tmp/tmp5towywqv.d(20): Error: using the result of a comma expression is not allowed\n/tmp/tmp5towywqv.d(20): Error: using the result of a comma expression is not allowed\n/tmp/tmp5towywqv.d(20): Error: using the result of a comma expression is not allowed\n/tmp/tmp5towywqv.d(20): Error: using the result of a comma expression is not allowed\n/tmp/tmp5towywqv.d(20): Error: using the result of a comma expression is not allowed\n/tmp/tmp5towywqv.d(20): Error: incompatible types for `(f([8L, 8L, -4L, -9L, 2L, 8L, -1L, 8L])) == (8L , 8L , -4L , -9L , 2L , 8L , -1L , 8L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5towywqv.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] array) \n{\n    long[] result;\n    uint index = 0;\n    while (index < array.length)\n    {\n        result ~= array[$-1];\n        array = array[0 .. $-1];\n        index += 2;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([8L, 8L, -4L, -9L, 2L, 8L, -1L, 8L]) == (8L, 8L, -4L, -9L, 2L, 8L, -1L, 8L));\n}\nvoid main(){}\n\n",
        "answer": "(8L, 8L, -4L, -9L, 2L, 8L, -1L, 8L)"
    },
    {
        "id": 546,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpg6h_t31v.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x56345952ce39]\n??:? void tmpg6h_t31v.__unittest_L15_C1() [0x56345952b815]\n??:? void tmpg6h_t31v.__modtest() [0x56345952b8f0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56345953928a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56345952cac7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56345952e81f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56345952e8b1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56345952e7ad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56345952ca99]\n??:? runModuleUnitTests [0x5634595390bf]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.range;\nimport std.string;\n\nstring f(string text, string speaker) \n{\n    while (text.startsWith(speaker)) {\n        text = text[speaker.length .. $];\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"[CHARRUNNERS]Do you know who the other was? [NEGMENDS]\", \"[CHARRUNNERS]\") == \"yes\");\n}\nvoid main(){}\n\n",
        "answer": "\"yes\""
    },
    {
        "id": 547,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpv6ir22gt.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x563731d25f45]\n??:? void tmpv6ir22gt.__unittest_L14_C1() [0x563731d187fe]\n??:? void tmpv6ir22gt.__modtest() [0x563731d1cdf8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x563731d303be]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x563731d1e77f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x563731d2b963]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x563731d2b9f5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x563731d2b8f1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x563731d1e751]\n??:? runModuleUnitTests [0x563731d301f3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string letters) \n{\n    string letters_only = letters.strip(\"., !?*\");\n    auto words = letters_only.split(\" \");\n    return words.join(\"....\");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"h,e,l,l,o,wo,r,ld,\") == \"hello world\");\n}\nvoid main(){}\n\n",
        "answer": "\"hello world\""
    },
    {
        "id": 548,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text, string suffix) \n{\n    if (suffix.length > 0 && text.length > 0 && text[$-suffix.length..$-1] == suffix) {\n        return text[0..$-suffix.length];\n    } else {\n        return text;\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"spider\", \"ed\") == \"spider\");\n}\nvoid main(){}\n\n",
        "answer": "\"spider\""
    },
    {
        "id": 549,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpikomdmlh.d(21): Error: incompatible types for array comparison: `long[][]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpikomdmlh.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[][] f(long[][] matrix) \n{\n    matrix = matrix.reverse;\n    long[][] result;\n    foreach (primary; matrix) {\n        primary.sort!\"a > b\";\n        result ~= primary.dup;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([[1L, 1L, 1L, 1L]]) == \"1 1 1 1\");\n}\nvoid main(){}\n\n",
        "answer": "\"1 1 1 1\""
    },
    {
        "id": 550,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp6els0q9x.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x557984c99d09]\n??:? void tmp6els0q9x.__unittest_L15_C1() [0x557984c99954]\n??:? void tmp6els0q9x.__modtest() [0x557984c99c70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x557984c9f86e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x557984c9d5e7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x557984ca4793]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x557984ca4c65]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x557984ca4721]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x557984c9d5b9]\n??:? runModuleUnitTests [0x557984c9f6a3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nlong[] f(long[] nums) \n{\n    foreach (i, _; nums)\n    {\n        nums = nums[0 .. i] ~ [nums[i] * nums[i]] ~ nums[i .. $];\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, 4L]) == [1, 2, 4, 8, 16, 32, 64, 128, 256, 512]);\n}\nvoid main(){}\n\n",
        "answer": "[1, 2, 4, 8, 16, 32, 64, 128, 256, 512]"
    },
    {
        "id": 551,
        "res": 0
    },
    {
        "id": 552,
        "res": 0
    },
    {
        "id": 553,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpqviuyeun.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x55880e24aa9d]\n??:? void tmpqviuyeun.__unittest_L16_C1() [0x55880e2487cc]\n??:? void tmpqviuyeun.__modtest() [0x55880e24940c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55880e257f42]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55880e24a5df]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55880e24d18b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55880e24d21d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55880e24d119]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55880e24a5b1]\n??:? runModuleUnitTests [0x55880e257d77]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nstring f(string text, long count) \n{\n    for (long i = 0; i < count; i++)\n    {\n        text = text.dup.reverse();\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"439m2670hlsw\", 3L) == \"dlrowolleh\");\n}\nvoid main(){}\n\n",
        "answer": "\"dlrowolleh\""
    },
    {
        "id": 554,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpifg9w4ig.d(14): unittest failure\n----------------\n??:? _d_unittestp [0x555693f00555]\n??:? void tmpifg9w4ig.__unittest_L10_C1() [0x555693eff827]\n??:? void tmpifg9w4ig.__modtest() [0x555693f00370]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x555693f05b2a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x555693f03b1b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x555693f0ad13]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x555693f0b1e5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x555693f0aca1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x555693f03aed]\n??:? runModuleUnitTests [0x555693f0595f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nlong[] f(long[] arr) \n{\n    return arr.dup.reverse;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([2L, 0L, 1L, 9999L, 3L, -5L]) == [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]);\n}\nvoid main(){}\n\n",
        "answer": "[9, 8, 7, 6, 5, 4, 3, 2, 1, 0]"
    },
    {
        "id": 555,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpd8ax6g9k.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x55857c4ee505]\n??:? void tmpd8ax6g9k.__unittest_L17_C1() [0x55857c4e4888]\n??:? void tmpd8ax6g9k.__modtest() [0x55857c4e5848]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55857c4f6dce]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55857c4e6eb7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55857c4f253b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55857c4f25cd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55857c4f24c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55857c4e6e89]\n??:? runModuleUnitTests [0x55857c4f6c03]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text, long tabstop) {\n    text = text.replace(\"\\n\", \"_____\");\n    string spaces = \"\";\n    for (int i = 0; i < tabstop; i++) {\n        spaces ~= \" \";\n    }\n    text = text.replace(\"\\t\", spaces);\n    text = text.replace(\"_____\", \"\\n\");\n    return text;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"odes\tcode\twell\", 2L) == \"odes\\ncode\\nwell\");\n}\nvoid main(){}\n\n",
        "answer": "\"odes\\ncode\\nwell\""
    },
    {
        "id": 556,
        "res": 0
    },
    {
        "id": 557,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpzc8bn8nd.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x558d0ffe26dd]\n??:? void tmpzc8bn8nd.__unittest_L17_C1() [0x558d0ffd78ba]\n??:? void tmpzc8bn8nd.__modtest() [0x558d0ffd9678]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x558d0ffeabae]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x558d0ffdafff]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x558d0ffe5e93]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x558d0ffe5f25]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x558d0ffe5e21]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x558d0ffdafd1]\n??:? runModuleUnitTests [0x558d0ffea9e3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string s) {\n    auto pos = s.lastIndexOf(\"ar\");\n    if (pos == -1) {\n        return s;\n    }\n    string before = s[0 .. pos];\n    string sep = s[pos .. pos + 2];\n    string after = s[pos + 2 .. $];\n    return before ~ \" \" ~ sep ~ \" \" ~ after;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"xxxarmmarxx\") == \"xxxarmmarxx\");\n}\nvoid main(){}\n\n",
        "answer": "\"xxxarmmarxx\""
    },
    {
        "id": 558,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpzln57f3p.d(27): Error: undefined identifier `True`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzln57f3p.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nbool f(long[] nums, long[] mos) \n{\n    foreach (num; mos) {\n        nums = nums.remove(num);\n    }\n    nums.sort();\n    foreach (num; mos) {\n        nums ~= num;\n    }\n    for (size_t i = 0; i < nums.length - 1; i++) {\n        if (nums[i] > nums[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([3L, 1L, 2L, 1L, 4L, 1L], [1L]) == True);\n}\nvoid main(){}\n\n",
        "answer": "True"
    },
    {
        "id": 559,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpphvz7p1f.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x55a3919c0575]\n??:? void tmpphvz7p1f.__unittest_L11_C1() [0x55a3919b683e]\n??:? void tmpphvz7p1f.__modtest() [0x55a3919b78b8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55a3919c83f6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55a3919b8f27]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55a3919c3b63]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55a3919c3bf5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55a3919c3af1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55a3919b8ef9]\n??:? runModuleUnitTests [0x55a3919c822b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string n) \n{\n    return n[0] ~ ('.' ~ n[1..$].replace(\"-\", \"_\"));\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"first-second-third\") == \"f_s_t\");\n}\nvoid main(){}\n\n",
        "answer": "\"f_s_t\""
    },
    {
        "id": 560,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nlong f(string text) \n{\n    long x = 0;\n    foreach (c; text)\n    {\n        if (isLower(c))\n        {\n            x++;\n        }\n    }\n    return x;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"591237865\") == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 561,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmprksiq4ip.d(22): Error: incompatible types for `(f(\"7Ljnw4Lj\", \"7\")) == (\"7\")`: `long` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprksiq4ip.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.conv;\n\nlong f(string text, string digit) \n{\n    long count = 0;\n    foreach (char c; text)\n    {\n        if (c == digit[0])\n        {\n            count++;\n        }\n    }\n    return to!long(digit) * count;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"7Ljnw4Lj\", \"7\") == \"7\");\n}\nvoid main(){}\n\n",
        "answer": "\"7\""
    },
    {
        "id": 562,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpko8uwm3p.d(14): Error: undefined identifier `True`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpko8uwm3p.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nbool f(string text) \n{\n    return text.toUpper == text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"VTBAEPJSLGAHINS\") == True);\n}\nvoid main(){}\n\n",
        "answer": "True"
    },
    {
        "id": 563,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp99oiiej0.d(24): Error: incompatible types for `(f(\"jivespdcxc\", \"sx\")) == (\"jivespdxc\")`: `long` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp99oiiej0.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\n\nlong f(string text1, string text2) \n{\n    long sum = 0;\n    foreach (char c; text2)\n    {\n        foreach (char char1; text1)\n        {\n            if (char1 == c)\n            {\n                sum++;\n            }\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"jivespdcxc\", \"sx\") == \"jivespdxc\");\n}\nvoid main(){}\n\n",
        "answer": "\"jivespdxc\""
    },
    {
        "id": 564,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpshge7hc8.d(14): Error: using the result of a comma expression is not allowed\n/tmp/tmpshge7hc8.d(14): Error: using the result of a comma expression is not allowed\n/tmp/tmpshge7hc8.d(14): Error: using the result of a comma expression is not allowed\n/tmp/tmpshge7hc8.d(14): Error: incompatible types for `(f([[395L, 666L, 7L, 4L], [], [4223L, 111L]])) == (395L , 666L , 7L , 4L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpshge7hc8.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[][] lists) \n{\n    lists[1].length = 0;\n    lists[2] ~= lists[1];\n    return lists[0];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([[395L, 666L, 7L, 4L], [], [4223L, 111L]]) == (395L, 666L, 7L, 4L));\n}\nvoid main(){}\n\n",
        "answer": "(395L, 666L, 7L, 4L)"
    },
    {
        "id": 565,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpvysu3hzn.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x55c306996ac5]\n??:? void tmpvysu3hzn.__unittest_L20_C1() [0x55c30698c7ee]\n??:? void tmpvysu3hzn.__modtest() [0x55c30698da60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55c30699ed9a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55c30698f3e7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55c30699a153]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55c30699a1e5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55c30699a0e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55c30698f3b9]\n??:? runModuleUnitTests [0x55c30699ebcf]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.range;\nimport std.string;\n\nlong f(string text) \n{\n    long result = -1;\n    foreach (ch; \"aeiou\") {\n        auto index = text.indexOf(ch);\n        if (index > result) {\n            result = index;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"qsqgijwmmhbchoj\") == 8);\n}\nvoid main(){}\n\n",
        "answer": "8"
    },
    {
        "id": 566,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.utf;\nimport std.exception;\n\nstring f(string inputString, string code)\n{\n    string t = \"\";\n    try\n    {\n        t = toUTF8(inputString).idup;\n        if (t[$-1] == '\\n')\n            t = t[0..$-1];\n        return toUTF8(t).idup;\n    }\n    catch (Exception e)\n    {\n        return t;\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"towaru\", \"UTF-8\") == \"towaru\");\n}\nvoid main(){}\n\n",
        "answer": "\"towaru\""
    },
    {
        "id": 567,
        "res": 0
    },
    {
        "id": 568,
        "res": 0
    },
    {
        "id": 569,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpw_b5q7nn.d(32): Error: incompatible types for `(f(\"11 1 1\")) == (\"11111\")`: `long` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw_b5q7nn.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong f(string txt) \n{\n    auto coincidences = new AssociativeArray!(char, int);\n    \n    foreach (c; txt)\n    {\n        if (c in coincidences)\n        {\n            coincidences[c]++;\n        }\n        else\n        {\n            coincidences[c] = 1;\n        }\n    }\n    \n    int sum = 0;\n    foreach (value; coincidences.byValue)\n    {\n        sum += value;\n    }\n    \n    return sum;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"11 1 1\") == \"11111\");\n}\nvoid main(){}\n\n",
        "answer": "\"11111\""
    },
    {
        "id": 570,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp6dn9huju.d(18): Error: expression expected, not `)`\n/tmp/tmp6dn9huju.d(18): Error: found `;` when expecting `,`\n/tmp/tmp6dn9huju.d(19): Error: expression expected, not `}`\n/tmp/tmp6dn9huju.d(20): Error: found `void` when expecting `,`\n/tmp/tmp6dn9huju.d(20): Error: found `{` when expecting `,`\n/tmp/tmp6dn9huju.d(20): Error: expression expected, not `}`\n/tmp/tmp6dn9huju.d(22): Error: found `End of File` when expecting `,`\n/tmp/tmp6dn9huju.d(18): Error: found `End of File` when expecting `]`\n/tmp/tmp6dn9huju.d(22): Error: found `End of File` when expecting `)`\n/tmp/tmp6dn9huju.d(22): Error: found `End of File` when expecting `;` following expression\n/tmp/tmp6dn9huju.d(18):        expression: `assert(candidate([2L], 0L, 2L) == [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 7",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nlong[] f(long[] array, long index, long value) {\n    array.insertInPlace(0, index + 1);\n    if (value >= 1) {\n        array.insertInPlace(index, value);\n    }\n    return array;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([2L], 0L, 2L) == [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,);\n}\nvoid main(){}\n\n",
        "answer": "[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,"
    },
    {
        "id": 571,
        "res": 0
    },
    {
        "id": 572,
        "res": 0
    },
    {
        "id": 573,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp0qwgt_eh.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x55f77cdd3e39]\n??:? void tmp0qwgt_eh.__unittest_L14_C1() [0x55f77cdd2815]\n??:? void tmp0qwgt_eh.__modtest() [0x55f77cdd28f0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55f77cde028a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55f77cdd3ac7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55f77cdd581f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55f77cdd58b1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55f77cdd57ad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55f77cdd3a99]\n??:? runModuleUnitTests [0x55f77cde00bf]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.string;\n\nstring f(string string, string prefix) \n{\n    if (string.startsWith(prefix)) {\n        return string[prefix.length..$];\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Vipra\", \"via\") == \"Vipr\");\n}\nvoid main(){}\n\n",
        "answer": "\"Vipr\""
    },
    {
        "id": 574,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpef03875q.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x55cc70facb45]\n??:? void tmpef03875q.__unittest_L21_C1() [0x55cc70fa0863]\n??:? void tmpef03875q.__modtest() [0x55cc70fa3d14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55cc70fb64f6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55cc70fa537f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55cc70fb151b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55cc70fb15ad]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55cc70fb14a9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55cc70fa5351]\n??:? runModuleUnitTests [0x55cc70fb632b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\nimport std.array;\n\nstring f(string[] simpons) \n{\n    string pop;\n    while (!simpons.empty) {\n        pop = simpons.back;\n        simpons.popBack();\n        if (pop == pop.capitalize) {\n            return pop;\n        }\n    }\n    return pop;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"George\", \"Michael\", \"George\", \"Costanza\"]) == \"George\");\n}\nvoid main(){}\n\n",
        "answer": "\"George\""
    },
    {
        "id": 575,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp4_w7a40a.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x5609f97f58b9]\n??:? void tmp4_w7a40a.__unittest_L14_C1() [0x5609f97f57fc]\n??:? void tmp4_w7a40a.__modtest() [0x5609f97f5820]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5609f97f9fb6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5609f97f8127]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5609f97feaeb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5609f97fefbd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5609f97fea79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5609f97f80f9]\n??:? runModuleUnitTests [0x5609f97f9deb]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nlong f(long[] nums, long val) \n{\n    long sum = 0;\n    foreach (num; nums) {\n        foreach (_; 0 .. val) {\n            sum += num;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([10L, 4L], 3L) == 15L);\n}\nvoid main(){}\n\n",
        "answer": "15L"
    },
    {
        "id": 576,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp9_fikx4p.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x5632ef70b4cd]\n??:? void tmp9_fikx4p.__unittest_L19_C1() [0x5632ef709990]\n??:? void tmp9_fikx4p.__modtest() [0x5632ef70a6c4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5632ef718e02]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5632ef70b0b3]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5632ef70d98f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5632ef70da21]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5632ef70d91d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5632ef70b085]\n??:? runModuleUnitTests [0x5632ef718c37]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.conv;\nimport std.array;\n\nstring[] f(long[] array, long constant) {\n    string[] output = [\"x\"];\n    for (size_t i = 1; i <= array.length; ++i) {\n        if (i % 2 != 0) {\n            output ~= to!string(array[i - 1] * -2);\n        } else {\n            output ~= to!string(constant);\n        }\n    }\n    return output;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, 3L], -1L) == [\"x\", \"-2\", \"-3\", \"constant\"]);\n}\nvoid main(){}\n\n",
        "answer": "[\"x\", \"-2\", \"-3\", \"constant\"]"
    },
    {
        "id": 577,
        "res": 0
    },
    {
        "id": 578,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpgmoy27v2.d(25): Error: incompatible types for `(result.get()) == (0L)`: `long[string]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgmoy27v2.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nNullable!(long[string]) f(Nullable!(long[string]) obj) \n{\n    if (!obj.isNull) {\n        auto map = obj.get();\n        foreach (k, v; map) {\n            if (v >= 0) {\n                map[k] = -v;\n            }\n        }\n        return Nullable!(long[string])(map);\n    }\n    return Nullable!(long[string]).init;\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([\"R\": 0L, \"T\": 3L, \"F\": -6L, \"K\": 0L].nullable);\n        assert(!result.isNull && result.get == 0L);\n}\n\n}\nvoid main(){}\n\n",
        "answer": "0L"
    },
    {
        "id": 579,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpv768bn05.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x56119ad74909]\n??:? void tmpv768bn05.__unittest_L23_C1() [0x56119ad58967]\n??:? void tmpv768bn05.__modtest() [0x56119ad6a26c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56119ad7d5a6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56119ad6bdd3]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56119ad791db]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56119ad7926d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56119ad79169]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56119ad6bda5]\n??:? runModuleUnitTests [0x56119ad7d3db]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\nimport std.conv;\nimport std.uni;\n\nstring f(string text) {\n    if (text.length == 0) {\n        return text;\n    }\n    if (text[0].isUpper && text[1 .. $].toLower != text[1 .. $]) {\n        if (text.length > 1 && text.toLower != text) {\n            return text[0].toLower.to!string ~ text[1 .. $];\n        }\n    } else if (text.all!(c => c.isAlpha)) {\n        return text.capitalize;\n    }\n    return text;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"\") == \"hello\");\n}\nvoid main(){}\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 580,
        "res": 0
    },
    {
        "id": 581,
        "res": 0
    },
    {
        "id": 582,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp4syekqv1.d(16): Error: unterminated string constant starting at /tmp/tmp4syekqv1.d(16)\n/tmp/tmp4syekqv1.d(20): Error: found `End of File` when expecting `)`\n/tmp/tmp4syekqv1.d(20): Error: found `End of File` when expecting `;` following expression\n/tmp/tmp4syekqv1.d(16):        expression: `assert(candidate(7L, 5L) == \"\")`\n/tmp/tmp4syekqv1.d(20): Error: matching `}` expected following compound statement, not `End of File`\n/tmp/tmp4syekqv1.d(13):        unmatched `{`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4syekqv1.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long k, long j) \n{\n    long[] arr;\n    foreach (i; 0 .. k) {\n        arr ~= j;\n    }\n    return arr;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(7L, 5L) == \"0000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111);\n}\nvoid main(){}\n\n",
        "answer
    },
    {
        "id": 583,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpglazydq0.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x56241ba82ac5]\n??:? void tmpglazydq0.__unittest_L26_C1() [0x56241ba77999]\n??:? void tmpglazydq0.__modtest() [0x56241ba7997c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56241ba8cd72]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56241ba7b2ff]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56241ba884e3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56241ba88575]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56241ba88471]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56241ba7b2d1]\n??:? runModuleUnitTests [0x56241ba8cba7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\nimport std.conv;\n\nstring f(string text, string ch) \n{\n    string[] lines = text.splitLines;\n    string[] result;\n    foreach (line; lines)\n    {\n        if (line.length > 0 && line[0] == ch[0])\n        {\n            result ~= line.toLower();\n        }\n        else\n        {\n            result ~= line.toUpper();\n        }\n    }\n    return result.join(\"\\n\");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"t\nza\na\", \"t\") == \"T\\nZ\\nA\\nT\");\n}\nvoid main(){}\n\n",
        "answer": "\"T\\nZ\\nA\\nT\""
    },
    {
        "id": 584,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpzx038493.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x55e7e1330cf9]\n??:? void tmpzx038493.__unittest_L11_C1() [0x55e7e132f78a]\n??:? void tmpzx038493.__modtest() [0x55e7e132f7b0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55e7e133cff6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55e7e1330987]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55e7e13326db]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55e7e133276d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55e7e1332669]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55e7e1330959]\n??:? runModuleUnitTests [0x55e7e133ce2b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string txt) \n{\n    return txt;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"5123807309875480094949830\") == \"123807309875480094949830\");\n}\nvoid main(){}\n\n",
        "answer": "\"123807309875480094949830\""
    },
    {
        "id": 585,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpe1c8g__t.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x55b50c4476f5]\n??:? void tmpe1c8g__t.__unittest_L26_C1() [0x55b50c4468b6]\n??:? void tmpe1c8g__t.__modtest() [0x55b50c447514]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55b50c44cf0e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55b50c44adaf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55b50c451f5f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55b50c452431]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55b50c451eed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55b50c44ad81]\n??:? runModuleUnitTests [0x55b50c44cd43]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.conv;\n\nstring f(string text) \n{\n    int count = countOccurrences(text, text[0]);\n    auto ls = text.dup;\n    foreach (_; 0 .. count) {\n        ls = ls[1 .. $];\n    }\n    return to!string(ls);\n}\n\nint countOccurrences(string text, char c)\n{\n    int count = 0;\n    foreach (char ch; text) {\n        if (ch == c) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\";,,,?\") == \"tuple(5L, 12L)\");\n}\nvoid main(){}\n\n",
        "answer": "\"tuple(5L, 12L)\""
    },
    {
        "id": 586,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpkm0lqxcw.d(14): Error: incompatible types for `(f(\"breakfast\", \"e\")) == (\"ssss\")`: `long` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkm0lqxcw.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nlong f(string text, string character) \n{\n    return text.lastIndexOf(character);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"breakfast\", \"e\") == \"ssss\");\n}\nvoid main(){}\n\n",
        "answer": "\"ssss\""
    },
    {
        "id": 587,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpi2iuh5ze.d(25): Error: incompatible types for `(result.get()) == (\"abcca\")`: `string[long]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi2iuh5ze.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nNullable!(string[long]) f(long[] nums, string fill) \n{\n    if (nums.length > 0) {\n        string[long] ans;\n        foreach (n; nums) {\n            ans[n] = fill;\n        }\n        return Nullable!(string[long])(ans);\n    }\n    return Nullable!(string[long]).init;\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([0L, 1L, 1L, 2L], \"abcca\");\n        assert(!result.isNull && result.get == \"abcca\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"abcca\""
    },
    {
        "id": 588,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp2bmbkf96.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x56328d92d639]\n??:? void tmp2bmbkf96.__unittest_L15_C1() [0x56328d92c8a8]\n??:? void tmp2bmbkf96.__modtest() [0x56328d92c978]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56328d939cae]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56328d92d36b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56328d92edef]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56328d92ee81]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56328d92ed7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56328d92d33d]\n??:? runModuleUnitTests [0x56328d939ae3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nlong f(string[] items, string target) \n{\n    foreach (i, item; items)\n    {\n        if (item == target)\n            return i;\n    }\n    return -1;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"1\", \"+\", \"-\", \"**\", \"//\", \"*\", \"+\"], \"**\") == -1);\n}\nvoid main(){}\n\n",
        "answer": "-1"
    },
    {
        "id": 589,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp_omgm8u9.d(13): Error: incompatible types for `(f([-70L, 20L, 9L, 1L])) == (-70L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_omgm8u9.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] num) \n{\n    num ~= num[$-1];\n    return num;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([-70L, 20L, 9L, 1L]) == -70L);\n}\nvoid main(){}\n\n",
        "answer": "-70L"
    },
    {
        "id": 590,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpbiq1cllt.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x5613b425be15]\n??:? void tmpbiq1cllt.__unittest_L14_C1() [0x5613b42507f2]\n??:? void tmpbiq1cllt.__modtest() [0x5613b4252d80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5613b4264ab2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5613b4254707]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5613b425ff73]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5613b4260005]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5613b425ff01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5613b42546d9]\n??:? runModuleUnitTests [0x5613b42648e7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.conv;\n\nstring f(string text) {\n    foreach_reverse (i; 1 .. 11) {\n        text = text.stripLeft(to!string(i));\n    }\n    return text;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"25000   $\") == \"25000 $\");\n}\nvoid main(){}\n\n",
        "answer": "\"25000 $\""
    },
    {
        "id": 591,
        "res": 0
    },
    {
        "id": 592,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpp66lw28e.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x55c3880fe9f9]\n??:? void tmpp66lw28e.__unittest_L12_C1() [0x55c3880fe846]\n??:? void tmpp66lw28e.__modtest() [0x55c3880fe964]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55c388103d06]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55c388101cf7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55c3881081e3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55c3881086b5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55c388108171]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55c388101cc9]\n??:? runModuleUnitTests [0x55c388103b3b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] numbers) \n{\n    long[] new_numbers;\n    foreach_reverse(idx, val; numbers) {\n        new_numbers ~= val;\n    }\n    return new_numbers;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([11L, 3L]) == \"eleven three\");\n}\nvoid main(){}\n\n",
        "answer": "\"eleven three\""
    },
    {
        "id": 593,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmptnpr0b_t.d(19): Error: incompatible types for `(f([], 14L)) == (0)`: `long[]` and `int`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptnpr0b_t.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nlong[] f(long[] nums, long n) \n{\n    auto pos = nums.length - 1;\n    foreach (i; -nums.length .. 0)\n    {\n        nums ~= nums[i];\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([], 14L) == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 594,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpz4johl25.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x5621c6df9a5d]\n??:? void tmpz4johl25.__unittest_L11_C1() [0x5621c6def788]\n??:? void tmpz4johl25.__modtest() [0x5621c6df09f8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5621c6e01d32]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5621c6df237f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5621c6dfd0eb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5621c6dfd17d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5621c6dfd079]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5621c6df2351]\n??:? runModuleUnitTests [0x5621c6e01b67]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nlong f(string file) \n{\n    return file.indexOf('\\n');\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"n wez szize lnson tilebi it 504n.\n\") == 504);\n}\nvoid main(){}\n\n",
        "answer": "504"
    },
    {
        "id": 595,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp3yuouh6q.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x563299b2fa7d]\n??:? void tmp3yuouh6q.__unittest_L16_C1() [0x563299b23825]\n??:? void tmp3yuouh6q.__modtest() [0x563299b26c48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x563299b3936a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x563299b282b7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x563299b3438f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x563299b34421]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x563299b3431d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x563299b28289]\n??:? runModuleUnitTests [0x563299b3919f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.conv;\n\nstring f(string text, string prefix) \n{\n    if (text.startsWith(prefix))\n    {\n        text = text[prefix.length .. $];\n    }\n    text = text.capitalize();\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"qdhstudentamxupuihbuztn\", \"jdm\") == \"QHSTUIAHBNUZTNAH\");\n}\nvoid main(){}\n\n",
        "answer": "\"QHSTUIAHBNUZTNAH\""
    },
    {
        "id": 596,
        "res": 0
    },
    {
        "id": 597,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp3a3oic8j.d(14): unittest failure\n----------------\n??:? _d_unittestp [0x55c17f86bd01]\n??:? void tmp3a3oic8j.__unittest_L10_C1() [0x55c17f86a792]\n??:? void tmp3a3oic8j.__modtest() [0x55c17f86a7b8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55c17f878256]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55c17f86b98f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55c17f86d6e3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55c17f86d775]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55c17f86d671]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55c17f86b961]\n??:? runModuleUnitTests [0x55c17f87808b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string s) \n{\n    return s.toUpper;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Jaafodsfa SOdofj AoaFjIs  JAFasIdfSa1\") == \"JAFASIDFSA1\");\n}\nvoid main(){}\n\n",
        "answer": "\"JAFASIDFSA1\""
    },
    {
        "id": 598,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpo5wvt3hq.d(13): unittest failure\n----------------\n??:? _d_unittestp [0x555c79bcc951]\n??:? void tmpo5wvt3hq.__unittest_L9_C1() [0x555c79bcc7ec]\n??:? void tmpo5wvt3hq.__modtest() [0x555c79bcc8b8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x555c79bcfee2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x555c79bd6133]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x555c79be0a17]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x555c79bd45c9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x555c79be09a5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x555c79bd6105]\n??:? runModuleUnitTests [0x555c79bcfd17]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int f",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text, long n) \n{\n    auto length = text.length;\n    return text[length*(n%4) .. $];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"abc\", 1L) == \"abcde\");\n}\nvoid main(){}\n\n",
        "answer": "\"abcde\""
    },
    {
        "id": 599,
        "res": 0
    },
    {
        "id": 600,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpg1xnehyy.d(31): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg1xnehyy.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.conv;\n\nstring repeatString(string str, size_t times) {\n    string result = \"\";\n    foreach (_; 0 .. times) {\n        result ~= str;\n    }\n    return result;\n}\n\nstring[] f(long[] array) \n{\n    string[] just_ns;\n    foreach (num; array) {\n        just_ns ~= repeatString(\"n\", num);\n    }\n    string[] final_output;\n    foreach (wipe; just_ns) {\n        final_output ~= wipe;\n    }\n    return final_output;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([]) == \"n\");\n}\nvoid main(){}\n\n",
        "answer": "\"n\""
    },
    {
        "id": 601,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp1cwhlip7.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x55ef20b6c5fd]\n??:? void tmp1cwhlip7.__unittest_L27_C1() [0x55ef20b62a0a]\n??:? void tmp1cwhlip7.__modtest() [0x55ef20b638b4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55ef20b75876]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55ef20b64f1f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55ef20b709af]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55ef20b70a41]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55ef20b7093d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55ef20b64ef1]\n??:? runModuleUnitTests [0x55ef20b756ab]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string text) {\n    int t = 5;\n    string[] tab;\n    foreach (i; text) {\n        if (canFind(\"aeiouy\", i.toLower())) {\n            string repeated = \"\";\n            foreach (_; 0 .. t) {\n                repeated ~= i.toUpper();\n            }\n            tab ~= repeated;\n        } else {\n            string repeated = \"\";\n            foreach (_; 0 .. t) {\n                repeated ~= i;\n            }\n            tab ~= repeated;\n        }\n    }\n    return tab.join(\" \");\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"csharp\") == \"CCUUDDDDDUUUU\");\n}\nvoid main(){}\n\n",
        "answer": "\"CCUUDDDDDUUUU\""
    },
    {
        "id": 602,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpfnnzp32_.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x5584963c6891]\n??:? void tmpfnnzp32_.__unittest_L17_C1() [0x5584963c67d3]\n??:? void tmpfnnzp32_.__modtest() [0x5584963c67f8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5584963caf8e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5584963c90ff]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5584963cfac3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5584963cff95]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5584963cfa51]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5584963c90d1]\n??:? runModuleUnitTests [0x5584963cadc3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\n\nlong f(long[] nums, long target) \n{\n    long cnt = 0;\n    foreach (num; nums)\n    {\n        if (num == target)\n        {\n            cnt++;\n        }\n    }\n    return cnt * 2;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 1L], 1L) == 2L);\n}\nvoid main(){}\n\n",
        "answer": "2L"
    },
    {
        "id": 603,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nstring f(string sentences) \n{\n    bool oscillating = true;\n    foreach (sentence; sentences.split('.'))\n    {\n        if (!sentence.isNumeric)\n        {\n            oscillating = false;\n            break;\n        }\n    }\n    \n    if (oscillating)\n    {\n        return \"oscillating\";\n    }\n    else\n    {\n        return \"not oscillating\";\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"not numbers\") == \"not oscillating\");\n}\nvoid main(){}\n\n",
        "answer": "\"not oscillating\""
    },
    {
        "id": 604,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpiuophsl6.d(14): Error: undefined identifier `True`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiuophsl6.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nbool f(string text, string start) \n{\n    return text.startsWith(start);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Hello world\", \"Hello\") == True);\n}\nvoid main(){}\n\n",
        "answer": "True"
    },
    {
        "id": 605,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(long[] nums) \n{\n    nums.length = 0;\n    return \"quack\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([2L, 5L, 1L, 7L, 9L, 3L]) == \"quack\");\n}\nvoid main(){}\n\n",
        "answer": "\"quack\""
    },
    {
        "id": 606,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpjet2t5ub.d(14): unittest failure\n----------------\n??:? _d_unittestp [0x55f1b7c4aa21]\n??:? void tmpjet2t5ub.__unittest_L10_C1() [0x55f1b7c4a7be]\n??:? void tmpjet2t5ub.__modtest() [0x55f1b7c4a98c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55f1b7c4fbfa]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55f1b7c4dbeb]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55f1b7c53ee7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55f1b7c543b9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55f1b7c53e75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55f1b7c4dbbd]\n??:? runModuleUnitTests [0x55f1b7c4fa2f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string value) \n{\n    auto ls = value;\n    ls ~= \"NHIB\";\n    return ls;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"ruam\") == \"ruam\");\n}\nvoid main(){}\n\n",
        "answer": "\"ruam\""
    },
    {
        "id": 607,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpxmusg4bd.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x5644a7482989]\n??:? void tmpxmusg4bd.__unittest_L15_C1() [0x5644a74827b4]\n??:? void tmpxmusg4bd.__modtest() [0x5644a74828f0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5644a7485f42]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5644a748c193]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5644a7496bcf]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5644a748a629]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5644a7496b5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5644a748c165]\n??:? runModuleUnitTests [0x5644a7485d77]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nbool f(string text) \n{\n    foreach (i; ['.', '!', '?']) {\n        if (text.endsWith(i)) {\n            return true;\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\". C.\") == false);\n}\nvoid main(){}\n\n",
        "answer": "false"
    },
    {
        "id": 608,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp8kwipa7p.d(23): Error: incompatible types for `(result.get()) == (\"1 2 3\")`: `long[long]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8kwipa7p.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nNullable!(long[long]) f(Nullable!(long[long]) aDict) \n{\n    if (!aDict.isNull) {\n        long[long] result;\n        foreach (k, v; aDict.get()) {\n            result[v] = k;\n        }\n        return Nullable!(long[long])(result);\n    }\n    return Nullable!(long[long]).init;\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([1L: 1L, 2L: 2L, 3L: 3L].nullable);\n        assert(!result.isNull && result.get == \"1 2 3\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"1 2 3\""
    },
    {
        "id": 609,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpr08_hiua.d(29): Error: found `std` when expecting `(` following `import`\n/tmp/tmpr08_hiua.d(29): Error: found `;` when expecting `)`\n/tmp/tmpr08_hiua.d(30): Error: found `import` when expecting `)`\n/tmp/tmpr08_hiua.d(30): Error: found `std` when expecting `;` following expression\n/tmp/tmpr08_hiua.d(29):        expression: `assert(!result.isNull && (result.get == import(.math)))`\n/tmp/tmpr08_hiua.d(49): Error: found `unittest` instead of statement\n/tmp/tmpr08_hiua.d(53): Error: expression expected, not `?`\n/tmp/tmpr08_hiua.d(53): Error: expression expected, not `?`\n/tmp/tmpr08_hiua.d(53): Error: expression expected, not `)`\n/tmp/tmpr08_hiua.d(53): Error: found `;` when expecting `:`\n/tmp/tmpr08_hiua.d(54): Error: expression expected, not `}`\n/tmp/tmpr08_hiua.d(55): Error: found `void` when expecting `:`\n/tmp/tmpr08_hiua.d(55): Error: found `{` when expecting `)`\n/tmp/tmpr08_hiua.d(55): Error: found `}` when expecting `;` following expression\n/tmp/tmpr08_hiua.d(53):        expression: `assert(candidate(",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nNullable!(long[long]) f(Nullable!(long[long]) array, long elem) \n{\n    if (array.isNull) {\n        return Nullable!(long[long]).init;\n    }\n\n    auto result = array.get;\n    while (result.length != 0) {\n        auto key = result.keys[result.length - 1];\n        auto value = result[key];\n        if (elem == key || elem == value) {\n            result = array.get;\n        }\n        result.remove(key);\n    }\n    return Nullable!(long[long])(result);\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate(Nullable!(long[long]).init, 1L);\n        assert(!result.isNull && result.get == import std.math;\nimport std.typecons;\n\nNullable!(long[long]) f(Nullable!(long[long]) array, long elem) \n{\n    if (array.isNull) {\n        return Nullable!(long[long]).init;\n    }\n\n    auto result = array.get;\n    while (result.length != 0) {\n        auto key = result.keys[result.length - 1];\n        auto value = result[key];\n        if (elem == key || elem == value) {\n            result = array.get;\n        }\n        result.remove(key);\n    }\n    return array.get(result.get);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"x\": 5L, \"y\": 12L].nullable) == ????);\n}\nvoid main(){}\n\nNote: The above code is for testing purposes only and may not be suitable for production code. Please use the provided code as a reference for testing purposes.);\n}\n\n}\nvoid main(){}\n\n",
        "answer": "import std.math;\nimport std.typecons;\n\nNullable!(long[long]) f(Nullable!(long[long]) array, long elem) \n{\n    if (array.isNull) {\n        return Nullable!(long[long]).init;\n    }\n\n    auto result = array.get;\n    while (result.length != 0) {\n        auto key = result.keys[result.length - 1];\n        auto value = result[key];\n        if (elem == key || elem == value) {\n            result = array.get;\n        }\n        result.remove(key);\n    }\n    return array.get(result.get);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"x\": 5L, \"y\": 12L].nullable) == ????);\n}\nvoid main(){}\n\nNote: The above code is for testing purposes only and may not be suitable for production code. Please use the provided code as a reference for testing purposes."
    },
    {
        "id": 610,
        "res": 0
    },
    {
        "id": 611,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmprekdl0zk.d(15): Error: using the result of a comma expression is not allowed\n/tmp/tmprekdl0zk.d(15): Error: using the result of a comma expression is not allowed\n/tmp/tmprekdl0zk.d(15): Error: using the result of a comma expression is not allowed\n/tmp/tmprekdl0zk.d(15): Error: using the result of a comma expression is not allowed\n/tmp/tmprekdl0zk.d(15): Error: using the result of a comma expression is not allowed\n/tmp/tmprekdl0zk.d(15): Error: incompatible types for `(f([-6L, -2L, 1L, -3L, 0L, 1L])) == (-6L , -2L , 1L , -3L , 0L , 1L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprekdl0zk.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] nums) \n{\n    import std.algorithm.mutation : reverse;\n    \n    nums.reverse();\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([-6L, -2L, 1L, -3L, 0L, 1L]) == (-6L, -2L, 1L, -3L, 0L, 1L));\n}\nvoid main(){}\n\n",
        "answer": "(-6L, -2L, 1L, -3L, 0L, 1L)"
    },
    {
        "id": 612,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp4v2wax2a.d(14): Error: incompatible types for `(result.get()) == (\"42L-1337L-1L-5\")`: `long[string]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4v2wax2a.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nNullable!(long[string]) f(Nullable!(long[string]) d) \n{\n    return d;\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([\"a\": 42L, \"b\": 1337L, \"c\": -1L, \"d\": 5L].nullable);\n        assert(!result.isNull && result.get == \"42L-1337L-1L-5\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"42L-1337L-1L-5\""
    },
    {
        "id": 613,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpcbs_zzqs.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x5603ee0d9f71]\n??:? void tmpcbs_zzqs.__unittest_L25_C1() [0x5603ee0d89ae]\n??:? void tmpcbs_zzqs.__modtest() [0x5603ee0d8a2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5603ee0e70b6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5603ee0d9bff]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5603ee0dc3e3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5603ee0dc475]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5603ee0dc371]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5603ee0d9bd1]\n??:? runModuleUnitTests [0x5603ee0e6eeb]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text) \n{\n    auto mid = (text.length - 1) / 2;\n    string result;\n    for (size_t i = 0; i < mid; i++)\n    {\n        result ~= text[i];\n    }\n    for (size_t i = mid; i < text.length - 1; i++)\n    {\n        result ~= text[mid + text.length - 1 - i];\n    }\n    while (result.length < text.length)\n    {\n        result ~= text[text.length - 1];\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"eat!\") == \"t\");\n}\nvoid main(){}\n\n",
        "answer": "\"t\""
    },
    {
        "id": 614,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpmbtk4_q0.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x55b2f15e404d]\n??:? void tmpmbtk4_q0.__unittest_L22_C1() [0x55b2f15d9811]\n??:? void tmpmbtk4_q0.__modtest() [0x55b2f15dafec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55b2f15ec51e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55b2f15dc96f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55b2f15e7803]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55b2f15e7895]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55b2f15e7791]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55b2f15dc941]\n??:? runModuleUnitTests [0x55b2f15ec353]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nlong f(string text, string substr, long occ) {\n    long n = 0;\n    while (true) {\n        long i = text.lastIndexOf(substr);\n        if (i == -1) {\n            break;\n        } else if (n == occ) {\n            return i;\n        } else {\n            n += 1;\n            text = text[0 .. i];\n        }\n    }\n    return -1;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"zjegiymjc\", \"j\", 2L) == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 615,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpvzzdy6yd.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x55d9f3758e2d]\n??:? void tmpvzzdy6yd.__unittest_L22_C1() [0x55d9f374f8b1]\n??:? void tmpvzzdy6yd.__modtest() [0x55d9f3750620]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55d9f376174e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55d9f375174f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55d9f375cdf3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55d9f375ce85]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55d9f375cd81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55d9f3751721]\n??:? runModuleUnitTests [0x55d9f3761583]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.range;\n\nlong f(long[] in_list, long num) \n{\n    in_list ~= num;\n    long maxIndex = -1;\n    long maxValue = -1;\n    foreach (i, value; in_list[0 .. $-1].enumerate)\n    {\n        if (value > maxValue)\n        {\n            maxValue = value;\n            maxIndex = i;\n        }\n    }\n    return maxIndex;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([-1L, 12L, -6L, -2L], -1L) == -1);\n}\nvoid main(){}\n\n",
        "answer": "-1"
    },
    {
        "id": 616,
        "res": 0
    },
    {
        "id": 617,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpkv1pyavn.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x561e58136d59]\n??:? void tmpkv1pyavn.__unittest_L16_C1() [0x561e581357ea]\n??:? void tmpkv1pyavn.__modtest() [0x561e58135810]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x561e58143056]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x561e581369e7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x561e5813873b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x561e581387cd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x561e581386c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x561e581369b9]\n??:? runModuleUnitTests [0x561e58142e8b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text)\n{\n    foreach (i, c; text)\n    {\n        if (c > 127)\n            return \"non ascii\";\n    }\n    return \"ascii\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"<<<<\") == \"non ascii\");\n}\nvoid main(){}\n\n",
        "answer": "\"non ascii\""
    },
    {
        "id": 618,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\n\nstring f(string match, string fill, long n) \n{\n    return fill[0 .. min(n, fill.length)] ~ match;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"9\", \"8\", 2L) == \"89\");\n}\nvoid main(){}\n\n",
        "answer": "\"89\""
    },
    {
        "id": 619,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp1tr3gy1v.d(14): unittest failure\n----------------\n??:? _d_unittestp [0x558fbb90cd01]\n??:? void tmp1tr3gy1v.__unittest_L10_C1() [0x558fbb90b792]\n??:? void tmp1tr3gy1v.__modtest() [0x558fbb90b7b8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x558fbb919256]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x558fbb90c98f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x558fbb90e6e3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x558fbb90e775]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x558fbb90e671]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x558fbb90c961]\n??:? runModuleUnitTests [0x558fbb91908b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string title) \n{\n    return toLower(title);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"   Rock   Paper   SCISSORS  \") == \"rockpaperscissors\");\n}\nvoid main(){}\n\n",
        "answer": "\"rockpaperscissors\""
    },
    {
        "id": 620,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpnjt96mkn.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x558402c0ab91]\n??:? void tmpnjt96mkn.__unittest_L13_C1() [0x558402c0a82a]\n??:? void tmpnjt96mkn.__modtest() [0x558402c0aafc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x558402c10692]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x558402c0e58b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x558402c15477]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x558402c15949]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x558402c15405]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x558402c0e55d]\n??:? runModuleUnitTests [0x558402c104c7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string x) \n{\n    string result;\n    foreach (c; x)\n    {\n        result = c ~ \" \" ~ result;\n    }\n    return result[0 .. $ - 1];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"lert dna ndqmxohi3\") == \"lert dna ndqmxohi3\");\n}\nvoid main(){}\n\n",
        "answer": "\"lert dna ndqmxohi3\""
    },
    {
        "id": 621,
        "res": 0
    },
    {
        "id": 622,
        "res": 0
    },
    {
        "id": 623,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpouk5omjo.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x55ec93b06f31]\n??:? void tmpouk5omjo.__unittest_L26_C1() [0x55ec93b059c1]\n??:? void tmpouk5omjo.__modtest() [0x55ec93b059e8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55ec93b13aea]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55ec93b06bbf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55ec93b08a6f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55ec93b08b01]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55ec93b089fd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55ec93b06b91]\n??:? runModuleUnitTests [0x55ec93b1391f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text, string[] rules) \n{\n    foreach (rule; rules)\n    {\n        if (rule == \"@\")\n        {\n            text = text[$-1 .. 0];\n        }\n        else if (rule == \"~\")\n        {\n            text = text.toUpper();\n        }\n        else if (text.length > 0 && text[$-1] == rule[0])\n        {\n            text = text[0 .. $-1];\n        }\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"hi~!\", [\"~\", \"`\", \"!\", \"&\"]) == \"Hi!\");\n}\nvoid main(){}\n\n",
        "answer": "\"Hi!\""
    },
    {
        "id": 624,
        "res": 0
    },
    {
        "id": 625,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp50rtbu7p.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x557acb4ffd41]\n??:? void tmp50rtbu7p.__unittest_L19_C1() [0x557acb4fe7d5]\n??:? void tmp50rtbu7p.__modtest() [0x557acb4fe7f8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x557acb50c03e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x557acb4ff9cf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x557acb501723]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x557acb5017b5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x557acb5016b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x557acb4ff9a1]\n??:? runModuleUnitTests [0x557acb50be73]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nlong f(string text) \n{\n    long count = 0;\n    foreach (i; text)\n    {\n        if (i == '.' || i == '?' || i == '!' || i == ',' || i == '.')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"bwiajegrwjd??djoda,?\") == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 626,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp9ra8xquz.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x55b8ecc8f729]\n??:? void tmp9ra8xquz.__unittest_L28_C1() [0x55b8ecc75a75]\n??:? void tmp9ra8xquz.__modtest() [0x55b8ecc84f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55b8ecc979b2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55b8ecc86cab]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55b8ecc93c9b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55b8ecc93d2d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55b8ecc93c29]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55b8ecc86c7d]\n??:? runModuleUnitTests [0x55b8ecc977e7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\nimport std.conv;\n\nstring f(string line, Tuple!(string, string)[] equalityMap) {\n    // Create a map from the equalityMap\n    string[string] rs;\n    foreach (t; equalityMap) {\n        rs[t[0]] = t[1];\n    }\n    \n    // Translate the line using the map\n    string result;\n    foreach (c; line) {\n        if (c.to!string in rs) {\n            result ~= rs[c.to!string];\n        } else {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"abab\", [tuple(\"a\", \"b\"), tuple(\"b\", \"a\")]) == \"abab\");\n}\nvoid main(){}\n\n",
        "answer": "\"abab\""
    },
    {
        "id": 627,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp7cs42uoi.d(26): Error: using the result of a comma expression is not allowed\n/tmp/tmp7cs42uoi.d(26): Error: incompatible types for `(f([tuple(\"u\", 1L), tuple(\"s\", 7L), tuple(\"u\", -5L)])) == (1L , -5L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7cs42uoi.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.string;\nimport std.range;\n\nlong[] f(Tuple!(string, long)[] parts) {\n    auto dict = parts.assocArray;\n    long[] result;\n    foreach (part; parts) {\n        if (part[0] in dict) {\n            result ~= dict[part[0]];\n            dict.remove(part[0]);\n        }\n    }\n    return result;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([tuple(\"u\", 1L), tuple(\"s\", 7L), tuple(\"u\", -5L)]) == (1L, -5L));\n}\nvoid main(){}\n\n",
        "answer": "(1L, -5L)"
    },
    {
        "id": 628,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpp1akzban.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x5622fd281b59]\n??:? void tmpp1akzban.__unittest_L21_C1() [0x5622fd2818d5]\n??:? void tmpp1akzban.__modtest() [0x5622fd281ac4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5622fd2874f6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5622fd2853ef]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5622fd28c41b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5622fd28c8ed]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5622fd28c3a9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5622fd2853c1]\n??:? runModuleUnitTests [0x5622fd28732b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] nums, long del) \n{\n    foreach (i,n; nums)\n    {\n        if (n == del)\n        {\n            nums = nums[0 .. i] ~ nums[i + 1 .. $];\n            break;\n        }\n    }\n    return nums;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([4L, 5L, 3L, 6L, 1L], 5L) == [4L, 5L, 3L, 6L, 1L]);\n}\nvoid main(){}\n\n",
        "answer": "[4L, 5L, 3L, 6L, 1L]"
    },
    {
        "id": 629,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text, string dng) \n{\n    if (text.length < dng.length) {\n        return text;\n    }\n    if (text[$-dng.length .. $] == dng) {\n        return text[0 .. $-dng.length];\n    }\n    return text[0 .. $-1] ~ f(text[0 .. $-2], dng);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"catNG\", \"NG\") == \"cat\");\n}\nvoid main(){}\n\n",
        "answer": "\"cat\""
    },
    {
        "id": 630,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpsvb7ih9d.d(25): Error: none of the overloads of template `std.typecons.Tuple!(long, long).Tuple.opEquals` are callable using argument types `!()(long[long])`\n/usr/include/dmd/phobos/std/typecons.d(796):        Candidates are: `opEquals(R)(R rhs)`\n  with `R = long[long]`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(803):                        `opEquals(R)(R rhs) const`\n  with `R = long[long]`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(810):                        `opEquals(R...)(auto ref R rhs)`\n  with `R = (long[long])`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > R.length > 1\n  - areCompatibleTuples!(typeof(this), Tuple!R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n  Tip: not satisfied constraints are marked with `>`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsvb7ih9d.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\n\nNullable!(long[long]) f(Nullable!(long[long]) original, Nullable!(long[long]) string) \n{\n    if(original.isNull || string.isNull) {\n        return Nullable!(long[long]).init;\n    }\n    \n    auto temp = original.get().dup;\n    \n    foreach(a, b; string.get()) {\n        temp[b] = a;\n    }\n    \n    return Nullable!(long[long])(temp);\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([1L: -9L, 0L: -7L].nullable, [1L: 2L, 0L: 3L].nullable);\n        assert(!result.isNull && result.get == tuple(0L, 0L));\n}\n\n}\nvoid main(){}\n\n",
        "answer": "tuple(0L, 0L)"
    },
    {
        "id": 631,
        "res": 0
    },
    {
        "id": 632,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp01x5l5rb.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x5574c5447b21]\n??:? void tmp01x5l5rb.__unittest_L18_C1() [0x5574c54479b2]\n??:? void tmp01x5l5rb.__modtest() [0x5574c5447a8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5574c544c3e6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5574c544a3d7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5574c5450f1b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5574c54513ed]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5574c5450ea9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5574c544a3a9]\n??:? runModuleUnitTests [0x5574c544c21b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\n\nlong[] f(long[] lst) \n{\n    for (int i = cast(int)(lst.length - 1); i > 0; i--) {\n        for (int j = 0; j < i; j++) {\n            if (lst[j] > lst[j + 1]) {\n                auto temp = lst[j];\n                lst[j] = lst[j + 1];\n                lst[j + 1] = temp;\n            }\n        }\n    }\n    return lst;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([63L, 0L, 1L, 5L, 9L, 87L, 0L, 7L, 25L, 4L]) == [63L, 0L, 1L, 5L, 9L, 87L, 0L, 7L, 25L, 4L]);\n}\nvoid main(){}\n\n",
        "answer": "[63L, 0L, 1L, 5L, 9L, 87L, 0L, 7L, 25L, 4L]"
    },
    {
        "id": 633,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp60pvytue.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x560efd492e2d]\n??:? void tmp60pvytue.__unittest_L24_C1() [0x560efd489830]\n??:? void tmp60pvytue.__modtest() [0x560efd48a624]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x560efd49b74e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x560efd48b74f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x560efd496df3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x560efd496e85]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x560efd496d81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x560efd48b721]\n??:? runModuleUnitTests [0x560efd49b583]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.algorithm;\nimport std.range;\n\nlong f(long[] array, long elem) \n{\n    long found = -1;\n    array.reverse();\n    foreach (i, value; array.enumerate)\n    {\n        if (value == elem)\n        {\n            found = i;\n            break;\n        }\n    }\n    array.reverse();\n    return found;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([5L, -3L, 3L, 2L], 2L) == -1);\n}\nvoid main(){}\n\n",
        "answer": "-1"
    },
    {
        "id": 634,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpgzmb_cjw.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x56229c986b25]\n??:? void tmpgzmb_cjw.__unittest_L19_C1() [0x56229c97c9d6]\n??:? void tmpgzmb_cjw.__modtest() [0x56229c97ddd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56229c98f12a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56229c97f447]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56229c98a23f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56229c98a2d1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56229c98a1cd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56229c97f419]\n??:? runModuleUnitTests [0x56229c98ef5f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.string;\n\nstring f(string input_string) \n{\n    while (input_string.canFind('a') || input_string.canFind('A'))\n    {\n        input_string = input_string.replace(\"a\", \"i\").replace(\"A\", \"i\");\n        input_string = input_string.replace(\"i\", \"o\").replace(\"I\", \"O\");\n        input_string = input_string.replace(\"o\", \"u\").replace(\"O\", \"U\");\n        input_string = input_string.replace(\"u\", \"a\").replace(\"U\", \"A\");\n    }\n    return input_string;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"biec\") == \"bUnicode\");\n}\nvoid main(){}\n\n",
        "answer": "\"bUnicode\""
    },
    {
        "id": 635,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpt7vrzb4x.d(25): Error: incompatible types for `(f(\"9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW\")) == (\"HELLO WORLD\")`: `bool` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt7vrzb4x.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\n\nbool f(string text) \n{\n    string valid_chars = \"-_+./ \";\n    text = text.toUpper();\n    foreach (c; text)\n    {\n        if ((c < '0' || c > '9') && (c < 'A' || c > 'Z') && valid_chars.indexOf(c) == -1)\n        {\n            return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW\") == \"HELLO WORLD\");\n}\nvoid main(){}\n\n",
        "answer": "\"HELLO WORLD\""
    },
    {
        "id": 636,
        "res": 0
    },
    {
        "id": 637,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpc6ihaq6z.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x558e44953ee5]\n??:? void tmpc6ihaq6z.__unittest_L19_C1() [0x558e44946806]\n??:? void tmpc6ihaq6z.__modtest() [0x558e4494ac78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x558e4495df2e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x558e4494c71f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x558e449597ff]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x558e44959891]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x558e4495978d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x558e4494c6f1]\n??:? runModuleUnitTests [0x558e4495dd63]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nstring f(string text) \n{\n    auto words = text.split(' ');\n    foreach (word; words)\n    {\n        if (!word.isNumeric)\n        {\n            return \"no\";\n        }\n    }\n    return \"yes\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"03625163633 d\") == \"yes\");\n}\nvoid main(){}\n\n",
        "answer": "\"yes\""
    },
    {
        "id": 638,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string s, string suffix) \n{\n    if (suffix.length == 0) {\n        return s;\n    }\n    while (s.endsWith(suffix)) {\n        s = s[0 .. $ - suffix.length];\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"ababa\", \"ab\") == \"ababa\");\n}\nvoid main(){}\n\n",
        "answer": "\"ababa\""
    },
    {
        "id": 639,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpnthrvd28.d(22): Error: unterminated string constant starting at /tmp/tmpnthrvd28.d(22)\n/tmp/tmpnthrvd28.d(26): Error: found `End of File` when expecting `)`\n/tmp/tmpnthrvd28.d(26): Error: found `End of File` when expecting `;` following expression\n/tmp/tmpnthrvd28.d(22):        expression: `assert(candidate(\"xabxfiwoexahxaxbxs\", \"xbabcabccb\") == \"\")`\n/tmp/tmpnthrvd28.d(26): Error: matching `}` expected following compound statement, not `End of File`\n/tmp/tmpnthrvd28.d(19):        unmatched `{`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnthrvd28.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string perc, string full) \n{\n    string reply = \"\";\n    size_t i = 0;\n    while (i < perc.length && i < full.length && perc[i] == full[i]) {\n        if (perc[i] == full[i]) {\n            reply ~= \"yes \";\n        } else {\n            reply ~= \"no \";\n        }\n        i++;\n    }\n    return reply;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"xabxfiwoexahxaxbxs\", \"xbabcabccb\") == \"yes yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes);\n}\nvoid main(){}\n\n",
        "answer": "\"yes yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes"
    },
    {
        "id": 640,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp0edume1m.d(28): Error: none of the overloads of template `std.typecons.Tuple!(long, long).Tuple.opEquals` are callable using argument types `!()(long)`\n/usr/include/dmd/phobos/std/typecons.d(796):        Candidates are: `opEquals(R)(R rhs)`\n  with `R = long`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(803):                        `opEquals(R)(R rhs) const`\n  with `R = long`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(810):                        `opEquals(R...)(auto ref R rhs)`\n  with `R = (long)`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > R.length > 1\n  - areCompatibleTuples!(typeof(this), Tuple!R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n  Tip: not satisfied constraints are marked with `>`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0edume1m.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm.searching;\n\nlong f(string text) \n{\n    long a = 0;\n    if (text.indexOf(text[0], 1) != -1)\n    {\n        a += 1;\n    }\n    for (long i = 0; i < text.length - 1; ++i)\n    {\n        if (text.indexOf(text[i], i + 1) != -1)\n        {\n            a += 1;\n        }\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"3eeeeeeoopppppppw14film3oee3\") == tuple(3L, 14L));\n}\nvoid main(){}\n\n",
        "answer": "tuple(3L, 14L)"
    },
    {
        "id": 641,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp3xsky976.d(22): Error: incompatible types for `(f(\"dummy33;d\")) == (\"dummy33\")`: `bool` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3xsky976.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.conv;\n\nbool f(string number) \n{\n    try\n    {\n        number.to!long;\n        return true;\n    }\n    catch (ConvException)\n    {\n        return false;\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"dummy33;d\") == \"dummy33\");\n}\nvoid main(){}\n\n",
        "answer": "\"dummy33\""
    },
    {
        "id": 642,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nstring f(string text) \n{\n    size_t i = 0;\n    while (i < text.length && isWhite(text[i]))\n    {\n        i++;\n    }\n    if (i == text.length)\n    {\n        return \"space\";\n    }\n    return \"no\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"     \") == \"space\");\n}\nvoid main(){}\n\n",
        "answer": "\"space\""
    },
    {
        "id": 643,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpl1ej2cia.d(37): Error: undefined identifier `damdrodm`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl1ej2cia.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.range;\nimport std.ascii;\nimport std.string;\n\nstring f(string text, string suffix) \n{\n    if (text.endswith(suffix))\n    {\n        auto lastChar = text[$ - 1..$];\n        if (isLower(lastChar[0]))\n        {\n            lastChar = toUpper(lastChar);\n        }\n        else\n        {\n            lastChar = toLower(lastChar);\n        }\n        text = text[0..$ - 1] ~ lastChar;\n    }\n    return text;\n}\n\nbool endswith(string text, string suffix)\n{\n    return text[$ - suffix.length..$] == suffix;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"damdrodm\", \"m\") == damdrodm);\n}\nvoid main(){}\n\n",
        "answer": "damdrodm"
    },
    {
        "id": 644,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp_51_tkcz.d(18): Error: incompatible types for `(f([6L, 1L], 3L)) == (6L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_51_tkcz.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] nums, long pos) \n{\n    auto s = pos % 2 != 0 ? nums.length - 1 : nums.length;\n    nums[0 .. s].reverse();\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([6L, 1L], 3L) == 6L);\n}\nvoid main(){}\n\n",
        "answer": "6L"
    },
    {
        "id": 645,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpfrl59s_k.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x55a1c806a8f1]\n??:? void tmpfrl59s_k.__unittest_L34_C1() [0x55a1c806a834]\n??:? void tmpfrl59s_k.__modtest() [0x55a1c806a858]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55a1c806efee]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55a1c806d15f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55a1c8073b23]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55a1c8073ff5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55a1c8073ab1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55a1c806d131]\n??:? runModuleUnitTests [0x55a1c806ee23]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\n\nlong f(long[] nums, long target) \n{\n    long zeroCount = 0;\n    long targetCount = 0;\n    long targetIndex = -1;\n\n    foreach (num; nums) {\n        if (num == 0) {\n            zeroCount++;\n        }\n        if (num == target) {\n            targetCount++;\n            if (targetCount == 3) {\n                break;\n            }\n            if (targetIndex == -1) {\n                targetIndex = targetIndex;\n            }\n        }\n    }\n\n    if (zeroCount > 0) {\n        return 0;\n    } else if (targetCount < 3) {\n        return 1;\n    } else {\n        return targetIndex;\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 1L, 1L, 2L], 3L) == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 646,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\n\nstring f(string text, long count) \n{\n    foreach (immutable i; 0 .. count)\n    {\n        text = text.dup.reverse;\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"aBc, ,SzY\", 2L) == \"aBc, ,SzY\");\n}\nvoid main(){}\n\n",
        "answer": "\"aBc, ,SzY\""
    },
    {
        "id": 647,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpc88rxkz_.d(14): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc88rxkz_.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.array;\nimport std.string;\n\nstring[] f(string text, long chunks) \n{\n    return text.split('\\n').array();\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"/alcm@ an)t//eprw)/e!/d\nujv\", 0L) == \"alcm@ an)t//eprw)/e!/d\");\n}\nvoid main(){}\n\n",
        "answer": "\"alcm@ an)t//eprw)/e!/d\""
    },
    {
        "id": 648,
        "res": 0
    },
    {
        "id": 649,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpxeunmsbt.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x558c0829d37d]\n??:? void tmpxeunmsbt.__unittest_L13_C1() [0x558c082937d4]\n??:? void tmpxeunmsbt.__modtest() [0x558c082946c4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x558c082a51fe]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x558c08295d2f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x558c082a096b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x558c082a09fd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x558c082a08f9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x558c08295d01]\n??:? runModuleUnitTests [0x558c082a5033]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text, long tabsize) \n{\n    string tab = \" \";\n    tab.length = tabsize;\n    return text.replace(\"\\t\", tab);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"\tf9\n\tldf9\n\tadf9!\n\tf9?\", 1L) == \"f9\\tldf9\\tadf9!\\tf9?\");\n}\nvoid main(){}\n\n",
        "answer": "\"f9\\tldf9\\tadf9!\\tf9?\""
    },
    {
        "id": 650,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp_1kytiuc.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x5562d440f9b1]\n??:? void tmp_1kytiuc.__unittest_L13_C1() [0x5562d440f84a]\n??:? void tmp_1kytiuc.__modtest() [0x5562d440f918]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5562d4412f42]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5562d4419193]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5562d4423a77]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5562d4417629]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5562d4423a05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5562d4419165]\n??:? runModuleUnitTests [0x5562d4412d77]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nstring f(string string, string substring) \n{\n    while (string.length >= substring.length && string[0 .. substring.length] == substring) {\n        string = string[substring.length .. $];\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"\", \"A\") == \"A\");\n}\nvoid main(){}\n\n",
        "answer": "\"A\""
    },
    {
        "id": 651,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpyihryut5.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x561550d00745]\n??:? void tmpyihryut5.__unittest_L15_C1() [0x561550cf386d]\n??:? void tmpyihryut5.__modtest() [0x561550cf7910]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x561550d0a4e2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x561550cf8f7f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x561550d05057]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x561550d050e9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x561550d04fe5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x561550cf8f51]\n??:? runModuleUnitTests [0x561550d0a317]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text, string letter) \n{\n    if (('a' <= letter[0]) && (letter[0] <= 'z')) {\n        letter = letter.toUpper();\n    }\n    text = text.replace(letter.toLower(), letter);\n    return text.capitalize();\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"E wrestled evil until upperfeat\", \"e\") == \"E W R L D\");\n}\nvoid main(){}\n\n",
        "answer": "\"E W R L D\""
    },
    {
        "id": 652,
        "res": 0
    },
    {
        "id": 653,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp1t0ys731.d(22): Error: incompatible types for `(f(\"c, c, c ,c, c\", \"c\")) == (\"c, c, c ,c, c\")`: `long` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1t0ys731.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\nimport std.array;\n\nlong f(string text, string letter) \n{\n    string t = \"\";\n    foreach (alph; text) {\n        t = text.replace(alph, \"\");\n    }\n    auto result = t.split(letter);\n    return result.length;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"c, c, c ,c, c\", \"c\") == \"c, c, c ,c, c\");\n}\nvoid main(){}\n\n",
        "answer": "\"c, c, c ,c, c\""
    },
    {
        "id": 654,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpaa3gsr90.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x55da1273462d]\n??:? void tmpaa3gsr90.__unittest_L20_C1() [0x55da12729918]\n??:? void tmpaa3gsr90.__modtest() [0x55da1272b7fc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55da1273d586]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55da1272ce67]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55da12738887]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55da12738919]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55da12738815]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55da1272ce39]\n??:? runModuleUnitTests [0x55da1273d3bb]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\n\nstring f(string s, string from_c, string to_c) \n{\n    if (from_c.length != to_c.length) {\n        throw new Exception(\"Length of 'from_c' and 'to_c' must be the same.\");\n    }\n\n    string result = s.dup;\n    for (size_t i = 0; i < from_c.length; ++i) {\n        result = result.replace(from_c[i], to_c[i]);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"aphid\", \"i\", \"?\") == \"aphid\");\n}\nvoid main(){}\n\n",
        "answer": "\"aphid\""
    },
    {
        "id": 655,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmppr_irgk0.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x55c882fb626d]\n??:? void tmppr_irgk0.__unittest_L11_C1() [0x55c882fad7f6]\n??:? void tmppr_irgk0.__modtest() [0x55c882fae71c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55c882fbdffe]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55c882fbb3af]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55c882fc49c3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55c882fc4e95]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55c882fc4951]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55c882fbb381]\n??:? runModuleUnitTests [0x55c882fbde33]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nstring f(string s) \n{\n    s = s.replace(\"a\", \"\").replace(\"r\", \"\");\n    return s;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"rpaar\") == \"rp\");\n}\nvoid main(){}\n\n",
        "answer": "\"rp\""
    },
    {
        "id": 656,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.algorithm;\nimport std.string;\n\nstring f(string[] letters) \n{\n    string[] a;\n    foreach (i; 0 .. letters.length)\n    {\n        if (a.canFind(letters[i]))\n        {\n            return \"no\";\n        }\n        a ~= letters[i];\n    }\n    return \"yes\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"b\", \"i\", \"r\", \"o\", \"s\", \"j\", \"v\", \"p\"]) == \"yes\");\n}\nvoid main(){}\n\n",
        "answer": "\"yes\""
    },
    {
        "id": 657,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpmgodt3lx.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x55c414fb6d7d]\n??:? void tmpmgodt3lx.__unittest_L18_C1() [0x55c414faa822]\n??:? void tmpmgodt3lx.__modtest() [0x55c414fadf4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55c414fc06fe]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55c414faf5b7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55c414fbb723]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55c414fbb7b5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55c414fbb6b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55c414faf589]\n??:? runModuleUnitTests [0x55c414fc0533]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\nimport std.array;\n\nstring f(string text) \n{\n    foreach (punct; \"!.?,:;\".dup)\n    {\n        if (text.count(punct) > 1 || text.endsWith(punct))\n            return \"no\";\n    }\n    return text.capitalize();\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"djhasghasgdha\") == \"djhasghasgdha\");\n}\nvoid main(){}\n\n",
        "answer": "\"djhasghasgdha\""
    },
    {
        "id": 658,
        "res": 0
    },
    {
        "id": 659,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpoe45pd2m.d(23): Error: incompatible types for `(f([\"yR?TAJhIW?n\", \"o11BgEFDfoe\", \"KnHdn2vdEd\", \"wvwruuqfhXbGis\"])) == (\"yR?TAJhIW?n\")`: `long` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoe45pd2m.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\nimport std.ascii;\n\nlong f(string[] bots) {\n    string[] clean;\n    foreach (username; bots) {\n        if (!username.all!(c => isUpper(c))) {\n            clean ~= username[0..2] ~ username[$-3..$];\n        }\n    }\n    return clean.length;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"yR?TAJhIW?n\", \"o11BgEFDfoe\", \"KnHdn2vdEd\", \"wvwruuqfhXbGis\"]) == \"yR?TAJhIW?n\");\n}\nvoid main(){}\n\n",
        "answer": "\"yR?TAJhIW?n\""
    },
    {
        "id": 660,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp5c3s7jcx.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x5625cae49af9]\n??:? void tmp5c3s7jcx.__unittest_L27_C1() [0x5625cae499e4]\n??:? void tmp5c3s7jcx.__modtest() [0x5625cae49a60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5625cae4ee06]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5625cae4cdf7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5625cae532e3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5625cae537b5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5625cae53271]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5625cae4cdc9]\n??:? runModuleUnitTests [0x5625cae4ec3b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int function(char[][])*).runAll() [0x5625cae4a094]\n??:? void rt.dmain2._d_run_main2(char",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nlong f(long num) \n{\n    long[] initial = [1];\n    long[] total = initial;\n    for (long i = 0; i < num; i++)\n    {\n        total = [1];\n        foreach (immutable j; 0 .. total.length - 1)\n        {\n            total ~= total[j] + (j + 1 < total.length ? total[j + 1] : 0);\n        }\n        initial ~= total[total.length - 1];\n    }\n    long sum = 0;\n    foreach (immutable x; initial)\n    {\n        sum += x;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(3L) == 6L);\n}\nvoid main(){}\n\n",
        "answer": "6L"
    },
    {
        "id": 661,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpvqjyjsmn.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x55c87649833d]\n??:? void tmpvqjyjsmn.__unittest_L15_C1() [0x55c87648d814]\n??:? void tmpvqjyjsmn.__modtest() [0x55c87648f508]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55c8764a25aa]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55c876490b77]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55c87649de13]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55c87649dea5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55c87649dda1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55c876490b49]\n??:? runModuleUnitTests [0x55c8764a23df]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.range;\nimport std.algorithm;\n\nstring f(string letters, long maxsplit) \n{\n    auto split_words = letters.split();\n    long num_words = split_words.length;\n    long start_index = max(0, num_words - maxsplit);\n    return split_words[start_index .. $].join(\"\");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"elrts,SS ee\", 6L) == \"Elrts,SS ee\");\n}\nvoid main(){}\n\n",
        "answer": "\"Elrts,SS ee\""
    },
    {
        "id": 662,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp7twqbhzq.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x55709b87589d]\n??:? void tmp7twqbhzq.__unittest_L13_C1() [0x55709b8698a6]\n??:? void tmp7twqbhzq.__modtest() [0x55709b86cd7c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55709b87dbfa]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55709b86e1bf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55709b879817]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55709b8798a9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55709b8797a5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55709b86e191]\n??:? runModuleUnitTests [0x55709b87da2f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nstring[] f(string[] values) \n{\n    string[] names = [\"Pete\", \"Linda\", \"Angela\"];\n    names ~= values;\n    names.sort();\n    return names;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"Dan\", \"Joe\", \"Dusty\"]) == [\"Linda\", \"Pete\", \"Dusty\"]);\n}\nvoid main(){}\n\n",
        "answer": "[\"Linda\", \"Pete\", \"Dusty\"]"
    },
    {
        "id": 663,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmppnf4gklf.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x55c5c66b481d]\n??:? void tmppnf4gklf.__unittest_L16_C1() [0x55c5c66b3890]\n??:? void tmppnf4gklf.__modtest() [0x55c5c66b463c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55c5c66baea6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55c5c66b8d47]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55c5c66c008f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55c5c66c0561]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55c5c66c001d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55c5c66b8d19]\n??:? runModuleUnitTests [0x55c5c66bacdb]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] container, long cron) \n{\n    if (!container.canFind(cron))\n        return container;\n    auto pref = container[0..container.find(cron).front].dup;\n    auto suff = container[container.find(cron).back + 1..$].dup;\n    return pref ~ suff;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([], 2L) == \"?\");\n}\nvoid main(){}\n\n",
        "answer": "\"?\""
    },
    {
        "id": 664,
        "res": 0
    },
    {
        "id": 665,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpijthrgbt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x5618d1593ab9]\n??:? void tmpijthrgbt.__unittest_L18_C1() [0x5618d15938ba]\n??:? void tmpijthrgbt.__modtest() [0x5618d1593a24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5618d1598d86]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5618d1596d77]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5618d159d347]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5618d159d819]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5618d159d2d5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5618d1596d49]\n??:? runModuleUnitTests [0x5618d1598bbb]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.ascii;\nstring f(string chars) \n{\n    string s = \"\";\n    foreach (ch; chars) {\n        if (count(chars, ch) % 2 == 0) {\n            s ~= toUpper(ch);\n        } else {\n            s ~= ch;\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"acbced\") == \"abcde\");\n}\nvoid main(){}\n\n",
        "answer": "\"abcde\""
    },
    {
        "id": 666,
        "res": 0
    },
    {
        "id": 667,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpd_ithcav.d(19): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd_ithcav.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.conv;\nstring[] f(string text) \n{\n    string[] new_text;\n    foreach (i; 0 .. text.length / 3) {\n        new_text ~= \"< \" ~ text[i * 3 .. i * 3 + 3] ~ \" level=\" ~ to!string(i) ~ \" >\";\n    }\n    string last_item = text[text.length / 3 * 3 .. $];\n    new_text ~= \"< \" ~ last_item ~ \" level=\" ~ to!string(text.length / 3) ~ \" >\";\n    return new_text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"C7\") == \"C7\");\n}\nvoid main(){}\n\n",
        "answer": "\"C7\""
    },
    {
        "id": 668,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpubogis5e.d(12): unittest failure\n----------------\n??:? _d_unittestp [0x555892412a59]\n??:? void tmpubogis5e.__unittest_L8_C1() [0x5558924127fe]\n??:? void tmpubogis5e.__modtest() [0x5558924129c0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x555892418722]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55589241649b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55589241d507]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55589241d9d9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55589241d495]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55589241646d]\n??:? runModuleUnitTests [0x555892418557]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int f",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text) \n{\n    return text[$-1] ~ text[0 .. $-1];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"hellomyfriendear\") == \"hello friend ear\");\n}\nvoid main(){}\n\n",
        "answer": "\"hello friend ear\""
    },
    {
        "id": 669,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpls4sll6t.d(29): Error: undefined identifier `imbalanced`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpls4sll6t.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string t) \n{\n    auto sep = \"-\";\n    auto pos = t.lastIndexOf(sep);\n    if (pos == -1) {\n        return t;\n    }\n    \n    auto a = t[0 .. pos];\n    auto b = t[pos .. $];\n    \n    if (a.length == b.length) {\n        return \"imbalanced\";\n    }\n    \n    return a ~ b.replace(sep, \"\");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"fubarbaz\") == imbalanced);\n}\nvoid main(){}\n\n",
        "answer": "imbalanced"
    },
    {
        "id": 670,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpx244_13j.d(20): Error: using the result of a comma expression is not allowed\n/tmp/tmpx244_13j.d(20): Error: incompatible types for `(f([\"12\", \"ab\"], [2L, 2L])) == (2L , 2L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx244_13j.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.range;\nimport std.string;\n\nlong[] f(string[] a, long[] b) {\n    auto d = assocArray(a, b);\n    a.sort!((x, y) => d[y] < d[x]);\n    return a.map!(x => d[x]).array;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"12\", \"ab\"], [2L, 2L]) == (2L, 2L));\n}\nvoid main(){}\n\n",
        "answer": "(2L, 2L)"
    },
    {
        "id": 671,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpjfcbp_7r.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x562411c2548d]\n??:? void tmpjfcbp_7r.__unittest_L17_C1() [0x562411c1a8bb]\n??:? void tmpjfcbp_7r.__modtest() [0x562411c1c710]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x562411c2e4e6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x562411c1dd7f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x562411c296e7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x562411c29779]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x562411c29675]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x562411c1dd51]\n??:? runModuleUnitTests [0x562411c2e31b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\n\nstring f(string text, string char1, string char2) \n{\n    string newText = text.dup;\n    for (size_t i = 0; i < char1.length; ++i)\n    {\n        newText = replace(newText, char1[i], char2[i]);\n    }\n    return newText;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"ewriyat emf rwto segya\", \"tey\", \"dgo\") == \"ewryyat emf rwto segya\");\n}\nvoid main(){}\n\n",
        "answer": "\"ewryyat emf rwto segya\""
    },
    {
        "id": 672,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp3lxb_76s.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x55abae35b655]\n??:? void tmp3lxb_76s.__unittest_L16_C1() [0x55abae35a85a]\n??:? void tmp3lxb_76s.__modtest() [0x55abae35b470]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55abae360cce]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55abae35ecbf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55abae365d1f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55abae3661f1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55abae365cad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55abae35ec91]\n??:? runModuleUnitTests [0x55abae360b03]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\n\nstring f(string text, long position, string value) \n{\n    long length = text.length;\n    long index = (position % (length + 2)) - 1;\n    if (index >= length || index < 0) {\n        return text;\n    }\n    auto text_list = text.dup;\n    text_list[index] = value[0];\n    return text_list.idup;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"1zd\", 0L, \"m\") == \"m\");\n}\nvoid main(){}\n\n",
        "answer": "\"m\""
    },
    {
        "id": 673,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpn2eymks_.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x559a57ed9d81]\n??:? void tmpn2eymks_.__unittest_L19_C1() [0x559a57ed8812]\n??:? void tmpn2eymks_.__modtest() [0x559a57ed8838]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x559a57ee652e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x559a57ed9a0f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x559a57edb763]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x559a57edb7f5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x559a57edb6f1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x559a57ed99e1]\n??:? runModuleUnitTests [0x559a57ee6363]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string string) \n{\n    if (string.toUpper == string)\n    {\n        return toLower(string);\n    }\n    else if (string.toLower == string)\n    {\n        return toUpper(string);\n    }\n    \n    return string;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"cA\") == \"camel\");\n}\nvoid main(){}\n\n",
        "answer": "\"camel\""
    },
    {
        "id": 674,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpff29tgou.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x5646f4298a75]\n??:? void tmpff29tgou.__unittest_L15_C1() [0x5646f4295862]\n??:? void tmpff29tgou.__modtest() [0x5646f429732c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5646f42a67ae]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5646f42984ff]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5646f429b1d7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5646f429b269]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5646f429b165]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5646f42984d1]\n??:? runModuleUnitTests [0x5646f42a65e3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string text) {\n    char[] ls = text.dup;\n    foreach_reverse (x; 0 .. ls.length) {\n        if (ls.length <= 1) break;\n        if (!\"zyxwvutsrqponmlkjihgfedcba\".canFind(ls[x])) ls = ls.remove(x);\n    }\n    return ls.idup;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"qq\") == \"hello\");\n}\nvoid main(){}\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 675,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp7cqwi24b.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x55e1b0e5e4e5]\n??:? void tmp7cqwi24b.__unittest_L12_C1() [0x55e1b0e52832]\n??:? void tmp7cqwi24b.__modtest() [0x55e1b0e559c4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55e1b0e6607e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55e1b0e56e07]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55e1b0e61a17]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55e1b0e61aa9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55e1b0e619a5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55e1b0e56dd9]\n??:? runModuleUnitTests [0x55e1b0e65eb3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] nums, long sort_count) \n{\n    sort(nums);\n    return nums[0 .. sort_count];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, 2L, 3L, 4L, 5L], 1L) == [1, 2, 3, 4, 5]);\n}\nvoid main(){}\n\n",
        "answer": "[1, 2, 3, 4, 5]"
    },
    {
        "id": 676,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmphejigcra.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x561fdb6f132d]\n??:? void tmphejigcra.__unittest_L11_C1() [0x561fdb6e67dc]\n??:? void tmphejigcra.__modtest() [0x561fdb6e85b4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x561fdb6f9922]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x561fdb6e9c1f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x561fdb6f4b3f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x561fdb6f4bd1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x561fdb6f4acd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x561fdb6e9bf1]\n??:? runModuleUnitTests [0x561fdb6f9757]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nstring f(string text, long tab_size) \n{\n    return text.replace('\\t', \" \".replicate(tab_size));\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"a\", 100L) == \"a    b\");\n}\nvoid main(){}\n\n",
        "answer": "\"a    b\""
    },
    {
        "id": 677,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp2iolh186.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x563ddac8ea51]\n??:? void tmp2iolh186.__unittest_L21_C1() [0x563ddac8e898]\n??:? void tmp2iolh186.__modtest() [0x563ddac8e9bc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x563ddac93c2a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x563ddac91c1b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x563ddac97f6f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x563ddac98441]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x563ddac97efd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x563ddac91bed]\n??:? runModuleUnitTests [0x563ddac93a5f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text, long length) \n{\n    length = length < 0 ? -length : length;\n    string output = \"\";\n    foreach (idx; 0..length)\n    {\n        if (text[idx % text.length] != ' ')\n        {\n            output ~= text[idx % text.length];\n        }\n        else\n        {\n            break;\n        }\n    }\n    return output;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"I got 1 and 0.\", 5L) == \"I got 1 and 0.\");\n}\nvoid main(){}\n\n",
        "answer": "\"I got 1 and 0.\""
    },
    {
        "id": 678,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpw2ri02wb.d(31): Error: incompatible types for `(result.get()) == (\"hi\")`: `long[string]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw2ri02wb.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.algorithm;\nimport std.string;\n\nNullable!(long[string]) f(string text) \n{\n    long[string] freq;\n    foreach (c; text.toLower().split(\"\"))\n    {\n        if (c in freq)\n        {\n            freq[c] += 1;\n        }\n        else\n        {\n            freq[c] = 1;\n        }\n    }\n    return Nullable!(long[string])(freq);\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate(\"HI\");\n        assert(!result.isNull && result.get == \"hi\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"hi\""
    },
    {
        "id": 679,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpyr4w27a9.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x55eca130a991]\n??:? void tmpyr4w27a9.__unittest_L26_C1() [0x55eca130a82c]\n??:? void tmpyr4w27a9.__modtest() [0x55eca130a8f8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55eca130df86]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55eca13141d7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55eca131ec13]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55eca131266d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55eca131eba1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55eca13141a9]\n??:? runModuleUnitTests [0x55eca130ddbb]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nbool f(string text) \n{\n    if (text == \"\") {\n        return false;\n    }\n    \n    char firstChar = text[0];\n    \n    if (firstChar.isDigit) {\n        return false;\n    }\n    \n    foreach (char lastChar; text) {\n        if ((lastChar != '_') && !isAlphaNum(lastChar)) {\n            return false;\n        }\n    }\n    \n    return true;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"meet\") == false);\n}\nvoid main(){}\n\n",
        "answer": "false"
    },
    {
        "id": 680,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpx_a2gf3e.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x55a17555ee29]\n??:? void tmpx_a2gf3e.__unittest_L19_C1() [0x55a17555d862]\n??:? void tmpx_a2gf3e.__modtest() [0x55a17555d8e0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55a17556bf6e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55a17555eab7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55a17556129b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55a17556132d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55a175561229]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55a17555ea89]\n??:? runModuleUnitTests [0x55a17556bda3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text) \n{\n    string letters = \"\";\n    foreach (i, c; text)\n    {\n        if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9'))\n        {\n            letters ~= c;\n        }\n    }\n    return letters;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"we@32r71g72ug94=(823658*!@324\") == \"weird\");\n}\nvoid main(){}\n\n",
        "answer": "\"weird\""
    },
    {
        "id": 681,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp63q5e0pg.d(17): Error: using the result of a comma expression is not allowed\n/tmp/tmp63q5e0pg.d(17): Error: incompatible types for `(f([1L, 5L, 8L, 2L, 0L, 3L], 2L, 7L)) == (5L , 7L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63q5e0pg.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nlong[] f(long[] array, long ind, long elem)\n{\n    ind = ind < 0 ? -5 : (ind > array.length ? array.length : ind + 1);\n    array = array[0 .. ind] ~ [elem] ~ array[ind .. $];\n    return array;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 5L, 8L, 2L, 0L, 3L], 2L, 7L) == (5L, 7L));\n}\nvoid main(){}\n\n",
        "answer": "(5L, 7L)"
    },
    {
        "id": 682,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpudvnm9ou.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x55e15f9bc425]\n??:? void tmpudvnm9ou.__unittest_L19_C1() [0x55e15f9b187e]\n??:? void tmpudvnm9ou.__modtest() [0x55e15f9b35f0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55e15f9c6692]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55e15f9b4c5f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55e15f9c1efb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55e15f9c1f8d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55e15f9c1e89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55e15f9b4c31]\n??:? runModuleUnitTests [0x55e15f9c64c7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\nimport std.array;\n\nstring f(string text, long length, long index) \n{\n    auto ls = split(text);\n    ls.length = min(index, ls.length);\n    foreach (ref l; ls)\n    {\n        l = l[0 .. min(l.length, length)];\n    }\n    return ls.join(\"_\");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"hypernimovichyp\", 2L, 2L) == \"hypernim\");\n}\nvoid main(){}\n\n",
        "answer": "\"hypernim\""
    },
    {
        "id": 683,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpqj77ec79.d(28): Error: incompatible types for `(result.get()) == (\"disface: 9L, cam: 7L\")`: `long[string]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqj77ec79.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\n\nNullable!(long[string]) f(Nullable!(long[string]) dict1, Nullable!(long[string]) dict2) \n{\n    if (dict1.isNull)\n        return dict2;\n    \n    if (dict2.isNull)\n        return dict1;\n    \n    auto result = dict1.get();\n    \n    foreach (key, value; dict2.get())\n    {\n        result[key] = value;\n    }\n    \n    return Nullable!(long[string])(result);\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([\"disface\": 9L, \"cam\": 7L].nullable, [\"mforce\": 5L].nullable);\n        assert(!result.isNull && result.get == \"disface: 9L, cam: 7L\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"disface: 9L, cam: 7L\""
    },
    {
        "id": 684,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpx4yrzphc.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x556b256fb95d]\n??:? void tmpx4yrzphc.__unittest_L18_C1() [0x556b256f185a]\n??:? void tmpx4yrzphc.__modtest() [0x556b256f2c10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x556b25703f62]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x556b256f427f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x556b256ff077]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x556b256ff109]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x556b256ff005]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x556b256f4251]\n??:? runModuleUnitTests [0x556b25703d97]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string text)\n{\n    text = replace(text, '\"', \"9\");\n    text = replace(text, '\\'', \"8\");\n    text = replace(text, '>', \"3\");\n    text = replace(text, '<', \"3\");\n    return text;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Transform quotations\\\"\nnot into numbers.\") == \"transform quotations\\\"\nnot into numbers.\");\n}\nvoid main(){}\n\n",
        "answer": "\"transform quotations\\\"\nnot into numbers.\""
    },
    {
        "id": 685,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpc_tc48bd.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x56239e9738b9]\n??:? void tmpc_tc48bd.__unittest_L24_C1() [0x56239e973792]\n??:? void tmpc_tc48bd.__modtest() [0x56239e973824]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56239e977fb6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56239e976127]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56239e97caeb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56239e97cfbd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56239e97ca79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56239e9760f9]\n??:? runModuleUnitTests [0x56239e977deb]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.range;\n\nlong f(long[] array, long elem) \n{\n    return count(array, elem) + elem;\n}\n\nlong count(R)(R range, long elem)\n{\n    long count = 0;\n    foreach (element; range)\n    {\n        if (element == elem)\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 1L, 1L], -2L) == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 686,
        "res": 0
    },
    {
        "id": 687,
        "res": 0
    },
    {
        "id": 688,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmplqakyh6t.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x564d3fe06c69]\n??:? void tmplqakyh6t.__unittest_L20_C1() [0x564d3fe068c8]\n??:? void tmplqakyh6t.__modtest() [0x564d3fe06bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x564d3fe0c116]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x564d3fe09fb7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x564d3fe105a7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x564d3fe10a79]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x564d3fe10535]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x564d3fe09f89]\n??:? runModuleUnitTests [0x564d3fe0bf4b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] nums) \n{\n    long[] l;\n    foreach (i; nums)\n    {\n        if (!l.canFind(i))\n        {\n            l ~= i;\n        }\n    }\n    return l;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([3L, 1L, 9L, 0L, 2L, 0L, 8L]) == [3L, 1L, 9L, 0L, 2L, 0L, 8L]);\n}\nvoid main(){}\n\n",
        "answer": "[3L, 1L, 9L, 0L, 2L, 0L, 8L]"
    },
    {
        "id": 689,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmphp7pgom0.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x55d42b2b94a5]\n??:? void tmphp7pgom0.__unittest_L14_C1() [0x55d42b2b8844]\n??:? void tmphp7pgom0.__modtest() [0x55d42b2b92c4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55d42b2bea7a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55d42b2bca6b]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55d42b2c3c63]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55d42b2c4135]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55d42b2c3bf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55d42b2bca3d]\n??:? runModuleUnitTests [0x55d42b2be8af]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\n\nlong[] f(long[] arr) \n{\n    auto count = arr.length;\n    auto sub = arr.dup;\n    for (size_t i = 0; i < count; i += 2) {\n        sub[i] *= 5;\n    }\n    return sub;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([-3L, -6L, 2L, 7L]) == [5L, 120L]);\n}\nvoid main(){}\n\n",
        "answer": "[5L, 120L]"
    },
    {
        "id": 690,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmplpln5gyx.d(18): Error: incompatible types for `(f(\"800\")) == (8.5)`: `string` and `double`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplpln5gyx.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.conv;\n\nstring f(string n) {\n    if (n.indexOf('.') != -1) {\n        return to!string(to!int(n) + 2.5);\n    }\n    return n;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"800\") == 8.5);\n}\nvoid main(){}\n\n",
        "answer": "8.5"
    },
    {
        "id": 691,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpzp5u7b2i.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x55faa7fbab9d]\n??:? void tmpzp5u7b2i.__unittest_L18_C1() [0x55faa7fb08cd]\n??:? void tmpzp5u7b2i.__modtest() [0x55faa7fb1b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55faa7fc2e72]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55faa7fb34bf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55faa7fbe22b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55faa7fbe2bd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55faa7fbe1b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55faa7fb3491]\n??:? runModuleUnitTests [0x55faa7fc2ca7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text, string suffix) \n{\n    if (suffix.length > 0 && text.indexOf(suffix[$-1]) != -1) \n    {\n        return f(text[0 .. $-1], suffix[0 .. $-2]);\n    } \n    else \n    {\n        return text;\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"rpyttc\", \"cyt\") == \"rpyttc\");\n}\nvoid main(){}\n\n",
        "answer": "\"rpyttc\""
    },
    {
        "id": 692,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpxrotl6vw.d(19): Error: incompatible types for `(f([])) == (0)`: `long[]` and `int`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxrotl6vw.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\n\nlong[] f(long[] array) \n{\n    long[] a = new long[](0);\n    foreach_reverse (element; array) {\n        if (element != 0) {\n            a ~= element;\n        }\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([]) == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 693,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpyf2wylmb.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x56421ebbcbdd]\n??:? void tmpyf2wylmb.__unittest_L17_C1() [0x56421ebb280a]\n??:? void tmpyf2wylmb.__modtest() [0x56421ebb3b7c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56421ebc58fa]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56421ebb54ff]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56421ebc0cb3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56421ebc0d45]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56421ebc0c41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56421ebb54d1]\n??:? runModuleUnitTests [0x56421ebc572f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nstring f(string text) \n{\n    auto n = cast(int)text.indexOf('8');\n    string result;\n    foreach (_; 0..n)\n    {\n        result ~= \"x0\";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"sa832d83r xd 8g 26a81xdf\") == \"sa832d83r xd 8g 26a81xdf\");\n}\nvoid main(){}\n\n",
        "answer": "\"sa832d83r xd 8g 26a81xdf\""
    },
    {
        "id": 694,
        "res": 0
    },
    {
        "id": 695,
        "res": 0
    },
    {
        "id": 696,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpeazc62mt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x55a6da4fd04d]\n??:? void tmpeazc62mt.__unittest_L18_C1() [0x55a6da4f2806]\n??:? void tmpeazc62mt.__modtest() [0x55a6da4f4840]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55a6da5051de]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55a6da4f5b27]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55a6da5004f7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55a6da500589]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55a6da500485]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55a6da4f5af9]\n??:? runModuleUnitTests [0x55a6da505013]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int function(char[][])*).runAll() [0x55a6da4fe20c]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int function(char[][])*).tryExec(scope void delegate()) [0x55a6da4fe199]\n??:? _d_run_main2 [0x55a6da4fe102]\n??:? _d_run_main [0x55a6da4fdeeb]\n??:? main [0x55a6da4f281f]\n??:? [0x7fb970e73d8f]\n??:? __libc_start_main [0x7fb970e73e3f]\n??:? _start [0x55a6da4f2664]\n1/1 modules FAILED unittests\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.range;\n\nlong f(string text) \n{\n    long s = 0;\n    foreach (i; 1 .. text.length)\n    {\n        auto parts = text.splitter(text[i]);\n        s += parts.front.length;\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"wdj\") == 7L);\n}\nvoid main(){}\n\n",
        "answer": "7L"
    },
    {
        "id": 697,
        "res": 0
    },
    {
        "id": 698,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpcl3nfk3z.d(20): Error: unterminated string constant starting at /tmp/tmpcl3nfk3z.d(20)\n/tmp/tmpcl3nfk3z.d(59): Error: found `End of File` when expecting `)`\n/tmp/tmpcl3nfk3z.d(59): Error: found `End of File` when expecting `;` following expression\n/tmp/tmpcl3nfk3z.d(20):        expression: `assert(candidate(\"(((((((((((d))))))))).))))(((((\") == \"\")`\n/tmp/tmpcl3nfk3z.d(59): Error: matching `}` expected following compound statement, not `End of File`\n/tmp/tmpcl3nfk3z.d(17):        unmatched `{`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcl3nfk3z.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text) \n{\n    string result;\n    foreach (x; text)\n    {\n        if (x != ')')\n        {\n            result ~= x;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"(((((((((((d))))))))).))))(((((\") == \"()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()\n()()()()()()()\n()()()()()()()()\n()()()()()()()()()\n()()()()()()()()()\n()()()()()()()()()\n()()()()()()()()()\n()()()()()()()()()\n()()()()()()()()()()\n()()()()()()()()()()()()\n()()()()()()()()\n()()()()()()()\n()()()()()()()()\n()()()()()()()()()()()()\n()()()()()()()()()()()\n()()()()()()()()()()()\n()()()()()()()()\n()()()()()()()\n()()()()()()()\n()()()()()()()()()()()()()\n()()()()()()()\n()()()()()()\n()()()()()()()\n()()()()()()\n()()()()()()()\n()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()\n()()()()\n()()()()\n()()()()\n()()()()()\n()()()()\n()()()()\n()()()()\n()()()()\n()()()()\n());\n}\nvoid main(){}\n\n",
        "answer": "\"()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()\n()()()()()()()\n()()()()()()()()\n()()()()()()()()()\n()()()()()()()()()\n()()()()()()()()()\n()()()()()()()()()\n()()()()()()()()()\n()()()()()()()()()()\n()()()()()()()()()()()()\n()()()()()()()()\n()()()()()()()\n()()()()()()()()\n()()()()()()()()()()()()\n()()()()()()()()()()()\n()()()()()()()()()()()\n()()()()()()()()\n()()()()()()()\n()()()()()()()\n()()()()()()()()()()()()()\n()()()()()()()\n()()()()()()\n()()()()()()()\n()()()()()()\n()()()()()()()\n()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()\n()()()()\n()()()()\n()()()()\n()()()()()\n()()()()\n()()()()\n()()()()\n()()()()\n()()()()\n()"
    },
    {
        "id": 699,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp9lnzi_ha.d(23): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9lnzi_ha.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nstring[] f(string text, string elem) \n{\n    if (elem != \"\") {\n        while (text.startsWith(elem)) {\n            text = text.replace(elem, \"\");\n        }\n        while (elem.startsWith(text)) {\n            elem = elem.replace(text, \"\");\n        }\n    }\n    return [elem, text];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"some\", \"1\") == \"1\");\n}\nvoid main(){}\n\n",
        "answer": "\"1\""
    },
    {
        "id": 700,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpca16rkm4.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x55bed0458495]\n??:? void tmpca16rkm4.__unittest_L12_C1() [0x55bed044e796]\n??:? void tmpca16rkm4.__modtest() [0x55bed044f7dc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55bed0460a16]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55bed0450e47]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55bed045c34b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55bed045c3dd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55bed045c2d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55bed0450e19]\n??:? runModuleUnitTests [0x55bed046084b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.range;\nimport std.string;\n\nlong f(string text) \n{\n    return text.length - text.count(\"bot\");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Where is the bot in this world?\") == 8);\n}\nvoid main(){}\n\n",
        "answer": "8"
    },
    {
        "id": 701,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpxc9tlabn.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x55e98944286d]\n??:? void tmpxc9tlabn.__unittest_L17_C1() [0x55e9894378e1]\n??:? void tmpxc9tlabn.__modtest() [0x55e98943980c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55e98944ac06]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55e98943b18f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55e989445fbf]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55e989446051]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55e989445f4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55e98943b161]\n??:? runModuleUnitTests [0x55e98944aa3b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\nimport std.array;\n\nstring f(string stg, string[] tabs) \n{\n    foreach (tab; tabs)\n    {\n        stg = stg.stripRight(tab);\n    }\n    return stg;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"31849 let it!31849 pass!\", [\"3\", \"1\", \"8\", \" \", \"1\", \"9\", \"2\", \"d\"]) == \"let it!pass!\");\n}\nvoid main(){}\n\n",
        "answer": "\"let it!pass!\""
    },
    {
        "id": 702,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpyq7mldc8.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x55dd8c803a11]\n??:? void tmpyq7mldc8.__unittest_L12_C1() [0x55dd8c8037dd]\n??:? void tmpyq7mldc8.__modtest() [0x55dd8c80397c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55dd8c8082d6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55dd8c8062c7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55dd8c80ce0b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55dd8c80d2dd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55dd8c80cd99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55dd8c806299]\n??:? runModuleUnitTests [0x55dd8c80810b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nlong[] f(long[] nums) \n{\n    nums.reverse();\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([0L, -5L, -4L]) == [0, -5, -4]);\n}\nvoid main(){}\n\n",
        "answer": "[0, -5, -4]"
    },
    {
        "id": 703,
        "res": 0
    },
    {
        "id": 704,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpnqo4dj1y.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x55b4d5dcea41]\n??:? void tmpnqo4dj1y.__unittest_L13_C1() [0x55b4d5dce7de]\n??:? void tmpnqo4dj1y.__modtest() [0x55b4d5dce9ac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55b4d5dd43a2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55b4d5dd23eb]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55b4d5dd9187]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55b4d5dd9659]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55b4d5dd9115]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55b4d5dd23bd]\n??:? runModuleUnitTests [0x55b4d5dd41d7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string s, long n, string c) \n{\n    long width = cast(long)(c.length) * n;\n    while (s.length < width)\n    {\n        s = c ~ s;\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\".\", 0L, \"99\") == \"99\");\n}\nvoid main(){}\n\n",
        "answer": "\"99\""
    },
    {
        "id": 705,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp31jh748s.d(22): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp31jh748s.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nstring[] f(string[] cities, string name) \n{\n    if (name.length == 0) {\n        return cities;\n    }\n    if (name.length != 0 && name != \"cities\") {\n        return [];\n    }\n    string[] result;\n    foreach (city; cities) {\n        result ~= name ~ city;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"Sydney\", \"Hong Kong\", \"Melbourne\", \"Sao Paolo\", \"Istanbul\", \"Boston\"], \"Somewhere \") == \"Somewhere c\");\n}\nvoid main(){}\n\n",
        "answer": "\"Somewhere c\""
    },
    {
        "id": 706,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpz20bu9e4.d(20): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz20bu9e4.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nstring[] f(string r, string w) \n{\n    string[] a;\n    if (r[0] == w[0] && w[w.length - 1] == r[r.length - 1]) {\n        a ~= r;\n        a ~= w;\n    } else {\n        a ~= w;\n        a ~= r;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"ab\", \"xy\") == \"ab\");\n}\nvoid main(){}\n\n",
        "answer": "\"ab\""
    },
    {
        "id": 707,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp4a23govv.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x55d598862ab1]\n??:? void tmp4a23govv.__unittest_L16_C1() [0x55d598862848]\n??:? void tmp4a23govv.__modtest() [0x55d598862a1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55d5988685b2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55d5988664ab]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55d59886d2ff]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55d59886d7d1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55d59886d28d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55d59886647d]\n??:? runModuleUnitTests [0x55d5988683e7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nstring f(string text, long position) \n{\n    long length = text.length;\n    long index = position % (length + 1);\n    if (position < 0 || index < 0)\n        index = -1;\n    text = text[0 .. index] ~ text[index+1 .. $];\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"undbs l\", 1L) == \"undbs l\");\n}\nvoid main(){}\n\n",
        "answer": "\"undbs l\""
    },
    {
        "id": 708,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpzlze_emz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x564f3385cc3d]\n??:? void tmpzlze_emz.__unittest_L20_C1() [0x564f3385a88a]\n??:? void tmpzlze_emz.__modtest() [0x564f3385b5a8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x564f3386b466]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x564f3385c77f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x564f3386059b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x564f3386062d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x564f33860529]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x564f3385c751]\n??:? runModuleUnitTests [0x564f3386b29b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nstring f(string string) \n{\n    auto l = string.dup;\n    foreach_reverse(i; 0 .. l.length)\n    {\n        if (l[i] != ' ')\n        {\n            break;\n        }\n        l = l[0 .. i] ~ l[i+1 .. $];\n    }\n    return l.idup;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"    jcmfxv     \") == \"jcmfxv\");\n}\nvoid main(){}\n\n",
        "answer": "\"jcmfxv\""
    },
    {
        "id": 709,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp995m2app.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x563cfe55e5d5]\n??:? void tmp995m2app.__unittest_L13_C1() [0x563cfe5507ca]\n??:? void tmp995m2app.__modtest() [0x563cfe555488]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x563cfe56852a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x563cfe556e0f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x563cfe5640ab]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x563cfe56413d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x563cfe564039]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x563cfe556de1]\n??:? runModuleUnitTests [0x563cfe56835f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.algorithm;\n\nstring f(string text) \n{\n    auto my_list = text.split();\n    my_list.sort!(\"a > b\");\n    return my_list.join(\" \");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"a loved\") == \"a lvot\");\n}\nvoid main(){}\n\n",
        "answer": "\"a lvot\""
    },
    {
        "id": 710,
        "res": 0
    },
    {
        "id": 711,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpbmbksg_0.d(14): unittest failure\n----------------\n??:? _d_unittestp [0x55d20183089d]\n??:? void tmpbmbksg_0.__unittest_L10_C1() [0x55d2018277aa]\n??:? void tmpbmbksg_0.__modtest() [0x55d201828cbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55d2018390de]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55d2018362eb]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55d20183fb97]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55d201840069]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55d20183fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55d2018362bd]\n??:? runModuleUnitTests [0x55d201838f13]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nstring f(string text) \n{\n    return text.replace('\\n', '\\t');\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"apples\n\t\npears\n\t\nbananas\") == \"apples\\tpears\\tbananas\");\n}\nvoid main(){}\n\n",
        "answer": "\"apples\\tpears\\tbananas\""
    },
    {
        "id": 712,
        "res": 0
    },
    {
        "id": 713,
        "res": 0
    },
    {
        "id": 714,
        "res": 0
    },
    {
        "id": 715,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpepm4m4ix.d(13): Error: incompatible types for `(f(\"abababac\", \"a\")) == (\"abababac\")`: `bool` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpepm4m4ix.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.algorithm;\nimport std.string;\n\nbool f(string text, string ch) {\n    return count(text, ch[0]) % 2 != 0;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"abababac\", \"a\") == \"abababac\");\n}\nvoid main(){}\n\n",
        "answer": "\"abababac\""
    },
    {
        "id": 716,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp3zqlnitg.d(16): Error: incompatible types for `(f([2L, 1L, 2L, 3L, 1L, 6L, 3L, 8L])) == (6L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3zqlnitg.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] nums) \n{\n    long count = nums.length;\n    while (nums.length > count/2) {\n        nums = [];\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([2L, 1L, 2L, 3L, 1L, 6L, 3L, 8L]) == 6L);\n}\nvoid main(){}\n\n",
        "answer": "6L"
    },
    {
        "id": 717,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nstring f(string text) \n{\n    auto k = 0;\n    auto l = text.length - 1;\n    while (!isAlpha(text[l]))\n    {\n        l--;\n    }\n    while (!isAlpha(text[k]))\n    {\n        k++;\n    }\n    if (k != 0 || l != text.length - 1)\n    {\n        return text[k .. l + 1];\n    }\n    else\n    {\n        return text[0 .. 1];\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"timetable, 2mil\") == \"t\");\n}\nvoid main(){}\n\n",
        "answer": "\"t\""
    },
    {
        "id": 718,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpxe2parnc.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x55c6a13795e5]\n??:? void tmpxe2parnc.__unittest_L15_C1() [0x55c6a136e826]\n??:? void tmpxe2parnc.__modtest() [0x55c6a1370868]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55c6a138256e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55c6a1371ed7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55c6a137d78b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55c6a137d81d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55c6a137d719]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55c6a1371ea9]\n??:? runModuleUnitTests [0x55c6a13823a3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.conv;\n\nstring f(string text) {\n    string t = text;\n    foreach (i; t) {\n        text = text.replace(i, \"\");\n    }\n    return text.length.to!string ~ t;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"ThisIsSoAtrocious\") == \"ThisIsSoAtrocious\");\n}\nvoid main(){}\n\n",
        "answer": "\"ThisIsSoAtrocious\""
    },
    {
        "id": 719,
        "res": 0
    },
    {
        "id": 720,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpwwn1f10n.d(20): Error: incompatible types for `(f([\"bfreratrrbdbzagbretaredtroefcoiqrrneaosf\"], \"n\")) == (\"banana\")`: `long` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwwn1f10n.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.conv;\n\nlong f(string[] items, string item) \n{\n    while (items.back == item) {\n        items.popBack();\n    }\n    items ~= item;\n    return items.length;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"bfreratrrbdbzagbretaredtroefcoiqrrneaosf\"], \"n\") == \"banana\");\n}\nvoid main(){}\n\n",
        "answer": "\"banana\""
    },
    {
        "id": 721,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpvhg1r5zf.d(19): Error: using the result of a comma expression is not allowed\n/tmp/tmpvhg1r5zf.d(19): Error: using the result of a comma expression is not allowed\n/tmp/tmpvhg1r5zf.d(19): Error: using the result of a comma expression is not allowed\n/tmp/tmpvhg1r5zf.d(19): Error: using the result of a comma expression is not allowed\n/tmp/tmpvhg1r5zf.d(19): Error: incompatible types for `(f([-6L, -5L, -7L, -8L, 2L])) == (-6L , -5L , -7L , -8L , 2L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvhg1r5zf.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] nums) \n{\n    auto count = nums.length;\n    foreach (num; 2 .. count) {\n        nums.sort();\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([-6L, -5L, -7L, -8L, 2L]) == (-6L, -5L, -7L, -8L, 2L));\n}\nvoid main(){}\n\n",
        "answer": "(-6L, -5L, -7L, -8L, 2L)"
    },
    {
        "id": 722,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp76jbwk6z.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x55bee27dd87d]\n??:? void tmp76jbwk6z.__unittest_L18_C1() [0x55bee27db81e]\n??:? void tmp76jbwk6z.__modtest() [0x55bee27dc1ec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55bee27eaf92]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55bee27dd3bf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55bee27e00a7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55bee27e0139]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55bee27e0035]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55bee27dd391]\n??:? runModuleUnitTests [0x55bee27eadc7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.algorithm;\nimport std.string;\nimport std.uni;\n\nstring f(string text) {\n    char[] result;\n    foreach (char c; text) {\n        if (isUpper(c)) {\n            result ~= toLower(c);\n        } else {\n            result ~= toUpper(c);\n        }\n    }\n    return result.idup; // Convert mutable char[] back to immutable string\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\",wPzPppdl/\") == \"WpZpZpPd/l\");\n}\nvoid main(){}\n\n",
        "answer": "\"WpZpZpPd/l\""
    },
    {
        "id": 723,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp9ehisz5h.d(29): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9ehisz5h.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.array;\n\nstring[] f(string text, long separator) \n{\n    if (separator != 0)\n    {\n        auto splitted = text.splitLines;\n        string[] result;\n        foreach (line; splitted)\n        {\n            result ~= line.split(\"\").join(\" \");\n        }\n        return result;\n    }\n    else\n    {\n        return text.splitLines;\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"dga nqdk\rull qcha kl\", 1L) == \"dga nqdkull qcha kl\");\n}\nvoid main(){}\n\n",
        "answer": "\"dga nqdkull qcha kl\""
    },
    {
        "id": 724,
        "res": 0
    },
    {
        "id": 725,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpu8nuysfd.d(17): Error: incompatible types for `(f(\"mrq7y\")) == (\"mrq\")`: `long` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu8nuysfd.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\n\nlong f(string text) \n{\n    string[] result_list = [\"3\", \"3\", \"3\", \"3\"];\n    if (result_list.length > 0) {\n        result_list.length = 0;\n    }\n    return text.length;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"mrq7y\") == \"mrq\");\n}\nvoid main(){}\n\n",
        "answer": "\"mrq\""
    },
    {
        "id": 726,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpg55twaiw.d(20): Error: none of the overloads of template `std.typecons.Tuple!(long, long).Tuple.opEquals` are callable using argument types `!()(string)`\n/usr/include/dmd/phobos/std/typecons.d(796):        Candidates are: `opEquals(R)(R rhs)`\n  with `R = string`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(803):                        `opEquals(R)(R rhs) const`\n  with `R = string`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(810):                        `opEquals(R...)(auto ref R rhs)`\n  with `R = (string)`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.uni;\n\nTuple!(long, long) f(string text) {\n    long ws = 0;\n    foreach (s; text) {\n        if (isWhite(s)) {\n            ws += 1;\n        }\n    }\n    return tuple(ws, cast(long)text.length);\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"jcle oq wsnibktxpiozyxmopqkfnrfjds\") == \"jcle oq wsnibktxpiozyxmopqkfnrfjds\");\n}\nvoid main(){}\n\n",
        "answer": "\"jcle oq wsnibktxpiozyxmopqkfnrfjds\""
    },
    {
        "id": 727,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpiaothy3h.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x5606d8d2ba0d]\n??:? void tmpiaothy3h.__unittest_L22_C1() [0x5606d8d1fa4b]\n??:? void tmpiaothy3h.__modtest() [0x5606d8d22eec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5606d8d33d6a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5606d8d2432f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5606d8d2f987]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5606d8d2fa19]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5606d8d2f915]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5606d8d24301]\n??:? runModuleUnitTests [0x5606d8d33b9f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nstring[] f(string[] numbers, string prefix) \n{\n    string[] result;\n    foreach (n; numbers)\n    {\n        if (n.length > prefix.length && n.startsWith(prefix))\n            result ~= n[prefix.length..$];\n        else\n            result ~= n;\n    }\n\n    result.sort();\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"ix\", \"dxh\", \"snegi\", \"wiubvu\"], \"\") == [\"ix\", \"dxh\", \"snegi\", \"wiubvu\"]);\n}\nvoid main(){}\n\n",
        "answer": "[\"ix\", \"dxh\", \"snegi\", \"wiubvu\"]"
    },
    {
        "id": 728,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpf_lpq8_m.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x55a1626db23d]\n??:? void tmpf_lpq8_m.__unittest_L19_C1() [0x55a1626d1852]\n??:? void tmpf_lpq8_m.__modtest() [0x55a1626d2268]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55a1626e3032]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55a1626d3bef]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55a1626de953]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55a1626de9e5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55a1626de8e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55a1626d3bc1]\n??:? runModuleUnitTests [0x55a1626e2e67]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nstring f(string text) \n{\n    auto result = appender!string();\n    foreach (i, ch; text)\n    {\n        if (ch == toLower(ch))\n            continue;\n        if (text.length - 1 - i < text.lastIndexOf(toLower(ch)))\n            result.put(ch);\n    }\n    return result.data;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"ru\") == \"r\");\n}\nvoid main(){}\n\n",
        "answer": "\"r\""
    },
    {
        "id": 729,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp6r37d7x9.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x556b679c8b09]\n??:? void tmp6r37d7x9.__unittest_L21_C1() [0x556b679c88ad]\n??:? void tmp6r37d7x9.__modtest() [0x556b679c8a70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x556b679cdef2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x556b679cbd93]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x556b679d2383]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x556b679d2855]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x556b679d2311]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x556b679cbd65]\n??:? runModuleUnitTests [0x556b679cdd27]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(string s1, string s2) \n{\n    long[] res;\n    long i = s1.length - s2.length;\n    while(i >= 0) {\n        if (s1[i .. i + s2.length] == s2) {\n            res ~= i + s2.length - 1;\n            i -= s2.length;\n        } else {\n            i--;\n        }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"abcdefghabc\", \"abc\") == \"abc\");\n}\nvoid main(){}\n\n",
        "answer": "\"abc\""
    },
    {
        "id": 730,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmptbvz8d8l.d(25): Error: incompatible types for `(f(\"wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl\")) == (\"silak v5 e4fi rotbi fwj 78 wigf t8s lcl\")`: `long` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptbvz8d8l.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nlong f(string text) \n{\n    long m = 0;\n    long cnt = 0;\n    foreach (word; text.split(\" \"))\n    {\n        if (word.length > m)\n        {\n            cnt++;\n            m = word.length;\n        }\n    }\n    return cnt;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl\") == \"silak v5 e4fi rotbi fwj 78 wigf t8s lcl\");\n}\nvoid main(){}\n\n",
        "answer": "\"silak v5 e4fi rotbi fwj 78 wigf t8s lcl\""
    },
    {
        "id": 731,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpu5xfiab2.d(14): unittest failure\n----------------\n??:? _d_unittestp [0x555fb464d245]\n??:? void tmpu5xfiab2.__unittest_L10_C1() [0x555fb46447d1]\n??:? void tmpu5xfiab2.__modtest() [0x555fb46456f4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x555fb4654fd6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x555fb4652387]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x555fb465b99b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x555fb465be6d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x555fb465b929]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x555fb4652359]\n??:? runModuleUnitTests [0x555fb4654e0b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\n\nstring f(string text, string use) \n{\n    return text.replace(use, \"\");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"Chris requires a ride to the airport on Friday.\", \"a\") == \"ride\");\n}\nvoid main(){}\n\n",
        "answer": "\"ride\""
    },
    {
        "id": 732,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp5hieof3y.d(23): Error: none of the overloads of template `std.typecons.Tuple!(long, long).Tuple.opEquals` are callable using argument types `!()(long[string])`\n/usr/include/dmd/phobos/std/typecons.d(796):        Candidates are: `opEquals(R)(R rhs)`\n  with `R = long[string]`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(803):                        `opEquals(R)(R rhs) const`\n  with `R = long[string]`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(810):                        `opEquals(R...)(auto ref R rhs)`\n  with `R = (long[string])`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > R.length > 1\n  - areCompatibleTuples!(typeof(this), Tuple!R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n  Tip: not satisfied constraints are marked with `>`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5hieof3y.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nNullable!(long[string]) f(Nullable!(long[string]) char_freq) \n{\n    if (!char_freq.isNull) {\n        long[string] result;\n        foreach (key, value; char_freq.get()) {\n            result[key] = value / 2;\n        }\n        return Nullable!(long[string])(result);\n    }\n    return Nullable!(long[string]).init;\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([\"u\": 20L, \"v\": 5L, \"b\": 7L, \"w\": 3L, \"x\": 3L].nullable);\n        assert(!result.isNull && result.get == tuple(5L, 12L));\n}\n\n}\nvoid main(){}\n\n",
        "answer": "tuple(5L, 12L)"
    },
    {
        "id": 733,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp2g89tboq.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x55e9a86c76dd]\n??:? void tmp2g89tboq.__unittest_L17_C1() [0x55e9a86bd816]\n??:? void tmp2g89tboq.__modtest() [0x55e9a86be994]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55e9a86cfabe]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55e9a86bffff]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55e9a86cad6b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55e9a86cadfd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55e9a86cacf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55e9a86bffd1]\n??:? runModuleUnitTests [0x55e9a86cf8f3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.range;\nimport std.string;\n\nstring f(string text) \n{\n    auto length = text.length / 2;\n    auto left_half = text[0..length];\n    auto right_half = text[length..$];\n    right_half.retro();\n    return left_half ~ right_half;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"n\") == \"not\");\n}\nvoid main(){}\n\n",
        "answer": "\"not\""
    },
    {
        "id": 734,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpxamiis_d.d(20): Error: incompatible types for `(f([5L, 3L, 3L, 7L])) == (7L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxamiis_d.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\n\nlong[] f(long[] nums) \n{\n    for (int i = cast(int)(nums.length) - 1; i >= 0; i--)\n    {\n        if (nums[i] % 2 == 0)\n        {\n            nums = nums[0 .. i] ~ nums[i + 1 .. $];\n        }\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([5L, 3L, 3L, 7L]) == 7L);\n}\nvoid main(){}\n\n",
        "answer": "7L"
    },
    {
        "id": 735,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpto65bnh7.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x55e7988c0735]\n??:? void tmpto65bnh7.__unittest_L19_C1() [0x55e7988b385e]\n??:? void tmpto65bnh7.__modtest() [0x55e7988b7904]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55e7988ca022]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55e7988b8f6f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55e7988c5047]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55e7988c50d9]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55e7988c4fd5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55e7988b8f41]\n??:? runModuleUnitTests [0x55e7988c9e57]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string sentence) \n{\n    if (sentence.empty)\n    {\n        return \"\";\n    }\n    sentence = sentence.replace(\"(\", \"\");\n    sentence = sentence.replace(\")\", \"\");\n    sentence = sentence.capitalize;\n    sentence = sentence.replace(\" \", \"\");\n    return sentence;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"(A (b B))\") == \"A B\");\n}\nvoid main(){}\n\n",
        "answer": "\"A B\""
    },
    {
        "id": 736,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpygrxxkpo.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x55791614eaf9]\n??:? void tmpygrxxkpo.__unittest_L16_C1() [0x55791614e899]\n??:? void tmpygrxxkpo.__modtest() [0x55791614ea64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x557916153cd2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x557916151cc3]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x557916157fbf]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x557916158491]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x557916157f4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x557916151c95]\n??:? runModuleUnitTests [0x557916153b07]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text, string insert) \n{\n    string clean = \"\";\n    foreach (char c; text) {\n        if (c == '\\t' || c == '\\r' || c == '\\v' || c == ' ' || c == '\\f' || c == '\\n') {\n            clean ~= insert;\n        } else {\n            clean ~= c;\n        }\n    }\n    return clean;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"pi wa\", \"chi\") == \"pi wa chi\");\n}\nvoid main(){}\n\n",
        "answer": "\"pi wa chi\""
    },
    {
        "id": 737,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp1_a57i_8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x556a12ada8a9]\n??:? void tmp1_a57i_8.__unittest_L18_C1() [0x556a12ada7ef]\n??:? void tmp1_a57i_8.__modtest() [0x556a12ada814]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x556a12adefa6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x556a12add117]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x556a12ae3adb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x556a12ae3fad]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x556a12ae3a69]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x556a12add0e9]\n??:? runModuleUnitTests [0x556a12adeddb]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nlong f(long[] nums) \n{\n    long counts = 0;\n    foreach (i; nums)\n    {\n        if (counts == 0)\n        {\n            counts += 1;\n        }\n    }\n    return counts;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([0L, 6L, 2L, -1L, -2L]) == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 738,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp14t5mj75.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x559e33cec7cd]\n??:? void tmp14t5mj75.__unittest_L14_C1() [0x559e33ce1845]\n??:? void tmp14t5mj75.__modtest() [0x559e33ce376c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x559e33cf4aa2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x559e33ce50ef]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x559e33cefe5b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x559e33cefeed]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x559e33cefde9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x559e33ce50c1]\n??:? runModuleUnitTests [0x559e33cf48d7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text, string characters) \n{\n    foreach(i; 0 .. characters.length)\n    {\n        text = text.stripRight(characters[i .. $]);\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"r;r;r;r;r;r;r;r;r\", \"x.r\") == \"r;r;r;r;r;r;r;r;r\");\n}\nvoid main(){}\n\n",
        "answer": "\"r;r;r;r;r;r;r;r;r\""
    },
    {
        "id": 739,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpszuxtvfz.d(20): Error: incompatible types for `(f(\"qwbnjrxs\", [\"jr\", \"b\", \"r\", \"qw\"])) == (\"qwerty\")`: `bool` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpszuxtvfz.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nbool f(string st, string[] pattern) \n{\n    foreach(p; pattern) {\n        if(!st.startsWith(p)) {\n            return false;\n        }\n        st = st[p.length .. $];\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"qwbnjrxs\", [\"jr\", \"b\", \"r\", \"qw\"]) == \"qwerty\");\n}\nvoid main(){}\n\n",
        "answer": "\"qwerty\""
    },
    {
        "id": 740,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpt2ffbi6y.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x5634b2524b41]\n??:? void tmpt2ffbi6y.__unittest_L28_C1() [0x5634b25248cf]\n??:? void tmpt2ffbi6y.__modtest() [0x5634b2524aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5634b252a4de]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5634b25283d7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5634b252f403]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5634b252f8d5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5634b252f391]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5634b25283a9]\n??:? runModuleUnitTests [0x5634b252a313]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] plot, long delin) \n{\n    long split = -1;\n    foreach (i, n; plot)\n    {\n        if (n == delin)\n        {\n            split = i;\n            break;\n        }\n    }\n    if (split != -1)\n    {\n        return plot[0 .. split] ~ plot[split + 1 .. $];\n    }\n    else\n    {\n        return plot;\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, 3L, 4L], 3L) == [1, 2, 3, 4]);\n}\nvoid main(){}\n\n",
        "answer": "[1, 2, 3, 4]"
    },
    {
        "id": 741,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpmr6b2ui2.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x5572694098b9]\n??:? void tmpmr6b2ui2.__unittest_L12_C1() [0x557269409800]\n??:? void tmpmr6b2ui2.__modtest() [0x557269409824]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55726940e17e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55726940c16f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x557269412cb3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x557269413185]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x557269412c41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55726940c141]\n??:? runModuleUnitTests [0x55726940dfb3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nlong f(long[] nums, long p) \n{\n    long prev_p = p - 1;\n    if (prev_p < 0) {\n        prev_p = nums.length - 1;\n    }\n    return nums[prev_p];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([6L, 8L, 2L, 5L, 3L, 1L, 9L, 7L], 6L) == 6L);\n}\nvoid main(){}\n\n",
        "answer": "6L"
    },
    {
        "id": 742,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp_yamcjlv.d(27): Error: undefined identifier `False`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_yamcjlv.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nbool f(string text) \n{\n    bool b = true;\n    foreach (x; text)\n    {\n        if (x.isDigit)\n        {\n            b = true;\n        }\n        else\n        {\n            b = false;\n            break;\n        }\n    }\n    return b;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"-1-3\") == False);\n}\nvoid main(){}\n\n",
        "answer": "False"
    },
    {
        "id": 743,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp7s6t6wmi.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x562df1a0487d]\n??:? void tmp7s6t6wmi.__unittest_L12_C1() [0x562df19f97e2]\n??:? void tmp7s6t6wmi.__modtest() [0x562df19fb730]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x562df1a0e55a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x562df19fd0b7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x562df1a0a197]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x562df1a0a229]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x562df1a0a125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x562df19fd089]\n??:? runModuleUnitTests [0x562df1a0e38f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nlong f(string text) \n{\n    auto strings = text.split(\",\");\n    return - (strings[0].length + strings[1].length);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"dog,cat\") == -1);\n}\nvoid main(){}\n\n",
        "answer": "-1"
    },
    {
        "id": 744,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpe8j9n8oc.d(14): unittest failure\n----------------\n??:? _d_unittestp [0x55bd8e60c685]\n??:? void tmpe8j9n8oc.__unittest_L10_C1() [0x55bd8e60b7e5]\n??:? void tmpe8j9n8oc.__modtest() [0x55bd8e60c4a0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55bd8e611cfe]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55bd8e60fcef]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55bd8e616d4f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55bd8e617221]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55bd8e616cdd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55bd8e60fcc1]\n??:? runModuleUnitTests [0x55bd8e611b33]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text, string new_ending) \n{\n    auto result = text.dup;\n    result ~= new_ending;\n    return result.idup;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"jro\", \"wdlp\") == \"jrogwdl\");\n}\nvoid main(){}\n\n",
        "answer": "\"jrogwdl\""
    },
    {
        "id": 745,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpw2tzu9a8.d(21): Error: found `@` when expecting `)`\n/tmp/tmpw2tzu9a8.d(21): Error: found `minimc` when expecting `;` following expression\n/tmp/tmpw2tzu9a8.d(21):        expression: `assert(candidate(\"minimc@minimc.io\") == minimc)`\n/tmp/tmpw2tzu9a8.d(21): Error: found `)` when expecting `;` following expression\n/tmp/tmpw2tzu9a8.d(21): Error: found `)` instead of statement\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw2tzu9a8.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string address) \n{\n    size_t suffix_start = address.indexOf('@') + 1;\n    if (count(address[suffix_start .. $], '.') > 1) {\n        auto parts = address.splitter('@').array[1].splitter('.').array;\n        address = address[0 .. suffix_start] ~ parts[0] ~ \".\" ~ parts[1 .. $].join(\".\");\n    }\n    return address;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"minimc@minimc.io\") == minimc@minimc.io);\n}\nvoid main(){}\n\n",
        "answer": "minimc@minimc.io"
    },
    {
        "id": 746,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp8mm4yk2e.d(28): Error: incompatible types for `(result.get()) == (\"banana\")`: `string[string]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8mm4yk2e.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.stdio;\nimport std.string;\n\nNullable!(string[string]) f(Nullable!(string[string]) dct) \n{\n    Nullable!(string[string]) result;\n    if (dct.isNull) {\n        return result;\n    }\n\n    foreach (value; dct.get().byValue)\n    {\n        string item = value.split('.')[0] ~ \"@pinc.uk\";\n        result.get()[value] = item;\n    }\n\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate(Nullable!(string[string]).init);\n        assert(!result.isNull && result.get == \"banana\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"banana\""
    },
    {
        "id": 747,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmptk4s80xs.d(23): Error: incompatible types for `(f(\"123E-10\")) == (\"True\")`: `bool` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptk4s80xs.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\n\nbool f(string text) {\n    if (text == \"42.42\") {\n        return true;\n    }\n    foreach (i; 3 .. text.length - 3) {\n        if (text[i] == '.' && text[i - 3 .. i].isNumeric && text[0 .. i].isNumeric) {\n            return true;\n        }\n    }\n    return false;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"123E-10\") == \"True\");\n}\nvoid main(){}\n\n",
        "answer": "\"True\""
    },
    {
        "id": 748,
        "res": 0
    },
    {
        "id": 749,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpc_i3q3px.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x55dc625a07ed]\n??:? void tmpc_i3q3px.__unittest_L22_C1() [0x55dc625908e4]\n??:? void tmpc_i3q3px.__modtest() [0x55dc62597584]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55dc625aacae]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55dc62599027]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55dc625a61db]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55dc625a626d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55dc625a6169]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55dc62598ff9]\n??:? runModuleUnitTests [0x55dc625aaae3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text, long width) \n{\n    string result = \"\";\n    auto lines = text.split('\\n');\n    foreach (line; lines) {\n        result ~= line.center(width);\n        result ~= '\\n';\n    }\n\n    // Remove the very last empty line\n    if (!result.empty()) {\n        result = result[0 .. $-1];\n    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"l\nl\", 2L) == \"l\\n\\n\");\n}\nvoid main(){}\n\n",
        "answer": "\"l\\n\\n\""
    },
    {
        "id": 750,
        "res": 0
    },
    {
        "id": 751,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp8uoyud8t.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x558e621414e5]\n??:? void tmp8uoyud8t.__unittest_L13_C1() [0x558e621377e6]\n??:? void tmp8uoyud8t.__modtest() [0x558e6213882c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x558e62149cbe]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x558e62139e97]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x558e6214539b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x558e6214542d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x558e62145329]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x558e62139e69]\n??:? runModuleUnitTests [0x558e62149af3]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nstring f(string text, string character, long min_count) \n{\n    long count = text.count(character);\n    if (count < min_count) {\n        return text.toUpper();\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"wwwwhhhtttpp\", \"w\", 3L) == \"hello\");\n}\nvoid main(){}\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 752,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp4xjeqrmc.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x557d111d1f51]\n??:? void tmp4xjeqrmc.__unittest_L14_C1() [0x557d111d07e8]\n??:? void tmp4xjeqrmc.__modtest() [0x557d111d0a0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x557d111e0306]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x557d111d1bdf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x557d111d5633]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x557d111d56c5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x557d111d55c1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x557d111d1bb1]\n??:? runModuleUnitTests [0x557d111e013b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string s, long amount) \n{\n    string zs = \"\";\n    for (int i = 0; i < amount - s.length; i++)\n        zs ~= \"z\";\n    return zs ~ s;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"abc\", 8L) == \"abcdefghij\");\n}\nvoid main(){}\n\n",
        "answer": "\"abcdefghij\""
    },
    {
        "id": 753,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp9g4vcsbf.d(26): Error: found `std` when expecting `(` following `import`\n/tmp/tmp9g4vcsbf.d(26): Error: found `;` when expecting `)`\n/tmp/tmp9g4vcsbf.d(27): Error: found `import` when expecting `)`\n/tmp/tmp9g4vcsbf.d(27): Error: found `std` when expecting `;` following expression\n/tmp/tmp9g4vcsbf.d(26):        expression: `assert(!result.isNull && (result.get == import(.math)))`\n/tmp/tmp9g4vcsbf.d(47): Error: found `unittest` instead of statement\n/tmp/tmp9g4vcsbf.d(51): Error: expression expected, not `?`\n/tmp/tmp9g4vcsbf.d(51): Error: expression expected, not `?`\n/tmp/tmp9g4vcsbf.d(51): Error: expression expected, not `)`\n/tmp/tmp9g4vcsbf.d(51): Error: found `;` when expecting `:`\n/tmp/tmp9g4vcsbf.d(52): Error: expression expected, not `}`\n/tmp/tmp9g4vcsbf.d(53): Error: found `void` when expecting `:`\n/tmp/tmp9g4vcsbf.d(53): Error: found `{` when expecting `)`\n/tmp/tmp9g4vcsbf.d(53): Error: found `}` when expecting `;` following expression\n/tmp/tmp9g4vcsbf.d(51):        expression: `assert(candidate(",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nNullable!(long[long]) f(Nullable!(long[long]) bag) \n{\n    if (!bag.isNull) {\n        auto values = bag.get().values;\n        long[long] tbl;\n        foreach (v; values){\n            tbl[v] = values.count(v);\n        }\n        return Nullable!(long[long])(tbl);\n    }\n    return Nullable!(long[long]).init;\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([0L: 0L, 1L: 0L, 2L: 0L, 3L: 0L, 4L: 0L].nullable);\n        assert(!result.isNull && result.get == import std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nTuple!(long, long) f(Nullable!(long[string]) d) \n{\n    long x = 0, y = 0;\n    if (!d.isNull) {\n        auto dict = d.get();\n        foreach (key, value; dict) {\n            if (key == \"x\") {\n                x = value;\n            }\n            if (key == \"y\") {\n                y = value;\n            }\n        }\n    }\n    return tuple(x, y);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"x\": 5L, \"y\": 12L].nullable) == ????);\n}\nvoid main(){}\n\nNote: The above code is not tested and may contain errors or incomplete implementation. Please test it and provide feedback if necessary.);\n}\n\n}\nvoid main(){}\n\n",
        "answer": "import std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nTuple!(long, long) f(Nullable!(long[string]) d) \n{\n    long x = 0, y = 0;\n    if (!d.isNull) {\n        auto dict = d.get();\n        foreach (key, value; dict) {\n            if (key == \"x\") {\n                x = value;\n            }\n            if (key == \"y\") {\n                y = value;\n            }\n        }\n    }\n    return tuple(x, y);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"x\": 5L, \"y\": 12L].nullable) == ????);\n}\nvoid main(){}\n\nNote: The above code is not tested and may contain errors or incomplete implementation. Please test it and provide feedback if necessary."
    },
    {
        "id": 754,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp7cs4_o_8.d(21): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7cs4_o_8.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.conv;\nimport std.string;\n\nstring[] f(string[] nums) \n{\n    int width = to!int(nums[0]);\n    string[] formattedNums;\n    foreach (i, val; nums[1..$])\n    {\n        formattedNums ~= format(\"%0*d\", width, to!int(val));\n    }\n    return formattedNums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"1\", \"2\", \"2\", \"44\", \"0\", \"7\", \"20257\"]) == \"1 2 2 44 0 7 20257\");\n}\nvoid main(){}\n\n",
        "answer": "\"1 2 2 44 0 7 20257\""
    },
    {
        "id": 755,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpwbg55vvz.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x55e2335ada6d]\n??:? void tmpwbg55vvz.__unittest_L17_C1() [0x55e2335a3844]\n??:? void tmpwbg55vvz.__modtest() [0x55e2335a4a98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55e2335b601e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55e2335a641f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55e2335b1aa3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55e2335b1b35]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55e2335b1a31]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55e2335a63f1]\n??:? runModuleUnitTests [0x55e2335b5e53]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string replace, string text, string hide) \n{\n    while (text.canFind(hide))\n    {\n        replace ~= \"ax\";\n        text = text.replaceFirst(hide, replace);\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"###\", \"ph>t#A#BiEcDefW#ON#iiNCU\", \".\") == \"phttBIEcDefWONNiiNCU\");\n}\nvoid main(){}\n\n",
        "answer": "\"phttBIEcDefWONNiiNCU\""
    },
    {
        "id": 756,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpf6jvvcd4.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x555dc4867145]\n??:? void tmpf6jvvcd4.__unittest_L16_C1() [0x555dc48667b3]\n??:? void tmpf6jvvcd4.__modtest() [0x555dc4866f90]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x555dc486bb5a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x555dc4869a5f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x555dc4870de3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x555dc48712b5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x555dc4870d71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x555dc4869a31]\n??:? runModuleUnitTests [0x555dc486b98f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.ascii;\nimport std.conv;\n\nstring f(string text) \n{\n    if (text.length != 0 && all!(a => isDigit(a))(text))\n    {\n        return \"integer\";\n    }\n    return \"string\";\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"\") == \"integer\");\n}\nvoid main(){}\n\n",
        "answer": "\"integer\""
    },
    {
        "id": 757,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpv7kuv79v.d(14): unittest failure\n----------------\n??:? _d_unittestp [0x559643082365]\n??:? void tmpv7kuv79v.__unittest_L10_C1() [0x5596430787e8]\n??:? void tmpv7kuv79v.__modtest() [0x5596430796a8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55964308a1e6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55964307ad17]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x559643085953]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5596430859e5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5596430858e1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55964307ace9]\n??:? runModuleUnitTests [0x55964308a01b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text, string character, string replace) \n{\n    return text.replace(character, replace);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"a1a8\", \"1\", \"n2\") == \"anana\");\n}\nvoid main(){}\n\n",
        "answer": "\"anana\""
    },
    {
        "id": 758,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\n\nbool f(long[] nums) \n{\n    for(long i = 0; i < nums.length / 2; i++) {\n        if (nums[i] != nums[nums.length - i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([0L, 3L, 6L, 2L]) == false);\n}\nvoid main(){}\n\n",
        "answer": "false"
    },
    {
        "id": 759,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpye7ctfld.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x5647a35146b9]\n??:? void tmpye7ctfld.__unittest_L22_C1() [0x5647a351285d]\n??:? void tmpye7ctfld.__modtest() [0x5647a3512e58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5647a3521a0e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5647a3514347]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5647a3516b7b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5647a3516c0d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5647a3516b09]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5647a3514319]\n??:? runModuleUnitTests [0x5647a3521843]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nlong[] f(string text, string sub) \n{\n    long[] index;\n    long starting = 0;\n    while (starting != -1)\n    {\n        starting = text.indexOf(sub, starting);\n        if (starting != -1)\n        {\n            index ~= starting;\n            starting += sub.length;\n        }\n    }\n    return index;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"egmdartoa\", \"good\") == \"artoa\");\n}\nvoid main(){}\n\n",
        "answer": "\"artoa\""
    },
    {
        "id": 760,
        "res": 0
    },
    {
        "id": 761,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpa73xnmp3.d(22): Error: none of the overloads of template `std.array.array` are callable using argument types `!()(long)`\n/usr/include/dmd/phobos/std/array.d(104):        Candidates are: `array(Range)(Range r)`\n  with `Range = long`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > isIterable!Range\n  - !isAutodecodableString!Range\n  - !isInfinite!Range\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/array.d(172):                        `array(Range)(Range r)`\n  with `Range = long`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > is(Range == U*, U)\n  - isIterable!U\n  - !isAutodecodableString!Range\n  - !isInfinite!Range\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/array.d(311):                        `array(String)(scope String str)`\n  with `String = long`\n  whose parameters have the following constraints:\n  `~~~~~~~~",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.algorithm;\n\nlong[] f(long[] array) \n{\n    auto output = array.dup;\n    for (size_t i = 0; i < array.length; i += 2)\n    {\n        size_t j = array.length - 1 - i;\n        output[i] = array[j];\n    }\n    return output.reverse().array;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([]) == array(0x7fffe7d7d7c0));\n}\nvoid main(){}\n\n",
        "answer": "array(0x7fffe7d7d7c0)"
    },
    {
        "id": 762,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp6onhdxf3.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x55c73a6fdf31]\n??:? void tmp6onhdxf3.__unittest_L12_C1() [0x55c73a6fc8be]\n??:? void tmp6onhdxf3.__modtest() [0x55c73a6fc9ec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55c73a70bcd6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55c73a6fdbbf]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55c73a700b3b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55c73a700bcd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55c73a700ac9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55c73a6fdb91]\n??:? runModuleUnitTests [0x55c73a70bb0b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text) \n{\n    text = toLower(text);\n    auto capitalize = text[0 .. 1].toUpper ~ text[1 .. $];\n    return text[0 .. 1] ~ capitalize[1 .. $];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"this And cPanel\") == \"this and panel\");\n}\nvoid main(){}\n\n",
        "answer": "\"this and panel\""
    },
    {
        "id": 763,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpja9fxjrm.d(14): unittest failure\n----------------\n??:? _d_unittestp [0x55d337ae7795]\n??:? void tmpja9fxjrm.__unittest_L10_C1() [0x55d337adc809]\n??:? void tmpja9fxjrm.__modtest() [0x55d337ade730]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55d337aefa6a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55d337ae00b7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55d337aeae23]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55d337aeaeb5]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55d337aeadb1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55d337ae0089]\n??:? runModuleUnitTests [0x55d337aef89f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string values, string text, string markers) \n{\n    return text.stripRight(values).stripRight(markers);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"2Pn\", \"yCxpg2C2Pny2\", \"\") == \"yCxpg2C2Pny2\");\n}\nvoid main(){}\n\n",
        "answer": "\"yCxpg2C2Pny2\""
    },
    {
        "id": 764,
        "res": 0
    },
    {
        "id": 765,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp19j583fk.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x5580717f6879]\n??:? void tmp19j583fk.__unittest_L16_C1() [0x5580717f67be]\n??:? void tmp19j583fk.__modtest() [0x5580717f67e4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5580717f9c6a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5580717fff07]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55807180a98b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5580717fe39d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55807180a919]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5580717ffed9]\n??:? runModuleUnitTests [0x5580717f9a9f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nlong f(string text) \n{\n    int count = 0;\n    foreach (char c; text)\n    {\n        if (c >= '0' && c <= '9')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"so456\") == 6);\n}\nvoid main(){}\n\n",
        "answer": "6"
    },
    {
        "id": 766,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmps7veuv9q.d(24): Error: incompatible types for `(result.get()) == (\"0 117\")`: `long[string]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps7veuv9q.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nNullable!(long[string]) f(string[] values, long value) \n{\n    long[string] new_dict;\n    foreach (v; values)\n    {\n        new_dict[v] = value;\n    }\n    new_dict[values.sort().array.join] = value * 3;\n    return new_dict.nullable;\n}\nunittest\n{\n    alias candidate = f;\n\n{\n        auto result = candidate([\"0\", \"3\"], 117L);\n        assert(!result.isNull && result.get == \"0 117\");\n}\n\n}\nvoid main(){}\n\n",
        "answer": "\"0 117\""
    },
    {
        "id": 767,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpgczpn0ng.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x5610b226c54d]\n??:? void tmpgczpn0ng.__unittest_L17_C1() [0x5610b225f846]\n??:? void tmpgczpn0ng.__modtest() [0x5610b2263400]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5610b2276446]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5610b2264d87]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5610b2271f6b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5610b2271ffd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5610b2271ef9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5610b2264d59]\n??:? runModuleUnitTests [0x5610b227627b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\n\nstring f(string text) {\n    auto a = text.strip().split(\" \");\n    foreach (i, word; a) {\n        if (!word.isNumeric) {\n            return \"-\";\n        }\n    }\n    return a.join(\" \");\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"d khqw whi fwi bbn 41\") == \"42\");\n}\nvoid main(){}\n\n",
        "answer": "\"42\""
    },
    {
        "id": 768,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp5i400kdw.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x5563d9a41a85]\n??:? void tmp5i400kdw.__unittest_L14_C1() [0x5563d9a3f869]\n??:? void tmp5i400kdw.__modtest() [0x5563d9a403f0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5563d9a500b2]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5563d9a415c7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5563d9a45397]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5563d9a45429]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5563d9a45325]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5563d9a41599]\n??:? runModuleUnitTests [0x5563d9a4fee7]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring f(string s, string o) \n{\n    if (s.startsWith(o))\n        return s;\n    return o ~ f(s, o[o.length - 2 .. $].idup);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"abba\", \"bab\") == \"abab\");\n}\nvoid main(){}\n\n",
        "answer": "\"abab\""
    },
    {
        "id": 769,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmplcfn7tr4.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x5609a6c18b25]\n??:? void tmplcfn7tr4.__unittest_L19_C1() [0x5609a6c16826]\n??:? void tmplcfn7tr4.__modtest() [0x5609a6c17494]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5609a6c25f66]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5609a6c18667]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5609a6c1b1c3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5609a6c1b255]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5609a6c1b151]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5609a6c18639]\n??:? runModuleUnitTests [0x5609a6c25d9b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.algorithm;\nimport std.array;\nimport std.string;\nimport std.ascii : isUpper, isLower, toLower, toUpper;\n\nstring f(string text) {\n    char[] text_list = text.dup;\n    foreach (i, ref char c; text_list) {\n        if (isUpper(c)) {\n            c = toLower(c);\n        } else if (isLower(c)) {\n            c = toUpper(c);\n        }\n    }\n    return text_list.idup;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"akA?riu\") == \"aK?RU\");\n}\nvoid main(){}\n\n",
        "answer": "\"aK?RU\""
    },
    {
        "id": 770,
        "res": 0
    },
    {
        "id": 771,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpykuiptf4.d(37): Error: using the result of a comma expression is not allowed\n/tmp/tmpykuiptf4.d(37): Error: using the result of a comma expression is not allowed\n/tmp/tmpykuiptf4.d(37): Error: using the result of a comma expression is not allowed\n/tmp/tmpykuiptf4.d(37): Error: using the result of a comma expression is not allowed\n/tmp/tmpykuiptf4.d(37): Error: using the result of a comma expression is not allowed\n/tmp/tmpykuiptf4.d(37): Error: using the result of a comma expression is not allowed\n/tmp/tmpykuiptf4.d(37): Error: using the result of a comma expression is not allowed\n/tmp/tmpykuiptf4.d(37): Error: incompatible types for `(f([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L])) == (1L , 2L , 3L , 4L , 5L , 6L , 7L , 8L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpykuiptf4.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nlong[] f(long[] items) \n{\n    long[] odd_positioned;\n    while (items.length > 0)\n    {\n        auto min_index = findMin(items);\n        items = items[0 .. min_index] ~ items[min_index + 1 .. $];\n        auto item = items[0];\n        items = items[1 .. $];\n        odd_positioned ~= item;\n    }\n    return odd_positioned;\n}\n\nsize_t findMin(long[] items)\n{\n    size_t minIndex = 0;\n    foreach(i, item; items)\n    {\n        if(item < items[minIndex])\n            minIndex = i;\n    }\n    return minIndex;\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L]) == (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L));\n}\nvoid main(){}\n\n",
        "answer": "(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L)"
    },
    {
        "id": 772,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpmrsii4a6.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x55ed023a6a09]\n??:? void tmpmrsii4a6.__unittest_L17_C1() [0x55ed023a684a]\n??:? void tmpmrsii4a6.__modtest() [0x55ed023a6970]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55ed023abbf6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55ed023a9be7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55ed023aff3b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55ed023b040d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55ed023afec9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55ed023a9bb9]\n??:? runModuleUnitTests [0x55ed023aba2b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\nstring f(string phrase) \n{\n    string result = \"\";\n    foreach (char i; phrase)\n    {\n        if (!isLower(i))\n        {\n            result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"serjgpoDFdbcA.\") == \"SerjgpoDbcA.\");\n}\nvoid main(){}\n\n",
        "answer": "\"SerjgpoDbcA.\""
    },
    {
        "id": 773,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpybk1692v.d(12): unittest failure\n----------------\n??:? _d_unittestp [0x557871053889]\n??:? void tmpybk1692v.__unittest_L8_C1() [0x5578710537cd]\n??:? void tmpybk1692v.__modtest() [0x5578710537f0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55787105814e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55787105613f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55787105cc83]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55787105d155]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55787105cc11]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x557871056111]\n??:? runModuleUnitTests [0x557871057f83]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int f",
        "code": "\nimport std.math;\nimport std.typecons;\nlong f(long[] nums, long n) \n{\n    return nums[n];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([-7L, 3L, 1L, -1L, -1L, 0L, 4L], 6L) == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 774,
        "res": true,
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(long num, string name) \n{\n    return \"quiz leader = %s, count = %d\".format(name, num);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(23L, \"Cornareti\") == \"quiz leader = Cornareti, count = 23\");\n}\nvoid main(){}\n\n",
        "answer": "\"quiz leader = Cornareti, count = 23\""
    },
    {
        "id": 775,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpvmc7l4ro.d(18): Error: using the result of a comma expression is not allowed\n/tmp/tmpvmc7l4ro.d(18): Error: using the result of a comma expression is not allowed\n/tmp/tmpvmc7l4ro.d(18): Error: using the result of a comma expression is not allowed\n/tmp/tmpvmc7l4ro.d(18): Error: using the result of a comma expression is not allowed\n/tmp/tmpvmc7l4ro.d(18): Error: incompatible types for `(f([2L, 6L, 1L, 3L, 1L])) == (2L , 6L , 1L , 3L , 1L)`: `long[]` and `long`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvmc7l4ro.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong[] f(long[] nums) \n{\n    long count = nums.length;\n    foreach (i; 0 .. count / 2) {\n        auto temp = nums[i];\n        nums[i] = nums[count - i - 1];\n        nums[count - i - 1] = temp;\n    }\n    return nums;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([2L, 6L, 1L, 3L, 1L]) == (2L, 6L, 1L, 3L, 1L));\n}\nvoid main(){}\n\n",
        "answer": "(2L, 6L, 1L, 3L, 1L)"
    },
    {
        "id": 776,
        "res": 0
    },
    {
        "id": 777,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpfzs1l6mb.d(25): Error: incompatible types for array comparison: `string[]` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfzs1l6mb.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\nimport std.string;\n\nstring[] f(string[] names, string excluded) \n{\n    foreach (i, name; names)\n    {\n        if (name.canFind(excluded))\n        {\n            name = name.replace(excluded, \"\");\n        }\n        names[i] = name;\n    }\n    return names;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"avc  a .d e\"], \"\") == \"avcadae\");\n}\nvoid main(){}\n\n",
        "answer": "\"avcadae\""
    },
    {
        "id": 778,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp87vci9n1.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x5629d273bab9]\n??:? void tmp87vci9n1.__unittest_L14_C1() [0x5629d273b7e1]\n??:? void tmp87vci9n1.__modtest() [0x5629d273ba20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5629d27415ba]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5629d273f4b3]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5629d274639f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5629d2746871]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5629d274632d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5629d273f485]\n??:? runModuleUnitTests [0x5629d27413ef]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nstring f(string prefix, string text) \n{\n    if (text.startsWith(prefix)) {\n        return text;\n    } else {\n        return prefix ~ text;\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"mjs\", \"mjqwmjsqjwisojqwiso\") == \"mjs\");\n}\nvoid main(){}\n\n",
        "answer": "\"mjs\""
    },
    {
        "id": 779,
        "res": 0
    },
    {
        "id": 780,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp3m99sys1.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x56272ca41885]\n??:? void tmp3m99sys1.__unittest_L30_C1() [0x56272ca37980]\n??:? void tmp3m99sys1.__modtest() [0x56272ca38b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x56272ca4a41e]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x56272ca3a177]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x56272ca45bbb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x56272ca45c4d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x56272ca45b49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x56272ca3a149]\n??:? runModuleUnitTests [0x56272ca4a253]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.conv;\nimport std.string;\n\nstring f(long[] ints) \n{\n    long[301] counts;\n    counts[] = 0;\n\n    foreach (i; ints)\n    {\n        counts[i]++;\n    }\n\n    string[] r;\n    foreach (i; 0 .. counts.length)\n    {\n        if (counts[i] >= 3)\n        {\n            r ~= to!string(i);\n        }\n    }\n\n    counts[] = 0;\n    return r.join(\" \");\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([2L, 3L, 5L, 2L, 4L, 5L, 2L, 89L]) == \"0 1 2 3 4 5 6 7 8 9\");\n}\nvoid main(){}\n\n",
        "answer": "\"0 1 2 3 4 5 6 7 8 9\""
    },
    {
        "id": 781,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp75_9nxie.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x55c86a027acd]\n??:? void tmp75_9nxie.__unittest_L22_C1() [0x55c86a01c9cd]\n??:? void tmp75_9nxie.__modtest() [0x55c86a01e980]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55c86a0317aa]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55c86a020307]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55c86a02d3e7]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55c86a02d479]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55c86a02d375]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55c86a0202d9]\n??:? runModuleUnitTests [0x55c86a0315df]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.string;\nimport std.algorithm;\nimport std.range;\n\nstring f(string s, string ch) \n{\n    if (!ch.canFind(s))\n    {\n        return \"\";\n    }\n    s = s.split(ch)[1][$ - 1 .. $];\n    foreach (i; 0 .. s.length)\n    {\n        s = s.split(ch)[1][$ - 1 .. $];\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"shivajimonto6\", \"6\") == \"shivajim\");\n}\nvoid main(){}\n\n",
        "answer": "\"shivajim\""
    },
    {
        "id": 782,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp0dwjf0dm.d(19): Error: incompatible types for `(f(\"a j c n x X k\")) == (\"a j c n x X k\")`: `bool` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0dwjf0dm.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.ascii;\n\nbool f(string input) \n{\n    foreach (char c; input) {\n        if (isUpper(c)) {\n            return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"a j c n x X k\") == \"a j c n x X k\");\n}\nvoid main(){}\n\n",
        "answer": "\"a j c n x X k\""
    },
    {
        "id": 783,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpvbprnhot.d(20): Error: incompatible types for `(f(\"managed\", \"\")) == (\"managed\")`: `long` and `string`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvbprnhot.d\", \"-I/tmp\"]\n",
        "code": "\nimport std.math;\nimport std.typecons;\nlong f(string text, string comparison) \n{\n    long length = comparison.length;\n    if (length <= text.length) {\n        for (long i = 0; i < length; i++) {\n            if (comparison[length - i - 1] != text[text.length - i - 1]) {\n                return i;\n            }\n        }\n    }\n    return length;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"managed\", \"\") == \"managed\");\n}\nvoid main(){}\n\n",
        "answer": "\"managed\""
    },
    {
        "id": 784,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpgzhglvn7.d(18): Error: none of the overloads of template `std.typecons.Tuple!(string, string).Tuple.opEquals` are callable using argument types `!()(string)`\n/usr/include/dmd/phobos/std/typecons.d(796):        Candidates are: `opEquals(R)(R rhs)`\n  with `R = string`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(803):                        `opEquals(R)(R rhs) const`\n  with `R = string`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(810):                        `opEquals(R...)(auto ref R rhs)`\n  with `R = (string)`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.conv;\n\nTuple!(string, string) f(string key, string value) \n{\n    auto dict_ = [key: value];\n    auto item = dict_.remove(key);\n    return tuple(key, value);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"read\", \"Is\") == \"Is\");\n}\nvoid main(){}\n\n",
        "answer": "\"Is\""
    },
    {
        "id": 785,
        "res": 0
    },
    {
        "id": 786,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp5uiyrryh.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x556ed8f53659]\n??:? void tmp5uiyrryh.__unittest_L15_C1() [0x556ed8f51869]\n??:? void tmp5uiyrryh.__modtest() [0x556ed8f51df8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x556ed8f610ce]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x556ed8f532e7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x556ed8f562ab]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x556ed8f5633d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x556ed8f56239]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x556ed8f532b9]\n??:? runModuleUnitTests [0x556ed8f60f03]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.array;\nimport std.string;\n\nstring f(string text, string letter) \n{\n    auto start = text.indexOf(letter);\n    if (start != -1) {\n        return text[start + 1 .. $] ~ text[0 .. start + 1];\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"19kefp7\", \"9\") == \"19p7\");\n}\nvoid main(){}\n\n",
        "answer": "\"19p7\""
    },
    {
        "id": 787,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp3psuos94.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x562d50c7aeb1]\n??:? void tmp3psuos94.__unittest_L15_C1() [0x562d50c7983a]\n??:? void tmp3psuos94.__modtest() [0x562d50c79968]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x562d50c88c56]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x562d50c7ab3f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x562d50c7dabb]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x562d50c7db4d]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x562d50c7da49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x562d50c7ab11]\n??:? runModuleUnitTests [0x562d50c88a8b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.string;\n\nstring f(string text) \n{\n    if (text.length == 0) {\n        return \"\";\n    }\n    \n    text = toLower(text);\n    return text[0..1].toUpper() ~ text[1..$];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"xzd\") == \"z\");\n}\nvoid main(){}\n\n",
        "answer": "\"z\""
    },
    {
        "id": 788,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nstring f(string text, string suffix) \n{\n    if (suffix.startsWith(\"/\")) {\n        return text ~ suffix[1..$];\n    }\n    return text;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"hello.txt\", \"/\") == \"hello.txt\");\n}\nvoid main(){}\n\n",
        "answer": "\"hello.txt\""
    },
    {
        "id": 789,
        "res": true,
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string text, long n) \n{\n    if (n < 0 || text.length <= n) {\n        return text;\n    }\n    \n    string result = text[0 .. n];\n    long i = result.length - 1;\n    while (i >= 0) {\n        if (result[i] != text[i]) {\n            break;\n        }\n        i--;\n    }\n    \n    return text[0 .. i + 1];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"bR\", -1L) == \"bR\");\n}\nvoid main(){}\n\n",
        "answer": "\"bR\""
    },
    {
        "id": 790,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpqele5equ.d(20): Error: none of the overloads of template `std.typecons.Tuple!(bool, bool).Tuple.opEquals` are callable using argument types `!()(bool)`\n/usr/include/dmd/phobos/std/typecons.d(796):        Candidates are: `opEquals(R)(R rhs)`\n  with `R = bool`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(803):                        `opEquals(R)(R rhs) const`\n  with `R = bool`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > areCompatibleTuples!(typeof(this), R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n/usr/include/dmd/phobos/std/typecons.d(810):                        `opEquals(R...)(auto ref R rhs)`\n  with `R = (bool)`\n  whose parameters have the following constraints:\n  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n`  > R.length > 1\n  - areCompatibleTuples!(typeof(this), Tuple!R, \"==\")\n`  `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`\n  Tip: not satisfied constraints are marked with `>`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqele5equ.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.array;\n\nTuple!(bool, bool) f(Nullable!(string[string]) d) \n{\n    if (!d.isNull) {\n        auto r = [d.get().dup, d.get().dup];\n        return tuple(r[0] is r[1], r[0] == r[1]);\n    }\n    return tuple(false, false);\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"i\": \"1\", \"love\": \"parakeets\"].nullable) == false);\n}\nvoid main(){}\n\n",
        "answer": "false"
    },
    {
        "id": 791,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmp9was8co9.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x55595c9d8a45]\n??:? void tmp9was8co9.__unittest_L16_C1() [0x55595c9cc7c5]\n??:? void tmp9was8co9.__modtest() [0x55595c9cfc10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55595c9e203a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55595c9d127f]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55595c9dd2a3]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55595c9dd335]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55595c9dd231]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55595c9d1251]\n??:? runModuleUnitTests [0x55595c9e1e6f]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.conv;\nimport std.string;\n\nstring f(long integer, long n) {\n    long i = 1;\n    string text = to!string(integer);\n    while (i + text.length < n) {\n        i += text.length;\n    }\n    return text.rightJustify(i + text.length, '0');\n}\n\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(8999L, 2L) == \"99\");\n}\nvoid main(){}\n\n",
        "answer": "\"99\""
    },
    {
        "id": 792,
        "res": 0
    },
    {
        "id": 793,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpfy6e7whm.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x560b04649931]\n??:? void tmpfy6e7whm.__unittest_L19_C1() [0x560b04649872]\n??:? void tmpfy6e7whm.__modtest() [0x560b04649898]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x560b0464e1f6]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x560b0464c1e7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x560b04652d2b]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x560b046531fd]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x560b04652cb9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x560b0464c1b9]\n??:? runModuleUnitTests [0x560b0464e02b]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nlong f(long[] lst, long start, long end) \n{\n    long count = 0;\n    foreach(i; start .. end)\n    {\n        foreach(j; i .. end)\n        {\n            if(lst[i] != lst[j])\n            {\n                count += 1;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([1L, 2L, 4L, 3L, 2L, 1L], 0L, 3L) == 0);\n}\nvoid main(){}\n\n",
        "answer": "0"
    },
    {
        "id": 794,
        "res": 0
    },
    {
        "id": 795,
        "res": 0
    },
    {
        "id": 796,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpmdwlfvbz.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x5648b04a1e39]\n??:? void tmpmdwlfvbz.__unittest_L16_C1() [0x5648b04a0815]\n??:? void tmpmdwlfvbz.__modtest() [0x5648b04a08f0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x5648b04ae28a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x5648b04a1ac7]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x5648b04a381f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x5648b04a38b1]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x5648b04a37ad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x5648b04a1a99]\n??:? runModuleUnitTests [0x5648b04ae0bf]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\nimport std.range;\nimport std.string;\n\nstring f(string str, string toget) \n{\n    if (str.startsWith(toget)) {\n        return str[toget.length .. $];\n    } else {\n        return str;\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"fnuiyh\", \"ni\") == \"fnuiyhni\");\n}\nvoid main(){}\n\n",
        "answer": "\"fnuiyhni\""
    },
    {
        "id": 797,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp72hycx46.d(22): Error: incompatible types for array comparison: `Tuple!(string, long)[]` and `string[]`\nFailed: [\"/usr/bin/dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp72hycx46.d\", \"-I/tmp\"]\n",
        "code": "\n\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nTuple!(string, long)[] f(Nullable!(long[string]) dct) \n{\n    Tuple!(string, long)[] lst;\n    if (!dct.isNull) {\n        auto sortedKeys = dct.get.keys.sort();\n        foreach (key; sortedKeys) {\n            lst ~= tuple(key, dct.get[key]);\n        }\n    }\n    return lst;\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate([\"a\": 1L, \"b\": 2L, \"c\": 3L].nullable) == [\"a\", \"b\", \"c\"]);\n}\nvoid main(){}\n\n",
        "answer": "[\"a\", \"b\", \"c\"]"
    },
    {
        "id": 798,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmpn6c_trrd.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x55d1f774d9e9]\n??:? void tmpn6c_trrd.__unittest_L13_C1() [0x55d1f774d815]\n??:? void tmpn6c_trrd.__modtest() [0x55d1f774d954]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55d1f7750f7a]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55d1f77571cb]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55d1f7761aaf]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55d1f7755661]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55d1f7761a3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55d1f775719d]\n??:? runModuleUnitTests [0x55d1f7750daf]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nimport std.algorithm;\n\nstring f(string text, string pre) \n{\n    if (!text.startsWith(pre)) {\n        return text;\n    }\n    return text[pre.length .. $];\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"@hihu@!\", \"@hihu\") == \"hihu\");\n}\nvoid main(){}\n\n",
        "answer": "\"hihu\""
    },
    {
        "id": 799,
        "res": false,
        "error": "Exception",
        "error_message": "core.exception.AssertError@/tmp/tmptf7znko2.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x55d7e42b2a91]\n??:? void tmptf7znko2.__unittest_L19_C1() [0x55d7e42b2826]\n??:? void tmptf7znko2.__modtest() [0x55d7e42b29f8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody6(object.ModuleInfo*) [0x55d7e42b85ba]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x55d7e42b6483]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x55d7e42bd39f]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x55d7e42bd871]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x55d7e42bd32d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x55d7e42b6455]\n??:? runModuleUnitTests [0x55d7e42b83ef]\n??:? void rt.dmain2._d_run_main2(char[][], ulong, extern (C) int ",
        "code": "\nimport std.math;\nimport std.typecons;\nstring f(string st) \n{\n    if (st[0] == '~') {\n        string e = st;\n        while (e.length < 10) {\n            e = \"s\" ~ e;\n        }\n        return f(e);\n    } else {\n        while (st.length < 10) {\n            st = \"n\" ~ st;\n        }\n        return st;\n    }\n}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(\"eqe-;ew22\") == \"neither\");\n}\nvoid main(){}\n\n",
        "answer": "\"neither\""
    }
]