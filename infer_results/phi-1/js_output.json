[
    {
        "id": 0,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    4,\n    1\n  ],\n  [\n    4,\n    1\n  ],\n  [\n    4,\n    1\n  ],\n  [\n    4,\n    1\n  ],\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    3\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    3,\n    1\n  ],\n  [\n    1,\n    3\n  ],\n  [\n    1,\n    1\n  ]\n]\n    at test (/tmp/tmp_9iayaty.js:15:10)\n    at Object.<anonymous> (/tmp/tmp_9iayaty.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 4, 1 ], [ 4, 1 ], [ 4, 1 ], [ 4, 1 ], [ 2, 3 ], [ 2, 3 ] ],\n  expected: [ [ 3, 1 ], [ 1, 3 ], [ 1, 1 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    let output = [];\n    nums.forEach(n => {\n        output.push([nums.filter(num => num === n).length, n]);\n    });\n    output.sort((a, b) => b[0] - a[0]);\n    return output;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 1, 3, 1, 3, 1]),[[3, 1], [1, 3], [1, 1]]);\n}\n\ntest();\n\n",
        "answer": "[[3, 1], [1, 3], [1, 1]]"
    },
    {
        "id": 1,
        "res": true,
        "code": "\nfunction f(a, b, c){\n    let result = {};\n    for (let d of [a, b, c]) {\n        d.forEach(item => {\n            result[item] = undefined;\n        });\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 3], [1, 4], [1, 2]),{1: undefined, 3: undefined, 4: undefined, 2: undefined});\n}\n\ntest();\n\n",
        "answer": "{1: undefined, 3: undefined, 4: undefined, 2: undefined}"
    },
    {
        "id": 2,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hbtofdeiequ'\n\nshould loosely deep-equal\n\n'hello'\n    at test (/tmp/tmp60k59f53.js:16:10)\n    at Object.<anonymous> (/tmp/tmp60k59f53.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hbtofdeiequ',\n  expected: 'hello',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let new_text = text.split('');\n    for(let i of '+'){\n        if(new_text.includes(i)){\n            new_text.splice(new_text.indexOf(i), 1);\n        }\n    }\n    return new_text.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"hbtofdeiequ\"),\"hello\");\n}\n\ntest();\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 3,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'bcksrutq'\n\nshould loosely deep-equal\n\n'bckrut'\n    at test (/tmp/tmp08g5rywv.js:12:10)\n    at Object.<anonymous> (/tmp/tmp08g5rywv.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'bcksrutq',\n  expected: 'bckrut',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, value){\n    var text_list = text.split('');\n    text_list.push(value);\n    return text_list.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"bcksrut\", \"q\"),\"bckrut\");\n}\n\ntest();\n\n",
        "answer": "\"bckrut\""
    },
    {
        "id": 4,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'           '\n\nshould loosely deep-equal\n\n'    '\n    at test (/tmp/tmpmxnl9cz3.js:12:10)\n    at Object.<anonymous> (/tmp/tmpmxnl9cz3.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '           ',\n  expected: '    ',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array){\n    let s = ' ';\n    s += array.join('');\n    return s;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\" \", \"  \", \"    \", \"   \"]),\"    \");\n}\n\ntest();\n\n",
        "answer": "\"    \""
    },
    {
        "id": 5,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  'xxxxxxxxxxxxxxxxxx'\n]\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpaxo8t0s8.js:19:10)\n    at Object.<anonymous> (/tmp/tmpaxo8t0s8.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 'xxxxxxxxxxxxxxxxxx' ],\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, lower, upper){\n    let count = 0;\n    let new_text = [];\n    for (let char of text) {\n        char = char.match(/\\d/) ? lower : upper;\n        if (char === 'p' || char === 'C') {\n            count++;\n        }\n        new_text.push(char);\n    }\n    return [count, new_text.join('')];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"DSUWeqExTQdCMGpqur\", \"a\", \"x\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 6,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    '74',\n    31\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  52,\n  34,\n  31\n]\n    at test (/tmp/tmph2oqdulm.js:12:10)\n    at Object.<anonymous> (/tmp/tmph2oqdulm.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ '74', 31 ] ],\n  expected: [ 52, 34, 31 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(dic){\n    let sortedItems = Object.entries(dic).sort((a, b) => String(a).length - String(b).length).slice(0, -1);\n    sortedItems.forEach(([key]) => delete dic[key]);\n    return Object.entries(dic);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"11\": 52, \"65\": 34, \"a\": 12, \"4\": 52, \"74\": 31}),[52, 34, 31]);\n}\n\ntest();\n\n",
        "answer": "[52, 34, 31]"
    },
    {
        "id": 7,
        "res": true,
        "code": "\nfunction f(lst){\n    let original = lst.slice();\n    while (lst.length > 1) {\n        lst.splice(lst.length - 1, 1);\n        for (let i = 0; i < lst.length; i++) {\n            lst.splice(i, 1);\n        }\n    }\n    lst = original.slice();\n    if (lst.length > 0) {\n        lst.splice(0, 1);\n    }\n    return lst;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([]),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 8,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'UppEr'\n\nshould loosely deep-equal\n\n'HELLO'\n    at test (/tmp/tmpekpjly_e.js:14:10)\n    at Object.<anonymous> (/tmp/tmpekpjly_e.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'UppEr',\n  expected: 'HELLO',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(string, encryption){\n    if(encryption === 0){\n        return string;\n    } else {\n        return string.toUpperCase().replace(/[A-Za-z]/g, c => String.fromCharCode(c.charCodeAt(0) + (c.toUpperCase() <= \"M\" ? 13 : -13)));\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"UppEr\", 0),\"HELLO\");\n}\n\ntest();\n\n",
        "answer": "\"HELLO\""
    },
    {
        "id": 9,
        "res": true,
        "code": "\nfunction f(t){\n    for(let i=0; i<t.length; i++){\n        if(isNaN(parseInt(t[i]))){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"#284376598\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 10,
        "res": true,
        "code": "\nfunction f(text){\n    let new_text = '';\n    text.toLowerCase().trim().split('').forEach(ch => {\n        if (!isNaN(ch) || ch.match(/[ÄäÏïÖöÜü]/)) {\n            new_text += ch;\n        }\n    });\n    return new_text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"\"),'');\n}\n\ntest();\n\n",
        "answer": "''"
    },
    {
        "id": 11,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  foo: [\n    'bar'\n  ]\n}\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpympozypt.js:17:10)\n    at Object.<anonymous> (/tmp/tmpympozypt.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { foo: [ 'bar' ] },\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(a, b){\n    for (let key in b) {\n        if (!a.hasOwnProperty(key)) {\n            a[key] = [b[key]];\n        } else {\n            a[key].push(b[key]);\n        }\n    }\n    return a;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({}, {\"foo\": \"bar\"}),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 12,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'If you want to live a happy life! Daniel'\n\nshould loosely deep-equal\n\n'life'\n    at test (/tmp/tmp8ihmazf8.js:15:10)\n    at Object.<anonymous> (/tmp/tmp8ihmazf8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'If you want to live a happy life! Daniel',\n  expected: 'life',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s, x){\n    let count = 0;\n    while (s.substring(0, x.length) === x && count < s.length - x.length) {\n        s = s.substring(x.length);\n        count += x.length;\n    }\n    return s;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"If you want to live a happy life! Daniel\", \"Daniel\"),\"life\");\n}\n\ntest();\n\n",
        "answer": "\"life\""
    },
    {
        "id": 13,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmp3x2sxv0n.js:17:10)\n    at Object.<anonymous> (/tmp/tmp3x2sxv0n.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(names){\n    let count = names.length;\n    let numberOfNames = 0;\n    names.forEach(name => {\n        if (/^[a-zA-Z]+$/.test(name)) {\n            numberOfNames++;\n        }\n    });\n    return numberOfNames;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"sharron\", \"Savannah\", \"Mike Cherokee\"]),3);\n}\n\ntest();\n\n",
        "answer": "3"
    },
    {
        "id": 14,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'POO'\n\nshould loosely deep-equal\n\n'dlrowO'\n    at test (/tmp/tmpkzqvsczs.js:12:10)\n    at Object.<anonymous> (/tmp/tmpkzqvsczs.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'POO',\n  expected: 'dlrowO',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s){\n    let arr = s.trim().split('');\n    arr.reverse();\n    return arr.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"   OOP   \"),\"dlrowO\");\n}\n\ntest();\n\n",
        "answer": "\"dlrowO\""
    },
    {
        "id": 15,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'ZN KGD JW LNT'\n\nshould loosely deep-equal\n\n'UNDERSCORE'\n    at test (/tmp/tmpu9kpelju.js:11:10)\n    at Object.<anonymous> (/tmp/tmpu9kpelju.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'ZN KGD JW LNT',\n  expected: 'UNDERSCORE',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, wrong, right){\n    let new_text = text.replace(wrong, right);\n    return new_text.toUpperCase();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"zn kgd jw lnt\", \"h\", \"u\"),\"UNDERSCORE\");\n}\n\ntest();\n\n",
        "answer": "\"UNDERSCORE\""
    },
    {
        "id": 16,
        "res": true,
        "code": "\nfunction f(text, suffix){\n    if(text.endsWith(suffix)){\n        return text.slice(0, -suffix.length);\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"zejrohaj\", \"owc\"),\"zejrohaj\");\n}\n\ntest();\n\n",
        "answer": "\"zejrohaj\""
    },
    {
        "id": 17,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n-1\n    at test (/tmp/tmpqbzj08n0.js:10:10)\n    at Object.<anonymous> (/tmp/tmpqbzj08n0.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: -1,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    return text.indexOf(\",\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"There are, no, commas, in this text\"),-1);\n}\n\ntest();\n\n",
        "answer": "-1"
    },
    {
        "id": 18,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n  4,\n  3,\n  2,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  2,\n  1,\n  0,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpa3wfb5im.js:19:10)\n    at Object.<anonymous> (/tmp/tmpa3wfb5im.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    3, 5, 4, 3,\n    2, 1, 0\n  ],\n  expected: [\n    3, 2, 1, 0,\n    3, 2, 1, 0\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array, elem){\n    let k = 0;\n    let l = array.slice();\n    for (let i of l){\n        if (i > elem){\n            array.splice(k, 0, elem);\n            break;\n        }\n        k++;\n    }\n    return array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([5, 4, 3, 2, 1, 0], 3),[3, 2, 1, 0, 3, 2, 1, 0]);\n}\n\ntest();\n\n",
        "answer": "[3, 2, 1, 0, 3, 2, 1, 0]"
    },
    {
        "id": 19,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely deep-equal\n\n'0'\n    at test (/tmp/tmpsuso6qos.js:16:10)\n    at Object.<anonymous> (/tmp/tmpsuso6qos.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '0',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(x, y){\n    let tmp = y.split('').reverse().map(c => c === '9' ? '0' : '9').join('');\n    if (parseInt(x).toString() === x && parseInt(tmp).toString() === tmp){\n        return x + tmp;\n    } else {\n        return x;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"\", \"sdasdnakjsda80\"),\"0\");\n}\n\ntest();\n\n",
        "answer": "\"0\""
    },
    {
        "id": 20,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n',saw'\n\nshould loosely deep-equal\n\n'wasnana'\n    at test (/tmp/tmpbyfjcq9w.js:14:10)\n    at Object.<anonymous> (/tmp/tmpbyfjcq9w.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ',saw',\n  expected: 'wasnana',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let result = '';\n    for(let i = text.length - 1; i >= 0; i--){\n        result += text[i];\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"was,\"),\"wasnana\");\n}\n\ntest();\n\n",
        "answer": "\"wasnana\""
    },
    {
        "id": 21,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n  2,\n  2,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  1,\n  2,\n  2\n]\n    at test (/tmp/tmpratraola.js:12:10)\n    at Object.<anonymous> (/tmp/tmpratraola.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 2, 2, 2 ],\n  expected: [ 1, 1, 2, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array){\n    let n = array.pop();\n    array.push(n, n);\n    return array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 1, 2, 2]),[1, 1, 2, 2]);\n}\n\ntest();\n\n",
        "answer": "[1, 1, 2, 2]"
    },
    {
        "id": 22,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0\n]\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp6mdau7zc.js:19:10)\n    at Object.<anonymous> (/tmp/tmp6mdau7zc.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0 ],\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(a){\n    if (a === 0) {\n        return [0];\n    }\n    let result = [];\n    while (a > 0) {\n        result.push(a % 10);\n        a = Math.floor(a / 10);\n    }\n    result.reverse();\n    return parseInt(result.join(''));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(0),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 23,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'new-medium-performing-application - XQuery 2.'\n\nshould loosely deep-equal\n\n'new-mpl-ap-2'\n    at test (/tmp/tmpmu3pn6i8.js:18:10)\n    at Object.<anonymous> (/tmp/tmpmu3pn6i8.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'new-medium-performing-application - XQuery 2.',\n  expected: 'new-mpl-ap-2',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, chars){\n    if(chars){\n        text = text.replace(new RegExp('[' + chars + ']+$'), '');\n    } else {\n        text = text.trimRight();\n    }\n    if (text === ''){\n        return '-';\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"new-medium-performing-application - XQuery 2.2\", \"0123456789-\"),\"new-mpl-ap-2\");\n}\n\ntest();\n\n",
        "answer": "\"new-mpl-ap-2\""
    },
    {
        "id": 24,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  45,\n  3,\n  61,\n  39,\n  27,\n  47\n]\n\nshould loosely deep-equal\n\n[\n  35,\n  45,\n  3,\n  61,\n  39,\n  27,\n  47\n]\n    at test (/tmp/tmp966247e9.js:11:10)\n    at Object.<anonymous> (/tmp/tmp966247e9.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 45, 3, 61, 39, 27, 47 ],\n  expected: [\n    35, 45,  3, 61,\n    39, 27, 47\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums, i){\n    nums.splice(i, 1);\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([35, 45, 3, 61, 39, 27, 47], 0),[35, 45, 3, 61, 39, 27, 47]);\n}\n\ntest();\n\n",
        "answer": "[35, 45, 3, 61, 39, 27, 47]"
    },
    {
        "id": 25,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  l: 1,\n  t: 2\n}\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpazfl_5m6.js:12:10)\n    at Object.<anonymous> (/tmp/tmpazfl_5m6.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { l: 1, t: 2 },\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(d){\n    let newDict = Object.assign({}, d);\n    delete newDict[Object.keys(newDict).pop()];\n    return newDict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"l\": 1, \"t\": 2, \"x:\": 3}),undefined);\n}\n\ntest();\n\n",
        "answer": "undefined"
    },
    {
        "id": 26,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'error'\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmphnqm7904.js:19:10)\n    at Object.<anonymous> (/tmp/tmphnqm7904.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'error',\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(items, target){\n    let itemsArr = items.split(' ');\n    for (let i = 0; i < itemsArr.length; i++) {\n        if (target.includes(itemsArr[i])) {\n            return items.indexOf(itemsArr[i]) + 1;\n        }\n        if (itemsArr[i].indexOf('.') === itemsArr[i].length - 1 || itemsArr[i].indexOf('.') === 0) {\n            return 'error';\n        }\n    }\n    return '.';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"qy. dg. rnvprt rse.. irtwv tx..\", \"wtwdoacb\"),4);\n}\n\ntest();\n\n",
        "answer": "4"
    },
    {
        "id": 27,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\n'flak'\n    at test (/tmp/tmp40f8v7mw.js:18:10)\n    at Object.<anonymous> (/tmp/tmp40f8v7mw.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: 'flak',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(w){\n    let ls = w.split('');\n    let omw = '';\n    while (ls.length > 0) {\n        omw += ls.shift();\n        if (ls.length * 2 > w.length) {\n            return w.substring(ls.length) === omw;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"flak\"),\"flak\");\n}\n\ntest();\n\n",
        "answer": "\"flak\""
    },
    {
        "id": 28,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\n[\n  8,\n  5\n]\n    at test (/tmp/tmpoeisaplz.js:13:10)\n    at Object.<anonymous> (/tmp/tmpoeisaplz.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: [ 8, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(mylist){\n    let revl = mylist.slice();\n    revl.reverse();\n    mylist.sort((a, b) => b - a);\n    return JSON.stringify(mylist) === JSON.stringify(revl);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([5, 8]),[8, 5]);\n}\n\ntest();\n\n",
        "answer": "[8, 5]"
    },
    {
        "id": 29,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'123314'\n\nshould loosely deep-equal\n\n-123\n    at test (/tmp/tmpz8ofj_l3.js:15:10)\n    at Object.<anonymous> (/tmp/tmpz8ofj_l3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '123314',\n  expected: -123,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text){\n    let nums = text.split('').filter(char => /\\d/.test(char));\n    if (nums.length === 0) {\n        throw new Error('The text does not contain any numbers');\n    }\n    return nums.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(`-123   \t+314`),-123);\n}\n\ntest();\n\n",
        "answer": "-123"
    },
    {
        "id": 30,
        "res": true,
        "code": "\nfunction f(array){\n    let result = [];\n    for (let elem of array) {\n        if (elem.length === 1 || (Number.isInteger(elem) && !Math.abs(elem).toString().length === 1)) {\n            result.push(elem);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"a\", \"b\", \"c\"]),[\"a\", \"b\", \"c\"]);\n}\n\ntest();\n\n",
        "answer": "[\"a\", \"b\", \"c\"]"
    },
    {
        "id": 31,
        "res": true,
        "code": "\nfunction f(string){\n    let upper = 0;\n    for(let i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n            upper += 1;\n        }\n    }\n    return upper * (upper % 2 === 0 ? 2 : 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"PoIOarTvpoead\"),8);\n}\n\ntest();\n\n",
        "answer": "8"
    },
    {
        "id": 32,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'*ume;*vo'\n\nshould loosely deep-equal\n\n'ollev;nafep'\n    at test (/tmp/tmp5pxuo2qs.js:11:10)\n    at Object.<anonymous> (/tmp/tmp5pxuo2qs.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '*ume;*vo',\n  expected: 'ollev;nafep',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s, sep){\n    let reverse = s.split(sep).map(e => '*' + e);\n    return reverse.reverse().join(';');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"volume\", \"l\"),\"ollev;nafep\");\n}\n\ntest();\n\n",
        "answer": "\"ollev;nafep\""
    },
    {
        "id": 33,
        "res": 0
    },
    {
        "id": 34,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  7,\n  7,\n  6,\n  8,\n  4,\n  2,\n  5,\n  21\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  7,\n  7,\n  6,\n  8,\n  4,\n  1,\n  2,\n  3,\n  5,\n  1,\n  3,\n  21,\n  1,\n  3\n]\n    at test (/tmp/tmpi3dcwgcy.js:16:10)\n    at Object.<anonymous> (/tmp/tmpi3dcwgcy.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    2, 7, 7,  6, 8,\n    4, 2, 5, 21\n  ],\n  expected: [\n     1, 2, 3, 7, 7, 6, 8,\n     4, 1, 2, 3, 5, 1, 3,\n    21, 1, 3\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums, odd1, odd2){\n    while(nums.includes(odd1)){\n        nums.splice(nums.indexOf(odd1), 1);\n    }\n    while(nums.includes(odd2)){\n        nums.splice(nums.indexOf(odd2), 1);\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 3, 7, 7, 6, 8, 4, 1, 2, 3, 5, 1, 3, 21, 1, 3], 3, 1),[1, 2, 3, 7, 7, 6, 8, 4, 1, 2, 3, 5, 1, 3, 21, 1, 3]);\n}\n\ntest();\n\n",
        "answer": "[1, 2, 3, 7, 7, 6, 8, 4, 1, 2, 3, 5, 1, 3, 21, 1, 3]"
    },
    {
        "id": 35,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmpcg3mk512.js:17:10)\n    at Object.<anonymous> (/tmp/tmpcg3mk512.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 0, 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(pattern, items){\n    let result = [];\n    items.forEach(text => {\n        let pos = text.lastIndexOf(pattern);\n        if (pos >= 0) {\n            result.push(pos);\n        }\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\" B \", [\" bBb \", \" BaB \", \" bB\", \" bBbB \", \" bbb\"]),[0, 1, 2, 3, 4]);\n}\n\ntest();\n\n",
        "answer": "[0, 1, 2, 3, 4]"
    },
    {
        "id": 36,
        "res": true,
        "code": "\nfunction f(text, chars){\n    return text.trimEnd(chars);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ha\", \"\"),\"ha\");\n}\n\ntest();\n\n",
        "answer": "\"ha\""
    },
    {
        "id": 37,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '123',\n  '23',\n  '3'\n]\n\nshould loosely deep-equal\n\n[\n  '1',\n  '2',\n  '3'\n]\n    at test (/tmp/tmpuqk9oscm.js:14:10)\n    at Object.<anonymous> (/tmp/tmpuqk9oscm.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '123', '23', '3' ],\n  expected: [ '1', '2', '3' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let text_arr = [];\n    for(let j = 0; j < text.length; j++) {\n        text_arr.push(text.slice(j));\n    }\n    return text_arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"123\"),[\"1\", \"2\", \"3\"]);\n}\n\ntest();\n\n",
        "answer": "[\"1\", \"2\", \"3\"]"
    },
    {
        "id": 38,
        "res": 0
    },
    {
        "id": 39,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-1\n    at test (/tmp/tmpn8j8nhzk.js:13:10)\n    at Object.<anonymous> (/tmp/tmpn8j8nhzk.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -1,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array, elem){\n    if (array.includes(elem)) {\n        return array.indexOf(elem);\n    }\n    return -1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([6, 2, 7, 1], 6),-1);\n}\n\ntest();\n\n",
        "answer": "-1"
    },
    {
        "id": 40,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'the cow goes moo#'\n\nshould loosely deep-equal\n\n'###'\n    at test (/tmp/tmpknibc6hm.js:10:10)\n    at Object.<anonymous> (/tmp/tmpknibc6hm.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'the cow goes moo#',\n  expected: '###',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    return text.padEnd(text.length + 1, \"#\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"the cow goes moo\"),\"###\");\n}\n\ntest();\n\n",
        "answer": "\"###\""
    },
    {
        "id": 41,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  58,\n  92,\n  21\n]\n\nshould loosely deep-equal\n\n[\n  58,\n  21,\n  92\n]\n    at test (/tmp/tmpbtuw0_cf.js:15:10)\n    at Object.<anonymous> (/tmp/tmpbtuw0_cf.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 58, 92, 21 ],\n  expected: [ 58, 21, 92 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array, values){\n    array.reverse();\n    values.forEach(value => {\n        array.splice(Math.floor(array.length / 2), 0, value);\n    });\n    array.reverse();\n    return array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([58], [21, 92]),[58, 21, 92]);\n}\n\ntest();\n\n",
        "answer": "[58, 21, 92]"
    },
    {
        "id": 42,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0\n]\n    at test (/tmp/tmp7zljd9vq.js:14:10)\n    at Object.<anonymous> (/tmp/tmp7zljd9vq.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    0, 0, 0, 0,\n    0, 0, 0, 0\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    nums.length = 0;\n    for (let num of nums) {\n        nums.push(num * 2);\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([4, 3, 2, 1, 2, -1, 4, 2]),[0, 0, 0, 0, 0, 0, 0, 0]);\n}\n\ntest();\n\n",
        "answer": "[0, 0, 0, 0, 0, 0, 0, 0]"
    },
    {
        "id": 43,
        "res": true,
        "code": "\nfunction f(n){\n    for(let i of n.toString()){\n        if (!Number.isInteger(parseInt(i))) {\n            n = -1;\n            break;\n        }\n    }\n    return n;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"6 ** 2\"),-1);\n}\n\ntest();\n\n",
        "answer": "-1"
    },
    {
        "id": 44,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'*+++n+z+o+h'\n\nshould loosely deep-equal\n\n'n*oh'\n    at test (/tmp/tmpgitgvkxa.js:17:10)\n    at Object.<anonymous> (/tmp/tmpgitgvkxa.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '*+++n+z+o+h',\n  expected: 'n*oh',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let ls = text.split('');\n    for (let i = 0; i < ls.length; i++) {\n        if (ls[i] !== '+') {\n            ls.splice(i, 0, '*', '+');\n            break;\n        }\n    }\n    return ls.join('+');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"nzoh\"),\"n*oh\");\n}\n\ntest();\n\n",
        "answer": "\"n*oh\""
    },
    {
        "id": 45,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp7ky1c12_.js:18:10)\n    at Object.<anonymous> (/tmp/tmp7ky1c12_.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, letter){\n    let counts = {};\n    for (let i = 0; i < text.length; i++) {\n        if (!counts[text[i]]) {\n            counts[text[i]] = 1;\n        } else {\n            counts[text[i]] += 1;\n        }\n    }\n    return counts[letter] || 0;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"za1fd1as8f7afasdfam97adfa\", \"7\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 46,
        "res": true,
        "code": "\nfunction f(l, c){\n    return l.join(c);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"many\", \"letters\", \"asvsz\", \"hello\", \"man\"], \"\"),\"manylettersasvszhelloman\");\n}\n\ntest();\n\n",
        "answer": "\"manylettersasvszhelloman\""
    },
    {
        "id": 47,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmprahe4rco.js:18:10)\n    at Object.<anonymous> (/tmp/tmprahe4rco.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    var length = text.length;\n    var half = Math.floor(length / 2);\n    var encode = text.slice(0, half);\n    var decode = new TextEncoder().encode(encode);\n    if (text.slice(half) === new TextDecoder().decode(decode)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"bbbbr\"),true);\n}\n\ntest();\n\n",
        "answer": "true"
    },
    {
        "id": 48,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpqck8jcqo.js:20:10)\n    at Object.<anonymous> (/tmp/tmpqck8jcqo.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(names){\n    if (names.length === 0) {\n        return \"\";\n    }\n    let smallest = names[0];\n    for (let i = 1; i < names.length; i++) {\n        if (names[i] < smallest) {\n            smallest = names[i];\n        }\n    }\n    names.splice(names.indexOf(smallest), 1);\n    return smallest;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([]),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 49,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'816'\n\nshould loosely deep-equal\n\n8\n    at test (/tmp/tmpzzprgxfw.js:14:10)\n    at Object.<anonymous> (/tmp/tmpzzprgxfw.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '816',\n  expected: 8,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    if (text.match(/^\\w+$/)) {\n        return text.split('').filter(c => /\\d/.test(c)).join('');\n    } else {\n        return text.split('').join('');\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"816\"),8);\n}\n\ntest();\n\n",
        "answer": "8"
    },
    {
        "id": 50,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'c',\n  'v',\n  1,\n  1,\n  1,\n  1\n]\n    at test (/tmp/tmph_p5xb50.js:12:10)\n    at Object.<anonymous> (/tmp/tmph_p5xb50.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n  expected: [\n    'a', 'c', 'v', 1,\n    1,   1,   1\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(lst){\n    lst.splice(0, lst.length);\n    lst.push(...Array(lst.length + 1).fill(1));\n    return lst;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"a\", \"c\", \"v\"]),[\"a\", \"c\", \"v\", 1, 1, 1, 1]);\n}\n\ntest();\n\n",
        "answer": "[\"a\", \"c\", \"v\", 1, 1, 1, 1]"
    },
    {
        "id": 51,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmprt6p6jzz.js:15:10)\n    at Object.<anonymous> (/tmp/tmprt6p6jzz.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(num){\n    let s = '<'.repeat(10);\n    if (num % 2 === 0) {\n        return s;\n    } else {\n        return num - 1;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(21),6);\n}\n\ntest();\n\n",
        "answer": "6"
    },
    {
        "id": 52,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'seiq d'\n\nshould loosely deep-equal\n\n'seven229'\n    at test (/tmp/tmp1a93oymn.js:17:10)\n    at Object.<anonymous> (/tmp/tmp1a93oymn.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'seiq d',\n  expected: 'seven229',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text){\n    let a = [];\n    for(let i = 0; i < text.length; i++){\n        if(!parseInt(text[i]) && text[i] !== '0'){\n            a.push(text[i]);\n        }\n    }\n    return a.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"seiq7229 d27\"),\"seven229\");\n}\n\ntest();\n\n",
        "answer": "\"seven229\""
    },
    {
        "id": 53,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  1,\n  1,\n  1,\n  1\n]\n    at test (/tmp/tmp74nfd8px.js:16:10)\n    at Object.<anonymous> (/tmp/tmp74nfd8px.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1, 1, 1, 1,\n    1, 1, 1\n  ],\n  expected: [ 1, 1, 1, 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let occ = {};\n    for(let i = 0; i < text.length; i++){\n        let ch = text[i];\n        let name = {'a': 'b', 'b': 'c', 'c': 'd', 'd': 'e', 'e': 'f'}[ch] || ch;\n        occ[name] = (occ[name] || 0) + 1;\n    }\n    return Object.values(occ);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"URW rNB\"),[1, 1, 1, 1, 1]);\n}\n\ntest();\n\n",
        "answer": "[1, 1, 1, 1, 1]"
    },
    {
        "id": 54,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp47e8uopz.js:23:10)\n    at Object.<anonymous> (/tmp/tmp47e8uopz.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, s, e) {\n    let sublist = text.slice(s, e);\n    if (!sublist) {\n        return -1;\n    }\n    let minChar = sublist[0];\n    let minIndex = 0;\n    for (let i = 1; i < sublist.length; i++) {\n        if (sublist[i] < minChar) {\n            minChar = sublist[i];\n            minIndex = i;\n        }\n    }\n    return minIndex;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"happy\", 0, 3),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 55,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  89,\n  43,\n  17,\n  14,\n  8,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  8,\n  17,\n  89,\n  43,\n  14\n]\n    at test (/tmp/tmpzl2aspzt.js:17:10)\n    at Object.<anonymous> (/tmp/tmpzl2aspzt.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 89, 43, 17, 14, 8, 4 ],\n  expected: [ 4, 8, 17, 89, 43, 14 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array){\n    let array_2 = [];\n    for (let i of array) {\n        if (i > 0) {\n            array_2.push(i);\n        }\n    }\n    array_2.sort((a, b) => b - a);\n    return array_2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([4, 8, 17, 89, 43, 14]),[4, 8, 17, 89, 43, 14]);\n}\n\ntest();\n\n",
        "answer": "[4, 8, 17, 89, 43, 14]"
    },
    {
        "id": 56,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpofyq0t77.js:15:10)\n    at Object.<anonymous> (/tmp/tmpofyq0t77.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(sentence){\n    for(let i = 0; i < sentence.length; i++){\n        if (!sentence[i].match(/[ -~]/)){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"1z1z1\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 57,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp_7fcvxx4.js:20:10)\n    at Object.<anonymous> (/tmp/tmp_7fcvxx4.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    text = text.toUpperCase();\n    let count_upper = 0;\n    for(let i = 0; i < text.length; i++){\n        let char = text.charAt(i);\n        if(char === char.toUpperCase()){\n            count_upper++;\n        } else {\n            return 'no';\n        }\n    }\n    return Math.floor(count_upper / 2);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ax\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 58,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  0,\n  0,\n  1,\n  1,\n  -1,\n  0,\n  -1,\n  0,\n  -1\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  0,\n  0,\n  1,\n  1,\n  -1,\n  0,\n  0,\n  1,\n  1,\n  -1,\n  0,\n  0,\n  1,\n  1\n]\n    at test (/tmp/tmp6qlp2331.js:14:10)\n    at Object.<anonymous> (/tmp/tmp6qlp2331.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    -1, 0,  0, 1,  1,\n    -1, 0, -1, 0, -1\n  ],\n  expected: [\n    -1, 0, 0, 1,  1, -1,\n     0, 0, 1, 1, -1,  0,\n     0, 1, 1\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    let count = nums.length;\n    for (let i = 0; i < count; i++) {\n        nums.push(nums[i % 2]);\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([-1, 0, 0, 1, 1]),[-1, 0, 0, 1, 1, -1, 0, 0, 1, 1, -1, 0, 0, 1, 1]);\n}\n\ntest();\n\n",
        "answer": "[-1, 0, 0, 1, 1, -1, 0, 0, 1, 1, -1, 0, 0, 1, 1]"
    },
    {
        "id": 59,
        "res": true,
        "code": "\nfunction f(s){\n    let a = s.split('').filter(char => char !== ' ');\n    let b = a.slice();\n    for(let i = a.length - 1; i >= 0; i--){\n        if(a[i] === ' '){\n            b.pop();\n        } else {\n            break;\n        }\n    }\n    return b.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"hi \"),\"hi\");\n}\n\ntest();\n\n",
        "answer": "\"hi\""
    },
    {
        "id": 60,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'R'\n\nshould loosely deep-equal\n\n'RAWA'\n    at test (/tmp/tmpetzoliw4.js:15:10)\n    at Object.<anonymous> (/tmp/tmpetzoliw4.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'R',\n  expected: 'RAWA',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(doc){\n    for(let x of doc){\n        if(x.match(/[a-zA-Z]/)){\n            return x.toUpperCase();\n        }\n    }\n    return '-';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"raruwa\"),\"RAWA\");\n}\n\ntest();\n\n",
        "answer": "\"RAWA\""
    },
    {
        "id": 61,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'nada'\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp0079pful.js:15:10)\n    at Object.<anonymous> (/tmp/tmp0079pful.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'nada',\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let texts = text.split(' ');\n    if (texts.length > 0) {\n        let xtexts = texts.filter(t => t.match(/^[\\x00-\\x7F]+$/) && !['nada', '0'].includes(t));\n        return xtexts.reduce((a, b) => a.length >= b.length ? a : b, 'nada');\n    }\n    return 'nada';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"\"),undefined);\n}\n\ntest();\n\n",
        "answer": "undefined"
    },
    {
        "id": 62,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'ja',\n  'nee',\n  'coke',\n  'zoo'\n]\n\nshould loosely deep-equal\n\n[\n  'eat',\n  'ja',\n  'nee',\n  'coke',\n  'zoo'\n]\n    at test (/tmp/tmpzlwgfzq_.js:13:10)\n    at Object.<anonymous> (/tmp/tmpzlwgfzq_.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'ja', 'nee', 'coke', 'zoo' ],\n  expected: [ 'eat', 'ja', 'nee', 'coke', 'zoo' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(user){\n    if (Object.keys(user).length > Object.values(user).length) {\n        return Object.keys(user);\n    }\n    return Object.values(user);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"eating\": \"ja\", \"books\": \"nee\", \"piano\": \"coke\", \"excitement\": \"zoo\"}),[\"eat\", \"ja\", \"nee\", \"coke\", \"zoo\"]);\n}\n\ntest();\n\n",
        "answer": "[\"eat\", \"ja\", \"nee\", \"coke\", \"zoo\"]"
    },
    {
        "id": 63,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'dbtdabdahesyehu'\n\nshould loosely deep-equal\n\n'ndbtehahesyehu'\n    at test (/tmp/tmpdgd_cevn.js:13:10)\n    at Object.<anonymous> (/tmp/tmpdgd_cevn.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'dbtdabdahesyehu',\n  expected: 'ndbtehahesyehu',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, prefix){\n    while(text.startsWith(prefix)){\n        text = text.slice(prefix.length) || text;\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ndbtdabdahesyehu\", \"n\"),\"ndbtehahesyehu\");\n}\n\ntest();\n\n",
        "answer": "\"ndbtehahesyehu\""
    },
    {
        "id": 64,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'     7     '\n\nshould loosely deep-equal\n\n'          7'\n    at test (/tmp/tmpkrb4xb92.js:17:10)\n    at Object.<anonymous> (/tmp/tmpkrb4xb92.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '     7     ',\n  expected: '          7',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, size){\n    let counter = text.length;\n    for(let i = 0; i < size - size % 2; i++){\n        text = ' ' + text + ' ';\n        counter += 2;\n        if(counter >= size){\n            return text;\n        }\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"7\", 10),\"          7\");\n}\n\ntest();\n\n",
        "answer": "\"          7\""
    },
    {
        "id": 65,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely deep-equal\n\n42\n    at test (/tmp/tmpva7fieon.js:10:10)\n    at Object.<anonymous> (/tmp/tmpva7fieon.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 42,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums, index){\n    return nums[index] % 42 + nums.splice(index, 1)[0] * 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([3, 2, 0, 3, 7], 3),42);\n}\n\ntest();\n\n",
        "answer": "42"
    },
    {
        "id": 66,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely deep-equal\n\n'happppy'\n    at test (/tmp/tmp0070ahd7.js:15:10)\n    at Object.<anonymous> (/tmp/tmp0070ahd7.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'happppy',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, prefix){\n    let prefix_length = prefix.length;\n    if (text.startsWith(prefix)) {\n        return text.substr((prefix_length - 1) / 2, (prefix_length + 1) / 2 * -1).split('').reverse().join('');\n    } else {\n        return text;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"happy\", \"ha\"),\"happppy\");\n}\n\ntest();\n\n",
        "answer": "\"happppy\""
    },
    {
        "id": 67,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'6,8,8'\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp9pmcbvqh.js:12:10)\n    at Object.<anonymous> (/tmp/tmp9pmcbvqh.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '6,8,8',\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(num1, num2, num3){\n    let nums = [num1, num2, num3];\n    nums.sort((a, b) => a - b);    \n    return `${nums[0]},${nums[1]},${nums[2]}`;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(6, 8, 8),6);\n}\n\ntest();\n\n",
        "answer": "6"
    },
    {
        "id": 68,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'dq'\n\nshould loosely deep-equal\n\n'hello'\n    at test (/tmp/tmp3t47401f.js:16:10)\n    at Object.<anonymous> (/tmp/tmp3t47401f.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'dq',\n  expected: 'hello',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, pref){\n    if (text.startsWith(pref)){\n        let n = pref.length;\n        let textArr = text.substring(n).split('.');\n        let newText = textArr.slice(1).concat(text.substring(0, n).split('.').slice(0, -1)).join('.');\n        text = newText;\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"omeunhwpvr.dq\", \"omeunh\"),\"hello\");\n}\n\ntest();\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 69,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Name unknown'\n\nshould loosely deep-equal\n\n56\n    at test (/tmp/tmp5k84gpuh.js:15:10)\n    at Object.<anonymous> (/tmp/tmp5k84gpuh.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Name unknown',\n  expected: 56,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(student_marks, name){\n    if (student_marks.hasOwnProperty(name)) {\n        var value = student_marks[name];\n        delete student_marks[name];\n        return value;\n    }\n    return 'Name unknown';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"882afmfp\": 56}, \"6f53p\"),56);\n}\n\ntest();\n\n",
        "answer": "56"
    },
    {
        "id": 70,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely deep-equal\n\n999890376752380\n    at test (/tmp/tmpmhrubnrk.js:14:10)\n    at Object.<anonymous> (/tmp/tmpmhrubnrk.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected: 999890376752380,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(x){\n    let a = 0;\n    x.split(' ').forEach(i => {\n        a += i.padStart(i.length * 2, '0').length;\n    });\n    return a;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"999893767522480\"),999890376752380);\n}\n\ntest();\n\n",
        "answer": "999890376752380"
    },
    {
        "id": 71,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  '1': 2,\n  '10': 9,\n  '3': 4,\n  '5': 6,\n  '7': 8\n}\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp1r0c30oi.js:15:10)\n    at Object.<anonymous> (/tmp/tmp1r0c30oi.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { '1': 2, '3': 4, '5': 6, '7': 8, '10': 9 },\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(d, n){\n    for(let i = 0; i < n; i++){\n        let item = Object.entries(d).pop();\n        delete d[item[0]];\n        d[item[1]] = parseInt(item[0]);\n    }\n    return d;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({1: 2, 3: 4, 5: 6, 7: 8, 9: 10}, 1),undefined);\n}\n\ntest();\n\n",
        "answer": "undefined"
    },
    {
        "id": 72,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpl9hwr82n.js:15:10)\n    at Object.<anonymous> (/tmp/tmpl9hwr82n.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    for(let i = 0; i < text.length; i++){\n        if(isNaN(parseInt(text[i]))){\n            return false;\n        }\n    }\n    return Boolean(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"99\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 73,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  4\n]\n    at test (/tmp/tmpelf9teh4.js:10:10)\n    at Object.<anonymous> (/tmp/tmpelf9teh4.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 6 ],\n  expected: [ 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(row){\n    return [row.split('1').length - 1, row.split('0').length - 1];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"100010010\"),[4, 4]);\n}\n\ntest();\n\n",
        "answer": "[4, 4]"
    },
    {
        "id": 74,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  44,\n  34,\n  23,\n  82,\n  15,\n  24,\n  11,\n  63,\n  99\n]\n\nshould loosely deep-equal\n\n[\n  44,\n  34,\n  23,\n  82,\n  24,\n  11,\n  63,\n  99,\n  15,\n  24,\n  11,\n  63,\n  99,\n  44,\n  34,\n  23,\n  82,\n  24,\n  11,\n  63,\n  99\n]\n    at test (/tmp/tmphi_x6egj.js:11:10)\n    at Object.<anonymous> (/tmp/tmphi_x6egj.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    44, 34, 23, 82, 15,\n    24, 11, 63, 99\n  ],\n  expected: [\n    44, 34, 23, 82, 24, 11, 63,\n    99, 15, 24, 11, 63, 99, 44,\n    34, 23, 82, 24, 11, 63, 99\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(lst, i, n){\n    lst.splice(i, 0, n);\n    return lst;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([44, 34, 23, 82, 24, 11, 63, 99], 4, 15),[44, 34, 23, 82, 24, 11, 63, 99, 15, 24, 11, 63, 99, 44, 34, 23, 82, 24, 11, 63, 99]);\n}\n\ntest();\n\n",
        "answer": "[44, 34, 23, 82, 24, 11, 63, 99, 15, 24, 11, 63, 99, 44, 34, 23, 82, 24, 11, 63, 99]"
    },
    {
        "id": 75,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-22\n\nshould loosely deep-equal\n\n8\n    at test (/tmp/tmpnx1ww2bi.js:11:10)\n    at Object.<anonymous> (/tmp/tmpnx1ww2bi.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -22,\n  expected: 8,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array, elem){\n    var ind = array.indexOf(elem);\n    return ind * 2 + array[array.length - ind - 1] * 3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([-1, 2, 1, -8, 2], 2),8);\n}\n\ntest();\n\n",
        "answer": "8"
    },
    {
        "id": 76,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  6,\n  2,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  3,\n  10\n]\n\nshould loosely deep-equal\n\n[\n  10,\n  3,\n  2,\n  2,\n  6,\n  0\n]\n    at test (/tmp/tmpsgldf5pq.js:16:10)\n    at Object.<anonymous> (/tmp/tmpsgldf5pq.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    6, 2, 0, 0,  0,\n    0, 0, 2, 3, 10\n  ],\n  expected: [ 10, 3, 2, 2, 6, 0 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    nums = nums.filter(y => y > 0);\n    if (nums.length <= 3) {\n        return nums;\n    }\n    nums.reverse();\n    let half = Math.floor(nums.length / 2);\n    return nums.slice(0, half).concat(Array(5).fill(0), nums.slice(half));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([10, 3, 2, 2, 6, 0]),[10, 3, 2, 2, 6, 0]);\n}\n\ntest();\n\n",
        "answer": "[10, 3, 2, 2, 6, 0]"
    },
    {
        "id": 77,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely deep-equal\n\n'hheooo'\n    at test (/tmp/tmpmof62jdi.js:11:10)\n    at Object.<anonymous> (/tmp/tmpmof62jdi.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'hheooo',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, character){\n    var subject = text.substring(text.lastIndexOf(character));\n    return subject.repeat(text.split(character).length - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"h ,lpvvkohh,u\", \"i\"),\"hheooo\");\n}\n\ntest();\n\n",
        "answer": "\"hheooo\""
    },
    {
        "id": 78,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'mty'\n\nshould loosely deep-equal\n\n'mtywlr'\n    at test (/tmp/tmp9tuunt4o.js:17:10)\n    at Object.<anonymous> (/tmp/tmp9tuunt4o.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'mty',\n  expected: 'mtywlr',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    if (text && text === text.toUpperCase()) {\n        let cs = Array.from(string.ascii_uppercase).reduce((acc, curr, idx) => {\n            acc[curr] = string.ascii_lowercase[idx];\n            return acc;\n        }, {});\n        return text.split('').map(c => cs[c] || c).join('');\n    }\n    return text.toLowerCase().slice(0, 3);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n\"),\"mtywlr\");\n}\n\ntest();\n\n",
        "answer": "\"mtywlr\""
    },
    {
        "id": 79,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1,2,3,4'\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpje_wwzj2.js:13:10)\n    at Object.<anonymous> (/tmp/tmpje_wwzj2.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1,2,3,4',\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(arr){\n    arr = Array.from(arr);\n    arr.length = 0;\n    arr.push('1', '2', '3', '4');\n    return arr.join(',');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([0, 1, 2, 3, 4]),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 80,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'ba'\n\nshould loosely deep-equal\n\n'nab'\n    at test (/tmp/tmp3xmz_j9q.js:10:10)\n    at Object.<anonymous> (/tmp/tmp3xmz_j9q.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'ba',\n  expected: 'nab',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s){\n    return s.trimRight().split('').reverse().join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ab        \"),\"nab\");\n}\n\ntest();\n\n",
        "answer": "\"nab\""
    },
    {
        "id": 81,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'Bulls',\n    'bulls'\n  ],\n  [\n    'White Sox',\n    45\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  '23',\n  '45'\n]\n    at test (/tmp/tmp5sfi986_.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5sfi986_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'Bulls', 'bulls' ], [ 'White Sox', 45 ] ],\n  expected: [ '23', '45' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(dic, inx){\n    try {\n        let keys = Object.keys(dic);\n        let index = keys.indexOf(inx);\n        if (index !== -1) {\n            dic[keys[index]] = keys[index].toLowerCase();\n        }\n    } catch (error) {\n        // pass\n    }\n    return Object.entries(dic);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"Bulls\": 23, \"White Sox\": 45}, \"Bulls\"),[\"23\", \"45\"]);\n}\n\ntest();\n\n",
        "answer": "[\"23\", \"45\"]"
    },
    {
        "id": 82,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'BFS'\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpnx0g_41a.js:10:10)\n    at Object.<anonymous> (/tmp/tmpnx0g_41a.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'BFS',\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(a, b, c, d){\n    return a && b || c && d;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"CJU\", \"BFS\", \"WBYDZPVES\", \"Y\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 83,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'2:0'\n\nshould loosely deep-equal\n\n'5:1'\n    at test (/tmp/tmp4yg_qaz6.js:14:10)\n    at Object.<anonymous> (/tmp/tmp4yg_qaz6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '2:0',\n  expected: '5:1',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let l = text.split('0').slice(-2);\n    if (l[1] === '') {\n        return '-1:-1';\n    }\n    return `${l[0].length}:${l[1].indexOf(\"0\") + 1}`;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"qq0tt\"),\"5:1\");\n}\n\ntest();\n\n",
        "answer": "\"5:1\""
    },
    {
        "id": 84,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'nwvday mefday ofmeday bdrylday'\n\nshould loosely deep-equal\n\n'ofme bdryl day'\n    at test (/tmp/tmp4ci0cayj.js:20:10)\n    at Object.<anonymous> (/tmp/tmp4ci0cayj.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'nwvday mefday ofmeday bdrylday',\n  expected: 'ofme bdryl day',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let arr = text.split(' ');\n    let result = [];\n    for(let item of arr){\n        if(item.endsWith('day')){\n            item += 'y';\n        } else {\n            item += 'day';\n        }\n        result.push(item);\n    }\n    return result.join(' ');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"nwv mef ofme bdryl\"),\"ofme bdryl day\");\n}\n\ntest();\n\n",
        "answer": "\"ofme bdryl day\""
    },
    {
        "id": 85,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '3',\n  '4.5'\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  4\n]\n    at test (/tmp/tmpd7kctfs5.js:18:10)\n    at Object.<anonymous> (/tmp/tmpd7kctfs5.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '3', '4.5' ],\n  expected: [ 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(n){\n    let values = {0: 3, 1: 4.5, 2: '-'};\n    let res = {};\n    for (let i in values){\n        let j = values[i];\n        if (i % n !== 2){\n            res[j] = Math.floor(n / 2);\n        }\n    }\n    return Object.keys(res).sort((a, b) => a - b);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(12),[3, 4]);\n}\n\ntest();\n\n",
        "answer": "[3, 4]"
    },
    {
        "id": 86,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'sdfs',\n  'drcr',\n  '2e'\n]\n\nshould loosely deep-equal\n\n'sdfs'\n    at test (/tmp/tmputomc5pn.js:19:10)\n    at Object.<anonymous> (/tmp/tmputomc5pn.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'sdfs', 'drcr', '2e' ],\n  expected: 'sdfs',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(instagram, imgur, wins){\n    let photos = [instagram, imgur];\n    if (instagram.toString() === imgur.toString()) {\n        return wins;\n    }\n    if (wins === 1) {\n        return photos.pop();\n    } else {\n        photos.reverse();\n        return photos.pop();\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"sdfs\", \"drcr\", \"2e\"], [\"sdfs\", \"dr2c\", \"QWERTY\"], 0),\"sdfs\");\n}\n\ntest();\n\n",
        "answer": "\"sdfs\""
    },
    {
        "id": 87,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'-2139-1'\n\nshould loosely deep-equal\n\n'321-1-9-3-2'\n    at test (/tmp/tmp2fki96dt.js:11:10)\n    at Object.<anonymous> (/tmp/tmp2fki96dt.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '-2139-1',\n  expected: '321-1-9-3-2',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    nums.reverse();\n    return nums.map(String).join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([-1, 9, 3, 1, -2]),\"321-1-9-3-2\");\n}\n\ntest();\n\n",
        "answer": "\"321-1-9-3-2\""
    },
    {
        "id": 88,
        "res": true,
        "code": "\nfunction f(s1, s2){\n    if(s2.endsWith(s1)){\n        s2 = s2.slice(0, -s1.length);\n    }\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"he\", \"hello\"),\"hello\");\n}\n\ntest();\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 89,
        "res": true,
        "code": "\nfunction f(char){\n    if (!['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'].includes(char)) {\n        return null;\n    }\n    if (['A', 'E', 'I', 'O', 'U'].includes(char)) {\n        return char.toLowerCase();\n    }\n    return char.toUpperCase();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"o\"),\"O\");\n}\n\ntest();\n\n",
        "answer": "\"O\""
    },
    {
        "id": 90,
        "res": true,
        "code": "\nfunction f(array){\n    let return_arr = [];\n    for (let a of array) {\n        return_arr.push([...a]);\n    }\n    return return_arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([[1, 2, 3], [], [1, 2, 3]]),[[1, 2, 3], [], [1, 2, 3]]);\n}\n\ntest();\n\n",
        "answer": "[[1, 2, 3], [], [1, 2, 3]]"
    },
    {
        "id": 91,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '1',\n  '2',\n  'a',\n  'b',\n  '3',\n  'x',\n  'y'\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3\n]\n    at test (/tmp/tmp0gqnip86.js:12:10)\n    at Object.<anonymous> (/tmp/tmp0gqnip86.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    '1', '2', 'a',\n    'b', '3', 'x',\n    'y'\n  ],\n  expected: [ 1, 2, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(s){\n    let d = Array.from(new Set(s.split('')));\n    return d;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"12ab23xy\"),[1, 2, 3]);\n}\n\ntest();\n\n",
        "answer": "[1, 2, 3]"
    },
    {
        "id": 92,
        "res": true,
        "code": "\nfunction f(text){\n    return /^[\\x00-\\x7F]*$/.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"wW의IV]HDJjhgK[dGIUlVO@Ess$coZkBqu[Ct\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 93,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpdc30albw.js:14\n  assert.deepEqual(candidate(\"iq\"),\"i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!);\nn\nSyntaxError: Invalid or unexpected token\n    at wrapSafe (node:internal/modules/cjs/loader:1350:18)\n    at Module._compile (node:internal/modules/cjs/loader:1379:20)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(n){\n    let length = n.length + 2;\n    let revn = n.split('');\n    let result = revn.join('');\n    revn = [];\n    return result + '!'.repeat(length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"iq\"),\"i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!);\n}\n\ntest();\n\n",
        "answer": "\"i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!i!"
    },
    {
        "id": 94,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  w: 3,\n  wi: 10\n}\n\nshould loosely deep-equal\n\n{\n  w: 5,\n  wi: 10\n}\n    at test (/tmp/tmpza5aoyru.js:10:10)\n    at Object.<anonymous> (/tmp/tmpza5aoyru.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { w: 3, wi: 10 },\n  expected: { w: 5, wi: 10 },\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(a, b){\n    return {...a, ...b};\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"w\": 5, \"wi\": 10}, {\"w\": 3}),{w: 5, wi: 10});\n}\n\ntest();\n\n",
        "answer": "{w: 5, wi: 10}"
    },
    {
        "id": 95,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  fr: 'AAA'\n}\n\nshould loosely deep-equal\n\n'fr'\n    at test (/tmp/tmpav6rrjk1.js:10:10)\n    at Object.<anonymous> (/tmp/tmpav6rrjk1.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { fr: 'AAA' },\n  expected: 'fr',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(zoo){\n    return Object.fromEntries(Object.entries(zoo).map(([key, value]) => [value, key]));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"AAA\": \"fr\"}),\"fr\");\n}\n\ntest();\n\n",
        "answer": "\"fr\""
    },
    {
        "id": 96,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp7i8nqihb.js:10:10)\n    at Object.<anonymous> (/tmp/tmp7i8nqihb.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    return !text.split('').some(c => c.toUpperCase() === c);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"lunabotics\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 97,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp8lve22zc.js:16:10)\n    at Object.<anonymous> (/tmp/tmp8lve22zc.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(lst){\n    lst.splice(0, lst.length);\n    for (let i of lst) {\n        if (i === 3) {\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([2, 0]),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 98,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpuu9z72qu.js:13:10)\n    at Object.<anonymous> (/tmp/tmpuu9z72qu.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(s){\n    return s.split(' ').reduce((acc, curr) => {\n        return acc + (curr.charAt(0) === curr.charAt(0).toUpperCase() && curr.slice(1) === curr.slice(1).toLowerCase() ? 1 : 0);\n    }, 0);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"SOME OF THIS Is uknowN!\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 99,
        "res": 0
    },
    {
        "id": 100,
        "res": 0
    },
    {
        "id": 101,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -4,\n  4,\n  1,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  -4,\n  1,\n  0,\n  4\n]\n    at test (/tmp/tmpfxg44gpo.js:11:10)\n    at Object.<anonymous> (/tmp/tmpfxg44gpo.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -4, 4, 1, 0 ],\n  expected: [ -4, 1, 0, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array, i_num, elem){\n    array.splice(i_num, 0, elem);\n    return array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([-4, 1, 0], 1, 4),[-4, 1, 0, 4]);\n}\n\ntest();\n\n",
        "answer": "[-4, 1, 0, 4]"
    },
    {
        "id": 102,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'e',\n  'f',\n  'j',\n  'x',\n  'r',\n  'k'\n]\n    at test (/tmp/tmpiadhi3xv.js:17:10)\n    at Object.<anonymous> (/tmp/tmpiadhi3xv.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'e', 'f', 'j', 'x', 'r', 'k' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(names, winners){\n    let ls = names.reduce((acc, name, index) => {\n        if (winners.includes(name)) {\n            acc.push(index);\n        }\n        return acc;\n    }, []);\n    ls.sort((a, b) => b - a);\n    return ls;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"e\", \"f\", \"j\", \"x\", \"r\", \"k\"], [\"a\", \"v\", \"2\", \"im\", \"nb\", \"vj\", \"z\"]),[\"e\", \"f\", \"j\", \"x\", \"r\", \"k\"]);\n}\n\ntest();\n\n",
        "answer": "[\"e\", \"f\", \"j\", \"x\", \"r\", \"k\"]"
    },
    {
        "id": 103,
        "res": true,
        "code": "\nfunction f(s){\n    return s.split('').map(c => c.toLowerCase()).join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"abcDEFGhIJ\"),\"abcdefghij\");\n}\n\ntest();\n\n",
        "answer": "\"abcdefghij\""
    },
    {
        "id": 104,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  a: 1\n}\n\nshould loosely deep-equal\n\n{}\n    at test (/tmp/tmpfvknjs6s.js:23:10)\n    at Object.<anonymous> (/tmp/tmpfvknjs6s.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { a: 1 },\n  expected: {},\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let dic = {};\n    for(let i = 0; i < text.length; i++){\n        if(dic[text[i]]){\n            dic[text[i]]++;\n        } else {\n            dic[text[i]] = 1;\n        }\n    }\n    for(let key in dic){\n        if(dic[key] > 1){\n            dic[key] = 1;\n        }\n    }\n    return dic;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"a\"),{});\n}\n\ntest();\n\n",
        "answer": "{}"
    },
    {
        "id": 105,
        "res": 0
    },
    {
        "id": 106,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  2,\n  8,\n  -2,\n  9,\n  3,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  16,\n  -4,\n  9,\n  6,\n  6\n]\n    at test (/tmp/tmpl0a_of7x.js:14:10)\n    at Object.<anonymous> (/tmp/tmpl0a_of7x.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    4, 4, 4,  4, 4,\n    4, 2, 8, -2, 9,\n    3, 3\n  ],\n  expected: [ 4, 16, -4, 9, 6, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    let count = nums.length;\n    for(let i = 0; i < count; i++){\n        nums.splice(i, 0, nums[i]*2);\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([2, 8, -2, 9, 3, 3]),[4, 16, -4, 9, 6, 6]);\n}\n\ntest();\n\n",
        "answer": "[4, 16, -4, 9, 6, 6]"
    },
    {
        "id": 107,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'UA6HAJQ'\n\nshould loosely deep-equal\n\n'Hello World'\n    at test (/tmp/tmpso3t4ttj.js:20:10)\n    at Object.<anonymous> (/tmp/tmpso3t4ttj.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'UA6HAJQ',\n  expected: 'Hello World',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let result = [];\n    for(let i = 0; i < text.length; i++){\n        if(!text[i].match(/[ -~]/)){\n            return false;\n        } else if(text[i].match(/[a-zA-Z0-9]/)){\n            result.push(text[i].toUpperCase());\n        } else {\n            result.push(text[i]);\n        }\n    }\n    return result.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ua6hajq\"),\"Hello World\");\n}\n\ntest();\n\n",
        "answer": "\"Hello World\""
    },
    {
        "id": 108,
        "res": true,
        "code": "\nfunction f(input){\n    let amount = input instanceof Array ? input.length : 0;\n    if (typeof input === 'object') {\n        amount = Object.keys(input).length;\n    }\n    let nonzero = amount > 0 ? amount : 0;\n    return nonzero;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(1),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 109,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  9,\n  1,\n  0,\n  1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  0,\n  1,\n  1,\n  0,\n  1,\n  1,\n  0,\n  1,\n  1\n]\n    at test (/tmp/tmpoa5irtt7.js:11:10)\n    at Object.<anonymous> (/tmp/tmpoa5irtt7.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 9, 1, 0, 1, 1 ],\n  expected: [\n    1, 0, 1, 1, 0,\n    1, 1, 0, 1, 1\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums, spot, idx){\n    nums.splice(spot, 0, idx);\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 0, 1, 1], 0, 9),[1, 0, 1, 1, 0, 1, 1, 0, 1, 1]);\n}\n\ntest();\n\n",
        "answer": "[1, 0, 1, 1, 0, 1, 1, 0, 1, 1]"
    },
    {
        "id": 110,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpo1ch_1bw.js:20:10)\n    at Object.<anonymous> (/tmp/tmpo1ch_1bw.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let a = [''];\n    let b = '';\n    for(let i of text){\n        if(i !== ' '){\n            a.push(b);\n            b = '';\n        } else {\n            b += i;\n        }\n    }\n    return a.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"       \"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 111,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  89,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  67,\n  89\n]\n    at test (/tmp/tmpgcnyp632.js:20:10)\n    at Object.<anonymous> (/tmp/tmpgcnyp632.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 89, 4 ],\n  expected: [ 67, 89 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(marks){\n    let highest = 0;\n    let lowest = 100;\n    for (let value of Object.values(marks)) {\n        if (value > highest) {\n            highest = value;\n        }\n        if (value < lowest) {\n            lowest = value;\n        }\n    }\n    return [highest, lowest];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"x\": 67, \"v\": 89, \"\": 4, \"alij\": 11, \"kgfsd\": 72, \"yafby\": 83}),[67, 89]);\n}\n\ntest();\n\n",
        "answer": "[67, 89]"
    },
    {
        "id": 112,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'XYZLtRRdnHodLTTBIGGeXET fult'\n\nshould loosely deep-equal\n\n'LittleRedRidingHoodLiTTleBIGGeXEiT'\n    at test (/tmp/tmp_56helup.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_56helup.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'XYZLtRRdnHodLTTBIGGeXET fult',\n  expected: 'LittleRedRidingHoodLiTTleBIGGeXEiT',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(sentence){\n    let ls = sentence.split('');\n    for(let letter of ls){\n        if(letter === letter.toLowerCase()){\n            ls.splice(ls.indexOf(letter), 1);\n        }\n    }\n    return ls.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"XYZ LittleRedRidingHood LiTTleBIGGeXEiT fault\"),\"LittleRedRidingHoodLiTTleBIGGeXEiT\");\n}\n\ntest();\n\n",
        "answer": "\"LittleRedRidingHoodLiTTleBIGGeXEiT\""
    },
    {
        "id": 113,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'987YhnShAShD 93275yRgsgBgssHfBsFB'\n\nshould loosely deep-equal\n\n'yhNAsHd93275yRgSgbgSshfB'\n    at test (/tmp/tmpk_938zgn.js:21:10)\n    at Object.<anonymous> (/tmp/tmpk_938zgn.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '987YhnShAShD 93275yRgsgBgssHfBsFB',\n  expected: 'yhNAsHd93275yRgSgbgSshfB',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(line){\n    let count = 0;\n    let a = [];\n    for(let i=0; i<line.length; i++){\n        count += 1;\n        if(count%2===0){\n            a.push(line[i].toLowerCase() === line[i] ? line[i].toUpperCase() : line[i].toLowerCase());\n        }else{\n            a.push(line[i]);\n        }\n    }\n    return a.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"987yhNSHAshd 93275yrgSgbgSshfbsfB\"),\"yhNAsHd93275yRgSgbgSshfB\");\n}\n\ntest();\n\n",
        "answer": "\"yhNAsHd93275yRgSgbgSshfB\""
    },
    {
        "id": 114,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  '',\n  'b'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'b'\n]\n    at test (/tmp/tmpryphmnqc.js:11:10)\n    at Object.<anonymous> (/tmp/tmpryphmnqc.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', '', 'b' ],\n  expected: [ 'a', 'b' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text, sep){\n    return text.split(sep).slice(0, 3);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"a-.-.b\", \"-.\"),[\"a\", \"b\"]);\n}\n\ntest();\n\n",
        "answer": "[\"a\", \"b\"]"
    },
    {
        "id": 115,
        "res": 0
    },
    {
        "id": 116,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{}\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpremcsue2.js:16:10)\n    at Object.<anonymous> (/tmp/tmpremcsue2.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: {},\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(d, count){\n    for (let i = 0; i < count; i++) {\n        if (Object.keys(d).length === 0) {\n            break;\n        }\n        delete d[Object.keys(d)[Object.keys(d).length - 1]];\n    }\n    return d;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({}, 200),undefined);\n}\n\ntest();\n\n",
        "answer": "undefined"
    },
    {
        "id": 117,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpz_5wfe_x.js:15:10)\n    at Object.<anonymous> (/tmp/tmpz_5wfe_x.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(numbers){\n    for(let i = 0; i < numbers.length; i++){\n        if(numbers.split('3').length - 1 > 1){\n            return i;\n        }\n    }\n    return -1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"23157\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 118,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'zbzquiuqnmfkx'\n\nshould loosely deep-equal\n\n'quiuqnmfkx'\n    at test (/tmp/tmpk9_jrp0p.js:16:10)\n    at Object.<anonymous> (/tmp/tmpk9_jrp0p.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'zbzquiuqnmfkx',\n  expected: 'quiuqnmfkx',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, chars){\n    let num_applies = 2;\n    let extra_chars = '';\n    for (let i = 0; i < num_applies; i++) {\n        extra_chars += chars;\n        text = text.replace(new RegExp(extra_chars, 'g'), '');\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"zbzquiuqnmfkx\", \"mk\"),\"quiuqnmfkx\");\n}\n\ntest();\n\n",
        "answer": "\"quiuqnmfkx\""
    },
    {
        "id": 119,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'VsNlYgLtAw'\n\nshould loosely deep-equal\n\n'vScNiLtAw'\n    at test (/tmp/tmp4sokgo07.js:18:10)\n    at Object.<anonymous> (/tmp/tmp4sokgo07.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'VsNlYgLtAw',\n  expected: 'vScNiLtAw',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let result = \"\";\n    for(let i = 0; i < text.length; i++){\n        if(i % 2 === 0){\n            result += text[i].toUpperCase();\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"vsnlygltaw\"),\"vScNiLtAw\");\n}\n\ntest();\n\n",
        "answer": "\"vScNiLtAw\""
    },
    {
        "id": 120,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{}\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp7btudz_1.js:18:10)\n    at Object.<anonymous> (/tmp/tmp7btudz_1.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: {},\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(countries){\n    let language_country = {};\n    for (let country in countries) {\n        let language = countries[country];\n        if (!language_country[language]) {\n            language_country[language] = [];\n        }\n        language_country[language].push(country);\n    }\n    return language_country;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({}),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 121,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1001'\n\nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpe959cs3f.js:15:10)\n    at Object.<anonymous> (/tmp/tmpe959cs3f.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1001',\n  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s){\n    let nums = s.split('').filter(c => !isNaN(c)).join('');\n    if(nums === ''){\n        return 'none';\n    }\n    let m = Math.max(...nums.split(',').map(num => parseInt(num)));\n    return m.toString();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"01,001\"),\"1\");\n}\n\ntest();\n\n",
        "answer": "\"1\""
    },
    {
        "id": 122,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Nuva?dlfuyjys'\n\nshould loosely deep-equal\n\n'no'\n    at test (/tmp/tmp94yjw8us.js:14:10)\n    at Object.<anonymous> (/tmp/tmp94yjw8us.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Nuva?dlfuyjys',\n  expected: 'no',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(string){\n    if (string.substring(0, 4) !== 'Nuva') {\n        return 'no';\n    } else {\n        return string.trim();\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Nuva?dlfuyjys\"),\"no\");\n}\n\ntest();\n\n",
        "answer": "\"no\""
    },
    {
        "id": 123,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  5,\n  6,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  5,\n  6\n]\n    at test (/tmp/tmpgry2yz4x.js:15:10)\n    at Object.<anonymous> (/tmp/tmpgry2yz4x.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 5, 6, 8 ],\n  expected: [ 1, 2, 3, 5, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array, elem){\n    for (let idx = 0; idx < array.length; idx++) {\n        if (array[idx] > elem && array[idx - 1] < elem) {\n            array.splice(idx, 0, elem);\n        }\n    }\n    return array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 3, 5, 8], 6),[1, 2, 3, 5, 6]);\n}\n\ntest();\n\n",
        "answer": "[1, 2, 3, 5, 6]"
    },
    {
        "id": 124,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'i like you'\n\nshould loosely deep-equal\n\n'you'\n    at test (/tmp/tmpu7tsl0bv.js:16:10)\n    at Object.<anonymous> (/tmp/tmpu7tsl0bv.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'i like you',\n  expected: 'you',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(txt, sep, sep_count){\n    let o = '';\n    while (sep_count > 0 && txt.split(sep).length > 1) {\n        o += txt.substring(0, txt.lastIndexOf(sep) + sep.length);\n        txt = txt.substring(txt.lastIndexOf(sep) + sep.length);\n        sep_count--;\n    }\n    return o + txt;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"i like you\", \" \", -1),\"you\");\n}\n\ntest();\n\n",
        "answer": "\"you\""
    },
    {
        "id": 125,
        "res": 0
    },
    {
        "id": 126,
        "res": 0
    },
    {
        "id": 127,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpo8qwyq2w.js:12:10)\n    at Object.<anonymous> (/tmp/tmpo8qwyq2w.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text) {\n    let s = text.split('\\n');\n    return s.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(`145\n\n12fjkjg`),2);\n}\n\ntest();\n\n",
        "answer": "2"
    },
    {
        "id": 128,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Mmohamt'\n\nshould loosely deep-equal\n\n'ammoth'\n    at test (/tmp/tmpgohv2wit.js:19:10)\n    at Object.<anonymous> (/tmp/tmpgohv2wit.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Mmohamt',\n  expected: 'ammoth',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let odd = '';\n    let even = '';\n    for (let i = 0; i < text.length; i++) {\n        if (i % 2 === 0) {\n            even += text[i];\n        } else {\n            odd += text[i];\n        }\n    }\n    return even + odd.toLowerCase();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Mammoth\"),\"ammoth\");\n}\n\ntest();\n\n",
        "answer": "\"ammoth\""
    },
    {
        "id": 129,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  28,\n  19,\n  12,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  9\n]\n    at test (/tmp/tmp5dlplkd5.js:15:10)\n    at Object.<anonymous> (/tmp/tmp5dlplkd5.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 28, 19, 12, 6 ],\n  expected: [ 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, search_string){\n    let indexes = [];\n    while (text.includes(search_string)) {\n        indexes.push(text.lastIndexOf(search_string));\n        text = text.substring(0, text.lastIndexOf(search_string));\n    }\n    return indexes;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ONBPICJOHRHDJOSNCPNJ9ONTHBQCJ\", \"J\"),[4, 9]);\n}\n\ntest();\n\n",
        "answer": "[4, 9]"
    },
    {
        "id": 130,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'h=l'\n\nshould loosely deep-equal\n\n'{l=h, o=l}'\n    at test (/tmp/tmpl_is03si.js:18:10)\n    at Object.<anonymous> (/tmp/tmpl_is03si.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'h=l',\n  expected: '{l=h, o=l}',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(m){\n    let items = Object.entries(m);\n    for(let i = items.length - 2; i >= 0; i--){\n        let tmp = items[i]\n        items[i] = items[i+1]\n        items[i+1] = tmp\n    }\n    let keys = Object.keys(m);\n    return ['{}={}', '{1}={0}'][items.length % 2].replace('{0}', keys[0]).replace('{1}', keys[1]);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"l\": 4, \"h\": 6, \"o\": 9}),\"{l=h, o=l}\");\n}\n\ntest();\n\n",
        "answer": "\"{l=h, o=l}\""
    },
    {
        "id": 131,
        "res": 0
    },
    {
        "id": 132,
        "res": 0
    },
    {
        "id": 133,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  7,\n  1,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  7,\n  1,\n  2,\n  6,\n  0,\n  2\n]\n    at test (/tmp/tmp41aaa_b3.js:14:10)\n    at Object.<anonymous> (/tmp/tmp41aaa_b3.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 7, 1, 2 ],\n  expected: [ 7, 1, 2, 6, 0, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums, elements){\n    let result = [];\n    for (let i = 0; i < elements.length; i++) {\n        result.push(nums.pop());\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([7, 1, 2, 6, 0, 2], [9, 0, 3]),[7, 1, 2, 6, 0, 2]);\n}\n\ntest();\n\n",
        "answer": "[7, 1, 2, 6, 0, 2]"
    },
    {
        "id": 134,
        "res": true,
        "code": "\nfunction f(n){\n    let t = 0;\n    let b = '';\n    let digits = Array.from(String(n), Number);\n    for(let d of digits){\n        if(d === 0){\n            t += 1;\n        } else {\n            break;\n        }\n    }\n    for(let i = 0; i < t; i++){\n        b += '1' + '0' + '4';\n    }\n    b += String(n);\n    return b;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(372359),\"372359\");\n}\n\ntest();\n\n",
        "answer": "\"372359\""
    },
    {
        "id": 135,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Russia',\n  'Kazakhstan'\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp7gr8mhek.js:14:10)\n    at Object.<anonymous> (/tmp/tmp7gr8mhek.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Russia', 'Kazakhstan' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(){\n    let d = {\n        'Russia': ['Moscow', 'Vladivostok'],\n        'Kazakhstan': ['Astana'],\n    };\n    return Object.keys(d);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 136,
        "res": 0
    },
    {
        "id": 137,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  2,\n  3,\n  0,\n  0,\n  2,\n  3\n]\n    at test (/tmp/tmpr_6rn_vh.js:20:10)\n    at Object.<anonymous> (/tmp/tmpr_6rn_vh.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 2, 3, 0, 0, 2, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(nums){\n    let count = 0;\n    while(nums.length !== 0){\n        if(count % 2 === 0){\n            nums.pop();\n        } else {\n            nums.shift();\n        }\n        count++;\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([3, 2, 0, 0, 2, 3]),[2, 3, 0, 0, 2, 3]);\n}\n\ntest();\n\n",
        "answer": "[2, 3, 0, 0, 2, 3]"
    },
    {
        "id": 138,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'tflb omn rtt'\n\nshould loosely deep-equal\n\n'tflbmorn'\n    at test (/tmp/tmphwkvpzq7.js:15:10)\n    at Object.<anonymous> (/tmp/tmphwkvpzq7.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'tflb omn rtt',\n  expected: 'tflbmorn',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, chars){\n    let listchars = chars.split('');\n    let first = listchars.pop();\n    for(let i of listchars){\n        text = text.substring(0, text.indexOf(i)) + i + text.substring(text.indexOf(i) + 1);\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"tflb omn rtt\", \"m\"),\"tflbmorn\");\n}\n\ntest();\n\n",
        "answer": "\"tflbmorn\""
    },
    {
        "id": 139,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'no'\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  1,\n  1,\n  2\n]\n    at test (/tmp/tmpwye2819a.js:19:10)\n    at Object.<anonymous> (/tmp/tmpwye2819a.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'no',\n  expected: [ 1, 2, 1, 1, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(first, second){\n    if (first.length < 10 || second.length < 10) {\n        return 'no';\n    }\n    for (let i = 0; i < 5; i++) {\n        if (first[i] !== second[i]) {\n            return 'no';\n        }\n    }\n    first.push(...second);\n    return first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 1], [1, 1, 2]),[1, 2, 1, 1, 2]);\n}\n\ntest();\n\n",
        "answer": "[1, 2, 1, 1, 2]"
    },
    {
        "id": 140,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Hey'\n\nshould loosely deep-equal\n\n'Hi there'\n    at test (/tmp/tmpai8pp6i9.js:18:10)\n    at Object.<anonymous> (/tmp/tmpai8pp6i9.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Hey',\n  expected: 'Hi there',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(st) {\n    let lower_st = st.toLowerCase();\n    let last_h_index = lower_st.lastIndexOf('h');\n    let last_i_index = lower_st.lastIndexOf('i');\n    if (last_h_index >= last_i_index) {\n        return 'Hey';\n    } else {\n        return 'Hi';\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Hi there\"),\"Hi there\");\n}\n\ntest();\n\n",
        "answer": "\"Hi there\""
    },
    {
        "id": 141,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  3,\n  1,\n  3,\n  3,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  2,\n  2,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1\n]\n    at test (/tmp/tmplpiwrfjz.js:10:10)\n    at Object.<anonymous> (/tmp/tmplpiwrfjz.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1, 3, 1, 3, 3,\n    1, 1, 1, 1, 1,\n    1\n  ],\n  expected: [\n    0, 2, 2, 2, 1,\n    1, 1, 1, 1, 1,\n    1\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(li){\n    return li.map(i => li.filter(item => item === i).length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"k\", \"x\", \"c\", \"x\", \"x\", \"b\", \"l\", \"f\", \"r\", \"n\", \"g\"]),[0, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1]);\n}\n\ntest();\n\n",
        "answer": "[0, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1]"
    },
    {
        "id": 142,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'ykdfhp'\n\nshould loosely deep-equal\n\n'y'\n    at test (/tmp/tmpckd36ull.js:14:10)\n    at Object.<anonymous> (/tmp/tmpckd36ull.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'ykdfhp',\n  expected: 'y',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(x){\n    if(x === x.toLowerCase()){\n        return x;\n    } else {\n        return x.split('').reverse().join('');\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ykdfhp\"),\"y\");\n}\n\ntest();\n\n",
        "answer": "\"y\""
    },
    {
        "id": 143,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\n'daaX'\n    at test (/tmp/tmp_a69sn77.js:10:10)\n    at Object.<anonymous> (/tmp/tmp_a69sn77.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: 'daaX',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s, n){\n    return s.toLowerCase() === n.toLowerCase();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"daaX\", \"daaX\"),\"daaX\");\n}\n\ntest();\n\n",
        "answer": "\"daaX\""
    },
    {
        "id": 144,
        "res": true,
        "code": "\nfunction f(vectors){\n    let sorted_vecs = [];\n    vectors.forEach(vec => {\n        vec.sort();\n        sorted_vecs.push(vec);\n    });\n    return sorted_vecs;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([]),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 145,
        "res": true,
        "code": "\nfunction f(price, product){\n    let inventory = ['olives', 'key', 'orange'];\n    if (!inventory.includes(product)) {\n        return price;\n    } else {\n        price *= 0.85;\n        inventory.splice(inventory.indexOf(product), 1);\n    }\n    return price;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(8.5, \"grapes\"),8.5);\n}\n\ntest();\n\n",
        "answer": "8.5"
    },
    {
        "id": 146,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  6,\n  7,\n  8,\n  9,\n  10\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp1puxomqr.js:16:10)\n    at Object.<anonymous> (/tmp/tmp1puxomqr.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1, 2, 3,  4, 6,\n    7, 8, 9, 10\n  ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(single_digit){\n    let result = [];\n    for(let c = 1; c < 11; c++){\n        if(c !== single_digit){\n            result.push(c);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(5),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 147,
        "res": true,
        "code": "\nfunction f(nums){\n    let middle = Math.floor(nums.length / 2);\n    return nums.slice(middle).concat(nums.slice(0, middle));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 1, 1]),[1, 1, 1]);\n}\n\ntest();\n\n",
        "answer": "[1, 1, 1]"
    },
    {
        "id": 148,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'2io 12 tfiqr.-'\n\nshould loosely deep-equal\n\n'imf-'\n    at test (/tmp/tmpxwe3br_p.js:19:10)\n    at Object.<anonymous> (/tmp/tmpxwe3br_p.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '2io 12 tfiqr.-',\n  expected: 'imf-',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(forest, animal){\n    let index = forest.indexOf(animal);\n    let result = forest.split('');\n    while (index < forest.length - 1) {\n        result[index] = forest[index + 1];\n        index++;\n    }\n    if (index === forest.length - 1) {\n        result[index] = '-';\n    }\n    return result.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"2imo 12 tfiqr.\", \"m\"),\"imf-\");\n}\n\ntest();\n\n",
        "answer": "\"imf-\""
    },
    {
        "id": 149,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'2,4,2,0,'\n\nshould loosely deep-equal\n\n'3,2,3,2'\n    at test (/tmp/tmpr260l52x.js:15:10)\n    at Object.<anonymous> (/tmp/tmpr260l52x.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '2,4,2,0,',\n  expected: '3,2,3,2',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(tuple_list, joint){\n    let string = '';\n    for(let num of tuple_list){\n        string += Array.from(new Set(String(num))).pop() + joint;\n    }\n    return string;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([32332, 23543, 132323, 33300], \",\"),\"3,2,3,2\");\n}\n\ntest();\n\n",
        "answer": "\"3,2,3,2\""
    },
    {
        "id": 150,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -2,\n  4,\n  -4\n]\n\nshould loosely deep-equal\n\n[\n  -2,\n  -4,\n  4,\n  4\n]\n    at test (/tmp/tmphuk63hpa.js:15:10)\n    at Object.<anonymous> (/tmp/tmphuk63hpa.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -2, 4, -4 ],\n  expected: [ -2, -4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(numbers, index){\n    for(let n of numbers.slice(index)){\n        numbers.splice(index, 0, n);\n        index += 1;\n    }\n    return numbers.slice(0, index);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([-2, 4, -4], 0),[-2, -4, 4, 4]);\n}\n\ntest();\n\n",
        "answer": "[-2, -4, 4, 4]"
    },
    {
        "id": 151,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'697 this is the ultimate 7 address to attack'\n\nshould loosely deep-equal\n\n697\n    at test (/tmp/tmpi3ghnfgq.js:17:10)\n    at Object.<anonymous> (/tmp/tmpi3ghnfgq.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '697 this is the ultimate 7 address to attack',\n  expected: 697,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text){\n    let new_text = text.split('');\n    for(let i=0; i<new_text.length; i++){\n        if(Number.isInteger(parseInt(new_text[i]))){\n            new_text[i] = new_text[i] === '0' ? '.' : new_text[i] === '1' ? '0' : new_text[i];\n        }\n    }\n    return new_text.join('').replaceAll('.', '0');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"697 this is the ultimate 7 address to attack\"),697);\n}\n\ntest();\n\n",
        "answer": "697"
    },
    {
        "id": 152,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpq08o9__9.js:17:10)\n    at Object.<anonymous> (/tmp/tmpq08o9__9.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text){\n    let n = 0;\n    for(let char of text){\n        if(char === char.toUpperCase() && char !== char.toLowerCase()){\n            n += 1;\n        }\n    }\n    return n;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"AAAAAAAAAAAAAAAAAAAA\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 153,
        "res": true,
        "code": "\nfunction f(text, suffix, num){\n    var str_num = num.toString();\n    return text.endsWith(suffix + str_num);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"friends and love\", \"and\", 3),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 154,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'*  There  Hello'\n\nshould loosely deep-equal\n\n'Hello There'\n    at test (/tmp/tmphf4i7fme.js:11:10)\n    at Object.<anonymous> (/tmp/tmphf4i7fme.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '*  There  Hello',\n  expected: 'Hello There',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s, c){\n    s = s.split(' ');\n    return c + \"  \" + s.reverse().join(\"  \");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Hello There\", \"*\"),\"Hello There\");\n}\n\ntest();\n\n",
        "answer": "\"Hello There\""
    },
    {
        "id": 155,
        "res": 0
    },
    {
        "id": 156,
        "res": true,
        "code": "\nfunction f(text, limit, char){\n    if (limit < text.length) {\n        return text.substring(0, limit);\n    }\n    return text.padEnd(limit, char);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"tqzym\", 5, \"c\"),\"tqzym\");\n}\n\ntest();\n\n",
        "answer": "\"tqzym\""
    },
    {
        "id": 157,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp77qgrxfm.js:18:10)\n    at Object.<anonymous> (/tmp/tmp77qgrxfm.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(phrase){\n    let ans = 0;\n    phrase.split().forEach((w) => {\n        for (let ch of w) {\n            if (ch === \"0\") {\n                ans++;\n            }\n        }\n    });\n    return ans;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"aboba 212 has 0 digits\"),2);\n}\n\ntest();\n\n",
        "answer": "2"
    },
    {
        "id": 158,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  6,\n  4,\n  -2,\n  6,\n  4,\n  -2\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  6,\n  4,\n  -2,\n  5\n]\n    at test (/tmp/tmpn362yjpz.js:19:10)\n    at Object.<anonymous> (/tmp/tmpn362yjpz.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 6, 4, -2, 6, 4, -2 ],\n  expected: [ 3, 6, 4, -2, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(arr){\n    let n = arr.filter(item => item % 2 === 0);\n    let m = n.concat(arr);\n    for(let i of m){\n        if(m.indexOf(i) >= n.length){\n            let index = m.indexOf(i);\n            m.splice(index, 1);\n        }\n    }\n    return m;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([3, 6, 4, -2, 5]),[3, 6, 4, -2, 5]);\n}\n\ntest();\n\n",
        "answer": "[3, 6, 4, -2, 5]"
    },
    {
        "id": 159,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'mgItr'\n\nshould loosely deep-equal\n\n'rTIG'\n    at test (/tmp/tmps4bqzlnn.js:14:10)\n    at Object.<anonymous> (/tmp/tmps4bqzlnn.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'mgItr',\n  expected: 'rTIG',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(st){\n    let swapped = '';\n    for(let i = st.length - 1; i >= 0; i--){\n        swapped += st[i].toUpperCase() === st[i] ? st[i].toLowerCase() : st[i].toUpperCase();\n    }\n    return swapped;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"RTiGM\"),\"rTIG\");\n}\n\ntest();\n\n",
        "answer": "\"rTIG\""
    },
    {
        "id": 160,
        "res": true,
        "code": "\nfunction f(dictionary){\n    while (!dictionary.hasOwnProperty(1) || Object.keys(dictionary).length === 0) {\n        dictionary = {};\n        break;\n    }\n    return dictionary;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({1: 47698, 1: 32849, 1: 38381, 3: 83607}),{1: 47698, 1: 32849, 1: 38381, 3: 83607});\n}\n\ntest();\n\n",
        "answer": "{1: 47698, 1: 32849, 1: 38381, 3: 83607}"
    },
    {
        "id": 161,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'j rinpxdif'\n\nshould loosely deep-equal\n\n'rinpx difkj'\n    at test (/tmp/tmpu127donc.js:11:10)\n    at Object.<anonymous> (/tmp/tmpu127donc.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'j rinpxdif',\n  expected: 'rinpx difkj',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, value){\n    let parts = text.split(value);\n    return parts[1] + parts[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"difkj rinpx\", \"k\"),\"rinpx difkj\");\n}\n\ntest();\n\n",
        "answer": "\"rinpx difkj\""
    },
    {
        "id": 162,
        "res": 0
    },
    {
        "id": 163,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'w))))))))))))'\n\nshould loosely deep-equal\n\n'w'\n    at test (/tmp/tmpl6_4c4ot.js:11:10)\n    at Object.<anonymous> (/tmp/tmpl6_4c4ot.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'w))))))))))))',\n  expected: 'w',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, space_symbol, size){\n    let spaces = space_symbol.repeat(Math.max(size - text.length, 0));\n    return text + spaces;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"w\", \"))\", 7),\"w\");\n}\n\ntest();\n\n",
        "answer": "\"w\""
    },
    {
        "id": 164,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  3,\n  5\n]\n    at test (/tmp/tmpbe7ms6cr.js:11:10)\n    at Object.<anonymous> (/tmp/tmpbe7ms6cr.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 3 ],\n  expected: [ 1, 3, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(lst){\n    lst.sort((a, b) => a - b);\n    return lst.slice(0, 3);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([5, 8, 1, 3, 0]),[1, 3, 5]);\n}\n\ntest();\n\n",
        "answer": "[1, 3, 5]"
    },
    {
        "id": 165,
        "res": true,
        "code": "\nfunction f(text, lower, upper){\n    return text.substring(lower, upper).split('').every(char => char.charCodeAt(0) < 128);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"=xtanp|sugv?z\", 3, 6),true);\n}\n\ntest();\n\n",
        "answer": "true"
    },
    {
        "id": 166,
        "res": true,
        "code": "\nfunction f(graph){\n    let new_graph = {};\n    for (let key in graph) {\n        new_graph[key] = {};\n        for (let subkey in graph[key]) {\n            new_graph[key][subkey] = '';\n        }\n    }\n    return new_graph;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({}),{});\n}\n\ntest();\n\n",
        "answer": "{}"
    },
    {
        "id": 167,
        "res": 0
    },
    {
        "id": 168,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'spaib'\n\nshould loosely deep-equal\n\n'sain'\n    at test (/tmp/tmp7otdm7wn.js:24:10)\n    at Object.<anonymous> (/tmp/tmp7otdm7wn.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'spaib',\n  expected: 'sain',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, new_value, index){\n    let key = text.substring(index, index + 1);\n    let keyValue = key.charCodeAt(0);\n    let newValue = new_value.charCodeAt(0);\n    let keyMap = {};\n    keyMap[keyValue] = newValue;\n    let result = \"\";\n    \n    for (let i = 0; i < text.length; i++) {\n        if (text.charCodeAt(i) in keyMap) {\n            result += String.fromCharCode(keyMap[text.charCodeAt(i)]);\n        } else {\n            result += text.charAt(i);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"spain\", \"b\", 4),\"sain\");\n}\n\ntest();\n\n",
        "answer": "\"sain\""
    },
    {
        "id": 169,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'++++taole++++'\n\nshould loosely deep-equal\n\n'a+t+o+e+r+l'\n    at test (/tmp/tmp7kwh_hxb.js:19:10)\n    at Object.<anonymous> (/tmp/tmp7kwh_hxb.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '++++taole++++',\n  expected: 'a+t+o+e+r+l',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let ls = text.split('');\n    let total = (text.length - 1) * 2;\n    for (let i = 1; i <= total; i++) {\n        if (i % 2) {\n            ls.push('+');\n        } else {\n            ls.unshift('+');\n        }\n    }\n    return ls.join('').padStart(total);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"taole\"),\"a+t+o+e+r+l\");\n}\n\ntest();\n\n",
        "answer": "\"a+t+o+e+r+l\""
    },
    {
        "id": 170,
        "res": true,
        "code": "\nfunction f(nums, number){\n    return nums.reduce((count, current) => current === number ? count + 1 : count, 0);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([12, 0, 13, 4, 12], 12),2);\n}\n\ntest();\n\n",
        "answer": "2"
    },
    {
        "id": 171,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4,\n  3\n]\n    at test (/tmp/tmpjmcq3qji.js:14:10)\n    at Object.<anonymous> (/tmp/tmpjmcq3qji.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3 ],\n  expected: [ 1, 2, 3, 4, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    const count = Math.floor(nums.length / 2);\n    for (let i = 0; i < count; i++) {\n        nums.shift();\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([3, 4, 1, 2, 3]),[1, 2, 3, 4, 3]);\n}\n\ntest();\n\n",
        "answer": "[1, 2, 3, 4, 3]"
    },
    {
        "id": 172,
        "res": true,
        "code": "\nfunction f(array){\n    for (let i = 0; i < array.length; i++){\n        if (array[i] < 0){\n            array.splice(i, 1);\n            i--;\n        }\n    }\n    return array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([]),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 173,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  8,\n  6,\n  8,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  5,\n  8,\n  6,\n  8,\n  4\n]\n    at test (/tmp/tmpdg48sz9q.js:15:10)\n    at Object.<anonymous> (/tmp/tmpdg48sz9q.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 8, 6, 8, 5 ],\n  expected: [ 5, 8, 6, 8, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(list_x){\n    let item_count = list_x.length;\n    let new_list = [];\n    for (let i = 0; i < item_count; i++) {\n        new_list.push(list_x.pop());\n    }\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([5, 8, 6, 8, 4]),[5, 8, 6, 8, 4]);\n}\n\ntest();\n\n",
        "answer": "[5, 8, 6, 8, 4]"
    },
    {
        "id": 174,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  3,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3\n]\n    at test (/tmp/tmpznhmu3pf.js:11:10)\n    at Object.<anonymous> (/tmp/tmpznhmu3pf.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 3, 2 ],\n  expected: [ 1, 2, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(lst){\n    lst.splice(1, 3, ...lst.slice(1, 4).reverse());\n    return lst;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 3]),[1, 2, 3]);\n}\n\ntest();\n\n",
        "answer": "[1, 2, 3]"
    },
    {
        "id": 175,
        "res": 0
    },
    {
        "id": 176,
        "res": true,
        "code": "\nfunction f(text, to_place){\n    var after_place = text.slice(0, text.indexOf(to_place) + 1);\n    var before_place = text.slice(text.indexOf(to_place) + 1);\n    return after_place + before_place;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"some text\", \"some\"),\"some text\");\n}\n\ntest();\n\n",
        "answer": "\"some text\""
    },
    {
        "id": 177,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'HEy Dude tHIs $Nd^ &*&tHiS@#'\n\nshould loosely deep-equal\n\n'HEY DUDE THIS'\n    at test (/tmp/tmpl_uae5xm.js:16:10)\n    at Object.<anonymous> (/tmp/tmpl_uae5xm.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'HEy Dude tHIs $Nd^ &*&tHiS@#',\n  expected: 'HEY DUDE THIS',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    text = text.split('');\n    for (let i = 0; i < text.length; i++) {\n        if (i % 2 === 1) {\n            text[i] = text[i].toUpperCase() === text[i] ? text[i].toLowerCase() : text[i].toUpperCase();\n        }\n    }\n    return text.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Hey DUdE THis $nd^ &*&this@#\"),\"HEY DUDE THIS\");\n}\n\ntest();\n\n",
        "answer": "\"HEY DUDE THIS\""
    },
    {
        "id": 178,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  2,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  2,\n  2\n]\n    at test (/tmp/tmp0ibrh7m_.js:10:10)\n    at Object.<anonymous> (/tmp/tmp0ibrh7m_.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 2, 2 ],\n  expected: [ 0, 0, 2, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array, n){\n    return array.slice(n);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([0, 0, 1, 2, 2, 2, 2], 4),[0, 0, 2, 2]);\n}\n\ntest();\n\n",
        "answer": "[0, 0, 2, 2]"
    },
    {
        "id": 179,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  0,\n  6,\n  2,\n  1,\n  7,\n  1,\n  2,\n  6,\n  0,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6\n]\n    at test (/tmp/tmpz4gmwyuw.js:16:10)\n    at Object.<anonymous> (/tmp/tmpz4gmwyuw.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    2, 0, 6, 2, 1,\n    7, 1, 2, 6, 0,\n    2\n  ],\n  expected: [\n    0, 1, 2, 3,\n    4, 5, 6\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(nums){\n    let numsCopy = [...nums];\n    let count = nums.length;\n    for(let i=-count+1; i<0; i++){\n        numsCopy.unshift(nums[i+count]);\n    }\n    return numsCopy;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([7, 1, 2, 6, 0, 2]),[0, 1, 2, 3, 4, 5, 6]);\n}\n\ntest();\n\n",
        "answer": "[0, 1, 2, 3, 4, 5, 6]"
    },
    {
        "id": 180,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  -2,\n  -6,\n  8,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  5,\n  3,\n  -2,\n  -6,\n  8,\n  8\n]\n    at test (/tmp/tmp96xj8yc_.js:17:10)\n    at Object.<anonymous> (/tmp/tmp96xj8yc_.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -2, -6, 8, 8 ],\n  expected: [\n    -1, 5, 3, -2,\n    -6, 8, 8\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    let a = -1;\n    let b = nums.slice(1);\n    while (a <= b[0]){\n        nums.splice(nums.indexOf(b[0]), 1);\n        a = 0;\n        b = b.slice(1);\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([-1, 5, 3, -2, -6, 8, 8]),[-1, 5, 3, -2, -6, 8, 8]);\n}\n\ntest();\n\n",
        "answer": "[-1, 5, 3, -2, -6, 8, 8]"
    },
    {
        "id": 181,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '3291223',\n  7\n]\n\nshould loosely deep-equal\n\n[\n  'qwfasgahh329kn12a23',\n  5\n]\n    at test (/tmp/tmp8x6r39hm.js:19:10)\n    at Object.<anonymous> (/tmp/tmp8x6r39hm.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '3291223', 7 ],\n  expected: [ 'qwfasgahh329kn12a23', 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s){\n    let count = 0;\n    let digits = \"\";\n    for(let i = 0; i < s.length; i++){\n        let c = s[i];\n        if(!isNaN(c)){\n            count++;\n            digits += c;\n        }\n    }\n    return [digits, count];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"qwfasgahh329kn12a23\"),[\"qwfasgahh329kn12a23\", 5]);\n}\n\ntest();\n\n",
        "answer": "[\"qwfasgahh329kn12a23\", 5]"
    },
    {
        "id": 182,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'a',\n    2\n  ],\n  [\n    'b',\n    1\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  '1',\n  '2'\n]\n    at test (/tmp/tmp0pgj28xu.js:10:10)\n    at Object.<anonymous> (/tmp/tmp0pgj28xu.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'a', 2 ], [ 'b', 1 ] ],\n  expected: [ '1', '2' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(dic){\n    return Object.entries(dic).sort((a, b) => a[0].localeCompare(b[0]));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"b\": 1, \"a\": 2}),[\"1\", \"2\"]);\n}\n\ntest();\n\n",
        "answer": "[\"1\", \"2\"]"
    },
    {
        "id": 183,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp2v1i7ka5.js:19\n  assert.deepEqual(candidate(\"echo hello!!! nice!\"),hello nice);\n                                                    ^^^^^\n\nSyntaxError: missing ) after argument list\n    at wrapSafe (node:internal/modules/cjs/loader:1350:18)\n    at Module._compile (node:internal/modules/cjs/loader:1379:20)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let ls = text.split(' ');\n    let lines = ls.filter((_, index) => index % 3 === 0).join(' ').split('\\n');\n    let res = [];\n    for (let i = 0; i < 2; i++) {\n        let ln = ls.filter((_, index) => (index - 1) % 3 === 0);\n        if (3 * i + 1 < ln.length) {\n            res.push(ln.slice(3 * i, 3 * (i + 1)).join(' '));\n        }\n    }\n    return lines.concat(res);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"echo hello!!! nice!\"),hello nice);\n}\n\ntest();\n\n",
        "answer": "hello nice"
    },
    {
        "id": 184,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  1\n]\n    at test (/tmp/tmpwj01klvs.js:17:10)\n    at Object.<anonymous> (/tmp/tmpwj01klvs.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n  expected: [ 2, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(digits){\n    digits.reverse();\n    if (digits.length < 2) {\n        return digits;\n    }\n    for (let i = 0; i < digits.length; i += 2) {\n        [digits[i], digits[i+1]] = [digits[i+1], digits[i]];\n    }\n    return digits;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2]),[2, 1]);\n}\n\ntest();\n\n",
        "answer": "[2, 1]"
    },
    {
        "id": 185,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  14,\n  7,\n  12,\n  9,\n  16\n]\n\nshould loosely deep-equal\n\n[\n  16,\n  14,\n  12,\n  7,\n  9,\n  11\n]\n    at test (/tmp/tmptrqienvb.js:22:10)\n    at Object.<anonymous> (/tmp/tmptrqienvb.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, 14, 7, 12, 9, 16 ],\n  expected: [ 16, 14, 12, 7, 9, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(L){\n    const N = L.length;\n    for (let k = 1; k <= Math.floor(N / 2); k++) {\n        let i = k - 1;\n        let j = N - k;\n        while (i < j) {\n            // swap elements:\n            [L[i], L[j]] = [L[j], L[i]];\n            // update i, j:\n            i++;\n            j--;\n        }\n    }\n    return L;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([16, 14, 12, 7, 9, 11]),[16, 14, 12, 7, 9, 11]);\n}\n\ntest();\n\n",
        "answer": "[16, 14, 12, 7, 9, 11]"
    },
    {
        "id": 186,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pvtso'\n\nshould loosely deep-equal\n\n'Python is awesome'\n    at test (/tmp/tmpc0hibw_n.js:10:10)\n    at Object.<anonymous> (/tmp/tmpc0hibw_n.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pvtso',\n  expected: 'Python is awesome',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    return text.split(' ').map(str => str.trim()).join(' ');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"pvtso\"),\"Python is awesome\");\n}\n\ntest();\n\n",
        "answer": "\"Python is awesome\""
    },
    {
        "id": 187,
        "res": true,
        "code": "\nfunction f(d, index){\n    var length = Object.keys(d).length;\n    var idx = index % length;\n    var keys = Object.keys(d);\n    var v = d[keys[keys.length - 1]];\n    for (var i = 0; i < idx; i++) {\n        delete d[keys.pop()];\n    }\n    return v;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({27: 39}, 1),39);\n}\n\ntest();\n\n",
        "answer": "39"
    },
    {
        "id": 188,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'b'\n]\n    at test (/tmp/tmp1jsiivvq.js:18:10)\n    at Object.<anonymous> (/tmp/tmp1jsiivvq.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'b' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(strings){\n    let new_strings = [];\n    strings.forEach(string => {\n        let first_two = string.slice(0, 2);\n        if (first_two.startsWith('a') || first_two.startsWith('p')) {\n            new_strings.push(first_two);\n        }\n    });\n\n    return new_strings;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"a\", \"b\", \"car\", \"d\"]),[\"a\", \"b\"]);\n}\n\ntest();\n\n",
        "answer": "[\"a\", \"b\"]"
    },
    {
        "id": 189,
        "res": true,
        "code": "\nfunction f(out, mapping){\n    for (let key in mapping) {\n        out = out.replace(new RegExp(`{${key}}`, 'g'), mapping[key][1]);\n        if (!out.match(/{\\w}/)) {\n            break;\n        }\n    }\n    return out;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"{{{{}}}}\", {}),\"{{{{}}}}\");\n}\n\ntest();\n\n",
        "answer": "\"{{{{}}}}\""
    },
    {
        "id": 190,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'jiojickldl'\n\nshould loosely deep-equal\n\n'jio'\n    at test (/tmp/tmp0owkgx0n.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0owkgx0n.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'jiojickldl',\n  expected: 'jio',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text){\n    let short = '';\n    for(let c of text){\n        if(c === c.toLowerCase() && isNaN(c)){\n            short += c;\n        }\n    }\n    return short;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"980jio80jic kld094398IIl \"),\"jio\");\n}\n\ntest();\n\n",
        "answer": "\"jio\""
    },
    {
        "id": 191,
        "res": true,
        "code": "\nfunction f(string){\n    return string === string.toUpperCase();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Ohno\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 192,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'!klcd!ma:ri'\n\nshould loosely deep-equal\n\n'k!lcd!m:ra'\n    at test (/tmp/tmpg1xcvulb.js:15:10)\n    at Object.<anonymous> (/tmp/tmpg1xcvulb.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '!klcd!ma:ri',\n  expected: 'k!lcd!m:ra',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, suffix){\n    let output = text;\n    while (text.endsWith(suffix)) {\n        output = text.slice(0, -suffix.length);\n        text = output;\n    }\n    return output;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"!klcd!ma:ri\", \"!\"),\"k!lcd!m:ra\");\n}\n\ntest();\n\n",
        "answer": "\"k!lcd!m:ra\""
    },
    {
        "id": 193,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1:1'\n\nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpmiqvock9.js:12:10)\n    at Object.<anonymous> (/tmp/tmpmiqvock9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1:1',\n  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(string){\n    let count = (string.match(/:/g) || []).length;\n    return string.replace(':', '', count - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"1::1\"),\"1\");\n}\n\ntest();\n\n",
        "answer": "\"1\""
    },
    {
        "id": 194,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  [\n    5,\n    6,\n    2,\n    3\n  ],\n  [\n    1,\n    9,\n    5,\n    6\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    5,\n    6,\n    2,\n    3\n  ],\n  [\n    1,\n    9,\n    5,\n    6\n  ]\n]\n    at test (/tmp/tmplem2cj92.js:11:10)\n    at Object.<anonymous> (/tmp/tmplem2cj92.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [ 5, 6, 2, 3 ], [ 1, 9, 5, 6 ] ],\n  expected: [ [ 5, 6, 2, 3 ], [ 1, 9, 5, 6 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(matr, insert_loc){\n    matr.splice(insert_loc, 0, []);\n    return matr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([[5, 6, 2, 3], [1, 9, 5, 6]], 0),[[5, 6, 2, 3], [1, 9, 5, 6]]);\n}\n\ntest();\n\n",
        "answer": "[[5, 6, 2, 3], [1, 9, 5, 6]]"
    },
    {
        "id": 195,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'ilfdoirwirmtoibsac  '\n\nshould loosely deep-equal\n\n'ilfdoirwirmtoibsac'\n    at test (/tmp/tmp1tm02zcr.js:14:10)\n    at Object.<anonymous> (/tmp/tmp1tm02zcr.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'ilfdoirwirmtoibsac  ',\n  expected: 'ilfdoirwirmtoibsac',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text){\n    for(let p of ['acs', 'asp', 'scn']){\n        text = text.replace(new RegExp(`^${p}`), '') + ' ';\n    }\n    return text.replace(new RegExp('^ '), '').slice(0, -1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ilfdoirwirmtoibsac\"),\"ilfdoirwirmtoibsac\");\n}\n\ntest();\n\n",
        "answer": "\"ilfdoirwirmtoibsac\""
    },
    {
        "id": 196,
        "res": false,
        "error": "ReferenceError",
        "error_message": "/tmp/tmpq6a8p2no.js:15\n  assert.deepEqual(candidate(\"398 Is A Poor Year To Sow\"),incorrect);\n                                                          ^\n\nReferenceError: incorrect is not defined\n    at test (/tmp/tmpq6a8p2no.js:15:59)\n    at Object.<anonymous> (/tmp/tmpq6a8p2no.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    text = text.replace(' x', ' x.');\n    if (text[0].toUpperCase() === text[0]) {\n        return 'correct';\n    }\n    text = text.replace(' x.', ' x');\n    return 'mixed';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"398 Is A Poor Year To Sow\"),incorrect);\n}\n\ntest();\n\n",
        "answer": "incorrect"
    },
    {
        "id": 197,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234567890 0'\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpz8lo6qjl.js:12:10)\n    at Object.<anonymous> (/tmp/tmpz8lo6qjl.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234567890 0',\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(temp, timeLimit){\n    let s = Math.floor(timeLimit / temp);\n    let e = timeLimit % temp;\n    return ((s > 1) ? `${s} ${e}` : `${e} oC`);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(1, 1234567890),1);\n}\n\ntest();\n\n",
        "answer": "1"
    },
    {
        "id": 198,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'tcmfsm'\n\nshould loosely deep-equal\n\n'mjfsm'\n    at test (/tmp/tmprd36lhl0.js:11:10)\n    at Object.<anonymous> (/tmp/tmprd36lhl0.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'tcmfsm',\n  expected: 'mjfsm',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text, strip_chars){\n    return text.split('').reverse().join('').replace(new RegExp(`[${strip_chars}]`), '').split('').reverse().join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"tcmfsmj\", \"cfj\"),\"mjfsm\");\n}\n\ntest();\n\n",
        "answer": "\"mjfsm\""
    },
    {
        "id": 199,
        "res": true,
        "code": "\nfunction f(s, char){\n    let base = char.repeat(s.split(char).length) + char;\n    return s.replace(new RegExp(base + '$'), '');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"mnmnj krupa...##!@#!@#$$@##\", \"@\"),\"mnmnj krupa...##!@#!@#$$@##\");\n}\n\ntest();\n\n",
        "answer": "\"mnmnj krupa...##!@#!@#$$@##\""
    },
    {
        "id": 200,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'tm oajhouse'\n\nshould loosely deep-equal\n\n'house'\n    at test (/tmp/tmpoy76m8uj.js:17:10)\n    at Object.<anonymous> (/tmp/tmpoy76m8uj.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'tm oajhouse',\n  expected: 'house',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, value){\n    let length = text.length;\n    let index = 0;\n    while (length > 0){\n        value = text[index] + value;\n        length--;\n        index++;\n    }\n    return value;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"jao mt\", \"house\"),\"house\");\n}\n\ntest();\n\n",
        "answer": "\"house\""
    },
    {
        "id": 201,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'641524'\n\nshould loosely deep-equal\n\n'dlrow olleh'\n    at test (/tmp/tmpqy5bowg0.js:16:10)\n    at Object.<anonymous> (/tmp/tmpqy5bowg0.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '641524',\n  expected: 'dlrow olleh',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let chars = [];\n    for(let i = 0; i < text.length; i++){\n        if (!isNaN(parseInt(text[i]))) {\n            chars.push(text[i]);\n        }\n    }\n    return chars.reverse().join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"--4yrw 251-//4 6p\"),\"dlrow olleh\");\n}\n\ntest();\n\n",
        "answer": "\"dlrow olleh\""
    },
    {
        "id": 202,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  15\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  15,\n  1\n]\n    at test (/tmp/tmpcujz3_cw.js:12:10)\n    at Object.<anonymous> (/tmp/tmpcujz3_cw.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 15 ],\n  expected: [ 2, 15, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array, lst){\n    array.push(...lst);\n    const evenNumbers = array.filter(e => e % 2 === 0);\n    return array.filter(e => e >= 10);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([2, 15], [15, 1]),[2, 15, 1]);\n}\n\ntest();\n\n",
        "answer": "[2, 15, 1]"
    },
    {
        "id": 203,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{}\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpi9fn8k4k.js:11:10)\n    at Object.<anonymous> (/tmp/tmpi9fn8k4k.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: {},\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(d){\n    d = {};\n    return d;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"a\": \"3\", \"b\": \"-1\", \"c\": \"Dum\"}),undefined);\n}\n\ntest();\n\n",
        "answer": "undefined"
    },
    {
        "id": 204,
        "res": false,
        "error": "ReferenceError",
        "error_message": "/tmp/tmpdcndre5p.js:10\n  assert.deepEqual(candidate(\"master. \"),m);\n                                         ^\n\nReferenceError: m is not defined\n    at test (/tmp/tmpdcndre5p.js:10:42)\n    at Object.<anonymous> (/tmp/tmpdcndre5p.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(name){\n    return [name[0], name[1].split('').reverse().join('')[0]];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"master. \"),m);\n}\n\ntest();\n\n",
        "answer": "m"
    },
    {
        "id": 205,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'fiu##nk#he###wumun'\n\nshould loosely deep-equal\n\n'fiu'\n    at test (/tmp/tmpegh8qvfs.js:24:10)\n    at Object.<anonymous> (/tmp/tmpegh8qvfs.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'fiu##nk#he###wumun',\n  expected: 'fiu',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(a){\n    for (let i = 0; i < 10; i++) {\n        for (let j = 0; j < a.length; j++) {\n            if (a[j] !== '#') {\n                a = a.substring(j);\n                break;\n            }\n        }\n        if (a === \"\") {\n            break;\n        }\n    }\n    while (a.slice(-1) === '#') {\n        a = a.slice(0, -1);\n    }\n    return a;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"##fiu##nk#he###wumun##\"),\"fiu\");\n}\n\ntest();\n\n",
        "answer": "\"fiu\""
    },
    {
        "id": 206,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'h e l l o w o r l d!'\n\nshould loosely deep-equal\n\n'hello world'\n    at test (/tmp/tmp8jt2k2un.js:10:10)\n    at Object.<anonymous> (/tmp/tmp8jt2k2un.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'h e l l o w o r l d!',\n  expected: 'hello world',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(a){\n    return a.split(' ').filter(Boolean).join(' ');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\" h e l l o   w o r l d! \"),\"hello world\");\n}\n\ntest();\n\n",
        "answer": "\"hello world\""
    },
    {
        "id": 207,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  blue: 5,\n  bright: 4,\n  brown: 2\n}\n\nshould loosely deep-equal\n\n[\n  2,\n  5,\n  4\n]\n    at test (/tmp/tmp0lejyia7.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0lejyia7.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { brown: 2, blue: 5, bright: 4 },\n  expected: [ 2, 5, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(commands){\n    let d = {};\n    for (let c of commands) {\n        Object.assign(d, c);\n    }\n    return d;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([{\"brown\": 2}, {\"blue\": 5}, {\"bright\": 4}]),[2, 5, 4]);\n}\n\ntest();\n\n",
        "answer": "[2, 5, 4]"
    },
    {
        "id": 208,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'c',\n  'a',\n  't',\n  'd',\n  ' ',\n  'd',\n  'e',\n  'e'\n]\n\nshould loosely deep-equal\n\n[\n  '123',\n  'cat',\n  'd dee'\n]\n    at test (/tmp/tmpmqhz8vq_.js:19:10)\n    at Object.<anonymous> (/tmp/tmpmqhz8vq_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    'c', 'a', 't',\n    'd', ' ', 'd',\n    'e', 'e'\n  ],\n  expected: [ '123', 'cat', 'd dee' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(items){\n    let result = [];\n    for(let item of items) {\n        for(let d of item) {\n            if(isNaN(parseInt(d))) {\n                result.push(d);\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"123\", \"cat\", \"d dee\"]),[\"123\", \"cat\", \"d dee\"]);\n}\n\ntest();\n\n",
        "answer": "[\"123\", \"cat\", \"d dee\"]"
    },
    {
        "id": 209,
        "res": 0
    },
    {
        "id": 210,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n46\n\nshould loosely deep-equal\n\n42\n    at test (/tmp/tmp5ifd117z.js:17:10)\n    at Object.<anonymous> (/tmp/tmp5ifd117z.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 46,\n  expected: 42,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(n, m, num){\n    let x_list = Array.from({length: m - n + 1}, (_, index) => n + index);\n    let j = 0;\n    while (true) {\n        j = (j + num) % x_list.length;\n        if (x_list[j] % 2 === 0) {\n            return x_list[j];\n        }\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(46, 48, 21),42);\n}\n\ntest();\n\n",
        "answer": "42"
    },
    {
        "id": 211,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpmgvu5lpo.js:16:10)\n    at Object.<anonymous> (/tmp/tmpmgvu5lpo.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s){\n    let count = 0;\n    for(let i = 0; i < s.length; i++){\n        if(s.lastIndexOf(s[i]) !== s.indexOf(s[i])){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"abca dea ead\"),2);\n}\n\ntest();\n\n",
        "answer": "2"
    },
    {
        "id": 212,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  -9,\n  7,\n  2,\n  6,\n  -3,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  -9,\n  7,\n  2,\n  6,\n  -3,\n  3\n]\n    at test (/tmp/tmp6ugl4dta.js:13:10)\n    at Object.<anonymous> (/tmp/tmp6ugl4dta.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1, -9, 7, 2,\n    6, -3, 3\n  ],\n  expected: [ -9, 7, 2, 6, -3, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    for(let i = 0; i < nums.length - 1; i++){\n        nums.reverse();\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, -9, 7, 2, 6, -3, 3]),[-9, 7, 2, 6, -3, 3]);\n}\n\ntest();\n\n",
        "answer": "[-9, 7, 2, 6, -3, 3]"
    },
    {
        "id": 213,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'[ac]'\n\nshould loosely deep-equal\n\n[\n  'ac'\n]\n    at test (/tmp/tmpp8tltp5r.js:10:10)\n    at Object.<anonymous> (/tmp/tmpp8tltp5r.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '[ac]',\n  expected: [ 'ac' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s){\n    return s.replace(/\\(/g, '[').replace(/\\)/g, ']');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"(ac)\"),[\"ac\"]);\n}\n\ntest();\n\n",
        "answer": "[\"ac\"]"
    },
    {
        "id": 214,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpx8840_l1.js:15:10)\n    at Object.<anonymous> (/tmp/tmpx8840_l1.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(sample){\n    let i = -1;\n    while (sample.indexOf('/', i+1) !== -1){\n        i = sample.indexOf('/', i+1);\n    }\n    return sample.substring(0, i).lastIndexOf('/');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"present/here/car%2Fwe\"),2);\n}\n\ntest();\n\n",
        "answer": "2"
    },
    {
        "id": 215,
        "res": true,
        "code": "\nfunction f(text){\n    let new_text = text;\n    while (text.length > 1 && text[0] === text[text.length - 1]) {\n        new_text = text = text.substring(1, text.length - 1);\n    }\n    return new_text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\")\"),\")\");\n}\n\ntest();\n\n",
        "answer": "\")\""
    },
    {
        "id": 216,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp1qlm1tr5.js:16:10)\n    at Object.<anonymous> (/tmp/tmp1qlm1tr5.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(letters){\n    let count = 0;\n    for(let l of letters){\n        if (!isNaN(parseInt(l, 10))){\n            count += 1;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"dp ef1 gh2\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 217,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'more than ASCII'\n\nshould loosely deep-equal\n\n'ascii encoded is allowed for this language'\n    at test (/tmp/tmpjy_z_mcq.js:13:10)\n    at Object.<anonymous> (/tmp/tmpjy_z_mcq.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'more than ASCII',\n  expected: 'ascii encoded is allowed for this language',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(string){\n    if (string.match(/^[a-zA-Z0-9]+$/)) {\n        return \"ascii encoded is allowed for this language\";\n    }\n    return \"more than ASCII\";\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Str zahrnuje anglo-ameriæske vasi piscina and kuca!\"),\"ascii encoded is allowed for this language\");\n}\n\ntest();\n\n",
        "answer": "\"ascii encoded is allowed for this language\""
    },
    {
        "id": 218,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'bacfbacfcbaacbacfbacfcbaac'\n\nshould loosely deep-equal\n\n'cabcfcabfc'\n    at test (/tmp/tmph2sds0j5.js:11:10)\n    at Object.<anonymous> (/tmp/tmph2sds0j5.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'bacfbacfcbaacbacfbacfcbaac',\n  expected: 'cabcfcabfc',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(string, sep){\n    let cnt = string.split(sep).length - 1;\n    return (string + sep).repeat(cnt).split('').reverse().join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"caabcfcabfc\", \"ab\"),\"cabcfcabfc\");\n}\n\ntest();\n\n",
        "answer": "\"cabcfcabfc\""
    },
    {
        "id": 219,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\n'Hello'\n    at test (/tmp/tmpdor9yl9i.js:18:10)\n    at Object.<anonymous> (/tmp/tmpdor9yl9i.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: 'Hello',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(s1, s2){\n    let len = s2.length + s1.length;\n    for(let k = 0; k < len; k++){\n        s1 += s1[0];\n        if(s1.indexOf(s2) >= 0){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Hello\", \")\"),\"Hello\");\n}\n\ntest();\n\n",
        "answer": "\"Hello\""
    },
    {
        "id": 220,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'bagfedcacbagfedc'\n\nshould loosely deep-equal\n\n'cdefg'\n    at test (/tmp/tmpfkrclba8.js:15:10)\n    at Object.<anonymous> (/tmp/tmpfkrclba8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'bagfedcacbagfedc',\n  expected: 'cdefg',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, m, n){\n    text = text + text.substring(0, m) + text.substring(n);\n    let result = \"\";\n    for(let i = n; i < text.length - m; i++){\n        result = text[i] + result;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"abcdefgabc\", 1, 2),\"cdefg\");\n}\n\ntest();\n\n",
        "answer": "\"cdefg\""
    },
    {
        "id": 221,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'.bpxa24fc5'\n\nshould loosely deep-equal\n\n'24.5.bpxa'\n    at test (/tmp/tmpe62jj7xu.js:11:10)\n    at Object.<anonymous> (/tmp/tmpe62jj7xu.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '.bpxa24fc5',\n  expected: '24.5.bpxa',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, delim){\n    let [first, second] = text.split(delim);\n    return second + delim + first;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"bpxa24fc5.\", \".\"),\"24.5.bpxa\");\n}\n\ntest();\n\n",
        "answer": "\"24.5.bpxa\""
    },
    {
        "id": 222,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0aabbaa0b'\n\nshould loosely deep-equal\n\n'0b'\n    at test (/tmp/tmpua0o_vv8.js:13:10)\n    at Object.<anonymous> (/tmp/tmpua0o_vv8.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0aabbaa0b',\n  expected: '0b',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(mess, char){\n    while (mess.lastIndexOf(char) !== -1 && mess.indexOf(char, mess.lastIndexOf(char) + 1) !== -1) {\n        mess = mess.slice(0, mess.lastIndexOf(char) + 1) + mess.slice(mess.lastIndexOf(char) + 2);\n    }\n    return mess;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"0aabbaa0b\", \"a\"),\"0b\");\n}\n\ntest();\n\n",
        "answer": "\"0b\""
    },
    {
        "id": 223,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpn6s8cky0.js:21:10)\n    at Object.<anonymous> (/tmp/tmpn6s8cky0.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array, target){\n    let count = 0;\n    let i = 1;\n    for (let j = 1; j < array.length; j++) {\n        if (array[j] > array[j-1] && array[j] <= target) {\n            count += i;\n        } else if (array[j] <= array[j-1]) {\n            i = 1;\n        } else {\n            i += 1;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, -1, 4], 2),2);\n}\n\ntest();\n\n",
        "answer": "2"
    },
    {
        "id": 224,
        "res": true,
        "code": "\nfunction f(array, value){\n    array.reverse();\n    array.pop();\n    var odd = [];\n    while(array.length > 0){\n        var tmp = {};\n        tmp[array.pop()] = value;\n        odd.push(tmp);\n    }\n    var result = {};\n    while(odd.length > 0){\n        Object.assign(result, odd.pop());\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"23\"], 123),{});\n}\n\ntest();\n\n",
        "answer": "{}"
    },
    {
        "id": 225,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmph9zcfjhe.js:14:10)\n    at Object.<anonymous> (/tmp/tmph9zcfjhe.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text) {\n    if (/[a-zA-Z]/.test(text) && text === text.toLowerCase()) {\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"54882\"),true);\n}\n\ntest();\n\n",
        "answer": "true"
    },
    {
        "id": 226,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  3,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  3\n]\n    at test (/tmp/tmptqrrhjns.js:18:10)\n    at Object.<anonymous> (/tmp/tmptqrrhjns.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 3, 3 ],\n  expected: [ 1, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(nums){\n    let result = [];\n    for(let i = 0; i < nums.length; i++){\n        result.push(nums[i]);\n        if(nums[i] % 3 === 0){\n            result.push(nums[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 3]),[1, 3]);\n}\n\ntest();\n\n",
        "answer": "[1, 3]"
    },
    {
        "id": 227,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Manolo'\n\nshould loosely deep-equal\n\n'mANOLO'\n    at test (/tmp/tmphvzd5jxc.js:13:10)\n    at Object.<anonymous> (/tmp/tmphvzd5jxc.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Manolo',\n  expected: 'mANOLO',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    text = text.toLowerCase();\n    let head = text[0];\n    let tail = text.substring(1);\n    return head.toUpperCase() + tail;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Manolo\"),\"mANOLO\");\n}\n\ntest();\n\n",
        "answer": "\"mANOLO\""
    },
    {
        "id": 228,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'llthh#saflapkphtswp'\n\nshould loosely deep-equal\n\n'hello world'\n    at test (/tmp/tmp9fjsih0e.js:10:10)\n    at Object.<anonymous> (/tmp/tmp9fjsih0e.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'llthh#saflapkphtswp',\n  expected: 'hello world',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, splitter){\n    return text.toLowerCase().split(' ').join(splitter);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"LlTHH sAfLAPkPhtsWP\", \"#\"),\"hello world\");\n}\n\ntest();\n\n",
        "answer": "\"hello world\""
    },
    {
        "id": 229,
        "res": 0
    },
    {
        "id": 230,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'qozx'\n\nshould loosely deep-equal\n\n'qoznax'\n    at test (/tmp/tmp23mv0q0u.js:19:10)\n    at Object.<anonymous> (/tmp/tmp23mv0q0u.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'qozx',\n  expected: 'qoznax',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let result = '';\n    let i = text.length - 1;\n    while (i >= 0) {\n        let c = text[i];\n        if (c.match(/[a-zA-Z]/)) {\n            result += c;\n        }\n        i--;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"102x0zoq\"),\"qoznax\");\n}\n\ntest();\n\n",
        "answer": "\"qoznax\""
    },
    {
        "id": 231,
        "res": true,
        "code": "\nfunction f(years){\n    const a10 = years.filter(x => x <= 1900).length;\n    const a90 = years.filter(x => x > 1910).length;\n    if (a10 > 3) {\n        return 3;\n    } else if (a90 > 3) {\n        return 1;\n    } else {\n        return 2;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1872, 1995, 1945]),2);\n}\n\ntest();\n\n",
        "answer": "2"
    },
    {
        "id": 232,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'yesyes'\n\nshould loosely deep-equal\n\n'fssnvd'\n    at test (/tmp/tmphd3tgyie.js:17:10)\n    at Object.<anonymous> (/tmp/tmphd3tgyie.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'yesyes',\n  expected: 'fssnvd',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, changes){\n    let result = '';\n    let count = 0;\n    changes = changes.split('');\n    for(let char of text){\n        result += (char === 'e') ? char : changes[count % changes.length];\n        count += (char !== 'e') ? 1 : 0;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"fssnvd\", \"yes\"),\"fssnvd\");\n}\n\ntest();\n\n",
        "answer": "\"fssnvd\""
    },
    {
        "id": 233,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  2,\n  1\n]\n    at test (/tmp/tmpdi1z4uon.js:14:10)\n    at Object.<anonymous> (/tmp/tmpdi1z4uon.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3 ],\n  expected: [ 3, 2, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(xs){\n    for(let idx = -xs.length; idx < 0; idx++){\n        xs.unshift(xs.pop());\n    }\n    return xs;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 3]),[3, 2, 1]);\n}\n\ntest();\n\n",
        "answer": "[3, 2, 1]"
    },
    {
        "id": 234,
        "res": true,
        "code": "\nfunction f(text, char){\n    let position = text.length;\n    if (text.includes(char)) {\n        position = text.indexOf(char);\n        if (position > 1) {\n            position = (position + 1) % text.length;\n        }\n    }\n    return position;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"wduhzxlfk\", \"w\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 235,
        "res": true,
        "code": "\nfunction f(array, arr){\n    let result = [];\n    for (let s of arr) {\n        result = result.concat(s.split(array[arr.indexOf(s)]).filter(l => l !== ''));\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([], []),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 236,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'ac8qk6qk6'\n\nshould loosely deep-equal\n\n'acqk9wg'\n    at test (/tmp/tmpxuyn2dyz.js:21:10)\n    at Object.<anonymous> (/tmp/tmpxuyn2dyz.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'ac8qk6qk6',\n  expected: 'acqk9wg',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array){\n    if (array.length === 1) {\n        return array.join('');\n    }\n    let result = array.slice();\n    let i = 0;\n    while (i < array.length - 1) {\n        for (let j = 0; j < 2; j++) {\n            result[i * 2] = array[i];\n            i++;\n        }\n    }\n    return result.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"ac8\", \"qk6\", \"9wg\"]),\"acqk9wg\");\n}\n\ntest();\n\n",
        "answer": "\"acqk9wg\""
    },
    {
        "id": 237,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'uuzlwaqiaj'\n\nshould loosely deep-equal\n\n'lwaqiajuzlwaqiaj'\n    at test (/tmp/tmp56639tp5.js:15:10)\n    at Object.<anonymous> (/tmp/tmp56639tp5.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'uuzlwaqiaj',\n  expected: 'lwaqiajuzlwaqiaj',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, char){\n    if (text.includes(char)) {\n        let [suff, pref] = text.split(char);\n        pref = suff.slice(0, -char.length) + suff.slice(char.length) + char + pref;\n        return suff + char + pref;\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"uzlwaqiaj\", \"u\"),\"lwaqiajuzlwaqiaj\");\n}\n\ntest();\n\n",
        "answer": "\"lwaqiajuzlwaqiaj\""
    },
    {
        "id": 238,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  9,\n  4\n]\n\nshould loosely deep-equal\n\n9\n    at test (/tmp/tmpaai19ory.js:16:10)\n    at Object.<anonymous> (/tmp/tmpaai19ory.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 9, 4 ],\n  expected: 9,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(ls, n){\n    let answer = 0;\n    for(let i of ls){\n        if(i[0] === n){\n            answer = i;\n        }\n    }\n    return answer;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([[1, 9, 4], [83, 0, 5], [9, 6, 100]], 1),9);\n}\n\ntest();\n\n",
        "answer": "9"
    },
    {
        "id": 239,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1co'\n\nshould loosely deep-equal\n\n'0 t 1cos '\n    at test (/tmp/tmpke0r8zds.js:29:10)\n    at Object.<anonymous> (/tmp/tmpke0r8zds.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1co',\n  expected: '0 t 1cos ',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction lstrip(text, chars) {\n    let start = 0;\n    while (start < text.length && chars.includes(text[start])) {\n        start++;\n    }\n    return text.substring(start);\n}\n\nfunction rstrip(text, chars) {\n    let end = text.length - 1;\n    while (end >= 0 && chars.includes(text[end])) {\n        end--;\n    }\n    return text.substring(0, end + 1);\n}\n\nfunction f(text, froms) {\n    text = lstrip(text, froms);\n    text = rstrip(text, froms);\n    return text;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"0 t 1cos \", `st 0\t\n  `),\"0 t 1cos \");\n}\n\ntest();\n\n",
        "answer": "\"0 t 1cos \""
    },
    {
        "id": 240,
        "res": true,
        "code": "\nfunction f(float_number){\n    let number = float_number.toString();\n    let dot = number.indexOf('.');\n    if (dot !== -1){\n        return number.substring(0, dot) + '.' + number.substring(dot+1).padEnd(2, '0');\n    }\n    return number + '.00';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(3.121),3.121);\n}\n\ntest();\n\n",
        "answer": "3.121"
    },
    {
        "id": 241,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'CW'\n\nshould loosely deep-equal\n\n'20'\n    at test (/tmp/tmp_e7a1e44.js:10:10)\n    at Object.<anonymous> (/tmp/tmp_e7a1e44.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'CW',\n  expected: '20',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(postcode){\n    return postcode.substring(postcode.indexOf('C'));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ED20 CW\"),\"20\");\n}\n\ntest();\n\n",
        "answer": "\"20\""
    },
    {
        "id": 242,
        "res": true,
        "code": "\nfunction f(book){\n    let a = book.split(':');\n    if (a[0].split(' ').slice(-1)[0] === a[1].split(' ')[0]) {\n        return f(a[0].split(' ').slice(0, -1).join(' ') + ' ' + a[1]);\n    }\n    return book;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"udhv zcvi nhtnfyd :erwuyawa pun\"),\"udhv zcvi nhtnfyd :erwuyawa pun\");\n}\n\ntest();\n\n",
        "answer": "\"udhv zcvi nhtnfyd :erwuyawa pun\""
    },
    {
        "id": 243,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpd7qb3tk9.js:10:10)\n    at Object.<anonymous> (/tmp/tmpd7qb3tk9.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, char){\n    return char.toLowerCase() === char && text.toLowerCase() === text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"abc\", \"e\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 244,
        "res": true,
        "code": "\nfunction f(text, symbols){\n    let count = 0;\n    if (symbols) {\n        for (let i = 0; i < symbols.length; i++) {\n            count += 1;\n        }\n        text = text.repeat(count);\n    }\n    return text.padStart(text.length + count*2).slice(0, -2);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"\", \"BC1ty\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 245,
        "res": false,
        "error": "ReferenceError",
        "error_message": "/tmp/tmpujrfq2pi.js:15\n  assert.deepEqual(candidate(\"abcdefghijklmnopqrstuvwxyz\", \"uppercased # % ^ @ ! vz.\"),[abcdefghijklmnopqrstuvwxyz]);\n                                                                                        ^\n\nReferenceError: abcdefghijklmnopqrstuvwxyz is not defined\n    at test (/tmp/tmpujrfq2pi.js:15:89)\n    at Object.<anonymous> (/tmp/tmpujrfq2pi.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(alphabet, s){\n    let a = [...alphabet].filter(x => s.includes(x.toUpperCase()));\n    if (s.toUpperCase() === s) {\n        a.push('all_uppercased');\n    }\n    return a;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"abcdefghijklmnopqrstuvwxyz\", \"uppercased # % ^ @ ! vz.\"),[abcdefghijklmnopqrstuvwxyz]);\n}\n\ntest();\n\n",
        "answer": "[abcdefghijklmnopqrstuvwxyz]"
    },
    {
        "id": 246,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmp7_wjynac.js:15:10)\n    at Object.<anonymous> (/tmp/tmp7_wjynac.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(haystack, needle){\n    for(let i = haystack.indexOf(needle); i >= 0; i--){\n        if(haystack.slice(i) === needle){\n            return i;\n        }\n    }\n    return -1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"345gerghjehg\", \"345\"),3);\n}\n\ntest();\n\n",
        "answer": "3"
    },
    {
        "id": 247,
        "res": true,
        "code": "\nfunction f(s){\n    if (s.match(/^[a-zA-Z]+$/)) {\n        return \"yes\";\n    }\n    if (s === \"\") {\n        return \"str is empty\";\n    }\n    return \"no\";\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Boolean\"),\"yes\");\n}\n\ntest();\n\n",
        "answer": "\"yes\""
    },
    {
        "id": 248,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  666\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp4hua80rn.js:12:10)\n    at Object.<anonymous> (/tmp/tmp4hua80rn.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 666 ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(a, b){\n    a.sort((x, y) => x - y);\n    b.sort((x, y) => y - x);\n    return a.concat(b);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([666], []),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 249,
        "res": true,
        "code": "\nfunction f(s){\n    let count = {};\n    for(let i = 0; i < s.length; i++){\n        let char = s[i].toLowerCase();\n        if(s[i] === s[i].toLowerCase()){\n            count[char] = s.split(char).length - 1 + (count[char] || 0);\n        } else {\n            count[char] = s.split(s[i].toUpperCase()).length - 1 + (count[char] || 0);\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"FSA\"),{'f': 1, 'a': 1, 's': 1});\n}\n\ntest();\n\n",
        "answer": "{'f': 1, 'a': 1, 's': 1}"
    },
    {
        "id": 250,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'wlace Alc l  '\n\nshould loosely deep-equal\n\n'wlaceA'\n    at test (/tmp/tmpo893ui86.js:15:10)\n    at Object.<anonymous> (/tmp/tmpo893ui86.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'wlace Alc l  ',\n  expected: 'wlaceA',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text){\n    let count = text.length;\n    for(let i = -count+1; i < 0; i++){\n        text = text + text[text.length + i];\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"wlace A\"),\"wlaceA\");\n}\n\ntest();\n\n",
        "answer": "\"wlaceA\""
    },
    {
        "id": 251,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpnkwiw6m0.js:17\n  assert.deepEqual(candidate([[\"Marie\", \"Nelson\", \"Oscar\"]]),[+353;+353;+353]);\n                                                                  ^\n\nSyntaxError: Unexpected token ';'\n    at wrapSafe (node:internal/modules/cjs/loader:1350:18)\n    at Module._compile (node:internal/modules/cjs/loader:1379:20)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(messages){\n    let phone_code = \"+353\";\n    let result = [];\n    for (let message of messages) {\n        message.push(...phone_code);\n        result.push(message.join(\";\"));\n    }\n    return result.join(\". \");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([[\"Marie\", \"Nelson\", \"Oscar\"]]),[+353;+353;+353]);\n}\n\ntest();\n\n",
        "answer": "[+353;+353;+353]"
    },
    {
        "id": 252,
        "res": 0
    },
    {
        "id": 253,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'umwwfv'\n\nshould loosely deep-equal\n\n'kumwfv'\n    at test (/tmp/tmpz6gptp7k.js:14:10)\n    at Object.<anonymous> (/tmp/tmpz6gptp7k.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'umwwfv',\n  expected: 'kumwfv',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, pref){\n    var length = pref.length;\n    if (pref === text.slice(0, length)) {\n        return text.slice(length);\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"kumwwfv\", \"k\"),\"kumwfv\");\n}\n\ntest();\n\n",
        "answer": "\"kumwfv\""
    },
    {
        "id": 254,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'lwwer case'\n\nshould loosely deep-equal\n\n'LLL'\n    at test (/tmp/tmpu4njfvl3.js:11:10)\n    at Object.<anonymous> (/tmp/tmpu4njfvl3.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'lwwer case',\n  expected: 'LLL',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, repl){\n    const trans = new Map([...text.toLowerCase()].map((char, index) => [char, repl.toLowerCase()[index] || char]));\n    return [...text].map(char => trans.get(char)).join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"upper case\", \"lower case\"),\"LLL\");\n}\n\ntest();\n\n",
        "answer": "\"LLL\""
    },
    {
        "id": 255,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'w'\n\nshould loosely deep-equal\n\n'no'\n    at test (/tmp/tmpl3xl8nhw.js:16:10)\n    at Object.<anonymous> (/tmp/tmpl3xl8nhw.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'w',\n  expected: 'no',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, fill, size){\n    if (size < 0) {\n        size = Math.abs(size);\n    }\n    if (text.length > size) {\n        return text.slice(text.length - size);\n    }\n    return text.padStart(size, fill);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"no asw\", \"j\", 1),\"no\");\n}\n\ntest();\n\n",
        "answer": "\"no\""
    },
    {
        "id": 256,
        "res": true,
        "code": "\nfunction f(text, sub){\n    let a = 0;\n    let b = text.length - 1;\n\n    while (a <= b){\n        let c = Math.floor((a + b) / 2);\n        if (text.lastIndexOf(sub) >= c){\n            a = c + 1;\n        } else {\n            b = c - 1;\n        }\n    }\n\n    return a;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"dorfunctions\", \"2\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 257,
        "res": 0
    },
    {
        "id": 258,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  7,\n  3,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  7,\n  9\n]\n    at test (/tmp/tmpb_feiinc.js:16:10)\n    at Object.<anonymous> (/tmp/tmpb_feiinc.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 7, 3, 9 ],\n  expected: [ 1, 2, 7, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(L, m, start, step){\n    L.splice(start, 0, m);\n    for(let x = start-1; x > 0; x -= step){\n        start -= 1;\n        L.splice(start, 0, L.splice(L.lastIndexOf(m)-1, 1)[0]);\n    }\n    return L;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 7, 9], 3, 3, 2),[1, 2, 7, 9]);\n}\n\ntest();\n\n",
        "answer": "[1, 2, 7, 9]"
    },
    {
        "id": 259,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'RES'\n\nshould loosely deep-equal\n\n'String-matching-is-a-big-part-of-RexEx-library.'\n    at test (/tmp/tmpcwpm2urb.js:20:10)\n    at Object.<anonymous> (/tmp/tmpcwpm2urb.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'RES',\n  expected: 'String-matching-is-a-big-part-of-RexEx-library.',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text){\n    let new_text = [];\n    for(let i = 0; i < text.length; i++){\n        if(text[i] == text[i].toUpperCase() && text[i] != text[i].toLowerCase()){\n            new_text.splice(Math.floor(new_text.length / 2), 0, text[i]);\n        }\n    }\n    if(new_text.length == 0){\n        new_text.push('-');\n    }\n    return new_text.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"String matching is a big part of RexEx library.\"),\"String-matching-is-a-big-part-of-RexEx-library.\");\n}\n\ntest();\n\n",
        "answer": "\"String-matching-is-a-big-part-of-RexEx-library.\""
    },
    {
        "id": 260,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  6,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  3,\n  2,\n  1,\n  6,\n  5\n]\n    at test (/tmp/tmpf7egvawh.js:11:10)\n    at Object.<anonymous> (/tmp/tmpf7egvawh.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 6, 5 ],\n  expected: [ 4, 3, 2, 1, 6, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums, start, k){\n    nums.splice(start, k, ...nums.slice(start, start + k).reverse());\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6], 4, 2),[4, 3, 2, 1, 6, 5]);\n}\n\ntest();\n\n",
        "answer": "[4, 3, 2, 1, 6, 5]"
    },
    {
        "id": 261,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  [\n    12,\n    516,\n    5,\n    214,\n    51\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  5,\n  12\n]\n    at test (/tmp/tmpqdnanspd.js:20:10)\n    at Object.<anonymous> (/tmp/tmpqdnanspd.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [ 12, 516, 5, 214, 51 ] ],\n  expected: [ 5, 12 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums, target){\n    let lows = [];\n    let higgs = [];\n    nums.forEach(i => {\n        if (i < target) {\n            lows.push(i);\n        } else {\n            higgs.push(i);\n        }\n    });\n    lows.length = 0;\n    return [lows, higgs];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([12, 516, 5, 2, 3, 214, 51], 5),[5, 12]);\n}\n\ntest();\n\n",
        "answer": "[5, 12]"
    },
    {
        "id": 262,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'BA'\n\nshould loosely deep-equal\n\n'FEDCBA'\n    at test (/tmp/tmp2afmncm4.js:15:10)\n    at Object.<anonymous> (/tmp/tmp2afmncm4.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'BA',\n  expected: 'FEDCBA',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    const score = {0: \"F\", 1: \"E\", 2: \"D\", 3: \"C\", 4: \"B\", 5: \"A\", 6: \"\"};\n    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n        result.push(score[nums[i]]);\n    }\n    return result.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([4, 5]),\"FEDCBA\");\n}\n\ntest();\n\n",
        "answer": "\"FEDCBA\""
    },
    {
        "id": 263,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'gloss',\n  'banana',\n  'barn',\n  'lawn'\n]\n\nshould loosely deep-equal\n\n'gloss'\n    at test (/tmp/tmpab8l5dkh.js:21:10)\n    at Object.<anonymous> (/tmp/tmpab8l5dkh.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'gloss', 'banana', 'barn', 'lawn' ],\n  expected: 'gloss',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(base, delta){\n    for (let j = 0; j < delta.length; j++) {\n        for (let i = 0; i < base.length; i++) {\n            if (base[i] === delta[j][0]) {\n                if (delta[j][1] !== base[i]) {\n                    base[i] = delta[j][1];\n                } else {\n                    throw new Error('AssertionError: delta[j][1] must not be equal to base[i]');\n                }\n            }\n        }\n    }\n    return base;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"gloss\", \"banana\", \"barn\", \"lawn\"], []),\"gloss\");\n}\n\ntest();\n\n",
        "answer": "\"gloss\""
    },
    {
        "id": 264,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pApArA'\n\nshould loosely deep-equal\n\n'PAAR'\n    at test (/tmp/tmpxytp_qq1.js:12:10)\n    at Object.<anonymous> (/tmp/tmpxytp_qq1.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pApArA',\n  expected: 'PAAR',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(test_str){\n    let s = test_str.replace(/a/g, 'A');\n    return s.replace(/e/g, 'A');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"papera\"),\"PAAR\");\n}\n\ntest();\n\n",
        "answer": "\"PAAR\""
    },
    {
        "id": 265,
        "res": true,
        "code": "\nfunction f(d, k){\n    let new_d = {};\n    for(let key in d){\n        if(key < k){\n            new_d[key] = d[key];\n        }\n    }\n    return new_d;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({1: 2, 2: 4, 3: 3}, 3),{1: 2, 2: 4});\n}\n\ntest();\n\n",
        "answer": "{1: 2, 2: 4}"
    },
    {
        "id": 266,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n  3,\n  4,\n  6,\n  -2\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  3,\n  4,\n  6,\n  -2\n]\n    at test (/tmp/tmpzecr1cu5.js:15:10)\n    at Object.<anonymous> (/tmp/tmpzecr1cu5.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 3, 4, 6, -2 ],\n  expected: [ 2, 3, 4, 6, -2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    for(let i = nums.length-1; i >= 0; i--){\n        if(nums[i] % 2 === 1){\n            nums.splice(i+1, 0, nums[i]);\n        }\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([2, 3, 4, 6, -2]),[2, 3, 4, 6, -2]);\n}\n\ntest();\n\n",
        "answer": "[2, 3, 4, 6, -2]"
    },
    {
        "id": 267,
        "res": true,
        "code": "\nfunction f(text, space){\n    if (space < 0){\n        return text;\n    }\n    return text.padEnd(Math.floor(text.length / 2) + space);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"sowpf\", -7),\"sowpf\");\n}\n\ntest();\n\n",
        "answer": "\"sowpf\""
    },
    {
        "id": 268,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'h / g r a t e f u l   k'\n\nshould loosely deep-equal\n\n'h/a/k'\n    at test (/tmp/tmpukzelri_.js:17:10)\n    at Object.<anonymous> (/tmp/tmpukzelri_.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'h / g r a t e f u l   k',\n  expected: 'h/a/k',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(s, separator){\n    for(let i = 0; i < s.length; i++){\n        if(s[i] === separator){\n            let new_s = s.split('');\n            new_s[i] = '/';\n            return new_s.join(' ');\n        }\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"h grateful k\", \" \"),\"h/a/k\");\n}\n\ntest();\n\n",
        "answer": "\"h/a/k\""
    },
    {
        "id": 269,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '0',\n  2\n]\n\nshould loosely deep-equal\n\n[\n  9,\n  2\n]\n    at test (/tmp/tmpegjfgo0g.js:17:10)\n    at Object.<anonymous> (/tmp/tmpegjfgo0g.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '0', 2 ],\n  expected: [ 9, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array){\n    const zero_len = (array.length - 1) % 3;\n    for (let i = 0; i < zero_len; i++) {\n        array[i] = '0';\n    }\n    for (let i = zero_len + 1; i < array.length; i += 3) {\n        array.splice(i - 1, 3, '0', '0', '0');\n    }\n    return array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([9, 2]),[9, 2]);\n}\n\ntest();\n\n",
        "answer": "[9, 2]"
    },
    {
        "id": 270,
        "res": true,
        "code": "\nfunction f(dic){\n    let d = {};\n    for (let key in dic) {\n        let value = Object.entries(dic).shift();\n        d[key] = value[1];\n        delete dic[value[0]];\n    }\n    return d;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({}),{});\n}\n\ntest();\n\n",
        "answer": "{}"
    },
    {
        "id": 271,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'uufh'\n\nshould loosely deep-equal\n\n'hello'\n    at test (/tmp/tmp008ll8ov.js:15:10)\n    at Object.<anonymous> (/tmp/tmp008ll8ov.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'uufh',\n  expected: 'hello',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, c){\n    let ls = text.split('');\n    if (!text.includes(c)) {\n        throw new Error(`Text has no ${c}`);\n    }\n    ls.splice(text.lastIndexOf(c), 1);\n    return ls.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"uufhl\", \"l\"),\"hello\");\n}\n\ntest();\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 272,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  9,\n  7,\n  5,\n  3,\n  1,\n  2,\n  4,\n  6,\n  8,\n  0,\n  2,\n  6,\n  0,\n  6,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  9,\n  7,\n  5,\n  3,\n  1,\n  2,\n  4,\n  6,\n  8,\n  0\n]\n    at test (/tmp/tmpv0qc6m7c.js:16:10)\n    at Object.<anonymous> (/tmp/tmpv0qc6m7c.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    9, 7, 5, 3, 1, 2,\n    4, 6, 8, 0, 2, 6,\n    0, 6, 6\n  ],\n  expected: [\n    9, 7, 5, 3, 1,\n    2, 4, 6, 8, 0\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(base_list, nums){\n    base_list.push(...nums);\n    let res = [...base_list];\n    for (let i = -nums.length; i < 0; i++) {\n        res.push(res[res.length + i]);\n    }\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([9, 7, 5, 3, 1], [2, 4, 6, 8, 0]),[9, 7, 5, 3, 1, 2, 4, 6, 8, 0]);\n}\n\ntest();\n\n",
        "answer": "[9, 7, 5, 3, 1, 2, 4, 6, 8, 0]"
    },
    {
        "id": 273,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'NET'\n\nshould loosely deep-equal\n\n'.NET'\n    at test (/tmp/tmpqmem3_u_.js:20:10)\n    at Object.<anonymous> (/tmp/tmpqmem3_u_.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'NET',\n  expected: '.NET',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(name){\n    let new_name = '';\n    name = name.split('').reverse().join('');\n    for(let i = 0; i < name.length; i++){\n        let n = name[i];\n        if(n !== '.' && new_name.split('.').length < 3){\n            new_name = n + new_name;\n        }else{\n            break;\n        }\n    }\n    return new_name;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\".NET\"),\".NET\");\n}\n\ntest();\n\n",
        "answer": "\".NET\""
    },
    {
        "id": 274,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmplse2xj53.js:16:10)\n    at Object.<anonymous> (/tmp/tmplse2xj53.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums, target){\n    let count = 0;\n    for(let n1 of nums){\n        for(let n2 of nums){\n            count += n1 + n2 === target ? 1 : 0;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 3], 4),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 275,
        "res": 0
    },
    {
        "id": 276,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp2cdl2r17.js:15:10)\n    at Object.<anonymous> (/tmp/tmp2cdl2r17.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0 ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(a){\n    if (a.length >= 2 && a[0] > 0 && a[1] > 0) {\n        a.reverse();\n        return a;\n    }\n    a.push(0);\n    return a;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([]),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 277,
        "res": true,
        "code": "\nfunction f(lst, mode){\n    let result = lst.slice();\n    if (mode) {\n        result.reverse();\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 3, 4], 1),[4, 3, 2, 1]);\n}\n\ntest();\n\n",
        "answer": "[4, 3, 2, 1]"
    },
    {
        "id": 278,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  '0': [],\n  '132': [\n    5,\n    32\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  991,\n  32,\n  997\n]\n    at test (/tmp/tmp56vf9464.js:14:10)\n    at Object.<anonymous> (/tmp/tmp56vf9464.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { '0': [], '132': [ 5, 32 ] },\n  expected: [ 0, 991, 32, 997 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array1, array2){\n    let result = {};\n    array1.forEach(key => {\n        result[key] = array2.filter(el => key * 2 > el);\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([0, 132], [5, 991, 32, 997]),[0, 991, 32, 997]);\n}\n\ntest();\n\n",
        "answer": "[0, 991, 32, 997]"
    },
    {
        "id": 279,
        "res": true,
        "code": "\nfunction f(text) {\n    let ans = '';\n    while (text !== '') {\n        let [x, sep, rest] = text.partition('(');\n        ans = x + sep.replace('(', '|') + ans;\n        ans = ans + rest[0] + ans;\n        text = rest.slice(1);\n    }\n    return ans;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"\"),'');\n}\n\ntest();\n\n",
        "answer": "''"
    },
    {
        "id": 280,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'00000000 00000000 0ii0ii00 0ii00i0i 0ii0iii0'\n\nshould loosely deep-equal\n\n'hello'\n    at test (/tmp/tmp9rg3zasz.js:15:10)\n    at Object.<anonymous> (/tmp/tmp9rg3zasz.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '00000000 00000000 0ii0ii00 0ii00i0i 0ii0iii0',\n  expected: 'hello',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let g, field;\n    field = text.replace(/ /g, '');\n    g = text.replace(/0/g, ' ');\n    text = text.replace(/1/g, 'i');\n\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"00000000 00000000 01101100 01100101 01101110\"),\"hello\");\n}\n\ntest();\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 281,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  '1': 2,\n  '3': 4,\n  '5': 6,\n  '8': 2\n}\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp7debl3ru.js:16:10)\n    at Object.<anonymous> (/tmp/tmp7debl3ru.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { '1': 2, '3': 4, '5': 6, '8': 2 },\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(c, index, value){\n    c[index] = value;\n    if (value >= 3) {\n        c['message'] = 'xcrWt';\n    } else {\n        delete c['message'];\n    }\n    return c;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({1: 2, 3: 4, 5: 6, \"message\": \"qrTHo\"}, 8, 2),undefined);\n}\n\ntest();\n\n",
        "answer": "undefined"
    },
    {
        "id": 282,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmptgsgjtqb.js:17:10)\n    at Object.<anonymous> (/tmp/tmptgsgjtqb.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s1, s2){\n    let position = 1;\n    let count = 0;\n    while (position > 0) {\n        position = s1.indexOf(s2, position);\n        count += 1;\n        position += 1;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"xinyyexyxx\", \"xx\"),3);\n}\n\ntest();\n\n",
        "answer": "3"
    },
    {
        "id": 283,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Iron Man'\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpyyagd061.js:15:10)\n    at Object.<anonymous> (/tmp/tmpyyagd061.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Iron Man',\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(dictionary, key){\n    delete dictionary[key];\n    let keys = Object.keys(dictionary);\n    if (Math.min(...keys.map(k => parseInt(k))) === parseInt(key)) {\n        key = keys[0];\n    }\n    return key;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"Iron Man\": 4, \"Captain America\": 3, \"Black Panther\": 0, \"Thor\": 1, \"Ant-Man\": 6}, \"Iron Man\"),4);\n}\n\ntest();\n\n",
        "answer": "4"
    },
    {
        "id": 284,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely deep-equal\n\n'bestest'\n    at test (/tmp/tmpvr6r14dc.js:17:10)\n    at Object.<anonymous> (/tmp/tmpvr6r14dc.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'bestest',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, prefix){\n    let idx = 0;\n    for (let letter of prefix) {\n        if (text[idx] !== letter) {\n            return null;\n        }\n        idx++;\n    }\n    return text.slice(idx);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"bestest\", \"bestest\"),\"bestest\");\n}\n\ntest();\n\n",
        "answer": "\"bestest\""
    },
    {
        "id": 285,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpykghurv0.js:10:10)\n    at Object.<anonymous> (/tmp/tmpykghurv0.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, ch){\n    return text.split(ch).length - 1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"This be Pirate's Speak for 'help'!\", \" \"),4);\n}\n\ntest();\n\n",
        "answer": "4"
    },
    {
        "id": 286,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  11,\n  6,\n  7,\n  8,\n  9,\n  10\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4,\n  11,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10\n]\n    at test (/tmp/tmp9jto_g02.js:15:10)\n    at Object.<anonymous> (/tmp/tmp9jto_g02.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1, 2, 3, 4, 11,\n    6, 7, 8, 9, 10\n  ],\n  expected: [\n     1, 2, 3, 4, 11,\n     5, 6, 7, 8,  9,\n    10\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array, x, i){\n    if (i < -array.length || i > array.length - 1) {\n        return 'no';\n    }\n    let temp = array[i];\n    array[i] = x;\n    return array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 11, 4),[1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10]);\n}\n\ntest();\n\n",
        "answer": "[1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10]"
    },
    {
        "id": 287,
        "res": true,
        "code": "\nfunction f(name){\n    if (name === name.toLowerCase()) {\n        return name.toUpperCase();\n    } else {\n        return name.toLowerCase();\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Pinneaple\"),\"pinneaple\");\n}\n\ntest();\n\n",
        "answer": "\"pinneaple\""
    },
    {
        "id": 288,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    '1',\n    3\n  ],\n  [\n    '4',\n    555\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  555,\n  3,\n  6\n]\n    at test (/tmp/tmpzcjqhe_n.js:11:10)\n    at Object.<anonymous> (/tmp/tmpzcjqhe_n.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ '1', 3 ], [ '4', 555 ] ],\n  expected: [ 555, 3, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(d){\n    const sortedPairs = Object.entries(d).sort((a, b) => (a[0].toString() + a[1].toString()).length - (b[0].toString() + b[1].toString()).length);\n    return sortedPairs.filter(pair => pair[0] < pair[1]);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({55: 4, 4: 555, 1: 3, 99: 21, 499: 4, 71: 7, 12: 6}),[(4, 555), (1, 3), (12, 6)]);\n}\n\ntest();\n\n",
        "answer": "[(4, 555), (1, 3), (12, 6)]"
    },
    {
        "id": 289,
        "res": 0
    },
    {
        "id": 290,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'ABIXAAAILY'\n\nshould loosely deep-equal\n\n'ABIXAAILY'\n    at test (/tmp/tmpn8nslk7x.js:16:10)\n    at Object.<anonymous> (/tmp/tmpn8nslk7x.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'ABIXAAAILY',\n  expected: 'ABIXAAILY',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, prefix){\n    if (text.startsWith(prefix)){\n        return text.slice(prefix.length);\n    }\n    if (text.includes(prefix)){\n        return text.replace(prefix, '').trim();\n    }\n    return text.toUpperCase();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"abixaaaily\", \"al\"),\"ABIXAAILY\");\n}\n\ntest();\n\n",
        "answer": "\"ABIXAAILY\""
    },
    {
        "id": 291,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  a: [\n    2\n  ]\n}\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp06wbm1kq.js:14:10)\n    at Object.<anonymous> (/tmp/tmp06wbm1kq.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { a: [ 2 ] },\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(dictionary, arr) {\n    dictionary[arr[0]] = [arr[1]];\n    if (dictionary[arr[0]].length === arr[1]) {\n        dictionary[arr[0]] = arr[0];\n    }\n    return dictionary;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({}, [\"a\", 2]),undefined);\n}\n\ntest();\n\n",
        "answer": "undefined"
    },
    {
        "id": 292,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'5*83*23***'\n\nshould loosely deep-equal\n\n'5f83u23saa'\n    at test (/tmp/tmpm2k71vfh.js:11:10)\n    at Object.<anonymous> (/tmp/tmpm2k71vfh.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '5*83*23***',\n  expected: '5f83u23saa',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    var newText = text.split('').map(c => c.match(/\\d/) ? c : '*');\n    return newText.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"5f83u23saa\"),\"5f83u23saa\");\n}\n\ntest();\n\n",
        "answer": "\"5f83u23saa\""
    },
    {
        "id": 293,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'no'\n\nshould loosely deep-equal\n\n'No'\n    at test (/tmp/tmp1s9vy253.js:16:10)\n    at Object.<anonymous> (/tmp/tmp1s9vy253.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'no',\n  expected: 'No',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let s = text.toLowerCase();\n    for(let i = 0; i < s.length; i++){\n        if(s[i] === 'x'){\n            return 'no';\n        }\n    }\n    return text.toUpperCase() === text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"dEXE\"),\"No\");\n}\n\ntest();\n\n",
        "answer": "\"No\""
    },
    {
        "id": 294,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'2$z&5H3*1a@#a*1hris'\n\nshould loosely deep-equal\n\n'2xz&5H3*1a@#a*1hris'\n    at test (/tmp/tmpg4gv4017.js:17:10)\n    at Object.<anonymous> (/tmp/tmpg4gv4017.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '2$z&5H3*1a@#a*1hris',\n  expected: '2xz&5H3*1a@#a*1hris',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(n, m, text){\n    if (text.trim() === '') {\n        return text;\n    }\n    let head = text[0];\n    let mid = text.substring(1, text.length - 1);\n    let tail = text[text.length - 1];\n    let joined = head.replace(new RegExp(n, 'g'), m) + mid.replace(new RegExp(n, 'g'), m) + tail.replace(new RegExp(n, 'g'), m);\n    return joined;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"x\", \"$\", \"2xz&5H3*1a@#a*1hris\"),\"2xz&5H3*1a@#a*1hris\");\n}\n\ntest();\n\n",
        "answer": "\"2xz&5H3*1a@#a*1hris\""
    },
    {
        "id": 295,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'pear',\n  'banana',\n  'pear'\n]\n\nshould loosely deep-equal\n\n[\n  'apple',\n  'pear'\n]\n    at test (/tmp/tmpxkuuuu2r.js:18:10)\n    at Object.<anonymous> (/tmp/tmpxkuuuu2r.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'pear', 'banana', 'pear' ],\n  expected: [ 'apple', 'pear' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(fruits){\n    if (fruits[fruits.length - 1] === fruits[0]) {\n        return ['no'];\n    } else {\n        fruits.shift();\n        fruits.pop();\n        fruits.shift();\n        fruits.pop();\n        return fruits;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"apple\", \"apple\", \"pear\", \"banana\", \"pear\", \"orange\", \"orange\"]),[\"apple\", \"pear\"]);\n}\n\ntest();\n\n",
        "answer": "[\"apple\", \"pear\"]"
    },
    {
        "id": 296,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'https://www.www.ekapusta.com/image/url'\n\nshould loosely deep-equal\n\n'www.ekapusta.com'\n    at test (/tmp/tmpqrro3l_a.js:10:10)\n    at Object.<anonymous> (/tmp/tmpqrro3l_a.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'https://www.www.ekapusta.com/image/url',\n  expected: 'www.ekapusta.com',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(url){\n    return url.replace('http://www.', '');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"https://www.www.ekapusta.com/image/url\"),\"www.ekapusta.com\");\n}\n\ntest();\n\n",
        "answer": "\"www.ekapusta.com\""
    },
    {
        "id": 297,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Not found'\n\nshould loosely deep-equal\n\n'Half Life'\n    at test (/tmp/tmpfiiwyrb1.js:13:10)\n    at Object.<anonymous> (/tmp/tmpfiiwyrb1.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Not found',\n  expected: 'Half Life',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(num){\n    if (num > 0 && num < 1000 && num !== 6174) {\n        return 'Half Life';\n    }\n    return 'Not found';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(6173),\"Half Life\");\n}\n\ntest();\n\n",
        "answer": "\"Half Life\""
    },
    {
        "id": 298,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'DST VAVF N DMV DFVM GAMCU DGCVB.'\n\nshould loosely deep-equal\n\n'dst vavf n dmv dfvm gamcu dgcvb'\n    at test (/tmp/tmp3v9dcohk.js:16:10)\n    at Object.<anonymous> (/tmp/tmp3v9dcohk.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'DST VAVF N DMV DFVM GAMCU DGCVB.',\n  expected: 'dst vavf n dmv dfvm gamcu dgcvb',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let new_text = text.split('');\n    for (let i = 0; i < new_text.length; i++) {\n        let character = new_text[i];\n        let new_character = character.toUpperCase() === character ? character.toLowerCase() : character.toUpperCase();\n        new_text[i] = new_character;\n    }\n    return new_text.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"dst vavf n dmv dfvm gamcu dgcvb.\"),\"dst vavf n dmv dfvm gamcu dgcvb\");\n}\n\ntest();\n\n",
        "answer": "\"dst vavf n dmv dfvm gamcu dgcvb\""
    },
    {
        "id": 299,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'staovk'\n\nshould loosely deep-equal\n\n'staov'\n    at test (/tmp/tmpibz9zpq8.js:13:10)\n    at Object.<anonymous> (/tmp/tmpibz9zpq8.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'staovk',\n  expected: 'staov',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, char){\n    if (!text.endsWith(char)){\n        return f(char + text, char);\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"staovk\", \"k\"),\"staov\");\n}\n\ntest();\n\n",
        "answer": "\"staov\""
    },
    {
        "id": 300,
        "res": true,
        "code": "\nfunction f(nums){\n    let count = 1;\n    for (let i = count; i < nums.length - 1; i += 2) {\n        nums[i] = Math.max(nums[i], nums[count-1]);\n        count++;\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 3]),[1, 2, 3]);\n}\n\ntest();\n\n",
        "answer": "[1, 2, 3]"
    },
    {
        "id": 301,
        "res": 0
    },
    {
        "id": 302,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'wdeejjjzsjsjjsxjjneddaddddddefsfd'\n\nshould loosely deep-equal\n\n'haystacks'\n    at test (/tmp/tmpgnl5d6f_.js:10:10)\n    at Object.<anonymous> (/tmp/tmpgnl5d6f_.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'wdeejjjzsjsjjsxjjneddaddddddefsfd',\n  expected: 'haystacks',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(string){\n    return string.replace('needles', 'haystacks');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"wdeejjjzsjsjjsxjjneddaddddddefsfd\"),\"haystacks\");\n}\n\ntest();\n\n",
        "answer": "\"haystacks\""
    },
    {
        "id": 303,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'mJklbn'\n\nshould loosely deep-equal\n\n'MJLBN'\n    at test (/tmp/tmpqsv2covy.js:21:10)\n    at Object.<anonymous> (/tmp/tmpqsv2covy.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'mJklbn',\n  expected: 'MJLBN',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let i = Math.floor((text.length + 1) / 2);\n    let result = text.split('');\n    while (i < text.length) {\n        let t = result[i].toLowerCase();\n        if (t === result[i]) {\n            i++;\n        } else {\n            result[i] = t;\n        }\n        i += 2;\n    }\n    return result.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"mJkLbn\"),\"MJLBN\");\n}\n\ntest();\n\n",
        "answer": "\"MJLBN\""
    },
    {
        "id": 304,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  '18': 6,\n  '87': 7\n}\n\nshould loosely deep-equal\n\n{\n  '16': 6,\n  '17': 3,\n  '18': 6,\n  '2': 3,\n  '87': 7\n}\n    at test (/tmp/tmpmfskif77.js:17:10)\n    at Object.<anonymous> (/tmp/tmpmfskif77.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { '18': 6, '87': 7 },\n  expected: { '2': 3, '16': 6, '17': 3, '18': 6, '87': 7 },\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(d){\n    const sortedKeys = Object.keys(d).sort((a, b) => b - a);\n    const key1 = parseInt(sortedKeys[0]);\n    const val1 = d[key1];\n    delete d[key1];\n    const key2 = parseInt(sortedKeys[1]);\n    const val2 = d[key2];\n    delete d[key2];\n    return {[key1]: val1, [key2]: val2};\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({2: 3, 17: 3, 16: 6, 18: 6, 87: 7}),{18: 6, 16: 6, 87: 7, 2: 3, 17: 3});\n}\n\ntest();\n\n",
        "answer": "{18: 6, 16: 6, 87: 7, 2: 3, 17: 3}"
    },
    {
        "id": 305,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o hoseto'\n\nshould loosely deep-equal\n\n'hello'\n    at test (/tmp/tmp8svt8yyn.js:22:10)\n    at Object.<anonymous> (/tmp/tmp8svt8yyn.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o hoseto',\n  expected: 'hello',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, char){\n    let length = text.length;\n    let index = -1;\n    for(let i = 0; i < length; i++){\n        if(text[i] === char){\n            index = i;\n        }\n    }\n    if(index === -1){\n        index = Math.floor(length / 2);\n    }\n    let new_text = text.split('');\n    new_text.splice(index, 1);\n    return new_text.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"o horseto\", \"r\"),\"hello\");\n}\n\ntest();\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 306,
        "res": true,
        "code": "\nfunction f(nums){\n    let digits = [];\n    for(let num of nums){\n        if((typeof num === 'string' && !isNaN(num)) || typeof num === 'number'){\n            digits.push(num);\n        }\n    }\n    digits = digits.map(element => parseInt(element));\n    return digits;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([0, 6, \"1\", \"2\", 0]),[0, 6, 1, 2, 0]);\n}\n\ntest();\n\n",
        "answer": "[0, 6, 1, 2, 0]"
    },
    {
        "id": 307,
        "res": 0
    },
    {
        "id": 308,
        "res": true,
        "code": "\nfunction f(strings){\n    let occurances = {};\n    strings.forEach(string => {\n        if (!occurances[string]) {\n            occurances[string] = strings.filter(s => s === string).length;\n        }\n    });\n    return occurances;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"La\", \"Q\", \"9\", \"La\", \"La\"]),{ \"La\": 3, \"Q\": 1, \"9\": 1 });\n}\n\ntest();\n\n",
        "answer": "{ \"La\": 3, \"Q\": 1, \"9\": 1 }"
    },
    {
        "id": 309,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'faqo osax '\n\nshould loosely deep-equal\n\n'faqofosax'\n    at test (/tmp/tmp5dcf0x2s.js:14:10)\n    at Object.<anonymous> (/tmp/tmp5dcf0x2s.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'faqo osax ',\n  expected: 'faqofosax',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, suffix){\n    text += suffix;\n    while (text.slice(-suffix.length) === suffix) {\n        text = text.slice(0, -1);\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"faqo osax f\", \"f\"),\"faqofosax\");\n}\n\ntest();\n\n",
        "answer": "\"faqofosax\""
    },
    {
        "id": 310,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'__1.00r__j_a6__6'\n\nshould loosely deep-equal\n\n'r0a_j6r6'\n    at test (/tmp/tmpe_8xym3c.js:17:10)\n    at Object.<anonymous> (/tmp/tmpe_8xym3c.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '__1.00r__j_a6__6',\n  expected: 'r0a_j6r6',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(strands){\n    let subs = strands.slice();\n    for (let i = 0; i < subs.length; i++) {\n        let j = subs[i];\n        for (let _ = 0; _ < Math.floor(j.length / 2); _++) {\n            subs[i] = j.slice(-1) + j.slice(1, -1) + j[0];\n        }\n    }\n    return subs.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"__\", \"1\", \".\", \"0\", \"r0\", \"__\", \"a_j\", \"6\", \"__\", \"6\"]),\"r0a_j6r6\");\n}\n\ntest();\n\n",
        "answer": "\"r0a_j6r6\""
    },
    {
        "id": 311,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'no'\n\nshould loosely deep-equal\n\n'yes'\n    at test (/tmp/tmpq4qe9st0.js:11:10)\n    at Object.<anonymous> (/tmp/tmpq4qe9st0.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'no',\n  expected: 'yes',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    text = text.replace('#', '1').replace('$', '5');\n    return text.match(/^\\d+$/) ? 'yes' : 'no';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"A\"),\"yes\");\n}\n\ntest();\n\n",
        "answer": "\"yes\""
    },
    {
        "id": 312,
        "res": true,
        "code": "\nfunction f(s){\n    if (/^[a-zA-Z0-9]+$/.test(s)) {\n        return \"True\";\n    }\n    return \"False\";\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"777\"),\"True\");\n}\n\ntest();\n\n",
        "answer": "\"True\""
    },
    {
        "id": 313,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'urecord'\n\nshould loosely deep-equal\n\n'record'\n    at test (/tmp/tmpmkepm5l6.js:10:10)\n    at Object.<anonymous> (/tmp/tmpmkepm5l6.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'urecord',\n  expected: 'record',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s, l){\n    return s.padEnd(l, '=').split('=')[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"urecord\", 8),\"record\");\n}\n\ntest();\n\n",
        "answer": "\"record\""
    },
    {
        "id": 314,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n' 105, -90 244'\n\nshould loosely deep-equal\n\n'105,244'\n    at test (/tmp/tmp4_5nj0xb.js:18:10)\n    at Object.<anonymous> (/tmp/tmp4_5nj0xb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ' 105, -90 244',\n  expected: '105,244',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text) {\n    if (text.includes(',')) {\n        let index = text.indexOf(',');\n        let before = text.substring(0, index);\n        let after = text.substring(index + 1);\n        return after + ' ' + before;\n    }\n    let parts = text.split(' ');\n    return ',' + parts[parts.length - 1] + ' 0';\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"244, 105, -90\"),\"105,244\");\n}\n\ntest();\n\n",
        "answer": "\"105,244\""
    },
    {
        "id": 315,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'czywz'\n\nshould loosely deep-equal\n\n'czyw,z'\n    at test (/tmp/tmp_ij8gj9l.js:10:10)\n    at Object.<anonymous> (/tmp/tmp_ij8gj9l.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'czywz',\n  expected: 'czyw,z',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(challenge){\n    return challenge.toLowerCase().replace('l', ',');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"czywZ\"),\"czyw,z\");\n}\n\ntest();\n\n",
        "answer": "\"czyw,z\""
    },
    {
        "id": 316,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'| i am your father |'\n\nshould loosely deep-equal\n\n'i am your father'\n    at test (/tmp/tmpjg8e6lga.js:10:10)\n    at Object.<anonymous> (/tmp/tmpjg8e6lga.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '| i am your father |',\n  expected: 'i am your father',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(name){\n    return '| ' + name.split(' ').join(' ') + ' |';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"i am your father\"),\"i am your father\");\n}\n\ntest();\n\n",
        "answer": "\"i am your father\""
    },
    {
        "id": 317,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n' vap a zwwo oihee amawaaw! '\n\nshould loosely deep-equal\n\n'vup amuwuuw!'\n    at test (/tmp/tmpzu0xinf1.js:12:10)\n    at Object.<anonymous> (/tmp/tmpzu0xinf1.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ' vap a zwwo oihee amawaaw! ',\n  expected: 'vup amuwuuw!',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text, a, b){\n    text = text.replace(new RegExp(a, 'g'), b);\n    return text.replace(new RegExp(b, 'g'), a);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\" vup a zwwo oihee amuwuuw! \", \"a\", \"u\"),\"vup amuwuuw!\");\n}\n\ntest();\n\n",
        "answer": "\"vup amuwuuw!\""
    },
    {
        "id": 318,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp2yx4gvq5.js:16:10)\n    at Object.<anonymous> (/tmp/tmp2yx4gvq5.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(value, char){\n    let total = 0;\n    for(let i = 0; i < value.length; i++){\n        if(value[i] === char || value[i].toLowerCase() === char){\n            total++;\n        }\n    }\n    return total;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"234rtccde\", \"e\"),2);\n}\n\ntest();\n\n",
        "answer": "2"
    },
    {
        "id": 319,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp39k0bd4g.js:15:10)\n    at Object.<anonymous> (/tmp/tmp39k0bd4g.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(needle, haystack){\n    let count = 0;\n    while (haystack.includes(needle)) {\n        haystack = haystack.replace(needle, '');\n        count++;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"a\", \"xxxaaxaaxx\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 320,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'usAr'\n\nshould loosely deep-equal\n\n'Astronaut'\n    at test (/tmp/tmp5i439czq.js:20:10)\n    at Object.<anonymous> (/tmp/tmp5i439czq.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'usAr',\n  expected: 'Astronaut',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let index = 1;\n    while (index < text.length) {\n        if (text[index] !== text[index - 1]) {\n            index++;\n        } else {\n            let text1 = text.slice(0, index);\n            let text2 = text.slice(index).split('').map(char => char === char.toUpperCase() ? char.toLowerCase() : char.toUpperCase()).join('');\n            return text1 + text2;\n        }\n    }\n    return text.split('').map(char => char === char.toUpperCase() ? char.toLowerCase() : char.toUpperCase()).join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"USaR\"),\"Astronaut\");\n}\n\ntest();\n\n",
        "answer": "\"Astronaut\""
    },
    {
        "id": 321,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  desciduous: 2\n}\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmppd33clf6.js:18:10)\n    at Object.<anonymous> (/tmp/tmppd33clf6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { desciduous: 2 },\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(update, starting){\n    let d = Object.assign({}, starting);\n    for (let k in update) {\n        if (k in d) {\n            d[k] += update[k];\n        } else {\n            d[k] = update[k];\n        }\n    }\n    return d;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({}, {\"desciduous\": 2}),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 322,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'lsi',\n  's',\n  't',\n  't',\n  'd'\n]\n\nshould loosely deep-equal\n\n[\n  'tset',\n  't',\n  'd'\n]\n    at test (/tmp/tmp6ylvw7qa.js:16:10)\n    at Object.<anonymous> (/tmp/tmp6ylvw7qa.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'lsi', 's', 't', 't', 'd' ],\n  expected: [ 'tset', 't', 'd' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(chemicals, num){\n    let fish = chemicals.slice(1);\n    chemicals.reverse();\n    for(let i = 0; i < num; i++){\n        fish.push(chemicals.splice(1, 1)[0]);\n    }\n    chemicals.reverse();\n    return chemicals;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"lsi\", \"s\", \"t\", \"t\", \"d\"], 0),[\"tset\", \"t\", \"d\"]);\n}\n\ntest();\n\n",
        "answer": "[\"tset\", \"t\", \"d\"]"
    },
    {
        "id": 323,
        "res": true,
        "code": "\nfunction f(text){\n    return text.split('\\n').length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ncdsdfdaaa0a1cdscsk*XFd\"),1);\n}\n\ntest();\n\n",
        "answer": "1"
    },
    {
        "id": 324,
        "res": true,
        "code": "\nfunction f(nums){\n    let asc = nums.slice();\n    let desc = [];\n    let temp = asc.slice();\n    temp.reverse();\n    desc = temp.slice(0, Math.floor(temp.length / 2));\n    return desc.concat(asc).concat(desc);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([]),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 325,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpynwvvxh8.js:17:10)\n    at Object.<anonymous> (/tmp/tmpynwvvxh8.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s){\n    let l = s.split('');\n    for(let i = 0; i < l.length; i++){\n        l[i] = l[i].toLowerCase();\n        if (isNaN(l[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"\"),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 326,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n7\n    at test (/tmp/tmp8u8tz6m4.js:16:10)\n    at Object.<anonymous> (/tmp/tmp8u8tz6m4.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 7,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let number = 0;\n    for(let i = 0; i < text.length; i++){\n        if(!isNaN(text[i])){\n            number += 1;\n        }\n    }\n    return number;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Thisisastring\"),7);\n}\n\ntest();\n\n",
        "answer": "7"
    },
    {
        "id": 327,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -3,\n  1,\n  7,\n  -1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  7,\n  -1,\n  -3\n]\n    at test (/tmp/tmp7yc_ocsh.js:20:10)\n    at Object.<anonymous> (/tmp/tmp7yc_ocsh.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -3, 1, 7, -1 ],\n  expected: [ 1, 7, -1, -3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(lst){\n    let result = [];\n    let i = lst.length - 1;\n    for(let _ of lst) {\n        if (i % 2 === 0) {\n            result.push(-lst[i]);\n        } else {\n            result.push(lst[i]);\n        }\n        i -= 1;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 7, -1, -3]),[1, 7, -1, -3]);\n}\n\ntest();\n\n",
        "answer": "[1, 7, -1, -3]"
    },
    {
        "id": 328,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  1,\n  2,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmpxr2f5x2l.js:16:10)\n    at Object.<anonymous> (/tmp/tmpxr2f5x2l.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 1, 2, 3 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array, L){\n    if (L <= 0) {\n        return array;\n    }\n    if (array.length < L) {\n        array.push(...f(array, L - array.length));\n    }\n    return array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 3], 4),[1, 2, 3, 4]);\n}\n\ntest();\n\n",
        "answer": "[1, 2, 3, 4]"
    },
    {
        "id": 329,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmppigfrdiq.js:15:10)\n    at Object.<anonymous> (/tmp/tmppigfrdiq.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    for(let i = 0; i < text.length; i++){\n        if(text[i] === text[i].toUpperCase() && text[i-1].toLowerCase() === text[i-1]){\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"jh54kkk6\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 330,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n' 4 2 '\n\nshould loosely deep-equal\n\n'm n o'\n    at test (/tmp/tmpekzy8gc2.js:18:10)\n    at Object.<anonymous> (/tmp/tmpekzy8gc2.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ' 4 2 ',\n  expected: 'm n o',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let ans = [];\n    for(let i = 0; i < text.length; i++){\n        if(!isNaN(parseInt(text[i]))){\n            ans.push(text[i]);\n        } else {\n            ans.push(' ');\n        }\n    }\n    return ans.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"m4n2o\"),\"m n o\");\n}\n\ntest();\n\n",
        "answer": "\"m n o\""
    },
    {
        "id": 331,
        "res": true,
        "code": "\nfunction f(strand, zmnc){\n    let poz = strand.indexOf(zmnc);\n    while (poz !== -1) {\n        strand = strand.substring(poz + 1);\n        poz = strand.indexOf(zmnc);\n    }\n    return strand.lastIndexOf(zmnc);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"\", \"abc\"),-1);\n}\n\ntest();\n\n",
        "answer": "-1"
    },
    {
        "id": 332,
        "res": true,
        "code": "\nfunction f(nums){\n    let count = nums.length;\n    if (count === 0){\n        nums = Array.from({length: parseInt(nums.pop())}, () => 0);\n    } else if (count % 2 === 0){\n        nums.length = 0;\n    } else {\n        nums.splice(0, Math.floor(count / 2));\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([-6, -2, 1, -3, 0, 1]),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 333,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmp9mm50anr.js:22:10)\n    at Object.<anonymous> (/tmp/tmp9mm50anr.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(places, lazy){\n    places.sort();\n    for (let l of lazy) {\n        places.splice(places.indexOf(l), 1);\n    }\n    if (places.length === 1) {\n        return 1;\n    }\n    for (let i = 0; i < places.length; i++) {\n        if (places.filter(place => places.includes(place + 1)).length === 0) {\n            return i + 1;\n        }\n    }\n    return i + 1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([375, 564, 857, 90, 728, 92], [728]),3);\n}\n\ntest();\n\n",
        "answer": "3"
    },
    {
        "id": 334,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'nU00 9 rCSAz00w00 lpA5BO00sizL00i7rlVr'\n\nshould loosely deep-equal\n\n'nU9rCSAzwLlpA5BOsizLi7rlVr'\n    at test (/tmp/tmp69bx04g2.js:10:10)\n    at Object.<anonymous> (/tmp/tmp69bx04g2.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'nU00 9 rCSAz00w00 lpA5BO00sizL00i7rlVr',\n  expected: 'nU9rCSAzwLlpA5BOsizLi7rlVr',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(a, b){\n    return b.join(a);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"00\", [\"nU\", \" 9 rCSAz\", \"w\", \" lpA5BO\", \"sizL\", \"i7rlVr\"]),\"nU9rCSAzwLlpA5BOsizLi7rlVr\");\n}\n\ntest();\n\n",
        "answer": "\"nU9rCSAzwLlpA5BOsizLi7rlVr\""
    },
    {
        "id": 335,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'sjbrfqmw'\n\nshould loosely deep-equal\n\n'sjbrlfqmw'\n    at test (/tmp/tmpq69067zg.js:16:10)\n    at Object.<anonymous> (/tmp/tmpq69067zg.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'sjbrfqmw',\n  expected: 'sjbrlfqmw',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, to_remove){\n    let new_text = text.split('');\n    if (new_text.includes(to_remove)) {\n        let index = new_text.indexOf(to_remove);\n        new_text.splice(index, 1, '?');\n        new_text.splice(new_text.indexOf('?'), 1);\n    }\n    return new_text.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"sjbrlfqmw\", \"l\"),\"sjbrlfqmw\");\n}\n\ntest();\n\n",
        "answer": "\"sjbrlfqmw\""
    },
    {
        "id": 336,
        "res": true,
        "code": "\nfunction f(s, sep){\n    s += sep;\n    return s.slice(0, s.lastIndexOf(sep));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"234dsfssdfs333324314\", \"s\"),\"234dsfssdfs333324314\");\n}\n\ntest();\n\n",
        "answer": "\"234dsfssdfs333324314\""
    },
    {
        "id": 337,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'LL'\n\nshould loosely deep-equal\n\n'5ll6'\n    at test (/tmp/tmpf90lamhc.js:22:10)\n    at Object.<anonymous> (/tmp/tmpf90lamhc.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'LL',\n  expected: '5ll6',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(txt){\n    let d = [];\n    for(let i = 0; i < txt.length; i++){\n        let c = txt[i];\n        if (!isNaN(parseInt(c, 10))) {\n            continue;\n        }\n        if (c === c.toLowerCase()) {\n            d.push(c.toUpperCase());\n        } else if (c === c.toUpperCase()) {\n            d.push(c.toLowerCase());\n        }\n    }\n    return d.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"5ll6\"),\"5ll6\");\n}\n\ntest();\n\n",
        "answer": "\"5ll6\""
    },
    {
        "id": 338,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  '1': 'a',\n  '2': 'd',\n  '3': 'c'\n}\n\nshould loosely deep-equal\n\n{\n  a: 0,\n  b: 1,\n  c: 2,\n  d: 3\n}\n    at test (/tmp/tmp4kv7p95r.js:14:10)\n    at Object.<anonymous> (/tmp/tmp4kv7p95r.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { '1': 'a', '2': 'd', '3': 'c' },\n  expected: { a: 0, b: 1, c: 2, d: 3 },\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(my_dict){\n    let result = {};\n    for (let key in my_dict) {\n        result[my_dict[key]] = key;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"a\": 1, \"b\": 2, \"c\": 3, \"d\": 2}),{a: 0, b: 1, c: 2, d: 3});\n}\n\ntest();\n\n",
        "answer": "{a: 0, b: 1, c: 2, d: 3}"
    },
    {
        "id": 339,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpbtuvfmoh.js:17:10)\n    at Object.<anonymous> (/tmp/tmpbtuvfmoh.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array, elem){\n    elem = elem.toString();\n    let d = 0;\n    for(let i of array){\n        if(i.toString() === elem){\n            d++;\n        }\n    }\n    return d;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([-1, 2, 1, -8, -8, 2], 2),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 340,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'   DEGHIVjkptx'\n\nshould loosely deep-equal\n\n'EjIkxHtDpVG'\n    at test (/tmp/tmp_na3gx6b.js:15:10)\n    at Object.<anonymous> (/tmp/tmp_na3gx6b.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '   DEGHIVjkptx',\n  expected: 'EjIkxHtDpVG',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let uppercase_index = text.indexOf('A');\n    if (uppercase_index >= 0) {\n        return text.substring(0, uppercase_index) + text.substring(text.indexOf('a') + 1);\n    } else {\n        return text.split('').sort().join('');\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"E jIkx HtDpV G\"),\"EjIkxHtDpVG\");\n}\n\ntest();\n\n",
        "answer": "\"EjIkxHtDpVG\""
    },
    {
        "id": 341,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{}\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpj_ko48k2.js:13:10)\n    at Object.<anonymous> (/tmp/tmpj_ko48k2.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: {},\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(cart){\n    while (Object.keys(cart).length > 5) {\n        delete cart[Object.keys(cart)[Object.keys(cart).length - 1]];\n    }\n    return cart;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({}),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 342,
        "res": true,
        "code": "\nfunction f(text){\n    return text.split('-').length - 1 === text.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"---123-4\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 343,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    1,\n    2,\n    3\n  ],\n  [\n    1,\n    2\n  ],\n  1,\n  [\n    1,\n    2,\n    3\n  ],\n  3,\n  [\n    2,\n    1\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  1,\n  2,\n  1,\n  1,\n  2,\n  3\n]\n    at test (/tmp/tmpmxluh8rv.js:11:10)\n    at Object.<anonymous> (/tmp/tmpmxluh8rv.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 1, 2, 3 ], [ 1, 2 ], 1, [ 1, 2, 3 ], 3, [ 2, 1 ] ],\n  expected: [\n    1, 2, 3, 1, 2,\n    1, 1, 2, 3\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array, elem){\n    array.push(...elem);\n    return array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([[1, 2, 3], [1, 2], 1], [[1, 2, 3], 3, [2, 1]]),[1, 2, 3, 1, 2, 1, 1, 2, 3]);\n}\n\ntest();\n\n",
        "answer": "[1, 2, 3, 1, 2, 1, 1, 2, 3]"
    },
    {
        "id": 344,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  6,\n  4,\n  2,\n  8,\n  15\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  4,\n  6,\n  8,\n  15\n]\n    at test (/tmp/tmp6v3r80io.js:15:10)\n    at Object.<anonymous> (/tmp/tmp6v3r80io.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 6, 4, 2, 8, 15 ],\n  expected: [ 2, 4, 6, 8, 15 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(lst){\n    let operation = x => x.reverse();\n    let new_list = [...lst];\n    new_list.sort((a, b) => a - b);\n    operation(new_list);\n    return lst;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([6, 4, 2, 8, 15]),[2, 4, 6, 8, 15]);\n}\n\ntest();\n\n",
        "answer": "[2, 4, 6, 8, 15]"
    },
    {
        "id": 345,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'mv',\n  'ml'\n]\n\nshould loosely deep-equal\n\n[\n  5,\n  12\n]\n    at test (/tmp/tmpdpm5i1ur.js:13:10)\n    at Object.<anonymous> (/tmp/tmpdpm5i1ur.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'mv', 'ml' ],\n  expected: [ 5, 12 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(a, b){\n    if (a < b) {\n        return [b, a];\n    }\n    return [a, b];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ml\", \"mv\"),[5, 12]);\n}\n\ntest();\n\n",
        "answer": "[5, 12]"
    },
    {
        "id": 346,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\n'docs'\n    at test (/tmp/tmpgsobdrjf.js:12:10)\n    at Object.<anonymous> (/tmp/tmpgsobdrjf.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: 'docs',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(filename){\n    var suffix = filename.split('.').pop();\n    var f2 = filename + suffix.split('').reverse().join('');\n    return f2.endsWith(suffix);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"docs.doc\"),\"docs\");\n}\n\ntest();\n\n",
        "answer": "\"docs\""
    },
    {
        "id": 347,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hhhhhzcw'\n\nshould loosely deep-equal\n\n'h   c w'\n    at test (/tmp/tmp0_hduu8p.js:15:10)\n    at Object.<anonymous> (/tmp/tmp0_hduu8p.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hhhhhzcw',\n  expected: 'h   c w',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let ls = text.split('');\n    let length = ls.length;\n    for (let i = 0; i < length; i++) {\n        ls.splice(i, 0, ls[i]);\n    }\n    return ls.join('').padEnd(length * 2, ' ');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"hzcw\"),\"h   c w\");\n}\n\ntest();\n\n",
        "answer": "\"h   c w\""
    },
    {
        "id": 348,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  '133': undefined,\n  '563': 555\n}\n\nshould loosely deep-equal\n\n5555\n    at test (/tmp/tmp6l_hki65.js:10:10)\n    at Object.<anonymous> (/tmp/tmp6l_hki65.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { '133': undefined, '563': 555 },\n  expected: 5555,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(dictionary){\n    return Object.assign({}, dictionary);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({563: 555, 133: undefined}),5555);\n}\n\ntest();\n\n",
        "answer": "5555"
    },
    {
        "id": 349,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  '1049': 55,\n  noeohqhk: 623\n}\n\nshould loosely deep-equal\n\n55\n    at test (/tmp/tmpilna554y.js:16:10)\n    at Object.<anonymous> (/tmp/tmpilna554y.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { '1049': 55, noeohqhk: 623 },\n  expected: 55,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(dictionary){\n    dictionary[1049] = 55;\n    var keys = Object.keys(dictionary);\n    var lastKey = keys[keys.length - 1];\n    var value = dictionary[lastKey];\n    delete dictionary[lastKey];\n    dictionary[lastKey] = value;\n    return dictionary;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"noeohqhk\": 623}),55);\n}\n\ntest();\n\n",
        "answer": "55"
    },
    {
        "id": 350,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0\n]\n    at test (/tmp/tmp25wqg2gs.js:20:10)\n    at Object.<anonymous> (/tmp/tmp25wqg2gs.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3 ],\n  expected: [ 0, 0, 0 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(d){\n    let size = Object.keys(d).length;\n    let v = new Array(size).fill(0);\n    if (size === 0) {\n        return v;\n    }\n    let i = 0;\n    for (let e of Object.values(d)) {\n        v[i] = e;\n        i++;\n    }\n    return v;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"a\": 1, \"b\": 2, \"c\": 3}),[0, 0, 0]);\n}\n\ntest();\n\n",
        "answer": "[0, 0, 0]"
    },
    {
        "id": 351,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a_A_b_B3 '\n\nshould loosely deep-equal\n\n'aAbB3'\n    at test (/tmp/tmpi_z8cikx.js:16:10)\n    at Object.<anonymous> (/tmp/tmpi_z8cikx.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a_A_b_B3 ',\n  expected: 'aAbB3',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    try {\n        while (text.includes('nnet lloP')) {\n            text = text.replace('nnet lloP', 'nnet loLp');\n        }\n    } finally {\n        return text;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"a_A_b_B3 \"),\"aAbB3\");\n}\n\ntest();\n\n",
        "answer": "\"aAbB3\""
    },
    {
        "id": 352,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-5\n\nshould loosely deep-equal\n\n-1\n    at test (/tmp/tmpasit8eht.js:10:10)\n    at Object.<anonymous> (/tmp/tmpasit8eht.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -5,\n  expected: -1,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    return nums[Math.floor(nums.length / 2)];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([-1, -3, -5, -7, 0]),-1);\n}\n\ntest();\n\n",
        "answer": "-1"
    },
    {
        "id": 353,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpn64kek0y.js:22:10)\n    at Object.<anonymous> (/tmp/tmpn64kek0y.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(x){\n    if (x.length === 0) {\n        return -1;\n    } else {\n        let cache = {};\n        x.forEach(item => {\n            if (cache[item]) {\n                cache[item] += 1;\n            } else {\n                cache[item] = 1;\n            }\n        });\n        return Math.max(...Object.values(cache));\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 0, 2, 2, 0, 0, 0, 1]),2);\n}\n\ntest();\n\n",
        "answer": "2"
    },
    {
        "id": 354,
        "res": 0
    },
    {
        "id": 355,
        "res": false,
        "error": "ReferenceError",
        "error_message": "/tmp/tmp8lryvtqr.js:10\n  assert.deepEqual(candidate(\"123x John z\", \"z\"),John);\n                                                 ^\n\nReferenceError: John is not defined\n    at test (/tmp/tmp8lryvtqr.js:10:50)\n    at Object.<anonymous> (/tmp/tmp8lryvtqr.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, prefix){\n    return text.substring(prefix.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"123x John z\", \"z\"),John);\n}\n\ntest();\n\n",
        "answer": "John"
    },
    {
        "id": 356,
        "res": true,
        "code": "\nfunction f(array, num){\n    let reverse = false;\n    if (num < 0){\n        reverse = true;\n        num *= -1;\n    }\n    let newArray = array.slice().reverse().flat(num);\n    \n    if (reverse){\n        newArray.reverse();\n    }\n    return newArray;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2], 1),[2, 1]);\n}\n\ntest();\n\n",
        "answer": "[2, 1]"
    },
    {
        "id": 357,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'werc'\n\nshould loosely deep-equal\n\n'nac'\n    at test (/tmp/tmpmj9aolgf.js:14:10)\n    at Object.<anonymous> (/tmp/tmpmj9aolgf.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'werc',\n  expected: 'nac',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s){\n    let r = [];\n    for (let i = s.length - 1; i >= 0; i--) {\n        r.push(s[i]);\n    }\n    return r.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"crew\"),\"nac\");\n}\n\ntest();\n\n",
        "answer": "\"nac\""
    },
    {
        "id": 358,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'tr'\n\nshould loosely deep-equal\n\n'burger'\n    at test (/tmp/tmpozxdc29l.js:19:10)\n    at Object.<anonymous> (/tmp/tmpozxdc29l.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'tr',\n  expected: 'burger',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, value){\n    let indexes = [];\n    for(let i = 0; i < text.length; i++) {\n        if (text[i] === value && (i === 0 || text[i-1] !== value)) {\n            indexes.push(i);\n        }\n    }\n    if (indexes.length % 2 === 1) {\n        return text;\n    }\n    return text.slice(indexes[0] + 1, indexes[indexes.length - 1]);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"btrburger\", \"b\"),\"burger\");\n}\n\ntest();\n\n",
        "answer": "\"burger\""
    },
    {
        "id": 359,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'dZwbSR',\n  'wijHeq',\n  'qluVok',\n  'dxjxbF'\n]\n\nshould loosely deep-equal\n\n[\n  'dZw',\n  'iQl',\n  'Qv',\n  'dx',\n  'jB',\n  'F'\n]\n    at test (/tmp/tmp06axy7nf.js:13:10)\n    at Object.<anonymous> (/tmp/tmp06axy7nf.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'dZwbSR', 'wijHeq', 'qluVok', 'dxjxbF' ],\n  expected: [ 'dZw', 'iQl', 'Qv', 'dx', 'jB', 'F' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(lines){\n    for(let i = 0; i < lines.length; i++){\n        lines[i] = lines[i].padStart(Math.floor((lines[lines.length - 1].length + lines[i].length) / 2)).padEnd(lines[lines.length - 1].length);\n    }\n    return lines;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"dZwbSR\", \"wijHeq\", \"qluVok\", \"dxjxbF\"]),[\"dZw\", \"iQl\", \"Qv\", \"dx\", \"jB\", \"F\"]);\n}\n\ntest();\n\n",
        "answer": "[\"dZw\", \"iQl\", \"Qv\", \"dx\", \"jB\", \"F\"]"
    },
    {
        "id": 360,
        "res": true,
        "code": "\nfunction f(text, n){\n    if (text.length <= 2){\n        return text;\n    }\n    let leading_chars = text[0].repeat(n - text.length + 1);\n    return leading_chars + text.slice(1, -1) + text.slice(-1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"g\", 15),\"g\");\n}\n\ntest();\n\n",
        "answer": "\"g\""
    },
    {
        "id": 361,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpgvh9xbnl.js:10:10)\n    at Object.<anonymous> (/tmp/tmpgvh9xbnl.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    return text.split(':')[0].split('#').length - 1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"#! : #!\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 362,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'razugizoernmgzu'\n\nshould loosely deep-equal\n\n'wrazugizoernmgzu'\n    at test (/tmp/tmpvzvybg_j.js:15:10)\n    at Object.<anonymous> (/tmp/tmpvzvybg_j.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'razugizoernmgzu',\n  expected: 'wrazugizoernmgzu',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    for(let i = 0; i < text.length - 1; i++){\n        if (text.slice(i).toLowerCase() === text.slice(i)) {\n            return text.slice(i + 1);\n        }\n    }\n    return '';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"wrazugizoernmgzu\"),\"wrazugizoernmgzu\");\n}\n\ntest();\n\n",
        "answer": "\"wrazugizoernmgzu\""
    },
    {
        "id": 363,
        "res": true,
        "code": "\nfunction f(nums){\n    nums.sort();\n    let n = nums.length;\n    let new_nums = [nums[Math.floor(n/2)]];\n    \n    if (n % 2 === 0) {\n        new_nums = [nums[n/2 - 1], nums[n/2]];\n    }\n    \n    for (let i = 0; i < Math.floor(n/2); i++) {\n        new_nums.unshift(nums[n-i-1]);\n        new_nums.push(nums[i]);\n    }\n    return new_nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1]),[1]);\n}\n\ntest();\n\n",
        "answer": "[1]"
    },
    {
        "id": 364,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    3,\n    false\n  ],\n  [\n    1,\n    true\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  3,\n  0,\n  1\n]\n    at test (/tmp/tmpclits8s8.js:16:10)\n    at Object.<anonymous> (/tmp/tmpclits8s8.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 3, false ], [ 1, true ] ],\n  expected: [ 0, 3, 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(nums){\n    let verdict = (x) => x < 2;\n    let res = nums.filter(x => x !== 0);\n    let result = res.map(x => [x, verdict(x)]);\n    if (result.length > 0)\n        return result;\n    return 'error - no numbers or all zeros!';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([0, 3, 0, 1]),[0, 3, 0, 1]);\n}\n\ntest();\n\n",
        "answer": "[0, 3, 0, 1]"
    },
    {
        "id": 365,
        "res": true,
        "code": "\nfunction f(n, s){\n    if(s.startsWith(n)){\n        let [pre, _] = s.split(n, 2);\n        return pre + n + s.substring(n.length);\n    }\n    return s;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"xqc\", \"mRcwVqXsRDRb\"),\"mRcwVqXsRDRb\");\n}\n\ntest();\n\n",
        "answer": "\"mRcwVqXsRDRb\""
    },
    {
        "id": 366,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely deep-equal\n\n'hello'\n    at test (/tmp/tmpnv3y4vxw.js:16:10)\n    at Object.<anonymous> (/tmp/tmpnv3y4vxw.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'hello',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(string){\n    let tmp = string.toLowerCase();\n    for (let char of string.toLowerCase()) {\n        if (tmp.includes(char)) {\n            tmp = tmp.replace(char, '');\n        }\n    }\n    return tmp;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"[ Hello ]+ Hello, World!!_ Hi\"),\"hello\");\n}\n\ntest();\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 367,
        "res": true,
        "code": "\nfunction f(nums, rmvalue){\n    let res = nums.slice();\n    while (res.includes(rmvalue)) {\n        let index = res.indexOf(rmvalue);\n        let popped = res.splice(index, 1)[0];\n        if (popped !== rmvalue) {\n            res.push(popped);\n        }\n    }\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([6, 2, 1, 1, 4, 1], 5),[6, 2, 1, 1, 4, 1]);\n}\n\ntest();\n\n",
        "answer": "[6, 2, 1, 1, 4, 1]"
    },
    {
        "id": 368,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'4327 00004327 000004327 4327 0004327 4327'\n\nshould loosely deep-equal\n\n'4327'\n    at test (/tmp/tmpzqrolxia.js:14:10)\n    at Object.<anonymous> (/tmp/tmpzqrolxia.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '4327 00004327 000004327 4327 0004327 4327',\n  expected: '4327',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(string, numbers){\n    let arr = [];\n    numbers.forEach(num => {\n        arr.push(string.padStart(num, '0'));\n    });\n    return arr.join(' ');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"4327\", [2, 8, 9, 2, 7, 1]),\"4327\");\n}\n\ntest();\n\n",
        "answer": "\"4327\""
    },
    {
        "id": 369,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'tuple'\n\nshould loosely deep-equal\n\n'int'\n    at test (/tmp/tmp3b4zo_rh.js:20:10)\n    at Object.<anonymous> (/tmp/tmp3b4zo_rh.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'tuple',\n  expected: 'int',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(input){\n    if (!isNaN(input)) {\n        return \"int\";\n    } else if (!isNaN(input.replace('.', ''))) {\n        return \"float\";\n    } else if (input.split(' ').length === input.length - 1) {\n        return \"str\";\n    } else if (input.length === 1) {\n        return \"char\";\n    } else {\n        return \"tuple\";\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\" 99 777\"),\"int\");\n}\n\ntest();\n\n",
        "answer": "\"int\""
    },
    {
        "id": 370,
        "res": false,
        "error": "ReferenceError",
        "error_message": "/tmp/tmpbwrv0glu.js:15\n  assert.deepEqual(candidate(\"     i\"),True);\n                                       ^\n\nReferenceError: True is not defined\n    at test (/tmp/tmpbwrv0glu.js:15:40)\n    at Object.<anonymous> (/tmp/tmpbwrv0glu.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    for(let char of text){\n        if(char !== ' '){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"     i\"),True);\n}\n\ntest();\n\n",
        "answer": "True"
    },
    {
        "id": 371,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n[\n  0,\n  0\n]\n    at test (/tmp/tmp1jrpisw9.js:22:10)\n    at Object.<anonymous> (/tmp/tmp1jrpisw9.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: [ 0, 0 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    nums = nums.slice();\n    for(let i = nums.length - 1; i >= 0; i--){\n        if(nums[i] % 2 !== 0){\n            nums.splice(i, 1);\n        }\n    }\n    \n    let sum_ = 0;\n    for(let num of nums){\n        sum_ += num;\n    }\n    \n    return sum_;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([11, 21, 0, 11]),[0, 0]);\n}\n\ntest();\n\n",
        "answer": "[0, 0]"
    },
    {
        "id": 372,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpr1t5d4jr.js:16:10)\n    at Object.<anonymous> (/tmp/tmpr1t5d4jr.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(list_, num){\n    let temp = [];\n    for(let i of list_){\n        i = Array(Math.floor(num / 2) + 1).join(i + ',');\n        temp.push(i);\n    }\n    return temp;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"v\"], 1),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 373,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  100\n]\n    at test (/tmp/tmpv2fiwjrm.js:14:10)\n    at Object.<anonymous> (/tmp/tmpv2fiwjrm.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3 ],\n  expected: [ 1, 2, 3, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(orig){\n    let copy = orig;\n    copy.push(100);\n    orig.pop();\n    return copy;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 3]),[1, 2, 3, 100]);\n}\n\ntest();\n\n",
        "answer": "[1, 2, 3, 100]"
    },
    {
        "id": 374,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'zzzz'\n]\n\nshould loosely deep-equal\n\n[\n  'HH',\n  'EE',\n  'MM',\n  'DD',\n  'FF',\n  'AA',\n  'BB',\n  'TT'\n]\n    at test (/tmp/tmpaejg5flo.js:16:10)\n    at Object.<anonymous> (/tmp/tmpaejg5flo.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'zzzz' ],\n  expected: [\n    'HH', 'EE', 'MM',\n    'DD', 'FF', 'AA',\n    'BB', 'TT'\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(seq, v){\n    let a = [];\n    seq.forEach(i => {\n        if (i.endsWith(v)) {\n            a.push(i.repeat(2));\n        }\n    });\n    return a;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"oH\", \"ee\", \"mb\", \"deft\", \"n\", \"zz\", \"f\", \"abA\"], \"zz\"),[\"HH\", \"EE\", \"MM\", \"DD\", \"FF\", \"AA\", \"BB\", \"TT\"]);\n}\n\ntest();\n\n",
        "answer": "[\"HH\", \"EE\", \"MM\", \"DD\", \"FF\", \"AA\", \"BB\", \"TT\"]"
    },
    {
        "id": 375,
        "res": 0
    },
    {
        "id": 376,
        "res": true,
        "code": "\nfunction f(text){\n    for(let i = 0; i < text.length; i++){\n        if(text.slice(0, i).startsWith(\"two\")){\n            return text.slice(i);\n        }\n    }\n    return 'no';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"2two programmers\"),\"no\");\n}\n\ntest();\n\n",
        "answer": "\"no\""
    },
    {
        "id": 377,
        "res": 0
    },
    {
        "id": 378,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'No such key!'\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp8lfbfelm.js:18:10)\n    at Object.<anonymous> (/tmp/tmp8lfbfelm.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'No such key!',\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(dic, key){\n    if(!dic.hasOwnProperty(key)) {\n        return 'No such key!'\n    }\n    else {\n        let value = dic[key];\n        delete dic[key];\n        return value;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"did\": 0}, \"u\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 379,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp6ggduubf.js:16:10)\n    at Object.<anonymous> (/tmp/tmp6ggduubf.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    for(let i = nums.length - 1; i >= 0; i -= 3){\n        if(nums[i] === 0){\n            nums = [];\n            return false;\n        }\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([0, 0, 1, 2, 1]),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 380,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'xxjarcz'\n\nshould loosely deep-equal\n\n'jarcz'\n    at test (/tmp/tmpposqd_4g.js:12:10)\n    at Object.<anonymous> (/tmp/tmpposqd_4g.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'xxjarcz',\n  expected: 'jarcz',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text, delimiter){\n    let partition = text.split(delimiter);\n    return partition.slice(0, -1).join(delimiter);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"xxjarczx\", \"x\"),\"jarcz\");\n}\n\ntest();\n\n",
        "answer": "\"jarcz\""
    },
    {
        "id": 381,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'00019'\n\nshould loosely deep-equal\n\n'19'\n    at test (/tmp/tmprg95lk9y.js:11:10)\n    at Object.<anonymous> (/tmp/tmprg95lk9y.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '00019',\n  expected: '19',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, num_digits){\n    let width = Math.max(1, num_digits);\n    return text.padStart(width, '0');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"19\", 5),\"19\");\n}\n\ntest();\n\n",
        "answer": "\"19\""
    },
    {
        "id": 382,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n\"(12, 'Rwrepny') (15, 'Qltuf')\"\n\nshould loosely deep-equal\n\n\"(15, 'Qltuf') (12, 'Rwrepny')\"\n    at test (/tmp/tmpele858f9.js:20:10)\n    at Object.<anonymous> (/tmp/tmpele858f9.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: \"(12, 'Rwrepny') (15, 'Qltuf')\",\n  expected: \"(15, 'Qltuf') (12, 'Rwrepny')\",\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(a){\n    let s = {};\n    const items = Object.entries(a);\n    items.reverse().forEach((item) => {\n        s[item[0]] = item[1];\n    });\n    let str = '';\n    for (let key in s) {\n        str += `(${key}, '${s[key]}') `;\n    }\n    return str.trim();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({15: \"Qltuf\", 12: \"Rwrepny\"}),\"(15, 'Qltuf') (12, 'Rwrepny')\");\n}\n\ntest();\n\n",
        "answer": "\"(15, 'Qltuf') (12, 'Rwrepny')\""
    },
    {
        "id": 383,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'ellod!p.nkyp.exa.bi.y.hain'\n\nshould loosely deep-equal\n\n'ellohyp.nkx.y.exa.b.i.h'\n    at test (/tmp/tmpemc5mg5u.js:14:10)\n    at Object.<anonymous> (/tmp/tmpemc5mg5u.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'ellod!p.nkyp.exa.bi.y.hain',\n  expected: 'ellohyp.nkx.y.exa.b.i.h',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, chars){\n    let result = text.split('');\n    while (result.slice(-3, 0, -2).includes(chars)) {\n        result.splice(-3, 2);\n    }\n    return result.join('').trim('.');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ellod!p.nkyp.exa.bi.y.hain\", \".n.in.ha.y\"),\"ellohyp.nkx.y.exa.b.i.h\");\n}\n\ntest();\n\n",
        "answer": "\"ellohyp.nkx.y.exa.b.i.h\""
    },
    {
        "id": 384,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'sfdellos'\n\nshould loosely deep-equal\n\n'asfdellos'\n    at test (/tmp/tmpmbj423s5.js:20:10)\n    at Object.<anonymous> (/tmp/tmpmbj423s5.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'sfdellos',\n  expected: 'asfdellos',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, chars){\n    chars = chars.split('');\n    text = text.split('');\n    let new_text = text;\n    while (new_text.length > 0 && text.length > 0) {\n        if (chars.includes(new_text[0])) {\n            new_text = new_text.slice(1);\n        } else {\n            break;\n        }\n    }\n    return new_text.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"asfdellos\", \"Ta\"),\"asfdellos\");\n}\n\ntest();\n\n",
        "answer": "\"asfdellos\""
    },
    {
        "id": 385,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  2,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  1\n]\n    at test (/tmp/tmp7sacs60n.js:21:10)\n    at Object.<anonymous> (/tmp/tmp7sacs60n.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 2, 2 ],\n  expected: [ 0, 2, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(lst){\n    let i = 0;\n    let new_list = [];\n    while (i < lst.length) {\n        if (lst.slice(i+1).includes(lst[i])) {\n            new_list.push(lst[i]);\n            if (new_list.length === 3) {\n                return new_list;\n            }\n        }\n        i++;\n    }\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([0, 2, 1, 2, 6, 2, 6, 3, 0]),[0, 2, 1]);\n}\n\ntest();\n\n",
        "answer": "[0, 2, 1]"
    },
    {
        "id": 386,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Done!'\n\nshould loosely deep-equal\n\n'mid'\n    at test (/tmp/tmp3gzvx9nb.js:16:10)\n    at Object.<anonymous> (/tmp/tmp3gzvx9nb.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Done!',\n  expected: 'mid',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(concat, di){\n    let count = Object.keys(di).length;\n    for (let i = 0; i < count; i++) {\n        if (di[i.toString()] && concat.includes(di[i.toString()])) {\n            delete di[i.toString()];\n        }\n    }\n    return \"Done!\";\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"mid\", {\"0\": \"q\", \"1\": \"f\", \"2\": \"w\", \"3\": \"i\"}),\"mid\");\n}\n\ntest();\n\n",
        "answer": "\"mid\""
    },
    {
        "id": 387,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  1,\n  0,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  3,\n  1,\n  0\n]\n    at test (/tmp/tmp22btxch8.js:11:10)\n    at Object.<anonymous> (/tmp/tmp22btxch8.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 1, 0, 2 ],\n  expected: [ 3, 1, 0 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums, pos, value){\n    nums.splice(pos, 0, value);\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([3, 1, 2], 2, 0),[3, 1, 0]);\n}\n\ntest();\n\n",
        "answer": "[3, 1, 0]"
    },
    {
        "id": 388,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'2nm_28in'\n\nshould loosely deep-equal\n\n'nm'\n    at test (/tmp/tmp8dmknqnq.js:17:10)\n    at Object.<anonymous> (/tmp/tmp8dmknqnq.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '2nm_28in',\n  expected: 'nm',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, characters){\n    let character_list = characters.split('') + [' ', '_'];\n\n    let i = 0;\n    while (i < text.length && character_list.includes(text[i])) {\n        i++;\n    }\n\n    return text.slice(i);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"2nm_28in\", \"nm\"),\"nm\");\n}\n\ntest();\n\n",
        "answer": "\"nm\""
    },
    {
        "id": 389,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '1',\n  '2',\n  '3',\n  'n',\n  'a',\n  'm',\n  'm',\n  'o'\n]\n\nshould loosely deep-equal\n\n[\n  '1',\n  '2',\n  '3',\n  'nammo'\n]\n    at test (/tmp/tmpq6mk4ilh.js:17:10)\n    at Object.<anonymous> (/tmp/tmpq6mk4ilh.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    '1', '2', '3',\n    'n', 'a', 'm',\n    'm', 'o'\n  ],\n  expected: [ '1', '2', '3', 'nammo' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(total, arg){\n    if (Array.isArray(arg)) {\n        for (let e of arg) {\n            total.push(...e);\n        }\n    } else {\n        total.push(...arg);\n    }\n    return total;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"1\", \"2\", \"3\"], \"nammo\"),[\"1\", \"2\", \"3\", \"nammo\"]);\n}\n\ntest();\n\n",
        "answer": "[\"1\", \"2\", \"3\", \"nammo\"]"
    },
    {
        "id": 390,
        "res": true,
        "code": "\nfunction f(text){\n    if (!text.trim()){\n        return text.trim().length;\n    }\n    return null;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(` \t `),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 391,
        "res": 0
    },
    {
        "id": 392,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Hello Is It MyClass'\n\nshould loosely deep-equal\n\n'HELLO IS IT MYCLASS'\n    at test (/tmp/tmpgtcljm7e.js:13:10)\n    at Object.<anonymous> (/tmp/tmpgtcljm7e.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Hello Is It MyClass',\n  expected: 'HELLO IS IT MYCLASS',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    if (text.toUpperCase() === text) {\n        return 'ALL UPPERCASE';\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Hello Is It MyClass\"),\"HELLO IS IT MYCLASS\");\n}\n\ntest();\n\n",
        "answer": "\"HELLO IS IT MYCLASS\""
    },
    {
        "id": 393,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a---c---s'\n\nshould loosely deep-equal\n\n'ssa---tca'\n    at test (/tmp/tmp9x4y37z3.js:15:10)\n    at Object.<anonymous> (/tmp/tmp9x4y37z3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a---c---s',\n  expected: 'ssa---tca',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let ls = text.split('').reverse();\n    let text2 = '';\n    for (let i = ls.length - 3; i > 0; i -= 3) {\n        text2 += ls.slice(i, i + 3).join('---') + '---';\n    }\n    return text2.slice(0, -3);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"scala\"),\"ssa---tca\");\n}\n\ntest();\n\n",
        "answer": "\"ssa---tca\""
    },
    {
        "id": 394,
        "res": 0
    },
    {
        "id": 395,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-1\n    at test (/tmp/tmpmkmlxx0f.js:17:10)\n    at Object.<anonymous> (/tmp/tmpmkmlxx0f.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -1,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s){\n    for(let i = 0; i < s.length; i++){\n        if(!isNaN(parseInt(s[i]))){\n            return i + (s[i] === '0' ? 1 : 0);\n        } else if(s[i] === '0'){\n            return -1;\n        }\n    }\n    return -1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"11\"),-1);\n}\n\ntest();\n\n",
        "answer": "-1"
    },
    {
        "id": 396,
        "res": true,
        "code": "\nfunction f(ets){\n    while (Object.keys(ets).length > 0) {\n        let key = Object.keys(ets)[0];\n        let value = ets[key];\n        delete ets[key];\n        ets[key] = value ** 2;\n    }\n    return ets;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({}),{});\n}\n\ntest();\n\n",
        "answer": "{}"
    },
    {
        "id": 397,
        "res": true,
        "code": "\nfunction f(ls){\n    return ls.reduce((acc, item) => ({ ...acc, [item]: 0 }), {});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"x\", \"u\", \"w\", \"j\", \"3\", \"6\"]),{x: 0, u: 0, w: 0, j: 0, 3: 0, 6: 0});\n}\n\ntest();\n\n",
        "answer": "{x: 0, u: 0, w: 0, j: 0, 3: 0, 6: 0}"
    },
    {
        "id": 398,
        "res": 0
    },
    {
        "id": 399,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'a--cado'\n\nshould loosely deep-equal\n\n'avocado'\n    at test (/tmp/tmpfh72io0b.js:19:10)\n    at Object.<anonymous> (/tmp/tmpfh72io0b.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a--cado',\n  expected: 'avocado',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, oldStr, newStr){\n    if (oldStr.length > 3) {\n        return text;\n    }\n    if (text.includes(oldStr) && !text.includes(' ')) {\n        return text.replace(new RegExp(oldStr, 'g'), newStr.repeat(oldStr.length));\n    }\n    while (text.includes(oldStr)) {\n        text = text.replace(new RegExp(oldStr, 'g'), newStr);\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"avacado\", \"va\", \"-\"),\"avocado\");\n}\n\ntest();\n\n",
        "answer": "\"avocado\""
    },
    {
        "id": 400,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'I, am, hungry!, eat, food.'\n\nshould loosely deep-equal\n\n'I am hungry, eat food.'\n    at test (/tmp/tmp81tz0v_e.js:14:10)\n    at Object.<anonymous> (/tmp/tmp81tz0v_e.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'I, am, hungry!, eat, food.',\n  expected: 'I am hungry, eat food.',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(multi_string){\n    let cond_string = multi_string.split(' ').map(word => word.split('').every(char => char.charCodeAt(0) < 128));\n    if (cond_string.includes(true)) {\n        return multi_string.split(' ').filter(word => word.split('').every(char => char.charCodeAt(0) < 128)).join(', ');\n    }\n    return '';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"I am hungry! eat food.\"),\"I am hungry, eat food.\");\n}\n\ntest();\n\n",
        "answer": "\"I am hungry, eat food.\""
    },
    {
        "id": 401,
        "res": true,
        "code": "\nfunction f(text, suffix){\n    if(suffix && text.endsWith(suffix)){\n        return text.slice(0, -suffix.length);\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"mathematics\", \"example\"),\"mathematics\");\n}\n\ntest();\n\n",
        "answer": "\"mathematics\""
    },
    {
        "id": 402,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{}\n\nshould loosely deep-equal\n\n{\n  '10': 0,\n  '11': 0,\n  '12': 0\n}\n    at test (/tmp/tmp5xx_zjdp.js:17:10)\n    at Object.<anonymous> (/tmp/tmp5xx_zjdp.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: {},\n  expected: { '10': 0, '11': 0, '12': 0 },\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(n, l){\n    let archive = {};\n    for (let i = 0; i < n; i++) {\n        archive = {};\n        l.forEach(x => {\n            archive[x + 10] = x * 10;\n        });\n    }\n    return archive;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(0, [\"aaa\", \"bbb\"]),{10: 0, 11: 0, 12: 0});\n}\n\ntest();\n\n",
        "answer": "{10: 0, 11: 0, 12: 0}"
    },
    {
        "id": 403,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpp906p4uy.js:18:10)\n    at Object.<anonymous> (/tmp/tmpp906p4uy.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(full, part){\n    let length = part.length;\n    let index = full.indexOf(part);\n    let count = 0;\n    while (index >= 0){\n        full = full.slice(index + length);\n        index = full.indexOf(part);\n        count++;\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"hrsiajiajieihruejfhbrisvlmmy\", \"hr\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 404,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpl_8_786v.js:15:10)\n    at Object.<anonymous> (/tmp/tmpl_8_786v.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(no){\n    let d = {};\n    no.forEach(item => {\n        d[item] = false;\n    });\n    \n    return Object.keys(d).length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"l\", \"f\", \"h\", \"g\", \"s\", \"b\"]),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 405,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  4,\n  1,\n  2,\n  3,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  5,\n  4,\n  3,\n  2,\n  1,\n  0,\n  1\n]\n    at test (/tmp/tmpibtengm2.js:17:10)\n    at Object.<anonymous> (/tmp/tmpibtengm2.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5, 3, 4, 1,\n    2, 3, 5\n  ],\n  expected: [\n    5, 4, 3, 2,\n    1, 0, 1\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(xs){\n    let new_x = xs[0] - 1;\n    xs.shift();\n    while (new_x <= xs[0]){\n        xs.shift();\n        new_x -= 1;\n    }\n    xs.unshift(new_x);\n    return xs;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([6, 3, 4, 1, 2, 3, 5]),[5, 4, 3, 2, 1, 0, 1]);\n}\n\ntest();\n\n",
        "answer": "[5, 4, 3, 2, 1, 0, 1]"
    },
    {
        "id": 406,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp434nqn82.js:12:10)\n    at Object.<anonymous> (/tmp/tmp434nqn82.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let ls = text.split('');\n    [ls[0], ls[ls.length - 1]] = [ls[ls.length - 1].toUpperCase(), ls[0].toUpperCase()];\n    return ls.join('').match(/^[A-Z][a-z]* [A-Z][a-z]*$/g) ? true : false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Josh\"),true);\n}\n\ntest();\n\n",
        "answer": "true"
    },
    {
        "id": 407,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n[\n  6,\n  1,\n  2,\n  3\n]\n    at test (/tmp/tmp7envjy75.js:14:10)\n    at Object.<anonymous> (/tmp/tmp7envjy75.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: [ 6, 1, 2, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s){\n    while(s.length > 1){\n        s.splice(0, s.length);\n        s.push(s.length);\n    }\n    return s.pop();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([6, 1, 2, 3]),[6, 1, 2, 3]);\n}\n\ntest();\n\n",
        "answer": "[6, 1, 2, 3]"
    },
    {
        "id": 408,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -1,\n  2,\n  -7,\n  4,\n  0,\n  6,\n  -4\n]\n\nshould loosely deep-equal\n\n[\n  -4,\n  6,\n  0,\n  4,\n  -7,\n  2,\n  -1\n]\n    at test (/tmp/tmprsxt1537.js:11:10)\n    at Object.<anonymous> (/tmp/tmprsxt1537.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    -1, 2, -7, 4,\n     0, 6, -4\n  ],\n  expected: [\n    -4, 6,  0, 4,\n    -7, 2, -1\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(m){\n    m.reverse();\n    return m;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([-4, 6, 0, 4, -7, 2, -1]),[-4, 6, 0, 4, -7, 2, -1]);\n}\n\ntest();\n\n",
        "answer": "[-4, 6, 0, 4, -7, 2, -1]"
    },
    {
        "id": 409,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'querisT'\n\nshould loosely deep-equal\n\n'QUERIST'\n    at test (/tmp/tmp8b7j1c8f.js:19:10)\n    at Object.<anonymous> (/tmp/tmp8b7j1c8f.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'querisT',\n  expected: 'QUERIST',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text, char){\n    if (text) {\n        if(text.startsWith(char)){\n            text = text.slice(char.length);\n        }\n        if(text.endsWith(text.slice(-1).toLowerCase())){\n            text = text.slice(0, -1) + text.slice(-1).toUpperCase();\n        }\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"querist\", \"u\"),\"QUERIST\");\n}\n\ntest();\n\n",
        "answer": "\"QUERIST\""
    },
    {
        "id": 410,
        "res": 0
    },
    {
        "id": 411,
        "res": true,
        "code": "\nfunction f(text, pref){\n    if(Array.isArray(pref)){\n        return pref.map(x => text.startsWith(x)).join(', ');\n    } else {\n        return text.startsWith(pref);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Hello World\", \"W\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 412,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmptnqv11ud.js:17:10)\n    at Object.<anonymous> (/tmp/tmptnqv11ud.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(start, end, interval){\n    let steps = [];\n    for(let i = start; i <= end; i += interval){\n        steps.push(i);\n    }\n    if (steps.includes(1)){\n        steps[steps.length - 1] = end + 1;\n    }\n    return steps.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(3, 10, 1),4);\n}\n\ntest();\n\n",
        "answer": "4"
    },
    {
        "id": 413,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cwcuc'\n\nshould loosely deep-equal\n\n'jboucw'\n    at test (/tmp/tmpn92oto26.js:10:10)\n    at Object.<anonymous> (/tmp/tmpn92oto26.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cwcuc',\n  expected: 'jboucw',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s){\n    return s.slice(3) + s[2] + s.slice(5, 8);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"jbucwc\"),\"jboucw\");\n}\n\ntest();\n\n",
        "answer": "\"jboucw\""
    },
    {
        "id": 414,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  X: [\n    'X',\n    'Y'\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  'X',\n  'Y'\n]\n    at test (/tmp/tmpoithp52o.js:17:10)\n    at Object.<anonymous> (/tmp/tmpoithp52o.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { X: [ 'X', 'Y' ] },\n  expected: [ 'X', 'Y' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(d){\n    let dCopy = {...d};\n    for (let key in dCopy) {\n        let value = dCopy[key];\n        for (let i = 0; i < value.length; i++) {\n            value[i] = value[i].toUpperCase();\n        }\n    }\n    return dCopy;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"X\": [\"x\", \"y\"]}),[\"X\", \"Y\"]);\n}\n\ntest();\n\n",
        "answer": "[\"X\", \"Y\"]"
    },
    {
        "id": 415,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  '5': 3,\n  '8': 2\n}\n\nshould loosely deep-equal\n\nnull\n    at test (/tmp/tmpgqxwg_my.js:16:10)\n    at Object.<anonymous> (/tmp/tmpgqxwg_my.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { '5': 3, '8': 2 },\n  expected: null,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array){\n    let d = Object.fromEntries(array);\n    for (let [key, value] of Object.entries(d)) {\n        if (value < 0 || value > 9) {\n            return null;\n        }\n    }\n    return d;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([[8, 5], [8, 2], [5, 3]]),null);\n}\n\ntest();\n\n",
        "answer": "null"
    },
    {
        "id": 416,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'jysrhfm ojwesf xgwwdyr dlrul ymba bpq'\n\nshould loosely deep-equal\n\n'j1srhfm ojwesf xgwwdyr dlrul ymba bpq'\n    at test (/tmp/tmps_7o18_8.js:16:10)\n    at Object.<anonymous> (/tmp/tmps_7o18_8.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'jysrhfm ojwesf xgwwdyr dlrul ymba bpq',\n  expected: 'j1srhfm ojwesf xgwwdyr dlrul ymba bpq',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, old, replacement){\n    let index = text.lastIndexOf(old, text.indexOf(old));\n    let result = text.split('');\n    while (index > 0) {\n        result.splice(index, old.length, replacement);\n        index = text.lastIndexOf(old, 0, index);\n    }\n    return result.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"jysrhfm ojwesf xgwwdyr dlrul ymba bpq\", \"j\", \"1\"),\"j1srhfm ojwesf xgwwdyr dlrul ymba bpq\");\n}\n\ntest();\n\n",
        "answer": "\"j1srhfm ojwesf xgwwdyr dlrul ymba bpq\""
    },
    {
        "id": 417,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  8,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  8\n]\n    at test (/tmp/tmposvfsg3e.js:13:10)\n    at Object.<anonymous> (/tmp/tmposvfsg3e.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 8, 2, 8 ],\n  expected: [ 2, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(lst){\n    lst.reverse();\n    lst.pop();\n    lst.reverse();\n    return lst;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([7, 8, 2, 8]),[2, 8]);\n}\n\ntest();\n\n",
        "answer": "[2, 8]"
    },
    {
        "id": 418,
        "res": true,
        "code": "\n\nfunction f(s, p){\n    let arr = s.split(p);\n    if (arr.length > 1) {\n        let part_one = arr[0].length;\n        let part_two = arr[1].length;\n        let part_three = arr.slice(2).join('').length;\n        if (part_one >= 2 && part_two <= 2 && part_three >= 2){\n            return arr[0].split('').reverse().join('') + arr[1] + arr[2].split('').reverse().join('') + '#';\n        }\n    }\n    return s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"qqqqq\", \"qqq\"),\"qqqqq\");\n}\n\ntest();\n\n",
        "answer": "\"qqqqq\""
    },
    {
        "id": 419,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'mmfb'\n\nshould loosely deep-equal\n\n'm'\n    at test (/tmp/tmpvf5v85xi.js:13:10)\n    at Object.<anonymous> (/tmp/tmpvf5v85xi.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'mmfb',\n  expected: 'm',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, value){\n    if (!text.includes(value)) {\n        return '';\n    }\n    return text.substring(0, text.lastIndexOf(value));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"mmfbifen\", \"i\"),\"m\");\n}\n\ntest();\n\n",
        "answer": "\"m\""
    },
    {
        "id": 420,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp2e13f59d.js:14:10)\n    at Object.<anonymous> (/tmp/tmp2e13f59d.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    try {\n        return text.match(/^[a-zA-Z]+$/) != null;\n    } catch (error) {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"x\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 421,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'try.'\n\nshould loosely deep-equal\n\n'try'\n    at test (/tmp/tmphb56e7ay.js:14:10)\n    at Object.<anonymous> (/tmp/tmphb56e7ay.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'try.',\n  expected: 'try',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s, n){\n    if (s.length < n) {\n        return s;\n    } else {\n        return s.substring(n);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"try.\", 5),\"try\");\n}\n\ntest();\n\n",
        "answer": "\"try\""
    },
    {
        "id": 422,
        "res": true,
        "code": "\nfunction f(array){\n    let new_array = array.slice();\n    new_array.reverse();\n    return new_array.map(x => x*x);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 1]),[1, 4, 1]);\n}\n\ntest();\n\n",
        "answer": "[1, 4, 1]"
    },
    {
        "id": 423,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  2,\n  5,\n  1,\n  3,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  2,\n  5,\n  1,\n  3,\n  2,\n  6\n]\n    at test (/tmp/tmp9c51zb4x.js:17:10)\n    at Object.<anonymous> (/tmp/tmp9c51zb4x.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 2, 5, 1, 3, 2 ],\n  expected: [\n    4, 2, 5, 1,\n    3, 2, 6\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(selfie){\n    let lo = selfie.length;\n    for(let i = lo - 1; i > -1; i--){\n        if(selfie[i] === selfie[0]){\n            selfie.pop();\n        }\n    }\n    return selfie;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([4, 2, 5, 1, 3, 2, 6]),[4, 2, 5, 1, 3, 2, 6]);\n}\n\ntest();\n\n",
        "answer": "[4, 2, 5, 1, 3, 2, 6]"
    },
    {
        "id": 424,
        "res": 0
    },
    {
        "id": 425,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  ':',\n  'CL44     '\n]\n\nshould loosely deep-equal\n\n'CL44'\n    at test (/tmp/tmpovq6_md9.js:12:10)\n    at Object.<anonymous> (/tmp/tmpovq6_md9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', ':', 'CL44     ' ],\n  expected: 'CL44',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(a){\n    a = a.replace('/', ':');\n    let z = a.split(':');\n    return [z[0], ':', z[1]];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"/CL44     \"),\"CL44\");\n}\n\ntest();\n\n",
        "answer": "\"CL44\""
    },
    {
        "id": 426,
        "res": true,
        "code": "\nfunction f(numbers, elem, idx){\n    numbers.splice(idx, 0, elem);\n    return numbers;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 3], 8, 5),[1, 2, 3, 8]);\n}\n\ntest();\n\n",
        "answer": "[1, 2, 3, 8]"
    },
    {
        "id": 427,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely deep-equal\n\n'ssa'\n    at test (/tmp/tmp78actg0x.js:16:10)\n    at Object.<anonymous> (/tmp/tmp78actg0x.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'ssa',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s){\n    let count = s.length - 1;\n    let reverse_s = s.split('').reverse().join('');\n    while (count > 0 && reverse_s.match(/sea/g) === null) {\n        count -= 1;\n        reverse_s = reverse_s.substring(0, count);\n    }\n    return reverse_s.substring(count);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"s a a b s d s a a s a a\"),\"ssa\");\n}\n\ntest();\n\n",
        "answer": "\"ssa\""
    },
    {
        "id": 428,
        "res": true,
        "code": "\nfunction f(nums){\n    for(let i = 0; i < nums.length; i++){\n        if(i % 2 === 0){\n            nums.push(nums[i] * nums[i + 1]);\n        }\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([]),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 429,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    '87.29',\n    3\n  ],\n  [\n    'defghi',\n    2\n  ],\n  [\n    'abc',\n    2\n  ],\n  [\n    '5',\n    1\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    'defghi',\n    3\n  ],\n  [\n    'abc',\n    2\n  ],\n  [\n    5,\n    1\n  ]\n]\n    at test (/tmp/tmp8qqw1j_p.js:18:10)\n    at Object.<anonymous> (/tmp/tmp8qqw1j_p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ '87.29', 3 ], [ 'defghi', 2 ], [ 'abc', 2 ], [ '5', 1 ] ],\n  expected: [ [ 'defghi', 3 ], [ 'abc', 2 ], [ 5, 1 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(d){\n    let result = [];\n    while (Object.keys(d).length > 0) {\n        let keys = Object.keys(d);\n        let key = keys[keys.length - 1];\n        result.push([key, d[key]]);\n        delete d[key];\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({5: 1, \"abc\": 2, \"defghi\": 2, 87.29: 3}),[[\"defghi\", 3], [\"abc\", 2], [5, 1]]);\n}\n\ntest();\n\n",
        "answer": "[[\"defghi\", 3], [\"abc\", 2], [5, 1]]"
    },
    {
        "id": 430,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  1,\n  3,\n  7,\n  8,\n  '',\n  0,\n  -1,\n  []\n]\n\nshould loosely deep-equal\n\n[\n  5,\n  1,\n  3,\n  7,\n  8,\n  0,\n  -1\n]\n    at test (/tmp/tmpzxrqrpac.js:12:10)\n    at Object.<anonymous> (/tmp/tmpzxrqrpac.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,  1, 3,  7,  8,\n    '', 0, -1, []\n  ],\n  expected: [\n    5, 1,  3, 7,\n    8, 0, -1\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(arr1, arr2){\n    let new_arr = arr1.slice();\n    new_arr.push(...arr2);\n    return new_arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([5, 1, 3, 7, 8], [\"\", 0, -1, []]),[5, 1, 3, 7, 8, 0, -1]);\n}\n\ntest();\n\n",
        "answer": "[5, 1, 3, 7, 8, 0, -1]"
    },
    {
        "id": 431,
        "res": true,
        "code": "\nfunction f(n, m){\n    let arr = Array.from({length: n}, (_, i) => i + 1);\n    for (let i = 0; i < m; i++) {\n        arr = [];\n    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(1, 3),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 432,
        "res": true,
        "code": "\nfunction f(length, text){\n    if (text.length === length){\n        return text.split('').reverse().join('');\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(-5, \"G5ogb6f,c7e.EMm\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 433,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'T,T,Sspp,G ,.tB,Vxk,Cct'\n\nshould loosely deep-equal\n\n'mreh,T,G ,.tB,Vxk,Cct'\n    at test (/tmp/tmpzq3qd6k3.js:13:10)\n    at Object.<anonymous> (/tmp/tmpzq3qd6k3.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'T,T,Sspp,G ,.tB,Vxk,Cct',\n  expected: 'mreh,T,G ,.tB,Vxk,Cct',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    text = text.split(',');\n    text.shift();\n    text.unshift(text.splice(text.indexOf('T'), 1)[0]);\n    return 'T,' + text.join(',');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Dmreh,Sspp,T,G ,.tB,Vxk,Cct\"),\"mreh,T,G ,.tB,Vxk,Cct\");\n}\n\ntest();\n\n",
        "answer": "\"mreh,T,G ,.tB,Vxk,Cct\""
    },
    {
        "id": 434,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely deep-equal\n\n'ee'\n    at test (/tmp/tmpnzt9yriu.js:14:10)\n    at Object.<anonymous> (/tmp/tmpnzt9yriu.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 'ee',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(string){\n    try {\n        return string.lastIndexOf('e');\n    } catch (error) {\n        return \"Nuk\";\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"eeuseeeoehasa\"),\"ee\");\n}\n\ntest();\n\n",
        "answer": "\"ee\""
    },
    {
        "id": 435,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpbnsnu7og.js:16:10)\n    at Object.<anonymous> (/tmp/tmpbnsnu7og.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(numbers, num, val){\n    while (numbers.length < num) {\n        numbers.splice(Math.floor(numbers.length / 2), 0, val);\n    }\n    for (let i = 0; i < Math.floor(numbers.length / (num - 1)) - 4; i++) {\n        numbers.splice(Math.floor(numbers.length / 2), 0, val);\n    }\n    return numbers.join(' ');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([], 0, 1),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 436,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '7',\n  '6',\n  '1',\n  '7',\n  ' '\n]\n\nshould loosely deep-equal\n\n[\n  'ss',\n  'ss',\n  'ss'\n]\n    at test (/tmp/tmpvmbws_59.js:10:10)\n    at Object.<anonymous> (/tmp/tmpvmbws_59.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '7', '6', '1', '7', ' ' ],\n  expected: [ 'ss', 'ss', 'ss' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s, characters){\n    return characters.map(index => s.substring(index, index + 1));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"s7 6s 1ss\", [1, 3, 6, 1, 2]),[\"ss\", \"ss\", \"ss\"]);\n}\n\ntest();\n\n",
        "answer": "[\"ss\", \"ss\", \"ss\"]"
    },
    {
        "id": 437,
        "res": 0
    },
    {
        "id": 438,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpfhkgpuev.js:35\n  assert.deepEqual(candidate(`1  \t\t\t3`),\"1\\t3\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t2\\t4\\t\\t\\t\\t\\t\\t\\t3\\t6\\t\\t\\t\\t\\t\\t\\t4\\t8\\t\\t\\t\\t\\t\\t\\t5\\t10\\t\\t\\t\\t\\t\\t\\t\\t6\\t12\\t\\t\\t\\t\\t\\t7\\t14\\t\\t\\t\\t\\t\\t8\\t16\\t\\t\\t\\t\\t\\t9\\t18\\t\\t\\t\\t\\t\\t10\\t20\\t\\t\\t\\t\\t11\\t22\\t\\t\\t\\t12\\t24\\t\\t\\t\\t13\\t26\\t\\t\\t\\t14\\t28\\t\\t\\t\\t15\\t30\\t\\t\\t\\t\\t16\\t32\\t\\t\\t\\t\\t17\\t34\\t\\t\\t\\t18\\t36\\t\\t\\t\\t\\t19\\t38\\t\\t\\t\\t\\t20\\t40\\t\\t\\t\\t21\\t42\\t\\t\\t\\t22\\t44\\t\\t\\t\\t23\\t46\\t\\t\\t\\t24\\t48\\t\\t\\t\\t25\\t50\\t\\t\\t\\t\\t26\\t52\\t\\t\\t\\t\\t27\\t56\\t\\t\\t\\t\\t28\\t62\\t\\t\\t\\t\\t29\\t66\\t\\t\\t\\t\\t30\\t72\\t\\t\\t\\t\\t31\\t82\\t\\t\\t\\t\\t32\\t84\\t\\t\\t\\t\\t33\\t86\\t\\t\\t\\t\\t34\\n\"\n                                 \t\t\tn\nSyntaxError: missing ) after argument list\n    at wrapSafe (node:internal/modules/cjs/loader:1350:18)\n    at Module._compile (node:internal/modules/cjs/loader:1379:20)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(string){\n    let bigTab = 100;\n    for (let i = 10; i < 30; i++){\n        if (string.split('\\t').length > 1 && string.split('\\t').length < 20){\n            bigTab = i;\n            break;\n        }\n    }\n    return expandTabs(string, bigTab);\n}\n\nfunction expandTabs(str, bigTab){\n    let newStr = '';\n    let count = 0;\n    for (let i = 0; i < str.length; i++){\n        if (str[i] == '\\t'){\n            let spaces = bigTab - (count % bigTab);\n            newStr += ' '.repeat(spaces);\n            count += spaces;\n        } else {\n            newStr += str[i];\n            count++;\n        }\n    }\n    return newStr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(`1  \t\t\t3`),\"1\\t3\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t2\\t4\\t\\t\\t\\t\\t\\t\\t3\\t6\\t\\t\\t\\t\\t\\t\\t4\\t8\\t\\t\\t\\t\\t\\t\\t5\\t10\\t\\t\\t\\t\\t\\t\\t\\t6\\t12\\t\\t\\t\\t\\t\\t7\\t14\\t\\t\\t\\t\\t\\t8\\t16\\t\\t\\t\\t\\t\\t9\\t18\\t\\t\\t\\t\\t\\t10\\t20\\t\\t\\t\\t\\t11\\t22\\t\\t\\t\\t12\\t24\\t\\t\\t\\t13\\t26\\t\\t\\t\\t14\\t28\\t\\t\\t\\t15\\t30\\t\\t\\t\\t\\t16\\t32\\t\\t\\t\\t\\t17\\t34\\t\\t\\t\\t18\\t36\\t\\t\\t\\t\\t19\\t38\\t\\t\\t\\t\\t20\\t40\\t\\t\\t\\t21\\t42\\t\\t\\t\\t22\\t44\\t\\t\\t\\t23\\t46\\t\\t\\t\\t24\\t48\\t\\t\\t\\t25\\t50\\t\\t\\t\\t\\t26\\t52\\t\\t\\t\\t\\t27\\t56\\t\\t\\t\\t\\t28\\t62\\t\\t\\t\\t\\t29\\t66\\t\\t\\t\\t\\t30\\t72\\t\\t\\t\\t\\t31\\t82\\t\\t\\t\\t\\t32\\t84\\t\\t\\t\\t\\t33\\t86\\t\\t\\t\\t\\t34\\n\"\n}\n\n\n\"1\\t3\\t\\t\\t\\t\\t);\n}\n\ntest();\n\n",
        "answer": "\"1\\t3\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t2\\t4\\t\\t\\t\\t\\t\\t\\t3\\t6\\t\\t\\t\\t\\t\\t\\t4\\t8\\t\\t\\t\\t\\t\\t\\t5\\t10\\t\\t\\t\\t\\t\\t\\t\\t6\\t12\\t\\t\\t\\t\\t\\t7\\t14\\t\\t\\t\\t\\t\\t8\\t16\\t\\t\\t\\t\\t\\t9\\t18\\t\\t\\t\\t\\t\\t10\\t20\\t\\t\\t\\t\\t11\\t22\\t\\t\\t\\t12\\t24\\t\\t\\t\\t13\\t26\\t\\t\\t\\t14\\t28\\t\\t\\t\\t15\\t30\\t\\t\\t\\t\\t16\\t32\\t\\t\\t\\t\\t17\\t34\\t\\t\\t\\t18\\t36\\t\\t\\t\\t\\t19\\t38\\t\\t\\t\\t\\t20\\t40\\t\\t\\t\\t21\\t42\\t\\t\\t\\t22\\t44\\t\\t\\t\\t23\\t46\\t\\t\\t\\t24\\t48\\t\\t\\t\\t25\\t50\\t\\t\\t\\t\\t26\\t52\\t\\t\\t\\t\\t27\\t56\\t\\t\\t\\t\\t28\\t62\\t\\t\\t\\t\\t29\\t66\\t\\t\\t\\t\\t30\\t72\\t\\t\\t\\t\\t31\\t82\\t\\t\\t\\t\\t32\\t84\\t\\t\\t\\t\\t33\\t86\\t\\t\\t\\t\\t34\\n\"\n}\n\n\n\"1\\t3\\t\\t\\t\\t\\t"
    },
    {
        "id": 439,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'coscifysu'\n\nshould loosely deep-equal\n\n'cosifsyu'\n    at test (/tmp/tmpau7wa780.js:13:10)\n    at Object.<anonymous> (/tmp/tmpau7wa780.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'coscifysu',\n  expected: 'cosifsyu',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(value){\n    var parts = value.split(' ').filter(function(_, index) {\n        return index % 2 === 0;\n    });\n    return parts.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"coscifysu\"),\"cosifsyu\");\n}\n\ntest();\n\n",
        "answer": "\"cosifsyu\""
    },
    {
        "id": 440,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'no'\n\nshould loosely deep-equal\n\n'yes'\n    at test (/tmp/tmp_i67tyt0.js:14:10)\n    at Object.<anonymous> (/tmp/tmp_i67tyt0.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'no',\n  expected: 'yes',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    if (!isNaN(text) && !text.includes('.')) {\n        return 'yes';\n    } else {\n        return 'no';\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"abc\"),\"yes\");\n}\n\ntest();\n\n",
        "answer": "\"yes\""
    },
    {
        "id": 441,
        "res": true,
        "code": "\nfunction f(base, k, v){\n    base[k] = v;\n    return base;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({37: \"forty-five\"}, \"23\", \"what?\"),{37: \"forty-five\", 23: \"what?\"});\n}\n\ntest();\n\n",
        "answer": "{37: \"forty-five\", 23: \"what?\"}"
    },
    {
        "id": 442,
        "res": true,
        "code": "\nfunction f(lst){\n    let res = [];\n    for(let i = 0; i < lst.length; i++){\n        if (lst[i] % 2 === 0){\n            res.push(lst[i]);\n        }\n    }\n\n    return lst.slice();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n}\n\ntest();\n\n",
        "answer": "[1, 2, 3, 4]"
    },
    {
        "id": 443,
        "res": true,
        "code": "\nfunction f(text){\n    for(let i=0; i<text.length; i++){\n        if(text[i] === ' '){\n            text = text.trimLeft();\n        }else{\n            text = text.replace('cd', text[i]);\n        }\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"lorem ipsum\"),\"lorem ipsum\");\n}\n\ntest();\n\n",
        "answer": "\"lorem ipsum\""
    },
    {
        "id": 444,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  -2,\n  2,\n  -5\n]\n\nshould loosely deep-equal\n\n[\n  -5,\n  3,\n  -2,\n  -3,\n  -1,\n  3,\n  5\n]\n    at test (/tmp/tmp_5h43b_j.js:14:10)\n    at Object.<anonymous> (/tmp/tmp_5h43b_j.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, -2, 2, -5 ],\n  expected: [\n    -5, 3, -2, -3,\n    -1, 3,  5\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    let count = nums.length;\n    for (let i = count - 1; i > 0; i -= 2) {\n        nums.splice(i, 0, nums.shift() + nums.shift());\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([-5, 3, -2, -3, -1, 3, 5]),[-5, 3, -2, -3, -1, 3, 5]);\n}\n\ntest();\n\n",
        "answer": "[-5, 3, -2, -3, -1, 3, 5]"
    },
    {
        "id": 445,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Carrot,  Banana,  and Strawberry'\n\nshould loosely deep-equal\n\n'Carrot, Banana, and Strawberry'\n    at test (/tmp/tmpu5h1t26n.js:15:10)\n    at Object.<anonymous> (/tmp/tmpu5h1t26n.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Carrot,  Banana,  and Strawberry',\n  expected: 'Carrot, Banana, and Strawberry',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(names){\n    let parts = names.split(',');\n    for(let i=0; i<parts.length; i++){\n        parts[i] = parts[i].replace(' and', '+').split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ').replace('+', ' and');\n    }\n    return parts.join(', ');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"carrot, banana, and strawberry\"),\"Carrot, Banana, and Strawberry\");\n}\n\ntest();\n\n",
        "answer": "\"Carrot, Banana, and Strawberry\""
    },
    {
        "id": 446,
        "res": true,
        "code": "\nfunction f(array){\n    let l = array.length;\n    if (l % 2 === 0) {\n        array = [];\n    } else {\n        array.reverse();\n    }\n    return array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([]),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 447,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'||a'\n\nshould loosely deep-equal\n\n'a'\n    at test (/tmp/tmpfoi3tkk0.js:19:10)\n    at Object.<anonymous> (/tmp/tmpfoi3tkk0.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '||a',\n  expected: 'a',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, tab_size){\n    let res = '';\n    text = text.replace(/\\t/g, ' '.repeat(tab_size-1));\n    for(let i = 0; i < text.length; i++) {\n        if(text[i] === ' ') {\n            res += '|';\n        } else {\n            res += text[i];\n        }\n    }\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(`\ta`, 3),\"a\");\n}\n\ntest();\n\n",
        "answer": "\"a\""
    },
    {
        "id": 448,
        "res": true,
        "code": "\nfunction f(text, suffix){\n    if(suffix === ''){\n        suffix = null;\n    }\n    return text.endsWith(suffix);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"uMeGndkGh\", \"kG\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 449,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpvyfhng_n.js:15:10)\n    at Object.<anonymous> (/tmp/tmpvyfhng_n.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(x){\n    let n = x.length;\n    let i = 0;\n    while (i < n && !isNaN(x[i])) {\n        i++;\n    }\n    return i === n;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"1\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 450,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'K KBz'\n\nshould loosely deep-equal\n\n'bK aM dL lI nA'\n    at test (/tmp/tmpgfhl2klm.js:14:10)\n    at Object.<anonymous> (/tmp/tmpgfhl2klm.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'K KBz',\n  expected: 'bK aM dL lI nA',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(strs){\n    strs = strs.split(' ');\n    for (let i = 1; i < strs.length; i += 2) {\n        strs[i] = strs[i].split('').reverse().join('');\n    }\n    return strs.join(' ');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"K zBK\"),\"bK aM dL lI nA\");\n}\n\ntest();\n\n",
        "answer": "\"bK aM dL lI nA\""
    },
    {
        "id": 451,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'n'\n\nshould loosely deep-equal\n\n'p'\n    at test (/tmp/tmpr9kybdut.js:17:10)\n    at Object.<anonymous> (/tmp/tmpr9kybdut.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'n',\n  expected: 'p',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, char){\n    text = text.split('');\n    for (let i = 0; i < text.length; i++) {\n        if (text[i] === char) {\n            text.splice(i, 1);\n            return text.join('');\n        }\n    }\n    return text.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"pn\", \"p\"),\"p\");\n}\n\ntest();\n\n",
        "answer": "\"p\""
    },
    {
        "id": 452,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp508nzr05.js:16:10)\n    at Object.<anonymous> (/tmp/tmp508nzr05.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let counter = 0;\n    for(let i = 0; i < text.length; i++){\n        if(text[i].match(/[a-zA-Z]/)){\n            counter++;\n        }\n    }\n    return counter;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"l000*\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 453,
        "res": true,
        "code": "\nfunction f(string, c){\n    return string.endsWith(c);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"wrsch)xjmb8\", \"c\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 454,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{}\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp7lpd_iq4.js:15:10)\n    at Object.<anonymous> (/tmp/tmp7lpd_iq4.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: {},\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(d, count){\n    let new_dict = {};\n    for (let i = 0; i < count; i++) {\n        d = Object.assign({}, d);\n        new_dict = {...d, ...new_dict};\n    }\n    return new_dict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"a\": 2, \"b\": [], \"c\": {}}, 0),undefined);\n}\n\ntest();\n\n",
        "answer": "undefined"
    },
    {
        "id": 455,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'?XyZ'\n\nshould loosely deep-equal\n\n'XyZ'\n    at test (/tmp/tmpf3ct0erx.js:16:10)\n    at Object.<anonymous> (/tmp/tmpf3ct0erx.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '?XyZ',\n  expected: 'XyZ',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let uppers = 0;\n    for(let c of text){\n        if(c === c.toUpperCase()){\n            uppers++;\n        }\n    }\n    return uppers >= 10 ? text.toUpperCase() : text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"?XyZ\"),\"XyZ\");\n}\n\ntest();\n\n",
        "answer": "\"XyZ\""
    },
    {
        "id": 456,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp9hliqbv0.js:10\n  assert.deepEqual(candidate(\"Join us in Hungary\", 4),Join us in Hungary);\n                                                      ^^^^\n\nSyntaxError: missing ) after argument list\n    at wrapSafe (node:internal/modules/cjs/loader:1350:18)\n    at Module._compile (node:internal/modules/cjs/loader:1379:20)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s, tab){\n    return s.replace(/\\t/g, ' '.repeat(tab));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Join us in Hungary\", 4),Join us in Hungary);\n}\n\ntest();\n\n",
        "answer": "Join us in Hungary"
    },
    {
        "id": 457,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  3,\n  1,\n  7,\n  5,\n  6\n]\n    at test (/tmp/tmps8a4mq61.js:19:10)\n    at Object.<anonymous> (/tmp/tmps8a4mq61.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 3, 1, 7, 5, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(nums){\n    let count = Array.from({length: nums.length}, (_, i) => i);\n    while(nums.length > 0){\n        nums.pop();\n        if(count.length > 0){\n            count.shift();\n        }\n    }\n    return nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([3, 1, 7, 5, 6]),[3, 1, 7, 5, 6]);\n}\n\ntest();\n\n",
        "answer": "[3, 1, 7, 5, 6]"
    },
    {
        "id": 458,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pppo4pIp'\n\nshould loosely deep-equal\n\n'Im'\n    at test (/tmp/tmp6jrqjyhr.js:14:10)\n    at Object.<anonymous> (/tmp/tmp6jrqjyhr.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pppo4pIp',\n  expected: 'Im',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, search_chars, replace_chars){\n    const trans_table = {};\n    for (let i = 0; i < search_chars.length; i++) {\n        trans_table[search_chars.charCodeAt(i)] = replace_chars.charCodeAt(i);\n    }\n    return text.replace(new RegExp('[' + search_chars + ']', 'g'), c => String.fromCharCode(trans_table[c.charCodeAt(0)]));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"mmm34mIm\", \"mm3\", \",po\"),\"Im\");\n}\n\ntest();\n\n",
        "answer": "\"Im\""
    },
    {
        "id": 459,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  ae: 'f',\n  vzjmc: 'b'\n}\n\nshould loosely deep-equal\n\n{\n  a: 0,\n  b: 5,\n  c: 12,\n  e: 15,\n  f: 18\n}\n    at test (/tmp/tmppjnfqwvt.js:14:10)\n    at Object.<anonymous> (/tmp/tmppjnfqwvt.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { vzjmc: 'b', ae: 'f' },\n  expected: { a: 0, b: 5, c: 12, e: 15, f: 18 },\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(arr, d){\n    for(let i = 1; i < arr.length; i += 2){\n        d[arr[i]] = arr[i-1];\n    }\n    return d;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"b\", \"vzjmc\", \"f\", \"ae\", \"0\"], {}),{a: 0, b: 5, c: 12, e: 15, f: 18});\n}\n\ntest();\n\n",
        "answer": "{a: 0, b: 5, c: 12, e: 15, f: 18}"
    },
    {
        "id": 460,
        "res": true,
        "code": "\nfunction f(text, amount){\n    let length = text.length;\n    let pre_text = '|';\n\n    if (amount >= length) {\n        let extra_space = amount - length;\n        pre_text += ' '.repeat(Math.floor(extra_space / 2));\n        return pre_text + text + pre_text;\n    }\n    \n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"GENERAL NAGOOR\", 5),\"GENERAL NAGOOR\");\n}\n\ntest();\n\n",
        "answer": "\"GENERAL NAGOOR\""
    },
    {
        "id": 461,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz33m72mx.js:10:10)\n    at Object.<anonymous> (/tmp/tmpz33m72mx.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, search){\n    return search.startsWith(text) || false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"123\", \"123eenhas0\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 462,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'oooooooo'\n\nshould loosely deep-equal\n\n'hello'\n    at test (/tmp/tmp728nykbl.js:15:10)\n    at Object.<anonymous> (/tmp/tmp728nykbl.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'oooooooo',\n  expected: 'hello',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, value){\n    var length = text.length;\n    var letters = text.split(\"\");\n    if (!letters.includes(value)) {\n        value = letters[0];\n    }\n    return value.repeat(length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ldebgp o\", \"o\"),\"hello\");\n}\n\ntest();\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 463,
        "res": 0
    },
    {
        "id": 464,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-50\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpbutm83ty.js:22:10)\n    at Object.<anonymous> (/tmp/tmpbutm83ty.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -50,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(ans){\n    if(!isNaN(ans) && parseInt(ans) >= 0 && parseInt(ans) % 1 === 0){\n        let total = parseInt(ans) * 4 - 50;\n        let count = 0;\n        const charList = ans.split('');\n        for(let i = 0; i < charList.length; i++){\n            if(!['0', '2', '4', '6', '8'].includes(charList[i])){\n                count += 1;\n            }\n        }\n        total -= count * 100;\n        return total;\n    }\n    return 'NAN';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 465,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  'wise king': 'north',\n  'young king': 'north'\n}\n\nshould loosely deep-equal\n\n{\n  north: 'wise king',\n  south: 'young king'\n}\n    at test (/tmp/tmp3jiw8d87.js:19:10)\n    at Object.<anonymous> (/tmp/tmp3jiw8d87.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { 'wise king': 'north', 'young king': 'north' },\n  expected: { north: 'wise king', south: 'young king' },\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(seq, value){\n    let roles = {};\n    seq.forEach(item => {\n        roles[item] = 'north';\n    });\n    if (value) {\n        value.split(', ').forEach(key => {\n            roles[key.trim()] = 'north';\n        });\n    }\n    return roles;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"wise king\", \"young king\"], \"\"),{north: \"wise king\", south: \"young king\"});\n}\n\ntest();\n\n",
        "answer": "{north: \"wise king\", south: \"young king\"}"
    },
    {
        "id": 466,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'-----'\n\nshould loosely deep-equal\n\n'th'\n    at test (/tmp/tmp_1_8keci.js:16:10)\n    at Object.<anonymous> (/tmp/tmp_1_8keci.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '-----',\n  expected: 'th',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text) {\n    let length = text.length;\n    let index = 0;\n    while (index < length && /\\s/.test(text[index])) {\n        index += 1;\n    }\n    return text.substring(index, index + 5);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(`-----\t\n\tth\n-----`),\"th\");\n}\n\ntest();\n\n",
        "answer": "\"th\""
    },
    {
        "id": 467,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{}\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpclxqfisn.js:15:10)\n    at Object.<anonymous> (/tmp/tmpclxqfisn.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: {},\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    let copy = Object.assign({}, nums);\n    let newDict = {};\n    for (let k in copy) {\n        newDict[k] = copy[k].length;\n    }\n    return newDict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({}),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 468,
        "res": true,
        "code": "\nfunction f(a, b, n){\n    let result = m = b;\n    for (let i = 0; i < n; i++) {\n        if (m) {\n            [a, m] = [a.replace(m, ''), null];\n            result = m = b;\n        }\n    }\n    return a.split(b).join(result);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"unrndqafi\", \"c\", 2),\"unrndqafi\");\n}\n\ntest();\n\n",
        "answer": "\"unrndqafi\""
    },
    {
        "id": 469,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'syduyi'\n\nshould loosely deep-equal\n\n'yaui'\n    at test (/tmp/tmpzgkpbnk_.js:18:10)\n    at Object.<anonymous> (/tmp/tmpzgkpbnk_.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'syduyi',\n  expected: 'yaui',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, position, value){\n    let length = text.length;\n    let index = position % length;\n    if (position < 0) {\n        index = Math.floor(length / 2);\n    }\n    let new_text = text.split('');\n    new_text.splice(index, 0, value);\n    new_text.splice(length - 1, 1);\n    return new_text.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"sduyai\", 1, \"y\"),\"yaui\");\n}\n\ntest();\n\n",
        "answer": "\"yaui\""
    },
    {
        "id": 470,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'B',\n  'D'\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpjck91pm5.js:18:10)\n    at Object.<anonymous> (/tmp/tmpjck91pm5.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'B', 'D' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(number){\n    let transl = {'A': 1, 'B': 2, 'C': 3, 'D': 4, 'E': 5};\n    let result = [];\n    for (let key in transl) {\n        let value = transl[key];\n        if (value % number === 0) {\n            result.push(key);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(2),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 471,
        "res": true,
        "code": "\nfunction f(val, text){\n    let indices = [];\n    for (let index = 0; index < text.length; index++) {\n        if (text[index] === val) {\n            indices.push(index);\n        }\n    }\n    if (indices.length === 0) {\n        return -1;\n    } else {\n        return indices[0];\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"o\", \"fnmart\"),-1);\n}\n\ntest();\n\n",
        "answer": "-1"
    },
    {
        "id": 472,
        "res": true,
        "code": "\nfunction f(text) {\n    let d = {};\n    for (let char of text.replace(/-/g, '').toLowerCase()) {\n        d[char] = (char in d) ? d[char] + 1 : 1;\n    }\n    let sortedEntries = Object.entries(d).sort((a, b) => a[1] - b[1]);\n    return sortedEntries.map(entry => entry[1]);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"x--y-z-5-C\"),[1, 1, 1, 1, 1]);\n}\n\ntest();\n\n",
        "answer": "[1, 1, 1, 1, 1]"
    },
    {
        "id": 473,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'scedvtvtkwqfqn'\n\nshould loosely deep-equal\n\n'svotqfokwqn'\n    at test (/tmp/tmp8m9_812v.js:22:10)\n    at Object.<anonymous> (/tmp/tmp8m9_812v.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'scedvtvtkwqfqn',\n  expected: 'svotqfokwqn',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text, value){\n    let indexes = [];\n    for(let i = 0; i < text.length; i++){\n        if(text[i] === value){\n            indexes.push(i);\n        }\n    }\n    let new_text = text.split('');\n    indexes.sort((a, b) => b - a); // reverse sort to avoid index shifting issue\n    for(let i of indexes){\n        new_text.splice(i, 1);\n    }\n    return new_text.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"scedvtvotkwqfoqn\", \"o\"),\"svotqfokwqn\");\n}\n\ntest();\n\n",
        "answer": "\"svotqfokwqn\""
    },
    {
        "id": 474,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'#[)[]>[^e>\\n 8'\n\nshould loosely deep-equal\n\n[\n  3,\n  -5\n]\n    at test (/tmp/tmpfe836cr9.js:16:10)\n    at Object.<anonymous> (/tmp/tmpfe836cr9.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '#[)[]>[^e>\\n 8',\n  expected: [ 3, -5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(txt, marker) {\n    let a = [];\n    let lines = txt.split('\\n');\n    for (let line of lines) {\n        a.push(line.padStart((line.length + marker) / 2).padEnd(marker));\n    }\n    return a.join('\\n');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(`#[)[]>[^e>\n 8`, -5),[3, -5]);\n}\n\ntest();\n\n",
        "answer": "[3, -5]"
    },
    {
        "id": 475,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpp8fygwm7.js:13:10)\n    at Object.<anonymous> (/tmp/tmpp8fygwm7.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array, index){\n    if (index < 0) {\n        index = array.length + index;\n    }\n    return array[index];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1], 0),undefined);\n}\n\ntest();\n\n",
        "answer": "undefined"
    },
    {
        "id": 476,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\n'booty'\n    at test (/tmp/tmp2w20736v.js:21:10)\n    at Object.<anonymous> (/tmp/tmp2w20736v.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: 'booty',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(a, split_on){\n    let t = a.split(' ');\n    let b = [];\n    for (let i of t) {\n        for (let j of i) {\n            b.push(j);\n        }\n    }\n    if (b.includes(split_on)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"booty boot-boot bootclass\", \"k\"),\"booty\");\n}\n\ntest();\n\n",
        "answer": "\"booty\""
    },
    {
        "id": 477,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'xduaisf'\n]\n\nshould loosely deep-equal\n\n'xduaisf'\n    at test (/tmp/tmprgwa_eem.js:19:10)\n    at Object.<anonymous> (/tmp/tmprgwa_eem.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'xduaisf' ],\n  expected: 'xduaisf',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text){\n    let splittedText = text.split('|');\n    let problem = splittedText.pop();\n    let topic = splittedText.length > 0 ? splittedText.join('|') : '';\n\n    if (problem === 'r') {\n        problem = topic.replace(/u/g, 'p');\n    }\n\n    return [topic, problem];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"|xduaisf\"),\"xduaisf\");\n}\n\ntest();\n\n",
        "answer": "\"xduaisf\""
    },
    {
        "id": 478,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  ' ': 1,\n  e: 2,\n  m: 2,\n  o: 2,\n  w: 2\n}\n\nshould loosely deep-equal\n\n{\n  meow: 2\n}\n    at test (/tmp/tmp5_pjgvx3.js:15:10)\n    at Object.<anonymous> (/tmp/tmp5_pjgvx3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { m: 2, e: 2, o: 2, w: 2, ' ': 1 },\n  expected: { meow: 2 },\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(sb){\n    let d = {};\n    for(let i = 0; i < sb.length; i++){\n        let s = sb[i];\n        d[s] = (d[s] || 0) + 1;\n    }\n    return d;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"meow meow\"),{ \"meow\": 2, \"meow\": 2 });\n}\n\ntest();\n\n",
        "answer": "{ \"meow\": 2, \"meow\": 2 }"
    },
    {
        "id": 479,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  6\n]\n    at test (/tmp/tmph9k8uulg.js:12:10)\n    at Object.<anonymous> (/tmp/tmph9k8uulg.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3 ],\n  expected: [ 1, 2, 3, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums, pop1, pop2){\n    nums.splice(pop1 - 1, 1);\n    nums.splice(pop2 - 1, 1);\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 5, 2, 3, 6], 2, 4),[1, 2, 3, 6]);\n}\n\ntest();\n\n",
        "answer": "[1, 2, 3, 6]"
    },
    {
        "id": 480,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely deep-equal\n\n'm'\n    at test (/tmp/tmpqto5mlsu.js:20:10)\n    at Object.<anonymous> (/tmp/tmpqto5mlsu.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'm',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s, c1, c2){\n    if (s === ''){\n        return s;\n    }\n    let ls = s.split(c1);\n    for (let index = 0; index < ls.length; index++){\n        let item = ls[index];\n        if (item.includes(c1)){\n            ls[index] = item.replace(c1, c2);\n        }\n    }\n    return ls.join(c1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"\", \"mi\", \"siast\"),\"m\");\n}\n\ntest();\n\n",
        "answer": "\"m\""
    },
    {
        "id": 481,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  1,\n  2,\n  3\n]\n    at test (/tmp/tmptucatuhy.js:19:10)\n    at Object.<anonymous> (/tmp/tmptucatuhy.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1 ],\n  expected: [ 1, 1, 2, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(values, item1, item2){\n    if (values[values.length - 1] === item2) {\n        if (!values.slice(1).includes(values[0])) {\n            values.push(values[0]);\n        }\n    } else if (values[values.length - 1] === item1) {\n        if (values[0] === item2) {\n            values.push(values[0]);\n        }\n    }\n    return values;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 1], 2, 3),[1, 1, 2, 3]);\n}\n\ntest();\n\n",
        "answer": "[1, 1, 2, 3]"
    },
    {
        "id": 482,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Because it intrigues them'\n\nshould loosely deep-equal\n\n'Because it'\n    at test (/tmp/tmpm9v5ifkv.js:10:10)\n    at Object.<anonymous> (/tmp/tmpm9v5ifkv.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Because it intrigues them',\n  expected: 'Because it',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    return text.replace(/\\\\\"/g, '\"');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Because it intrigues them\"),\"Because it\");\n}\n\ntest();\n\n",
        "answer": "\"Because it\""
    },
    {
        "id": 483,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n' '\n\nshould loosely deep-equal\n\n'a a'\n    at test (/tmp/tmps6mctpj7.js:10:10)\n    at Object.<anonymous> (/tmp/tmps6mctpj7.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ' ',\n  expected: 'a a',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, char){\n    return text.split(char).join(' ');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"a\", \"a\"),\"a a\");\n}\n\ntest();\n\n",
        "answer": "\"a a\""
    },
    {
        "id": 484,
        "res": 0
    },
    {
        "id": 485,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'avdropj gsd  '\n\nshould loosely deep-equal\n\n'gnaduf j'\n    at test (/tmp/tmpcm9m81n3.js:15:10)\n    at Object.<anonymous> (/tmp/tmpcm9m81n3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'avdropj gsd  ',\n  expected: 'gnaduf j',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(tokens){\n    tokens = tokens.split(' ');\n    if (tokens.length === 2) {\n        tokens.reverse();\n    }\n    let result = tokens[0].padEnd(5) + ' ' + tokens[1].padEnd(5);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"gsd avdropj\"),\"gnaduf j\");\n}\n\ntest();\n\n",
        "answer": "\"gnaduf j\""
    },
    {
        "id": 486,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  '1': 1,\n  '2': 4,\n  '3': 9\n}\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  9\n]\n    at test (/tmp/tmp_m6tu5sq.js:14:10)\n    at Object.<anonymous> (/tmp/tmp_m6tu5sq.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { '1': 1, '2': 4, '3': 9 },\n  expected: [ 1, 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(dic){\n    let dic_op = Object.assign({}, dic);\n    for (let key in dic) {\n        dic_op[key] = dic[key] * dic[key];\n    }\n    return dic_op;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({1: 1, 2: 2, 3: 3}),[1, 4, 9]);\n}\n\ntest();\n\n",
        "answer": "[1, 4, 9]"
    },
    {
        "id": 487,
        "res": true,
        "code": "\nfunction f(dict){\n    let even_keys = [];\n    for (let key in dict) {\n        if (key % 2 === 0) {\n            even_keys.push(parseInt(key));\n        }\n    }\n    return even_keys;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({4: \"a\"}),[4]);\n}\n\ntest();\n\n",
        "answer": "[4]"
    },
    {
        "id": 488,
        "res": 0
    },
    {
        "id": 489,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cifysu'\n\nshould loosely deep-equal\n\n'cos'\n    at test (/tmp/tmpdotxbefc.js:10:10)\n    at Object.<anonymous> (/tmp/tmpdotxbefc.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cifysu',\n  expected: 'cos',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, value){\n    return text.toLowerCase().startsWith(value.toLowerCase()) ? text.slice(value.length) : text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"coscifysu\", \"cos\"),\"cos\");\n}\n\ntest();\n\n",
        "answer": "\"cos\""
    },
    {
        "id": 490,
        "res": 0
    },
    {
        "id": 491,
        "res": 0
    },
    {
        "id": 492,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'abbkebaniuwurzvr'\n\nshould loosely deep-equal\n\n'bierwurzvr'\n    at test (/tmp/tmpe7wsws3l.js:18:10)\n    at Object.<anonymous> (/tmp/tmpe7wsws3l.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'abbkebaniuwurzvr',\n  expected: 'bierwurzvr',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, value){\n    let ls = text.split('');\n    if (ls.filter(x => x === value).length % 2 === 0) {\n        while (ls.includes(value)) {\n            ls.splice(ls.indexOf(value), 1);\n        }\n    } else {\n        ls = [];\n    }\n    return ls.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"abbkebaniuwurzvr\", \"m\"),\"bierwurzvr\");\n}\n\ntest();\n\n",
        "answer": "\"bierwurzvr\""
    },
    {
        "id": 493,
        "res": 0
    },
    {
        "id": 494,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'001'\n\nshould loosely deep-equal\n\n'100'\n    at test (/tmp/tmpqp3juweu.js:15:10)\n    at Object.<anonymous> (/tmp/tmpqp3juweu.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '001',\n  expected: '100',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(num, l){\n    let t = \"\";\n    while (l > num.length) {\n        t += '0';\n        l--;\n    }\n    return t + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"1\", 3),\"100\");\n}\n\ntest();\n\n",
        "answer": "\"100\""
    },
    {
        "id": 495,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a1234',\n  'år'\n]\n\nshould loosely deep-equal\n\n'a1234'\n    at test (/tmp/tmpfdggyc32.js:16:10)\n    at Object.<anonymous> (/tmp/tmpfdggyc32.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a1234', 'år' ],\n  expected: 'a1234',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s){\n    if (s.slice(-5).match(/^[\\x00-\\x7F]+$/)) {\n        return [s.slice(-5), s.slice(0, 3)];\n    } else if (s.slice(0, 5).match(/^[\\x00-\\x7F]+$/)) {\n        return [s.slice(0, 5), s.slice(-2)];\n    } else {\n        return s;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"a1234år\"),\"a1234\");\n}\n\ntest();\n\n",
        "answer": "\"a1234\""
    },
    {
        "id": 496,
        "res": 0
    },
    {
        "id": 497,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '4',\n  '4'\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  5,\n  6,\n  7\n]\n    at test (/tmp/tmppvr6rwrw.js:14:10)\n    at Object.<anonymous> (/tmp/tmppvr6rwrw.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '4', '4' ],\n  expected: [ 4, 5, 6, 7 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(n){\n    let b = n.toString().split('');\n    for (let i = 2; i < b.length; i++) {\n        b[i] += '+';\n    }\n    return b;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(44),[4, 5, 6, 7]);\n}\n\ntest();\n\n",
        "answer": "[4, 5, 6, 7]"
    },
    {
        "id": 498,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  2,\n  3,\n  2,\n  3,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  3,\n  2,\n  3,\n  2\n]\n    at test (/tmp/tmp8mdk4znf.js:11:10)\n    at Object.<anonymous> (/tmp/tmp8mdk4znf.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 2, 3, 2, 3, 3 ],\n  expected: [ 2, 3, 2, 3, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums, idx, added){\n    nums.splice(idx, 0, added);\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([2, 2, 2, 3, 3], 2, 3),[2, 3, 2, 3, 2]);\n}\n\ntest();\n\n",
        "answer": "[2, 3, 2, 3, 2]"
    },
    {
        "id": 499,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp4q4g120b.js:13\n  assert.deepEqual(candidate(\"magazine\", 25, \".\"),\"m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.);\nn\nSyntaxError: Invalid or unexpected token\n    at wrapSafe (node:internal/modules/cjs/loader:1350:18)\n    at Module._compile (node:internal/modules/cjs/loader:1379:20)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text, length, fillchar){\n    let size = text.length;\n    let start = Math.ceil((length - size) / 2);\n    return fillchar.repeat(start) + text + fillchar.repeat(length - size - start);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"magazine\", 25, \".\"),\"m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.);\n}\n\ntest();\n\n",
        "answer": "\"m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m.a.m."
    },
    {
        "id": 500,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'd'\n\nshould loosely deep-equal\n\n'dsj'\n    at test (/tmp/tmpt7bvcae4.js:10:10)\n    at Object.<anonymous> (/tmp/tmpt7bvcae4.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'd',\n  expected: 'dsj',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, delim){\n    return text.slice(0, text.split('').reverse().join('').indexOf(delim)).split('').reverse().join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"dsj osq wi w\", \" \"),\"dsj\");\n}\n\ntest();\n\n",
        "answer": "\"dsj\""
    },
    {
        "id": 501,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'jqjfj zm'\n\nshould loosely deep-equal\n\n'j'\n    at test (/tmp/tmpfe9zq6vb.js:17:10)\n    at Object.<anonymous> (/tmp/tmpfe9zq6vb.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'jqjfj zm',\n  expected: 'j',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, char){\n    let index = text.lastIndexOf(char);\n    let result = text.split('');\n    while (index > 0) {\n        result[index] = result[index - 1];\n        result[index - 1] = char;\n        index -= 2;\n    }\n    return result.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"qpfi jzm\", \"j\"),\"j\");\n}\n\ntest();\n\n",
        "answer": "\"j\""
    },
    {
        "id": 502,
        "res": true,
        "code": "\nfunction f(name){\n    return name.split(' ').join('*');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Fred Smith\"),\"Fred*Smith\");\n}\n\ntest();\n\n",
        "answer": "\"Fred*Smith\""
    },
    {
        "id": 503,
        "res": true,
        "code": "\nfunction f(d) {\n    let result = new Array(Object.keys(d).length).fill(null);\n    let a = 0;\n    let b = 0;\n    while (Object.keys(d).length > 0) {\n        result[a] = Object.entries(d).splice(a == b ? a : b, 1)[0];\n        a = b;\n        b = (b + 1) % result.length;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({}),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 504,
        "res": true,
        "code": "\nfunction f(values){\n    values.sort((a, b) => a - b);\n    return values;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 1, 1, 1]),[1, 1, 1, 1]);\n}\n\ntest();\n\n",
        "answer": "[1, 1, 1, 1]"
    },
    {
        "id": 505,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely deep-equal\n\n'4/0-209'\n    at test (/tmp/tmpmbss_g_4.js:16:10)\n    at Object.<anonymous> (/tmp/tmpmbss_g_4.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '4/0-209',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(string){\n    while (string) {\n        if (string.slice(-1).match(/[a-zA-Z]/)) {\n            return string;\n        }\n        string = string.slice(0, -1);\n    }\n    return string;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"--4/0-209\"),\"4/0-209\");\n}\n\ntest();\n\n",
        "answer": "\"4/0-209\""
    },
    {
        "id": 506,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'snts'\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpye3_tb0n.js:23:10)\n    at Object.<anonymous> (/tmp/tmpye3_tb0n.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'snts',\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(n){\n    let p = '';\n    if(n % 2 === 1){\n        p += 'sn';\n    } else {\n        return n * n;\n    }\n    for(let x = 1; x <= n; x++){\n        if(x % 2 === 0){\n            p += 'to';\n        } else {\n            p += 'ts';\n        }\n    }\n    return p;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(1),1);\n}\n\ntest();\n\n",
        "answer": "1"
    },
    {
        "id": 507,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n-1\n    at test (/tmp/tmp4rjn6tz0.js:11:10)\n    at Object.<anonymous> (/tmp/tmp4rjn6tz0.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: -1,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, search){\n    var result = text.toLowerCase();\n    return result.indexOf(search.toLowerCase());\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"car hat\", \"car\"),-1);\n}\n\ntest();\n\n",
        "answer": "-1"
    },
    {
        "id": 508,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'ertubwi'\n\nshould loosely deep-equal\n\n'ertubiw'\n    at test (/tmp/tmplda1nph_.js:15:10)\n    at Object.<anonymous> (/tmp/tmplda1nph_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'ertubwi',\n  expected: 'ertubiw',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, sep, maxsplit){\n    let splitted = text.split(sep, maxsplit + 1);\n    let length = splitted.length;\n    let new_splitted = splitted.slice(0, Math.floor(length / 2));\n    new_splitted.reverse();\n    new_splitted = new_splitted.concat(splitted.slice(Math.floor(length / 2)));\n    return new_splitted.join(sep);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ertubwi\", \"p\", 5),\"ertubiw\");\n}\n\ntest();\n\n",
        "answer": "\"ertubiw\""
    },
    {
        "id": 509,
        "res": true,
        "code": "\nfunction f(value, width){\n    if (value >= 0) {\n        return value.toString().padStart(width, '0');\n    }\n\n    if (value < 0) {\n        return '-' + Math.abs(value).toString().padStart(width, '0');\n    }\n    return '';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(5, 1),5);\n}\n\ntest();\n\n",
        "answer": "5"
    },
    {
        "id": 510,
        "res": true,
        "code": "\n\nfunction f(a, b, c, d, e){\n    let key = d;\n    let num;\n    if(key in a){\n        num = a[key];\n        delete a[key];\n    }\n    if(b>3){\n        return c.split('').join('');\n    }\n    else{\n        return num;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({7: \"ii5p\", 1: \"o3Jwus\", 3: \"lot9L\", 2: \"04g\", 9: \"Wjf\", 8: \"5b\", 0: \"te6\", 5: \"flLO\", 6: \"jq\", 4: \"vfa0tW\"}, 4, \"Wy\", \"Wy\", 1.0),\"Wy\");\n}\n\ntest();\n\n",
        "answer": "\"Wy\""
    },
    {
        "id": 511,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  c: '',\n  ca: 'cx',\n  ct: ''\n}\n\nshould loosely deep-equal\n\n'cx'\n    at test (/tmp/tmpsqsnqdk3.js:13:10)\n    at Object.<anonymous> (/tmp/tmpsqsnqdk3.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { ct: '', c: '', ca: 'cx' },\n  expected: 'cx',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(fields, update_dict){\n    let di = {};\n    fields.forEach(x => di[x] = '');\n    Object.assign(di, update_dict);\n    return di;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"ct\", \"c\", \"ca\"], {\"ca\": \"cx\"}),\"cx\");\n}\n\ntest();\n\n",
        "answer": "\"cx\""
    },
    {
        "id": 512,
        "res": true,
        "code": "\nfunction f(s){\n    return s.length === s.split('0').length + s.split('1').length - 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"102\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 513,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  0,\n  2\n]\n    at test (/tmp/tmpmi7q_aqw.js:19:10)\n    at Object.<anonymous> (/tmp/tmpmi7q_aqw.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 0, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array){\n    while(array.includes(-1)){\n        array.splice(array.indexOf(-1), 1);\n    }\n    while(array.includes(0)){\n        array.pop();\n    }\n    while(array.includes(1)){\n        array.splice(array.indexOf(1), 1);\n    }\n    return array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([0, 2]),[0, 2]);\n}\n\ntest();\n\n",
        "answer": "[0, 2]"
    },
    {
        "id": 514,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'stew---corn-and-beans-in soup-.'\n\nshould loosely deep-equal\n\n'stew corn and beans in soup'\n    at test (/tmp/tmp_g0jspr1.js:14:10)\n    at Object.<anonymous> (/tmp/tmp_g0jspr1.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'stew---corn-and-beans-in soup-.',\n  expected: 'stew corn and beans in soup',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let words = text.split(' ');\n    for (let i = 0; i < words.length; i++) {\n        text = text.replace(`-${words[i]}`, ' ').replace(`${words[i]}-`, ' ');\n    }\n    return text.replace(/^-+|[- ]+$/g, '');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"-stew---corn-and-beans-in soup-.-\"),\"stew corn and beans in soup\");\n}\n\ntest();\n\n",
        "answer": "\"stew corn and beans in soup\""
    },
    {
        "id": 515,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  10,\n  8,\n  6,\n  4,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  4,\n  6,\n  8,\n  10\n]\n    at test (/tmp/tmpnbzl0l7p.js:13:10)\n    at Object.<anonymous> (/tmp/tmpnbzl0l7p.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 10, 8, 6, 4, 2 ],\n  expected: [ 2, 4, 6, 8, 10 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array){\n    let result = array.slice();\n    result.reverse();\n    result = result.map(item => item * 2);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4, 6, 8, 10]);\n}\n\ntest();\n\n",
        "answer": "[2, 4, 6, 8, 10]"
    },
    {
        "id": 516,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  'condor',\n  'eyes',\n  'gay',\n  'isa'\n]\n    at test (/tmp/tmpqzm6f8ii.js:11:10)\n    at Object.<anonymous> (/tmp/tmpqzm6f8ii.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 'condor', 'eyes', 'gay', 'isa' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(strings, substr){\n    let list = strings.filter(s => s.startsWith(substr));\n    return list.sort((a, b) => a.length - b.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"condor\", \"eyes\", \"gay\", \"isa\"], \"d\"),[\"condor\", \"eyes\", \"gay\", \"isa\"]);\n}\n\ntest();\n\n",
        "answer": "[\"condor\", \"eyes\", \"gay\", \"isa\"]"
    },
    {
        "id": 517,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'SzHjifnzo'\n\nshould loosely deep-equal\n\n'SzHjifnzog'\n    at test (/tmp/tmpczx162x2.js:15:10)\n    at Object.<anonymous> (/tmp/tmpczx162x2.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'SzHjifnzo',\n  expected: 'SzHjifnzog',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    for(let i = text.length - 1; i > 0; i--){\n        if(text[i] !== text[i].toUpperCase()){\n            return text.slice(0, i);\n        }\n    }\n    return '';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"SzHjifnzog\"),\"SzHjifnzog\");\n}\n\ntest();\n\n",
        "answer": "\"SzHjifnzog\""
    },
    {
        "id": 518,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpk7bvbajz.js:10:10)\n    at Object.<anonymous> (/tmp/tmpk7bvbajz.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    return !text.match(/^\\d+$/);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"the speed is -36 miles per hour\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 519,
        "res": 0
    },
    {
        "id": 520,
        "res": true,
        "code": "\nfunction f(album_sales){\n    while(album_sales.length !== 1){\n        album_sales.push(album_sales.shift());\n    }\n    return album_sales[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([6]),6);\n}\n\ntest();\n\n",
        "answer": "6"
    },
    {
        "id": 521,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  77,\n  9,\n  0,\n  2,\n  5,\n  77,\n  4,\n  0,\n  43\n]\n\nshould loosely deep-equal\n\n[\n  43,\n  77,\n  5,\n  2,\n  9,\n  77\n]\n    at test (/tmp/tmpsbq3a06t.js:14:10)\n    at Object.<anonymous> (/tmp/tmpsbq3a06t.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    77, 9, 0,  2, 5,\n    77, 4, 0, 43\n  ],\n  expected: [ 43, 77, 5, 2, 9, 77 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    let m = Math.max(...nums);\n    for (let i = 0; i < m; i++){\n        nums.reverse();\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([43, 0, 4, 77, 5, 2, 0, 9, 77]),[43, 77, 5, 2, 9, 77]);\n}\n\ntest();\n\n",
        "answer": "[43, 77, 5, 2, 9, 77]"
    },
    {
        "id": 522,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0\n]\n    at test (/tmp/tmphm3jd22x.js:12:10)\n    at Object.<anonymous> (/tmp/tmphm3jd22x.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(numbers){\n    let floats = numbers.map(n => n % 1);\n    return floats.includes(1) ? floats : [];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119]),[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n}\n\ntest();\n\n",
        "answer": "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
    },
    {
        "id": 523,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'&nbsp;&nbsp;&nbsp;'\n\nshould loosely deep-equal\n\n' '\n    at test (/tmp/tmpe90fmmjx.js:16:10)\n    at Object.<anonymous> (/tmp/tmpe90fmmjx.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '&nbsp;&nbsp;&nbsp;',\n  expected: ' ',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    text = text.split('');\n    for (let i = text.length - 1; i >= 0; i--) {\n        if (text[i] === ' ') {\n            text[i] = '&nbsp;';\n        }\n    }\n    return text.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"   \"),\" \");\n}\n\ntest();\n\n",
        "answer": "\" \""
    },
    {
        "id": 524,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  '1': 0,\n  '2': 1,\n  '3': 2,\n  '4': 3,\n  '5': 1\n}\n\nshould loosely deep-equal\n\n{\n  '1': 0,\n  '2': 1,\n  '3': 2,\n  '4': 3,\n  '5': 4\n}\n    at test (/tmp/tmp1l4dww58.js:15:10)\n    at Object.<anonymous> (/tmp/tmp1l4dww58.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { '1': 0, '2': 1, '3': 2, '4': 3, '5': 1 },\n  expected: { '1': 0, '2': 1, '3': 2, '4': 3, '5': 4 },\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(dict0){\n    let newDict = Object.assign({}, dict0);\n    let keys = Object.keys(newDict).sort((a, b) => a - b);\n    for (let i = 0; i < keys.length - 1; i++) {\n        dict0[keys[i]] = i;\n    }\n    return dict0;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({2: 5, 4: 1, 3: 5, 1: 3, 5: 1}),{1: 0, 2: 1, 3: 2, 4: 3, 5: 4});\n}\n\ntest();\n\n",
        "answer": "{1: 0, 2: 1, 3: 2, 4: 3, 5: 4}"
    },
    {
        "id": 525,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'TEXT',\n  'CODE'\n]\n\nshould loosely deep-equal\n\n7\n    at test (/tmp/tmpi73lmadi.js:24:10)\n    at Object.<anonymous> (/tmp/tmpi73lmadi.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'TEXT', 'CODE' ],\n  expected: 7,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(c, st, ed){\n    let d = {};\n    let a = 0;\n    let b = 0;\n    for (let x in c) {\n        let y = c[x];\n        d[y] = x;\n        if (y === st) {\n            a = x;\n        }\n        if (y === ed) {\n            b = x;\n        }\n    }\n    let w = d[st];\n    return (a > b) ? [w, b] : [b, w];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"TEXT\": 7, \"CODE\": 3}, 7, 3),7);\n}\n\ntest();\n\n",
        "answer": "7"
    },
    {
        "id": 526,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'rpg'\n\nshould loosely deep-equal\n\n'ewry'\n    at test (/tmp/tmpa8rcr177.js:14:10)\n    at Object.<anonymous> (/tmp/tmpa8rcr177.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'rpg',\n  expected: 'ewry',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(label1, char, label2, index){\n    var m = label1.lastIndexOf(char);\n    if (m >= index) {\n        return label2.substring(0, m - index + 1);\n    }\n    return label1 + label2.substring(index - m - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ekwies\", \"s\", \"rpg\", 1),\"ewry\");\n}\n\ntest();\n\n",
        "answer": "\"ewry\""
    },
    {
        "id": 527,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'!?'\n\nshould loosely deep-equal\n\n'?'\n    at test (/tmp/tmpf82uoqtr.js:10:10)\n    at Object.<anonymous> (/tmp/tmpf82uoqtr.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '!?',\n  expected: '?',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, value){\n    return text.padEnd(value.length, \"?\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"!?\", \"\"),\"?\");\n}\n\ntest();\n\n",
        "answer": "\"?\""
    },
    {
        "id": 528,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpswvp9lic.js:18:10)\n    at Object.<anonymous> (/tmp/tmpswvp9lic.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s){\n    let b = '';\n    let c = '';\n    for (let i of s){\n        c = c + i;\n        if (s.lastIndexOf(c) > -1){\n            return s.lastIndexOf(c);\n        }\n    }\n    return 0;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"papeluchis\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 529,
        "res": true,
        "code": "\nfunction f(array){\n    let prev = array[0];\n    let newArray = array.slice();\n    for (let i = 1; i < array.length; i++) {\n        if (prev !== array[i]) {\n            newArray[i] = array[i];\n        } else {\n            newArray.splice(i, 1);\n        }\n        prev = array[i];\n    }\n    return newArray;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 3]),[1, 2, 3]);\n}\n\ntest();\n\n",
        "answer": "[1, 2, 3]"
    },
    {
        "id": 530,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'ff'\n\nshould loosely deep-equal\n\n'no'\n    at test (/tmp/tmp99rcac7m.js:19:10)\n    at Object.<anonymous> (/tmp/tmp99rcac7m.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'ff',\n  expected: 'no',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s, ch){\n    let sl = s;\n    if (s.includes(ch)) {\n        sl = s.replace(new RegExp('^' + ch + '+'), '');\n        if (sl.length === 0) {\n            sl = sl + '!?';\n        }\n    } else {\n        return 'no';\n    }\n    return sl;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"@@@ff\", \"@\"),\"no\");\n}\n\ntest();\n\n",
        "answer": "\"no\""
    },
    {
        "id": 531,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'djgblw asdl '\n\nshould loosely deep-equal\n\n'Ibaskd'\n    at test (/tmp/tmpmfcsyap_.js:15:10)\n    at Object.<anonymous> (/tmp/tmpmfcsyap_.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'djgblw asdl ',\n  expected: 'Ibaskd',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, x) {\n    if (!text.startsWith(x)) {\n        return f(text.substring(1), x);\n    } else {\n        return text;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Ibaskdjgblw asdl \", \"djgblw\"),\"Ibaskd\");\n}\n\ntest();\n\n",
        "answer": "\"Ibaskd\""
    },
    {
        "id": 532,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    1,\n    2,\n    3\n  ],\n  [\n    1,\n    2,\n    3,\n    1,\n    2,\n    3\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  1,\n  2,\n  3,\n  1,\n  2,\n  3\n]\n    at test (/tmp/tmpecr0knhy.js:16:10)\n    at Object.<anonymous> (/tmp/tmpecr0knhy.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 1, 2, 3 ], [ 1, 2, 3, 1, 2, 3 ] ],\n  expected: [\n    1, 2, 3, 1, 2,\n    3, 1, 2, 3\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(n, array){\n    let final = [array.slice()]; \n    for (let i = 0; i < n; i++) {\n        let arr = array.slice();\n        arr.push(...final[final.length - 1]);\n        final.push(arr);\n    }\n    return final;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(1, [1, 2, 3]),[1, 2, 3, 1, 2, 3, 1, 2, 3]);\n}\n\ntest();\n\n",
        "answer": "[1, 2, 3, 1, 2, 3, 1, 2, 3]"
    },
    {
        "id": 533,
        "res": true,
        "code": "\nfunction f(query, base){\n    let net_sum = 0;\n    for (let key in base) {\n        let val = base[key];\n        if (key[0] === query && key.length === 3) {\n            net_sum -= val;\n        } else if (key[key.length - 1] === query && key.length === 3) {\n            net_sum += val;\n        }\n    }\n    return net_sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"a\", {}),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 534,
        "res": true,
        "code": "\nfunction f(sequence, value){\n    let i = Math.max(sequence.indexOf(value) - Math.floor(sequence.length / 3), 0);\n    let result = '';\n    for (let j = 0; j < sequence.slice(i).length; j++) {\n        let v = sequence[i + j];\n        if (v === '+') {\n            result += value;\n        } else {\n            result += sequence[i + j];\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"hosu\", \"o\"),\"hosu\");\n}\n\ntest();\n\n",
        "answer": "\"hosu\""
    },
    {
        "id": 535,
        "res": true,
        "code": "\nfunction f(n){\n    n = n.toString();\n    for (let i = 0; i < n.length; i++) {\n        if (![\"0\", \"1\", \"2\"].includes(n[i]) && !Array.from({length: 5}, (_, index) => index + 5).includes(parseInt(n[i]))) {\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(1341240312),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 536,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmpn98c5d6t.js:16:10)\n    at Object.<anonymous> (/tmp/tmpn98c5d6t.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(cat){\n    let digits = 0;\n    for(let i = 0; i < cat.length; i++){\n        if(!isNaN(parseInt(cat[i]))){\n            digits += 1;\n        }\n    }\n    return digits;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"C24Bxxx982ab\"),3);\n}\n\ntest();\n\n",
        "answer": "3"
    },
    {
        "id": 537,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'[4]'\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp_9eryj05.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_9eryj05.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '[4]',\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, value){\n    let new_text = text.split('');\n    try {\n        new_text.push(value);\n        var length = new_text.length;\n    } catch(error) {\n        length = 0;\n    }\n    return '[' + length + ']';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"abv\", \"a\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 538,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'zzz0574zz'\n\nshould loosely deep-equal\n\n'5'\n    at test (/tmp/tmp6uwv34ov.js:18:10)\n    at Object.<anonymous> (/tmp/tmp6uwv34ov.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'zzz0574zz',\n  expected: '5',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text, width){\n    let result = text.substring(0, width);\n    while(result.length < width){\n        result = 'z' + result + 'z';\n        if(result.length > width) {\n            result = result.substring(0, width);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"0574\", 9),\"5\");\n}\n\ntest();\n\n",
        "answer": "\"5\""
    },
    {
        "id": 539,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpj9pi58bw.js:21:10)\n    at Object.<anonymous> (/tmp/tmpj9pi58bw.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(array){\n    let c = array\n    let array_copy = array\n\n    while (true) {\n        c.push('_');\n        if (JSON.stringify(c) === JSON.stringify(array_copy)) {\n            array_copy[c.indexOf('_')] = '';\n            break;\n        }\n    }\n    return array_copy;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([]),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 540,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  6,\n  4,\n  9,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  5,\n  5,\n  5,\n  6,\n  4,\n  9\n]\n    at test (/tmp/tmpm5ts_9eo.js:15:10)\n    at Object.<anonymous> (/tmp/tmpm5ts_9eo.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5, 5, 5, 5, 5,\n    5, 6, 4, 9, 5\n  ],\n  expected: [ 5, 5, 5, 6, 4, 9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(a){\n    let b = a.slice();\n    for(let k = 0; k < a.length - 1; k += 2){\n        b.splice(k + 1, 0, b[k]);\n    }\n    b.push(b[0]);\n    return b;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([5, 5, 5, 6, 4, 9]),[5, 5, 5, 6, 4, 9]);\n}\n\ntest();\n\n",
        "answer": "[5, 5, 5, 6, 4, 9]"
    },
    {
        "id": 541,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp3ftg5ico.js:10:10)\n    at Object.<anonymous> (/tmp/tmp3ftg5ico.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    return text.split('').join('').trim().length === 0;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(` \t  　`),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 542,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'ab cd'\n]\n\nshould loosely deep-equal\n\n[\n  'ab',\n  'cd'\n]\n    at test (/tmp/tmp07j8_5eg.js:17:10)\n    at Object.<anonymous> (/tmp/tmp07j8_5eg.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'ab cd' ],\n  expected: [ 'ab', 'cd' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(test, sep, maxsplit){\n    sep = sep || ' ';\n    maxsplit = maxsplit || -1;\n\n    try {\n        return test.split(sep, maxsplit);\n    } catch (error) {\n        return test.split();\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ab cd\", \"x\", 2),['ab', 'cd']);\n}\n\ntest();\n\n",
        "answer": "['ab', 'cd']"
    },
    {
        "id": 543,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'.,,,,, , منبت'\n\nshould loosely deep-equal\n\n'M'\n    at test (/tmp/tmpqu4aign1.js:11:10)\n    at Object.<anonymous> (/tmp/tmpqu4aign1.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '.,,,,, , منبت',\n  expected: 'M',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(item){\n    let modified = item.replace('. ', ' , ').replace('&#33; ', '! ').replace('. ', '? ').replace('. ', '. ');\n    return modified.charAt(0).toUpperCase() + modified.slice(1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\".,,,,,. منبت\"),\"M\");\n}\n\ntest();\n\n",
        "answer": "\"M\""
    },
    {
        "id": 544,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpk9wpt8mc.js:17\n  assert.deepEqual(candidate(`\t\t\ttab tab tabulates`),\"tab\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\);\n                              \t\t\tn\nSyntaxError: Invalid or unexpected token\n    at wrapSafe (node:internal/modules/cjs/loader:1350:18)\n    at Module._compile (node:internal/modules/cjs/loader:1379:20)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text) {\n    let a = text.split('\\n');\n    let b = [];\n    for (let i = 0; i < a.length; i++) {\n        let c = a[i].replace(/\\t/g, '    ');\n        b.push(c);\n    }\n    return b.join('\\n');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(`\t\t\ttab tab tabulates`),\"tab\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\);\n}\n\ntest();\n\n",
        "answer": "\"tab\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\"
    },
    {
        "id": 545,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  8,\n  -1,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  8,\n  -4,\n  2,\n  8,\n  -1,\n  8\n]\n    at test (/tmp/tmpfids2723.js:16:10)\n    at Object.<anonymous> (/tmp/tmpfids2723.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 8, -1, 8 ],\n  expected: [ 8, -4, 2, 8, -1, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array){\n    let result = [];\n    let index = 0;\n    while (index < array.length) {\n        result.push(array.pop());\n        index += 2;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([8, 8, -4, -9, 2, 8, -1, 8]),[8, -4, 2, 8, -1, 8]);\n}\n\ntest();\n\n",
        "answer": "[8, -4, 2, 8, -1, 8]"
    },
    {
        "id": 546,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Do you know who the other was? [NEGMENDS]'\n\nshould loosely deep-equal\n\n'yes'\n    at test (/tmp/tmpnpw_4vkl.js:13:10)\n    at Object.<anonymous> (/tmp/tmpnpw_4vkl.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Do you know who the other was? [NEGMENDS]',\n  expected: 'yes',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, speaker){\n    while(text.startsWith(speaker)){\n        text = text.slice(speaker.length);\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"[CHARRUNNERS]Do you know who the other was? [NEGMENDS]\", \"[CHARRUNNERS]\"),\"yes\");\n}\n\ntest();\n\n",
        "answer": "\"yes\""
    },
    {
        "id": 547,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'h,e,l,l,o,wo,r,ld'\n\nshould loosely deep-equal\n\n'hello world'\n    at test (/tmp/tmpsvup4dzb.js:12:10)\n    at Object.<anonymous> (/tmp/tmpsvup4dzb.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'h,e,l,l,o,wo,r,ld',\n  expected: 'hello world',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(letters){\n    let letters_only = letters.replace(/^[\\., !?\\*]+|[\\., !?\\*]+$/g, '');\n    return letters_only.split(' ').join('....');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"h,e,l,l,o,wo,r,ld,\"),\"hello world\");\n}\n\ntest();\n\n",
        "answer": "\"hello world\""
    },
    {
        "id": 548,
        "res": true,
        "code": "\nfunction f(text, suffix){\n    if (suffix && text && text.endsWith(suffix)) {\n        return text.slice(0, text.length - suffix.length);\n    } else {\n        return text;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"spider\", \"ed\"),\"spider\");\n}\n\ntest();\n\n",
        "answer": "\"spider\""
    },
    {
        "id": 549,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    1,\n    1,\n    1,\n    1\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  1,\n  1,\n  1\n]\n    at test (/tmp/tmpsxltfmld.js:17:10)\n    at Object.<anonymous> (/tmp/tmpsxltfmld.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 1, 1, 1, 1 ] ],\n  expected: [ 1, 1, 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(matrix){\n    matrix.reverse();\n    let result = [];\n    matrix.forEach(primary => {\n        Math.max(...primary);\n        primary.sort((a, b) => b - a);\n        result.push(primary);\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([[1, 1, 1, 1]]),[1, 1, 1, 1]);\n}\n\ntest();\n\n",
        "answer": "[1, 1, 1, 1]"
    },
    {
        "id": 550,
        "res": 0
    },
    {
        "id": 551,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  'b',\n  'c',\n  'inf'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'inf',\n  'inf',\n  'inf'\n]\n    at test (/tmp/tmpdmgyx739.js:18:10)\n    at Object.<anonymous> (/tmp/tmpdmgyx739.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'b', 'c', 'inf' ],\n  expected: [ 'a', 'inf', 'inf', 'inf' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(data){\n    let members = [];\n    for (let item in data) {\n        for (let member of data[item]) {\n            if (!members.includes(member)) {\n                members.push(member);\n            }\n        }\n    }\n    return members.sort();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"inf\": [\"a\", \"b\"], \"a\": [\"inf\", \"c\"], \"d\": [\"inf\"]}),[\"a\", \"inf\", \"inf\", \"inf\"]);\n}\n\ntest();\n\n",
        "answer": "[\"a\", \"inf\", \"inf\", \"inf\"]"
    },
    {
        "id": 552,
        "res": true,
        "code": "\nfunction f(d){\n    let result = {};\n    for (let [k, v] of Object.entries(d)) {\n        if (typeof k === 'number' && Number.isFinite(k)) {\n            if (Array.isArray(v)) {\n                v.forEach(i => {\n                    result[i] = k;\n                });\n            }\n        } else {\n            result[k] = v;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({2: 0.76, 5: [3, 6, 9, 12]}),{2: 0.76, 5: [3, 6, 9, 12]});\n}\n\ntest();\n\n",
        "answer": "{2: 0.76, 5: [3, 6, 9, 12]}"
    },
    {
        "id": 553,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'wslh0762m934'\n\nshould loosely deep-equal\n\n'swlh'\n    at test (/tmp/tmp75ldgta_.js:13:10)\n    at Object.<anonymous> (/tmp/tmp75ldgta_.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'wslh0762m934',\n  expected: 'swlh',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, count){\n    for(let i = 0; i < count; i++){\n        text = text.split('').reverse().join('');\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"439m2670hlsw\", 3),\"swlh\");\n}\n\ntest();\n\n",
        "answer": "\"swlh\""
    },
    {
        "id": 554,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -5,\n  3,\n  9999,\n  1,\n  0,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  9999,\n  3,\n  -5\n]\n    at test (/tmp/tmpmth8hp6l.js:10:10)\n    at Object.<anonymous> (/tmp/tmpmth8hp6l.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -5, 3, 9999, 1, 0, 2 ],\n  expected: [ 9999, 3, -5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(arr){\n    return arr.slice().reverse();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([2, 0, 1, 9999, 3, -5]),[9999, 3, -5]);\n}\n\ntest();\n\n",
        "answer": "[9999, 3, -5]"
    },
    {
        "id": 555,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'odes  code  well'\n\nshould loosely deep-equal\n\n'odes\\ncode\\nwell'\n    at test (/tmp/tmpqln8bkjo.js:13:10)\n    at Object.<anonymous> (/tmp/tmpqln8bkjo.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'odes  code  well',\n  expected: 'odes\\ncode\\nwell',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, tabstop){\n    text = text.replace(/\\n/g, '_____');\n    text = text.replace(/\\t/g, ' '.repeat(tabstop));\n    text = text.replace(/_____/g, '\\n');\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(`odes\tcode\twell`, 2),\"odes\\ncode\\nwell\");\n}\n\ntest();\n\n",
        "answer": "\"odes\\ncode\\nwell\""
    },
    {
        "id": 556,
        "res": 0
    },
    {
        "id": 557,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'xxxarmm ar xx'\n\nshould loosely deep-equal\n\n'xxxarmmarxx'\n    at test (/tmp/tmpmtg69oui.js:15:10)\n    at Object.<anonymous> (/tmp/tmpmtg69oui.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'xxxarmm ar xx',\n  expected: 'xxxarmmarxx',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s) {\n    let d = s.lastIndexOf('ar');\n    if (d === -1) {\n        return s;\n    }\n    return s.substring(0, d) + ' ar ' + s.substring(d + 2);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"xxxarmmarxx\"),\"xxxarmmarxx\");\n}\n\ntest();\n\n",
        "answer": "\"xxxarmmarxx\""
    },
    {
        "id": 558,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\n[\n  1,\n  1,\n  2,\n  3,\n  4,\n  4\n]\n    at test (/tmp/tmp6u6gs_dc.js:22:10)\n    at Object.<anonymous> (/tmp/tmp6u6gs_dc.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: [ 1, 1, 2, 3, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums, mos) {\n    for (let num of mos) {\n        nums.splice(nums.indexOf(num), 1);\n    }\n    nums.sort();\n    for (let num of mos) {\n        nums.push(num);\n    }\n    for (let i = 0; i < nums.length - 1; i++) {\n        if (nums[i] > nums[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([3, 1, 2, 1, 4, 1], [1]),[1, 1, 2, 3, 4, 4]);\n}\n\ntest();\n\n",
        "answer": "[1, 1, 2, 3, 4, 4]"
    },
    {
        "id": 559,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'f.irst_second_third'\n\nshould loosely deep-equal\n\n'f_s_t'\n    at test (/tmp/tmp21p667ix.js:12:10)\n    at Object.<anonymous> (/tmp/tmp21p667ix.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'f.irst_second_third',\n  expected: 'f_s_t',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(n){\n    n = String(n);\n    return n.charAt(0) + '.' + n.slice(1).replace(/-/g, '_');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"first-second-third\"),\"f_s_t\");\n}\n\ntest();\n\n",
        "answer": "\"f_s_t\""
    },
    {
        "id": 560,
        "res": true,
        "code": "\n\nfunction f(text){\n    let x = 0;\n    let ascii_a = 'a'.charCodeAt(0);\n    let ascii_z = 'z'.charCodeAt(0);\n    if (text === text.toLowerCase()) {\n        for (let c of text) {\n            let ascii_c = c.charCodeAt(0);\n            if (ascii_c >= ascii_a && ascii_c <= ascii_z) {\n                if (!isNaN(parseInt(c))) x+=1;\n            }\n        }\n    }\n    return x;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"591237865\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 561,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n42\n    at test (/tmp/tmpi5mampg3.js:11:10)\n    at Object.<anonymous> (/tmp/tmpi5mampg3.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 42,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, digit){\n    var count = text.split(digit).length - 1;\n    return parseInt(digit) * count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"7Ljnw4Lj\", \"7\"),42);\n}\n\ntest();\n\n",
        "answer": "42"
    },
    {
        "id": 562,
        "res": true,
        "code": "\nfunction f(text){\n    return text.toUpperCase() === text.toString();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"VTBAEPJSLGAHINS\"),true);\n}\n\ntest();\n\n",
        "answer": "true"
    },
    {
        "id": 563,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpccty_qv_.js:14:10)\n    at Object.<anonymous> (/tmp/tmpccty_qv_.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text1, text2){\n    let nums = [];\n    for(let i = 0; i < text2.length; i++){\n        nums.push(text1.split(text2[i]).length - 1);\n    }\n    return nums.reduce((a, b) => a + b, 0);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"jivespdcxc\", \"sx\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 564,
        "res": true,
        "code": "\nfunction f(lists){\n    lists[1].length = 0;\n    lists[2].push(...lists[1]);\n    return lists[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([[395, 666, 7, 4], [], [4223, 111]]),[395, 666, 7, 4]);\n}\n\ntest();\n\n",
        "answer": "[395, 666, 7, 4]"
    },
    {
        "id": 565,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n8\n    at test (/tmp/tmp402vi1jo.js:10:10)\n    at Object.<anonymous> (/tmp/tmp402vi1jo.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 8,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    return Math.max(...Array.from('aeiou', ch => text.indexOf(ch)));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"qsqgijwmmhbchoj\"),8);\n}\n\ntest();\n\n",
        "answer": "8"
    },
    {
        "id": 566,
        "res": true,
        "code": "\nfunction f(string, code){\n    let t = '';\n    try {\n        t = new TextEncoder().encode(string, { \"stream\": true });\n        if (t[t.length - 1] === 10) {\n            t.pop();\n        }\n        t = new TextDecoder().decode(t);\n        return t;\n    } catch (error) {\n        return t;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"towaru\", \"UTF-8\"),\"towaru\");\n}\n\ntest();\n\n",
        "answer": "\"towaru\""
    },
    {
        "id": 567,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'one',\n  'two',\n  'three_four_five'\n]\n\nshould loosely deep-equal\n\n'thre_on_f_r'\n    at test (/tmp/tmpyc6p6wvi.js:15:10)\n    at Object.<anonymous> (/tmp/tmpyc6p6wvi.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'one', 'two', 'three_four_five' ],\n  expected: 'thre_on_f_r',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s, n){\n    let ls = s.split(' ');\n    let out = [];\n    while (ls.length >= n) {\n        out = ls.splice(ls.length - n).concat(out);\n    }\n    return ls.concat(out.join('_'));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"one two three four five\", 3),\"thre_on_f_r\");\n}\n\ntest();\n\n",
        "answer": "\"thre_on_f_r\""
    },
    {
        "id": 568,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'mhbwm'\n\nshould loosely deep-equal\n\n'1234567890'\n    at test (/tmp/tmp596rk2lb.js:18:10)\n    at Object.<anonymous> (/tmp/tmp596rk2lb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'mhbwm',\n  expected: '1234567890',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(num){\n    let letter = 1;\n    let digits = '1234567890';\n    for (let i = 0; i < digits.length; i++) {\n        num = num.replace(digits[i], '');\n        if (num.length === 0) break;\n        num = num.slice(letter) + num.slice(0, letter);\n        letter++;\n    }\n    return num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"bwmm7h\"),\"1234567890\");\n}\n\ntest();\n\n",
        "answer": "\"1234567890\""
    },
    {
        "id": 569,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmpfjgi9zo0.js:19:10)\n    at Object.<anonymous> (/tmp/tmpfjgi9zo0.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(txt){\n    let coincidences = {};\n    for (let i = 0; i < txt.length; i++){\n        let c = txt[i];\n        if (coincidences[c]){\n            coincidences[c] += 1;\n        } else {\n            coincidences[c] = 1;\n        }\n    }\n    return Object.values(coincidences).reduce((acc, val) => acc + val, 0);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"11 1 1\"),3);\n}\n\ntest();\n\n",
        "answer": "3"
    },
    {
        "id": 570,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  1,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  0,\n  2\n]\n    at test (/tmp/tmptshog_3h.js:14:10)\n    at Object.<anonymous> (/tmp/tmptshog_3h.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 1, 2 ],\n  expected: [ 2, 0, 2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array, index, value){\n    array.unshift(index + 1);\n    if (value >= 1) {\n        array.splice(index, 0, value);\n    }\n    return array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([2], 0, 2),[2, 0, 2]);\n}\n\ntest();\n\n",
        "answer": "[2, 0, 2]"
    },
    {
        "id": 571,
        "res": 0
    },
    {
        "id": 572,
        "res": 0
    },
    {
        "id": 573,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Vipra'\n\nshould loosely deep-equal\n\n'Vipr'\n    at test (/tmp/tmpfx0lok7z.js:13:10)\n    at Object.<anonymous> (/tmp/tmpfx0lok7z.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Vipra',\n  expected: 'Vipr',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(string, prefix){\n    if (string.startsWith(prefix)) {\n        return string.substring(prefix.length);\n    }\n    return string;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Vipra\", \"via\"),\"Vipr\");\n}\n\ntest();\n\n",
        "answer": "\"Vipr\""
    },
    {
        "id": 574,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Costanza'\n\nshould loosely deep-equal\n\n'George'\n    at test (/tmp/tmpfx_ux0vx.js:16:10)\n    at Object.<anonymous> (/tmp/tmpfx_ux0vx.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Costanza',\n  expected: 'George',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(simpons){\n    while(simpons.length > 0){\n        let pop = simpons.pop();\n        if(pop === pop.charAt(0).toUpperCase() + pop.slice(1)){\n            return pop;\n        }\n    }\n    return pop;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"George\", \"Michael\", \"George\", \"Costanza\"]),\"George\");\n}\n\ntest();\n\n",
        "answer": "\"George\""
    },
    {
        "id": 575,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n42\n\nshould loosely deep-equal\n\n45\n    at test (/tmp/tmp0pqe7vm6.js:14:10)\n    at Object.<anonymous> (/tmp/tmp0pqe7vm6.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 42,\n  expected: 45,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums, val){\n    let new_list = [];\n    nums.forEach(num => {\n        new_list.push(...Array(val).fill(num));\n    });\n    return new_list.reduce((acc, curr) => acc + curr, 0);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([10, 4], 3),45);\n}\n\ntest();\n\n",
        "answer": "45"
    },
    {
        "id": 576,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'x',\n  -2,\n  -1,\n  -6\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  2,\n  -3\n]\n    at test (/tmp/tmpvx_areb6.js:18:10)\n    at Object.<anonymous> (/tmp/tmpvx_areb6.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'x', -2, -1, -6 ],\n  expected: [ -1, 2, -3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array, constant){\n    let output = ['x'];\n    for (let i = 1; i <= array.length; i++) {\n        if (i % 2 !== 0) {\n            output.push(array[i - 1] * -2);\n        } else {\n            output.push(constant);\n        }\n    }\n    return output;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 3], -1),[-1, 2, -3]);\n}\n\ntest();\n\n",
        "answer": "[-1, 2, -3]"
    },
    {
        "id": 577,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  {}\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  'pos'\n]\n    at test (/tmp/tmpsr5rpp6u.js:15:10)\n    at Object.<anonymous> (/tmp/tmpsr5rpp6u.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ {} ],\n  expected: [ 1, 'pos' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(items) {\n    let result = [];\n    for (let i = 0; i < items.length; i++) {\n        let d = Object.fromEntries(items.slice(0, i));\n        result.push(d);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([[1, \"pos\"]]),[1, \"pos\"]);\n}\n\ntest();\n\n",
        "answer": "[1, \"pos\"]"
    },
    {
        "id": 578,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  F: -6,\n  K: -0,\n  R: -0,\n  T: -3\n}\n\nshould loosely deep-equal\n\n{}\n    at test (/tmp/tmpkqf1na44.js:15:10)\n    at Object.<anonymous> (/tmp/tmpkqf1na44.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { R: -0, T: -3, F: -6, K: -0 },\n  expected: {},\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(obj){\n    for(let k in obj){\n        if(obj[k] >= 0){\n            obj[k] = -obj[k];\n        }\n    }\n    return obj;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"R\": 0, \"T\": 3, \"F\": -6, \"K\": 0}),{});\n}\n\ntest();\n\n",
        "answer": "{}"
    },
    {
        "id": 579,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely deep-equal\n\n'empty'\n    at test (/tmp/tmp6760ht_k.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6760ht_k.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'empty',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    if (text.charAt(0).toUpperCase() + text.slice(1) === text) {\n        if (text.length > 1 && text.toLowerCase() !== text) {\n            return text.charAt(0).toLowerCase() + text.slice(1);\n        }\n    } else if (text.match(/^[A-Za-z]+$/)) {\n        return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"\"),\"empty\");\n}\n\ntest();\n\n",
        "answer": "\"empty\""
    },
    {
        "id": 580,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpvdfkc93e.js:16:10)\n    at Object.<anonymous> (/tmp/tmpvdfkc93e.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1 ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, char){\n    let new_text = text;\n    let a = [];\n    while (new_text.includes(char)) {\n        a.push(new_text.indexOf(char));\n        new_text = new_text.replace(char, \"\");\n    }\n    return a;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"rvr\", \"r\"),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 581,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'akoXoosn'\n\nshould loosely deep-equal\n\n'akosXon'\n    at test (/tmp/tmp2iozce97.js:18:10)\n    at Object.<anonymous> (/tmp/tmp2iozce97.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'akoXoosn',\n  expected: 'akosXon',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text, sign){\n    let length = text.length;\n    let new_text = text.split('');\n    let sign_arr = sign.split('');\n    for(let i = 0; i < sign_arr.length; i++){\n        let index = Math.floor((i * length - 1) / 2) + Math.floor((i + 1) / 2);\n        new_text.splice(index, 0, sign_arr[i]);\n    }\n    return new_text.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"akoon\", \"sXo\"),\"akosXon\");\n}\n\ntest();\n\n",
        "answer": "\"akosXon\""
    },
    {
        "id": 582,
        "res": true,
        "code": "\nfunction f(k, j){\n    let arr = [];\n    for(let i = 0; i < k; i++){\n        arr.push(j);\n    }\n    return arr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(7, 5),[5, 5, 5, 5, 5, 5, 5]);\n}\n\ntest();\n\n",
        "answer": "[5, 5, 5, 5, 5, 5, 5]"
    },
    {
        "id": 583,
        "res": 0
    },
    {
        "id": 584,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'5123807309875480094949830'\n\nshould loosely deep-equal\n\n'0000000000'\n    at test (/tmp/tmpya70ankr.js:10:10)\n    at Object.<anonymous> (/tmp/tmpya70ankr.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '5123807309875480094949830',\n  expected: '0000000000',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(txt){\n    return txt.replace(/{}/g, '0'.repeat(20));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"5123807309875480094949830\"),\"0000000000\");\n}\n\ntest();\n\n",
        "answer": "\"0000000000\""
    },
    {
        "id": 585,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n',,,?'\n\nshould loosely deep-equal\n\n'?'\n    at test (/tmp/tmp1otgaqu6.js:15:10)\n    at Object.<anonymous> (/tmp/tmp1otgaqu6.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ',,,?',\n  expected: '?',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let count = text.split(text[0]).length - 1;\n    let ls = text.split('');\n    for (let i = 0; i < count; i++) {\n        ls.shift();\n    }\n    return ls.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\";,,,?\"),\"?\");\n}\n\ntest();\n\n",
        "answer": "\"?\""
    },
    {
        "id": 586,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n-1\n    at test (/tmp/tmpsn6gq2nd.js:10:10)\n    at Object.<anonymous> (/tmp/tmpsn6gq2nd.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: -1,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, char){\n    return text.lastIndexOf(char);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"breakfast\", \"e\"),-1);\n}\n\ntest();\n\n",
        "answer": "-1"
    },
    {
        "id": 587,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  '0': 'abcca',\n  '1': 'abcca',\n  '2': 'abcca'\n}\n\nshould loosely deep-equal\n\n{\n  '0': 'a',\n  '1': 'b',\n  '2': 'c',\n  a: 'a',\n  b: 'b',\n  c: 'c'\n}\n    at test (/tmp/tmp2w_s8ng8.js:14:10)\n    at Object.<anonymous> (/tmp/tmp2w_s8ng8.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { '0': 'abcca', '1': 'abcca', '2': 'abcca' },\n  expected: { '0': 'a', '1': 'b', '2': 'c', a: 'a', b: 'b', c: 'c' },\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums, fill){\n    let ans = {};\n    nums.forEach(num => {\n        ans[num] = fill;\n    });\n    return ans;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([0, 1, 1, 2], \"abcca\"),{0: \"a\", 1: \"b\", 2: \"c\", \"a\": \"a\", \"b\": \"b\", \"c\": \"c\"});\n}\n\ntest();\n\n",
        "answer": "{0: \"a\", 1: \"b\", 2: \"c\", \"a\": \"a\", \"b\": \"b\", \"c\": \"c\"}"
    },
    {
        "id": 588,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n-1\n    at test (/tmp/tmpjc0gxsyi.js:13:10)\n    at Object.<anonymous> (/tmp/tmpjc0gxsyi.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: -1,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(items, target){\n    if(items.includes(target)){\n        return items.indexOf(target);\n    }\n    return -1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"1\", \"+\", \"-\", \"**\", \"//\", \"*\", \"+\"], \"**\"),-1);\n}\n\ntest();\n\n",
        "answer": "-1"
    },
    {
        "id": 589,
        "res": true,
        "code": "\nfunction f(num){\n    num.push(num[num.length - 1]);\n    return num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([-70, 20, 9, 1]),[-70, 20, 9, 1, 1]);\n}\n\ntest();\n\n",
        "answer": "[-70, 20, 9, 1, 1]"
    },
    {
        "id": 590,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'5000   $'\n\nshould loosely deep-equal\n\n'50000'\n    at test (/tmp/tmpxh1wuwu1.js:13:10)\n    at Object.<anonymous> (/tmp/tmpxh1wuwu1.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '5000   $',\n  expected: '50000',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    for(let i = 10; i > 0; i--){\n        text = text.replace(new RegExp(`^${i}`, \"g\"), \"\");\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"25000   $\"),\"50000\");\n}\n\ntest();\n\n",
        "answer": "\"50000\""
    },
    {
        "id": 591,
        "res": 0
    },
    {
        "id": 592,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  11\n]\n\nshould loosely deep-equal\n\n[\n  11,\n  3\n]\n    at test (/tmp/tmpgukfo3vh.js:14:10)\n    at Object.<anonymous> (/tmp/tmpgukfo3vh.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 11 ],\n  expected: [ 11, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(numbers){\n    let new_numbers = [];\n    for (let i = 0; i < numbers.length; i++) {\n        new_numbers.push(numbers[numbers.length - 1 - i]);\n    }\n    return new_numbers;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([11, 3]),[11, 3]);\n}\n\ntest();\n\n",
        "answer": "[11, 3]"
    },
    {
        "id": 593,
        "res": true,
        "code": "\nfunction f(nums, n){\n    let pos = nums.length - 1;\n    for (let i = -nums.length; i < 0; i++){\n        nums.splice(pos, 0, nums[i]);\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([], 14),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 594,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n33\n\nshould loosely deep-equal\n\n504\n    at test (/tmp/tmps4st774f.js:11:10)\n    at Object.<anonymous> (/tmp/tmps4st774f.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 33,\n  expected: 504,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(file) {\n    return file.indexOf('\\n');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(`n wez szize lnson tilebi it 504n.\n`),504);\n}\n\ntest();\n\n",
        "answer": "504"
    },
    {
        "id": 595,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Qdhstudentamxupuihbuztn'\n\nshould loosely deep-equal\n\n'QHDstudentAMXUPUIHBNZTN'\n    at test (/tmp/tmpd702i92m.js:15:10)\n    at Object.<anonymous> (/tmp/tmpd702i92m.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Qdhstudentamxupuihbuztn',\n  expected: 'QHDstudentAMXUPUIHBNZTN',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, prefix){\n    let newText = text;\n    if (newText.startsWith(prefix)) {\n        newText = newText.substring(prefix.length);\n    }\n    newText = newText.charAt(0).toUpperCase() + newText.slice(1);\n    return newText;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"qdhstudentamxupuihbuztn\", \"jdm\"),\"QHDstudentAMXUPUIHBNZTN\");\n}\n\ntest();\n\n",
        "answer": "\"QHDstudentAMXUPUIHBNZTN\""
    },
    {
        "id": 596,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '2',\n  '3',\n  '4',\n  '7',\n  '8',\n  '9'\n]\n\nshould loosely deep-equal\n\n[\n  '9',\n  '8',\n  '7',\n  '4',\n  '3',\n  '2'\n]\n    at test (/tmp/tmpr0xve7dp.js:14:10)\n    at Object.<anonymous> (/tmp/tmpr0xve7dp.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '2', '3', '4', '7', '8', '9' ],\n  expected: [ '9', '8', '7', '4', '3', '2' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(txt, alpha){\n    txt.sort();\n    if (txt.indexOf(alpha) % 2 === 0) {\n        return txt.reverse();\n    }\n    return txt;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"8\", \"9\", \"7\", \"4\", \"3\", \"2\"], \"9\"),[\"9\", \"8\", \"7\", \"4\", \"3\", \"2\"]);\n}\n\ntest();\n\n",
        "answer": "[\"9\", \"8\", \"7\", \"4\", \"3\", \"2\"]"
    },
    {
        "id": 597,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'JAAFODSFA SODOFJ AOAFJIS  JAFASIDFSA1'\n\nshould loosely deep-equal\n\n'JAFASIDFSA1'\n    at test (/tmp/tmpprzo3l71.js:10:10)\n    at Object.<anonymous> (/tmp/tmpprzo3l71.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'JAAFODSFA SODOFJ AOAFJIS  JAFASIDFSA1',\n  expected: 'JAFASIDFSA1',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s){\n    return s.toUpperCase();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Jaafodsfa SOdofj AoaFjIs  JAFasIdfSa1\"),\"JAFASIDFSA1\");\n}\n\ntest();\n\n",
        "answer": "\"JAFASIDFSA1\""
    },
    {
        "id": 598,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely deep-equal\n\n'b'\n    at test (/tmp/tmp9rrdvjbe.js:11:10)\n    at Object.<anonymous> (/tmp/tmp9rrdvjbe.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'b',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, n){\n    var length = text.length;\n    return text.slice(length*(n%4), length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"abc\", 1),\"b\");\n}\n\ntest();\n\n",
        "answer": "\"b\""
    },
    {
        "id": 599,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  ' b c',\n  'b c',\n  '',\n  'c',\n  ''\n]\n\nshould loosely deep-equal\n\n[\n  'a b c',\n  'a b',\n  'a'\n]\n    at test (/tmp/tmpk77_q1qu.js:16:10)\n    at Object.<anonymous> (/tmp/tmpk77_q1qu.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', ' b c', 'b c', '', 'c', '' ],\n  expected: [ 'a b c', 'a b', 'a' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(a, b){\n    a = a.join(b);\n    let lst = [];\n    for (let i = 1; i <= a.length; i += 2) {\n        lst.push(a.slice(i-1, i-1+i));\n        lst.push(a.slice(i-1).slice(i));\n    }\n    return lst;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"a\", \"b\", \"c\"], \" \"),[\"a b c\", \"a b\", \"a\"]);\n}\n\ntest();\n\n",
        "answer": "[\"a b c\", \"a b\", \"a\"]"
    },
    {
        "id": 600,
        "res": true,
        "code": "\nfunction f(array){\n    let just_ns = array.map(num => 'n'.repeat(num));\n    let final_output = [];\n    just_ns.forEach(wipe => {\n        final_output.push(wipe);\n    });\n    return final_output;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([]),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 601,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'ccccc sssss hhhhh AAAAA rrrrr ppppp'\n\nshould loosely deep-equal\n\n'CC AAR YY AEIOU'\n    at test (/tmp/tmp8en8x6j8.js:20:10)\n    at Object.<anonymous> (/tmp/tmp8en8x6j8.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'ccccc sssss hhhhh AAAAA rrrrr ppppp',\n  expected: 'CC AAR YY AEIOU',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let t = 5;\n    let tab = [];\n    for(let i=0; i<text.length; i++){\n        let char = text[i];\n        if('aeiouy'.includes(char.toLowerCase())){\n            tab.push(char.toUpperCase().repeat(t));\n        } else {\n            tab.push(char.repeat(t));\n        }\n    }\n    return tab.join(' ');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"csharp\"),\"CC AAR YY AEIOU\");\n}\n\ntest();\n\n",
        "answer": "\"CC AAR YY AEIOU\""
    },
    {
        "id": 602,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpqjnv2u_d.js:11:10)\n    at Object.<anonymous> (/tmp/tmpqjnv2u_d.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums, target){\n    let cnt = nums.filter(num => num === target).length;\n    return cnt * 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 1], 1),2);\n}\n\ntest();\n\n",
        "answer": "2"
    },
    {
        "id": 603,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpxwlts0xl.js:14\n  assert.deepEqual(candidate(\"not numbers\"),not oscillating);\n                                            ^^^\n\nSyntaxError: missing ) after argument list\n    at wrapSafe (node:internal/modules/cjs/loader:1350:18)\n    at Module._compile (node:internal/modules/cjs/loader:1379:20)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(sentences){\n    if(sentences.split('.').every(sentence => !isNaN(sentence.trim()))) {\n        return 'oscillating';\n    } else {\n        return 'not oscillating';\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"not numbers\"),not oscillating);\n}\n\ntest();\n\n",
        "answer": "not oscillating"
    },
    {
        "id": 604,
        "res": false,
        "error": "ReferenceError",
        "error_message": "/tmp/tmpnh167zfr.js:10\n  assert.deepEqual(candidate(\"Hello world\", \"Hello\"),True);\n                                                     ^\n\nReferenceError: True is not defined\n    at test (/tmp/tmpnh167zfr.js:10:54)\n    at Object.<anonymous> (/tmp/tmpnh167zfr.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, start){\n    return text.startsWith(start);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Hello world\", \"Hello\"),True);\n}\n\ntest();\n\n",
        "answer": "True"
    },
    {
        "id": 605,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'quack'\n\nshould loosely deep-equal\n\n[\n  2,\n  5,\n  1,\n  7,\n  9,\n  3\n]\n    at test (/tmp/tmpz_hoialp.js:11:10)\n    at Object.<anonymous> (/tmp/tmpz_hoialp.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'quack',\n  expected: [ 2, 5, 1, 7, 9, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    nums.splice(0, nums.length);\n    return \"quack\";\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([2, 5, 1, 7, 9, 3]),[2, 5, 1, 7, 9, 3]);\n}\n\ntest();\n\n",
        "answer": "[2, 5, 1, 7, 9, 3]"
    },
    {
        "id": 606,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'ruamNHIB'\n\nshould loosely deep-equal\n\n'ruam'\n    at test (/tmp/tmp8qtm95zv.js:12:10)\n    at Object.<anonymous> (/tmp/tmp8qtm95zv.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'ruamNHIB',\n  expected: 'ruam',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(value){\n    let ls = value.split('');\n    ls.push('NHIB');\n    return ls.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ruam\"),\"ruam\");\n}\n\ntest();\n\n",
        "answer": "\"ruam\""
    },
    {
        "id": 607,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp3_tgy8_j.js:16:10)\n    at Object.<anonymous> (/tmp/tmp3_tgy8_j.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    var punctuations = ['.', '!', '?'];\n    for (var i = 0; i < punctuations.length; i++) {\n        if (text.endsWith(punctuations[i])) {\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\". C.\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 608,
        "res": true,
        "code": "\nfunction f(aDict){\n    return Object.fromEntries(Object.entries(aDict));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({1: 1, 2: 2, 3: 3}),{1: 1, 2: 2, 3: 3});\n}\n\ntest();\n\n",
        "answer": "{1: 1, 2: 2, 3: 3}"
    },
    {
        "id": 609,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{}\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpudv_epkg.js:19:10)\n    at Object.<anonymous> (/tmp/tmpudv_epkg.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: {},\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array, elem){\n    let result = {...array};\n    while (Object.keys(result).length > 0) {\n        let key = Object.keys(result)[0];\n        let value = result[key];\n        if (elem === key || elem === value) {\n            result = {...array};\n        }\n        delete result[key];\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({}, 1),undefined);\n}\n\ntest();\n\n",
        "answer": "undefined"
    },
    {
        "id": 610,
        "res": true,
        "code": "\nfunction f(keys, value){\n    let d = {};\n    keys.forEach(key => {\n        d[key] = value;\n    });\n\n    let keysCopy = Object.keys(d);\n    keysCopy.forEach((k, i) => {\n        if (d[k] === d[keys[i]]) {\n            delete d[keys[i]];\n        }\n    });\n\n    return d;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 1, 1], 3),{});\n}\n\ntest();\n\n",
        "answer": "{}"
    },
    {
        "id": 611,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  0,\n  -3,\n  1,\n  -2,\n  -6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  2,\n  1,\n  3,\n  0,\n  1\n]\n    at test (/tmp/tmp2s1wjz2t.js:11:10)\n    at Object.<anonymous> (/tmp/tmp2s1wjz2t.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 0, -3, 1, -2, -6 ],\n  expected: [ 6, 2, 1, 3, 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    nums.reverse();\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([-6, -2, 1, -3, 0, 1]),[6, 2, 1, 3, 0, 1]);\n}\n\ntest();\n\n",
        "answer": "[6, 2, 1, 3, 0, 1]"
    },
    {
        "id": 612,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  a: 42,\n  b: 1337,\n  c: -1,\n  d: 5\n}\n\nshould loosely deep-equal\n\n42\n    at test (/tmp/tmpjq9jvw20.js:10:10)\n    at Object.<anonymous> (/tmp/tmpjq9jvw20.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { a: 42, b: 1337, c: -1, d: 5 },\n  expected: 42,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(d){\n    return Object.fromEntries(Object.entries(d));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"a\": 42, \"b\": 1337, \"c\": -1, \"d\": 5}),42);\n}\n\ntest();\n\n",
        "answer": "42"
    },
    {
        "id": 613,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'e!t!'\n\nshould loosely deep-equal\n\n'tea'\n    at test (/tmp/tmpk7116_t9.js:18:10)\n    at Object.<anonymous> (/tmp/tmpk7116_t9.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'e!t!',\n  expected: 'tea',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let result = '';\n    let mid = Math.floor((text.length - 1) / 2);\n    for (let i = 0; i < mid; i++) {\n        result += text[i];\n    }\n    for (let i = mid; i < text.length - 1; i++) {\n        result += text[mid + text.length - 1 - i];\n    }\n    return result.padEnd(text.length, text[text.length - 1]);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"eat!\"),\"tea\");\n}\n\ntest();\n\n",
        "answer": "\"tea\""
    },
    {
        "id": 614,
        "res": true,
        "code": "\nfunction f(text, substr, occ){\n    let n = 0;\n    while (true) {\n        let i = text.lastIndexOf(substr);\n        if (i === -1) {\n            break;\n        } else if (n === occ) {\n            return i;\n        } else {\n            n++;\n            text = text.substring(0, i);\n        }\n    }\n    return -1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"zjegiymjc\", \"j\", 2),-1);\n}\n\ntest();\n\n",
        "answer": "-1"
    },
    {
        "id": 615,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n-1\n    at test (/tmp/tmp5u57w9dx.js:11:10)\n    at Object.<anonymous> (/tmp/tmp5u57w9dx.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: -1,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(in_list, num){\n    in_list.push(num);\n    return in_list.slice(0, -1).indexOf(Math.max(...in_list.slice(0, -1)));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([-1, 12, -6, -2], -1),-1);\n}\n\ntest();\n\n",
        "answer": "-1"
    },
    {
        "id": 616,
        "res": 0
    },
    {
        "id": 617,
        "res": true,
        "code": "\nfunction f(text){\n    if (text.split('').every(char => char.charCodeAt(0) <= 127)) {\n        return 'ascii';\n    } else {\n        return 'non ascii';\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"<<<<\"),\"ascii\");\n}\n\ntest();\n\n",
        "answer": "\"ascii\""
    },
    {
        "id": 618,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'89'\n\nshould loosely deep-equal\n\n'99'\n    at test (/tmp/tmp_usjpgoi.js:10:10)\n    at Object.<anonymous> (/tmp/tmp_usjpgoi.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '89',\n  expected: '99',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(match, fill, n){\n    return fill.substring(0, n) + match;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"9\", \"8\", 2),\"99\");\n}\n\ntest();\n\n",
        "answer": "\"99\""
    },
    {
        "id": 619,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'   rock   paper   scissors  '\n\nshould loosely deep-equal\n\n'rockpaperscissors'\n    at test (/tmp/tmp46z157sm.js:10:10)\n    at Object.<anonymous> (/tmp/tmp46z157sm.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '   rock   paper   scissors  ',\n  expected: 'rockpaperscissors',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(title){\n    return title.toLowerCase();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"   Rock   Paper   SCISSORS  \"),\"rockpaperscissors\");\n}\n\ntest();\n\n",
        "answer": "\"rockpaperscissors\""
    },
    {
        "id": 620,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'3 i h o x m q d n   a n d   t r e l'\n\nshould loosely deep-equal\n\n'dlrow gnaw eht ni dlrow'\n    at test (/tmp/tmpzkbmvx_o.js:10:10)\n    at Object.<anonymous> (/tmp/tmpzkbmvx_o.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '3 i h o x m q d n   a n d   t r e l',\n  expected: 'dlrow gnaw eht ni dlrow',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(x){\n    return x.split('').reverse().join(' ');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"lert dna ndqmxohi3\"),\"dlrow gnaw eht ni dlrow\");\n}\n\ntest();\n\n",
        "answer": "\"dlrow gnaw eht ni dlrow\""
    },
    {
        "id": 621,
        "res": 0
    },
    {
        "id": 622,
        "res": 0
    },
    {
        "id": 623,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'HI~'\n\nshould loosely deep-equal\n\n'!M'\n    at test (/tmp/tmp0yk5vvjd.js:21:10)\n    at Object.<anonymous> (/tmp/tmp0yk5vvjd.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'HI~',\n  expected: '!M',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, rules){\n    for(let rule of rules){\n        if(rule === '@'){\n            text = text.split('').reverse().join('');\n        }\n        else if(rule === '~'){\n            text = text.toUpperCase();\n        }\n        else if(text && text.charAt(text.length-1) === rule){\n            text = text.slice(0, text.length-1);\n        }\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"hi~!\", [\"~\", \"`\", \"!\", \"&\"]),\"!M\");\n}\n\ntest();\n\n",
        "answer": "\"!M\""
    },
    {
        "id": 624,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'xllomnrpc'\n\nshould loosely deep-equal\n\n'lxomnrpcy'\n    at test (/tmp/tmpf_k8x761.js:16:10)\n    at Object.<anonymous> (/tmp/tmpf_k8x761.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'xllomnrpc',\n  expected: 'lxomnrpcy',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, char){\n    let char_index = text.indexOf(char);\n    let result = [];\n    if (char_index > 0) {\n        result = text.substring(0, char_index).split('');\n    }\n    result = result.concat(char.split('')).concat(text.substring(char_index + char.length).split(''));\n    return result.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"llomnrpc\", \"x\"),\"lxomnrpcy\");\n}\n\ntest();\n\n",
        "answer": "\"lxomnrpcy\""
    },
    {
        "id": 625,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpuqlr9jcu.js:16:10)\n    at Object.<anonymous> (/tmp/tmpuqlr9jcu.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let count = 0;\n    for(let i of text){\n        if('.?!.,'.includes(i)){\n            count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"bwiajegrwjd??djoda,?\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 626,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'baba'\n\nshould loosely deep-equal\n\n'abab'\n    at test (/tmp/tmp_2rqoch7.js:14:10)\n    at Object.<anonymous> (/tmp/tmp_2rqoch7.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'baba',\n  expected: 'abab',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(line, equalityMap){\n    let rs = {};\n    equalityMap.forEach(k => {\n        rs[k[0]] = k[1];\n    });\n    return line.split('').map(char => rs[char] || char).join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"abab\", [[\"a\", \"b\"], [\"b\", \"a\"]]),\"abab\");\n}\n\ntest();\n\n",
        "answer": "\"abab\""
    },
    {
        "id": 627,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -5,\n  7\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  7,\n  -5\n]\n    at test (/tmp/tmp36lz_rxh.js:10:10)\n    at Object.<anonymous> (/tmp/tmp36lz_rxh.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -5, 7 ],\n  expected: [ 1, 7, -5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(parts){\n    return Object.values(Object.fromEntries(parts));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([[\"u\", 1], [\"s\", 7], [\"u\", -5]]),[1, 7, -5]);\n}\n\ntest();\n\n",
        "answer": "[1, 7, -5]"
    },
    {
        "id": 628,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n  6,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  6,\n  1\n]\n    at test (/tmp/tmpb1boziw9.js:11:10)\n    at Object.<anonymous> (/tmp/tmpb1boziw9.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 6, 1 ],\n  expected: [ 4, 6, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums, toDelete){\n    nums.splice(nums.indexOf(toDelete), 1);\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([4, 5, 3, 6, 1], 5),[4, 6, 1]);\n}\n\ntest();\n\n",
        "answer": "[4, 6, 1]"
    },
    {
        "id": 629,
        "res": true,
        "code": "\nfunction f(text, dng){\n    if (!text.includes(dng)){\n        return text;\n    }\n    if (text.slice(-dng.length) === dng){\n        return text.slice(0, -dng.length);\n    }\n    return text.slice(0, -1) + f(text.slice(0, -2), dng);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"catNG\", \"NG\"),\"cat\");\n}\n\ntest();\n\n",
        "answer": "\"cat\""
    },
    {
        "id": 630,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  '0': -7,\n  '1': -9,\n  '2': '1',\n  '3': '0'\n}\n\nshould loosely deep-equal\n\n{\n  '0': 3,\n  '1': 2\n}\n    at test (/tmp/tmpd563wd0_.js:14:10)\n    at Object.<anonymous> (/tmp/tmpd563wd0_.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { '0': -7, '1': -9, '2': '1', '3': '0' },\n  expected: { '0': 3, '1': 2 },\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(original, string){\n    let temp = {...original};\n    for (let [a, b] of Object.entries(string)) {\n        temp[b] = a;\n    }\n    return temp;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({1: -9, 0: -7}, {1: 2, 0: 3}),{1: 2, 0: 3});\n}\n\ntest();\n\n",
        "answer": "{1: 2, 0: 3}"
    },
    {
        "id": 631,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'*'\n\nshould loosely deep-equal\n\n'****'\n    at test (/tmp/tmp8iqaz_db.js:14:10)\n    at Object.<anonymous> (/tmp/tmp8iqaz_db.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '*',\n  expected: '****',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text, num){\n    let req = num - text.length;\n    text = text.padStart((text.length + req) / 2, '*').padEnd(num, '*');\n    return text.slice(req/2, -req/2);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"a\", 19),\"****\");\n}\n\ntest();\n\n",
        "answer": "\"****\""
    },
    {
        "id": 632,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n  1,\n  4,\n  5,\n  7,\n  9,\n  25,\n  63,\n  87\n]\n\nshould loosely deep-equal\n\n[\n  9,\n  87,\n  25,\n  4,\n  63,\n  0,\n  1,\n  5,\n  7,\n  11\n]\n    at test (/tmp/tmpdwfm2tc8.js:17:10)\n    at Object.<anonymous> (/tmp/tmpdwfm2tc8.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0, 0,  1,  4,  5,\n    7, 9, 25, 63, 87\n  ],\n  expected: [\n    9, 87, 25, 4, 63,\n    0,  1,  5, 7, 11\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(lst){\n    for (let i = lst.length - 1; i > 0; i--) {\n        for (let j = 0; j < i; j++) {\n            if (lst[j] > lst[j + 1]) {\n                [lst[j], lst[j + 1]] = [lst[j + 1], lst[j]];\n            }\n        }\n    }\n    return lst;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([63, 0, 1, 5, 9, 87, 0, 7, 25, 4]),[9, 87, 25, 4, 63, 0, 1, 5, 7, 11]);\n}\n\ntest();\n\n",
        "answer": "[9, 87, 25, 4, 63, 0, 1, 5, 7, 11]"
    },
    {
        "id": 633,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp5x2n67l6.js:16:10)\n    at Object.<anonymous> (/tmp/tmp5x2n67l6.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array, elem){\n    array.reverse();\n    try {\n        let found = array.indexOf(elem);\n        return found;\n    } finally {\n        array.reverse();\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([5, -3, 3, 2], 2),2);\n}\n\ntest();\n\n",
        "answer": "2"
    },
    {
        "id": 634,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'biec'\n\nshould loosely deep-equal\n\n'iou'\n    at test (/tmp/tmp5ebkzxol.js:14:10)\n    at Object.<anonymous> (/tmp/tmp5ebkzxol.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'biec',\n  expected: 'iou',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(input_string){\n    let table = {a:'i', i:'o', o:'u', e:'a', A:'I', I:'O', O:'U', E:'A'};\n    while (input_string.includes('a') || input_string.includes('A')) {\n        input_string = input_string.replace(/[aioeAIOE]/g, char => table[char]);\n    }\n    return input_string;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"biec\"),\"iou\");\n}\n\ntest();\n\n",
        "answer": "\"iou\""
    },
    {
        "id": 635,
        "res": true,
        "code": "\nfunction f(text){\n    let valid_chars = ['-', '_', '+', '.', '/', ' '];\n    text = text.toUpperCase();\n    for (let char of text){\n        if (!char.match(/[a-zA-Z0-9]/) && !valid_chars.includes(char)){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 636,
        "res": true,
        "code": "\nfunction f(d) {\n    let r = {};\n    while (Object.keys(d).length > 0) {\n        r = {...r, ...d};\n        delete d[Math.max(...Object.keys(d))];\n    }\n    return r;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({3: \"A3\", 1: \"A1\", 2: \"A2\"}),{3: \"A3\", 1: \"A1\", 2: \"A2\"});\n}\n\ntest();\n\n",
        "answer": "{3: \"A3\", 1: \"A1\", 2: \"A2\"}"
    },
    {
        "id": 637,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'no'\n\nshould loosely deep-equal\n\n'yes'\n    at test (/tmp/tmpb07jnegg.js:16:10)\n    at Object.<anonymous> (/tmp/tmpb07jnegg.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'no',\n  expected: 'yes',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    text = text.split(' ');\n    for (let t of text) {\n        if (isNaN(t)) {\n            return 'no';\n        }\n    }\n    return 'yes';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"03625163633 d\"),\"yes\");\n}\n\ntest();\n\n",
        "answer": "\"yes\""
    },
    {
        "id": 638,
        "res": true,
        "code": "\nfunction f(s, suffix){\n    if (suffix === ''){\n        return s;\n    }\n    while (s.endsWith(suffix)){\n        s = s.slice(0, -suffix.length);\n    }\n    return s;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ababa\", \"ab\"),\"ababa\");\n}\n\ntest();\n\n",
        "answer": "\"ababa\""
    },
    {
        "id": 639,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpjrwrzryk.js:20\n  assert.deepEqual(candidate(\"xabxfiwoexahxaxbxs\", \"xbabcabccb\"),\"yes yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes);\n                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
        "code": "\nfunction f(perc, full){\n    let reply = \"\";\n    let i = 0;\n    while (perc[i] === full[i] && i < full.length && i < perc.length) {\n        if (perc[i] === full[i]) {\n            reply += \"yes \";\n        } else {\n            reply += \"no \";\n        }\n        i++;\n    }\n    return reply;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"xabxfiwoexahxaxbxs\", \"xbabcabccb\"),\"yes yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes);\n}\n\ntest();\n\n",
        "answer": "\"yes yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes no yes"
    },
    {
        "id": 640,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n18\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpfw8m6f8c.js:19:10)\n    at Object.<anonymous> (/tmp/tmpfw8m6f8c.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 18,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let a = 0;\n    if (text[0] && text.slice(1).includes(text[0])) {\n        a += 1;\n    }\n    for (let i = 0; i < text.length - 1; i++) {\n        if (text[i] && text.slice(i + 1).includes(text[i])) {\n            a += 1;\n        }\n    }\n    return a;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"3eeeeeeoopppppppw14film3oee3\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 641,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmps29qwwy_.js:10:10)\n    at Object.<anonymous> (/tmp/tmps29qwwy_.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(number){\n    return number.trim().match(/^\\d+$/) !== null;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"dummy33;d\"),3);\n}\n\ntest();\n\n",
        "answer": "3"
    },
    {
        "id": 642,
        "res": false,
        "error": "ReferenceError",
        "error_message": "/tmp/tmpc0_qb9vo.js:17\n  assert.deepEqual(candidate(\"     \"),space);\n                                      ^\n\nReferenceError: space is not defined\n    at test (/tmp/tmpc0_qb9vo.js:17:39)\n    at Object.<anonymous> (/tmp/tmpc0_qb9vo.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let i = 0;\n    while (i < text.length && text[i].trim() === '') {\n        i++;\n    }\n    if (i === text.length) {\n        return 'space';\n    }\n    return 'no';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"     \"),space);\n}\n\ntest();\n\n",
        "answer": "space"
    },
    {
        "id": 643,
        "res": false,
        "error": "ReferenceError",
        "error_message": "/tmp/tmprhkc0rwq.js:13\n  assert.deepEqual(candidate(\"damdrodm\", \"m\"),damdrodm);\n                                              ^\n\nReferenceError: damdrodm is not defined\n    at test (/tmp/tmprhkc0rwq.js:13:47)\n    at Object.<anonymous> (/tmp/tmprhkc0rwq.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, suffix){\n    if(text.endsWith(suffix)){\n        text = text.slice(0, -1) + text.slice(-1).toUpperCase();\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"damdrodm\", \"m\"),damdrodm);\n}\n\ntest();\n\n",
        "answer": "damdrodm"
    },
    {
        "id": 644,
        "res": true,
        "code": "\n\nfunction f(nums, pos){\n    let s = nums.slice();\n    if(pos % 2){\n        s = nums.slice(0, -1);\n    }\n    s.reverse();\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([6, 1], 3),[6, 1]);\n}\n\ntest();\n\n",
        "answer": "[6, 1]"
    },
    {
        "id": 645,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpybg3xij3.js:16:10)\n    at Object.<anonymous> (/tmp/tmpybg3xij3.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums, target){\n    if(nums.filter(num => num === 0).length > 0){\n        return 0;\n    } else if(nums.filter(num => num === target).length < 3){\n        return 1;\n    } else {\n        return nums.indexOf(target);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 1, 1, 2], 3),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 646,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aBc, ,SzY'\n\nshould loosely deep-equal\n\n'edcba'\n    at test (/tmp/tmplh887y7y.js:13:10)\n    at Object.<anonymous> (/tmp/tmplh887y7y.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aBc, ,SzY',\n  expected: 'edcba',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, count){\n    for(let i = 0; i < count; i++){\n        text = text.split('').reverse().join('');\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"aBc, ,SzY\", 2),\"edcba\");\n}\n\ntest();\n\n",
        "answer": "\"edcba\""
    },
    {
        "id": 647,
        "res": 0
    },
    {
        "id": 648,
        "res": false,
        "error": "ReferenceError",
        "error_message": "/tmp/tmpdwx0907s.js:18\n  assert.deepEqual(candidate([0, 4, 5, 6], [13, 23, -5, 0]),missing);\n                                                            ^\n\nReferenceError: missing is not defined\n    at test (/tmp/tmpdwx0907s.js:18:61)\n    at Object.<anonymous> (/tmp/tmpdwx0907s.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(list1, list2){\n    let l = list1.slice();\n    while (l.length > 0) {\n        if (list2.includes(l[l.length - 1])) {\n            l.pop();\n        } else {\n            return l[l.length - 1];\n        }\n    }\n    return 'missing';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([0, 4, 5, 6], [13, 23, -5, 0]),missing);\n}\n\ntest();\n\n",
        "answer": "missing"
    },
    {
        "id": 649,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n' f9\\n ldf9\\n adf9!\\n f9?'\n\nshould loosely deep-equal\n\n'f9\\nldf9\\nadf9!\\nf9?'\n    at test (/tmp/tmp50um5450.js:11:10)\n    at Object.<anonymous> (/tmp/tmp50um5450.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ' f9\\n ldf9\\n adf9!\\n f9?',\n  expected: 'f9\\nldf9\\nadf9!\\nf9?',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, tabsize) {\n    return text.split('\\n').map(t => t.replace(/\\t/g, ' '.repeat(tabsize))).join('\\n');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(`\tf9\n\tldf9\n\tadf9!\n\tf9?`, 1),\"f9\\nldf9\\nadf9!\\nf9?\");\n}\n\ntest();\n\n",
        "answer": "\"f9\\nldf9\\nadf9!\\nf9?\""
    },
    {
        "id": 650,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely deep-equal\n\n'A'\n    at test (/tmp/tmpq6_bs2ce.js:13:10)\n    at Object.<anonymous> (/tmp/tmpq6_bs2ce.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'A',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(string, substring){\n    while (string.startsWith(substring)) {\n        string = string.substring(substring.length);\n    }\n    return string;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"\", \"A\"),\"A\");\n}\n\ntest();\n\n",
        "answer": "\"A\""
    },
    {
        "id": 651,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'E wrestled evil until upperfeat'\n\nshould loosely deep-equal\n\n'ElWeRledOwToAiUfT'\n    at test (/tmp/tmp6ougclu2.js:14:10)\n    at Object.<anonymous> (/tmp/tmp6ougclu2.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'E wrestled evil until upperfeat',\n  expected: 'ElWeRledOwToAiUfT',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text, letter){\n    if (letter === letter.toLowerCase()) letter = letter.toUpperCase();\n    text = Array.from(text, char => char === letter ? letter.toUpperCase() : char);\n    return text.join('').charAt(0).toUpperCase() + text.join('').slice(1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"E wrestled evil until upperfeat\", \"e\"),\"ElWeRledOwToAiUfT\");\n}\n\ntest();\n\n",
        "answer": "\"ElWeRledOwToAiUfT\""
    },
    {
        "id": 652,
        "res": true,
        "code": "\nfunction f(string){\n    if (!string || isNaN(parseInt(string[0]))) {\n        return 'INVALID';\n    }\n    let cur = 0;\n    for (let i = 0; i < string.length; i++) {\n        cur = cur * 10 + parseInt(string[i]);\n    }\n    return cur.toString();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"3\"),3);\n}\n\ntest();\n\n",
        "answer": "3"
    },
    {
        "id": 653,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n3\n    at test (/tmp/tmp7dkt2tbz.js:15:10)\n    at Object.<anonymous> (/tmp/tmp7dkt2tbz.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text, letter){\n    let t = text;\n    for(let alph of text){\n        t = t.replace(new RegExp(alph, 'g'), \"\");\n    }\n    return t.split(letter).length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"c, c, c ,c, c\", \"c\"),3);\n}\n\ntest();\n\n",
        "answer": "3"
    },
    {
        "id": 654,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aph?d'\n\nshould loosely deep-equal\n\n'aphid'\n    at test (/tmp/tmp4fvu1itl.js:20:10)\n    at Object.<anonymous> (/tmp/tmp4fvu1itl.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aph?d',\n  expected: 'aphid',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s, from_c, to_c){\n    let table = {};\n    for (let i = 0; i < from_c.length; i++) {\n        table[from_c.charCodeAt(i)] = to_c.charCodeAt(i);\n    }\n    \n    let result = \"\";\n    for (let char of s) {\n        result += typeof table[char.charCodeAt(0)] !== 'undefined' ? String.fromCharCode(table[char.charCodeAt(0)]) : char;\n    }\n    \n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"aphid\", \"i\", \"?\"),\"aphid\");\n}\n\ntest();\n\n",
        "answer": "\"aphid\""
    },
    {
        "id": 655,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'p'\n\nshould loosely deep-equal\n\n'rp'\n    at test (/tmp/tmp10tdlgyu.js:11:10)\n    at Object.<anonymous> (/tmp/tmp10tdlgyu.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'p',\n  expected: 'rp',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(s){\n    return s.split('a').join('').split('r').join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"rpaar\"),\"rp\");\n}\n\ntest();\n\n",
        "answer": "\"rp\""
    },
    {
        "id": 656,
        "res": true,
        "code": "\nfunction f(letters){\n    let a = [];\n    for(let i = 0; i < letters.length; i++){\n        if(a.includes(letters[i])){\n            return 'no';\n        }\n        a.push(letters[i]);\n    }\n    return 'yes';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"b\", \"i\", \"r\", \"o\", \"s\", \"j\", \"v\", \"p\"]),\"yes\");\n}\n\ntest();\n\n",
        "answer": "\"yes\""
    },
    {
        "id": 657,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Djhasghasgdha'\n\nshould loosely deep-equal\n\n'djhasghasgdha'\n    at test (/tmp/tmpgo2ak9cn.js:19:10)\n    at Object.<anonymous> (/tmp/tmpgo2ak9cn.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Djhasghasgdha',\n  expected: 'djhasghasgdha',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let punctuations = '!.?,:;';\n    for (let punct of punctuations) {\n        if (text.split(punct).length - 1 > 1) {\n            return 'no';\n        }\n        if (text.endsWith(punct)) {\n            return 'no';\n        }\n    }\n    return text.charAt(0).toUpperCase() + text.slice(1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"djhasghasgdha\"),\"djhasghasgdha\");\n}\n\ntest();\n\n",
        "answer": "\"djhasghasgdha\""
    },
    {
        "id": 658,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'swims like a bull',\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n  'swim',\n  'like',\n  'a',\n  'bull'\n]\n    at test (/tmp/tmpo0qg456b.js:14:10)\n    at Object.<anonymous> (/tmp/tmpo0qg456b.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'swims like a bull', undefined, undefined ],\n  expected: [ 'swim', 'like', 'a', 'bull' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(d, get_ary){\n    let result = [];\n    for (let key of get_ary) {\n        result.push(d[key]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({3: \"swims like a bull\"}, [3, 2, 5]),[\"swim\", \"like\", \"a\", \"bull\"]);\n}\n\ntest();\n\n",
        "answer": "[\"swim\", \"like\", \"a\", \"bull\"]"
    },
    {
        "id": 659,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpgh_8txy0.js:16:10)\n    at Object.<anonymous> (/tmp/tmpgh_8txy0.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(bots){\n    let clean = [];\n    for (let username of bots) {\n        if (username !== username.toUpperCase()) {\n            clean.push(username.slice(0, 2) + username.slice(-3));\n        }\n    }\n    return clean.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"yR?TAJhIW?n\", \"o11BgEFDfoe\", \"KnHdn2vdEd\", \"wvwruuqfhXbGis\"]),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 660,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpk5rllrc9.js:19:10)\n    at Object.<anonymous> (/tmp/tmpk5rllrc9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(num){\n    let initial = [1];\n    let total = initial;\n    for (let i = 0; i < num; i++) {\n        total = [1];\n        for (let j = 0; j < total.length - 1; j++) {\n            total.push(initial[j] + initial[j + 1]);\n        }\n        initial.push(total[total.length - 1]);\n    }\n    return initial.reduce((acc, curr) => acc + curr, 0);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(3),6);\n}\n\ntest();\n\n",
        "answer": "6"
    },
    {
        "id": 661,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'elrts,SSee'\n\nshould loosely deep-equal\n\n'hello world'\n    at test (/tmp/tmpuburiqoq.js:10:10)\n    at Object.<anonymous> (/tmp/tmpuburiqoq.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'elrts,SSee',\n  expected: 'hello world',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(letters, maxsplit){\n    return letters.split(' ').slice(-maxsplit).join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"elrts,SS ee\", 6),\"hello world\");\n}\n\ntest();\n\n",
        "answer": "\"hello world\""
    },
    {
        "id": 662,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'Angela',\n  'Dan',\n  'Dusty',\n  'Joe',\n  'Linda',\n  'Pete'\n]\n\nshould loosely deep-equal\n\n[\n  'Dan',\n  'Joe',\n  'Linda',\n  'Angela',\n  'Dusty'\n]\n    at test (/tmp/tmpg3d2xq39.js:13:10)\n    at Object.<anonymous> (/tmp/tmpg3d2xq39.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Angela', 'Dan', 'Dusty', 'Joe', 'Linda', 'Pete' ],\n  expected: [ 'Dan', 'Joe', 'Linda', 'Angela', 'Dusty' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(values){\n    let names = ['Pete', 'Linda', 'Angela'];\n    names.push(...values);\n    names.sort();\n    return names;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"Dan\", \"Joe\", \"Dusty\"]),[\"Dan\", \"Joe\", \"Linda\", \"Angela\", \"Dusty\"]);\n}\n\ntest();\n\n",
        "answer": "[\"Dan\", \"Joe\", \"Linda\", \"Angela\", \"Dusty\"]"
    },
    {
        "id": 663,
        "res": true,
        "code": "\nfunction f(container, cron){\nif (!container.includes(cron)) {\n    return container.slice();\n}\nlet pref = container.slice(0, container.indexOf(cron));\nlet suff = container.slice(container.indexOf(cron) + 1);\nreturn pref.concat(suff);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([], 2),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 664,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'3 4 '\n\nshould loosely deep-equal\n\n'3 3 4 5'\n    at test (/tmp/tmp5krraceo.js:14:10)\n    at Object.<anonymous> (/tmp/tmp5krraceo.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '3 4 ',\n  expected: '3 3 4 5',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(tags){\n    let resp = \"\";\n    for(let key in tags){\n        resp += key + \" \";\n    }\n    return resp;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"3\": \"3\", \"4\": \"5\"}),\"3 3 4 5\");\n}\n\ntest();\n\n",
        "answer": "\"3 3 4 5\""
    },
    {
        "id": 665,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'aCbCed'\n\nshould loosely deep-equal\n\n'aCcEe'\n    at test (/tmp/tmp6b1agxvf.js:20:10)\n    at Object.<anonymous> (/tmp/tmp6b1agxvf.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'aCbCed',\n  expected: 'aCcEe',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(chars){\n    let s = \"\";\n    for(let ch of chars){\n        let count = chars.split(ch).length - 1;\n        if(count % 2 === 0){\n            s += ch.toUpperCase();\n        }else{\n            s += ch;\n        }\n    }\n    return s;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"acbced\"),\"aCcEe\");\n}\n\ntest();\n\n",
        "answer": "\"aCcEe\""
    },
    {
        "id": 666,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpnatmrpq6.js:17:10)\n    at Object.<anonymous> (/tmp/tmpnatmrpq6.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(d1, d2){\n    let mmax = 0;\n    for (let k1 in d1) {\n        let p = d1[k1].length + (d2[k1] ? d2[k1].length : 0);\n        if (p > mmax) {\n            mmax = p;\n        }\n    }\n    return mmax;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({0: [], 1: []}, {0: [0, 0, 0, 0], 2: [2, 2, 2]}),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 667,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '< C7 level=0 >'\n]\n\nshould loosely deep-equal\n\n'< C level=0 > C7 < C level=0 > C7 < C level=0 > C7 < C level=0 > C7 < C level=0 > C7'\n    at test (/tmp/tmpmonjhnf2.js:16:10)\n    at Object.<anonymous> (/tmp/tmpmonjhnf2.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '< C7 level=0 >' ],\n  expected: '< C level=0 > C7 < C level=0 > C7 < C level=0 > C7 < C level=0 > C7 < C level=0 > C7',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let new_text = [];\n    for (let i = 0; i < Math.floor(text.length / 3); i++) {\n        new_text.push(`< ${text.slice(i * 3, i * 3 + 3)} level=${i} >`);\n    }\n    let last_item = text.slice(Math.floor(text.length / 3) * 3);\n    new_text.push(`< ${last_item} level=${Math.floor(text.length / 3)} >`);\n    return new_text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"C7\"),\"< C level=0 > C7 < C level=0 > C7 < C level=0 > C7 < C level=0 > C7 < C level=0 > C7\");\n}\n\ntest();\n\n",
        "answer": "\"< C level=0 > C7 < C level=0 > C7 < C level=0 > C7 < C level=0 > C7 < C level=0 > C7\""
    },
    {
        "id": 668,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'rhellomyfriendea'\n\nshould loosely deep-equal\n\n'yhellomfriend'\n    at test (/tmp/tmp4l1uqkz1.js:10:10)\n    at Object.<anonymous> (/tmp/tmp4l1uqkz1.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'rhellomyfriendea',\n  expected: 'yhellomfriend',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    return text[text.length - 1] + text.substring(0, text.length - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"hellomyfriendear\"),\"yhellomfriend\");\n}\n\ntest();\n\n",
        "answer": "\"yhellomfriend\""
    },
    {
        "id": 669,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'fubarbaz'\n\nshould loosely deep-equal\n\n'imbalanced'\n    at test (/tmp/tmpkk16b4va.js:19:10)\n    at Object.<anonymous> (/tmp/tmpkk16b4va.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'fubarbaz',\n  expected: 'imbalanced',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(t){\n    const parts = t.split('-');\n    const a = parts.slice(0, -1).join('-');\n    const sep = '-';\n    const b = parts[parts.length - 1];\n    \n    if (b.length === a.length) {\n        return 'imbalanced';\n    }\n    \n    return a + b.split(sep).join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"fubarbaz\"),\"imbalanced\");\n}\n\ntest();\n\n",
        "answer": "\"imbalanced\""
    },
    {
        "id": 670,
        "res": true,
        "code": "\nfunction f(a, b){\n    let d = {};\n    for (let i = 0; i < a.length; i++) {\n        d[a[i]] = b[i];\n    }\n\n    a.sort((x, y) => d[y] - d[x]);\n\n    return a.map(x => d[x]);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"12\", \"ab\"], [2, 2]),[2, 2]);\n}\n\ntest();\n\n",
        "answer": "[2, 2]"
    },
    {
        "id": 671,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'gwrioad gmf rwdo sggoa'\n\nshould loosely deep-equal\n\n'hello world'\n    at test (/tmp/tmpx5q4t31o.js:18:10)\n    at Object.<anonymous> (/tmp/tmpx5q4t31o.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'gwrioad gmf rwdo sggoa',\n  expected: 'hello world',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, char1, char2){\n    let t1a = [];\n    let t2a = [];\n    for (let i = 0; i < char1.length; i++) {\n        t1a.push(char1[i]);\n        t2a.push(char2[i]);\n    }\n    let t1 = {};\n    t1a.forEach((key, i) => t1[key] = t2a[i]);\n    return text.split('').map(char => t1[char] || char).join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ewriyat emf rwto segya\", \"tey\", \"dgo\"),\"hello world\");\n}\n\ntest();\n\n",
        "answer": "\"hello world\""
    },
    {
        "id": 672,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1zd'\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpzoevwri6.js:17:10)\n    at Object.<anonymous> (/tmp/tmpzoevwri6.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1zd',\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, position, value){\n    let length = text.length;\n    let index = (position % (length + 2)) - 1;\n    if (index >= length || index < 0) {\n        return text;\n    }\n    let text_list = text.split('');\n    text_list[index] = value;\n    return text_list.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"1zd\", 0, \"m\"),undefined);\n}\n\ntest();\n\n",
        "answer": "undefined"
    },
    {
        "id": 673,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cA'\n\nshould loosely deep-equal\n\n'cAb'\n    at test (/tmp/tmp35xxcl4d.js:15:10)\n    at Object.<anonymous> (/tmp/tmp35xxcl4d.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cA',\n  expected: 'cAb',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(string){\n    if (string === string.toUpperCase()) {\n        return string.toLowerCase();\n    } else if (string === string.toLowerCase()) {\n        return string.toUpperCase();\n    }\n    return string;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"cA\"),\"cAb\");\n}\n\ntest();\n\n",
        "answer": "\"cAb\""
    },
    {
        "id": 674,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'qq'\n\nshould loosely deep-equal\n\n'hello'\n    at test (/tmp/tmpc3zv14gj.js:15:10)\n    at Object.<anonymous> (/tmp/tmpc3zv14gj.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'qq',\n  expected: 'hello',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let ls = text.split('');\n    for(let x = ls.length - 1; x >= 0; x--){\n        if (ls.length <= 1) break;\n        if (!'zyxwvutsrqponmlkjihgfedcba'.includes(ls[x])) ls.splice(x, 1);\n    }\n    return ls.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"qq\"),\"hello\");\n}\n\ntest();\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 675,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4,\n  5\n]\n    at test (/tmp/tmp652zpp8x.js:11:10)\n    at Object.<anonymous> (/tmp/tmp652zpp8x.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n  expected: [ 1, 2, 3, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums, sort_count){\n    nums.sort((a, b) => a - b);\n    return nums.slice(0, sort_count);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 2, 3, 4, 5], 1),[1, 2, 3, 4, 5]);\n}\n\ntest();\n\n",
        "answer": "[1, 2, 3, 4, 5]"
    },
    {
        "id": 676,
        "res": true,
        "code": "\nfunction f(text, tab_size){\n    return text.replace(/\\t/g, ' '.repeat(tab_size));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"a\", 100),\"a\");\n}\n\ntest();\n\n",
        "answer": "\"a\""
    },
    {
        "id": 677,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'I'\n\nshould loosely deep-equal\n\n'I got 1 and 0.'\n    at test (/tmp/tmpywkf05bo.js:19:10)\n    at Object.<anonymous> (/tmp/tmpywkf05bo.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'I',\n  expected: 'I got 1 and 0.',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, length){\n    length = length < 0 ? -length : length;\n    let output = '';\n    for (let idx = 0; idx < length; idx++) {\n        if (text[idx % text.length] !== ' ') {\n            output += text[idx % text.length];\n        } else {\n            break;\n        }\n    }\n    return output;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"I got 1 and 0.\", 5),\"I got 1 and 0.\");\n}\n\ntest();\n\n",
        "answer": "\"I got 1 and 0.\""
    },
    {
        "id": 678,
        "res": true,
        "code": "\nfunction f(text){\n    let freq = {};\n    text.toLowerCase().split('').forEach(c => {\n        freq[c] = (freq[c] || 0) + 1;\n    });\n    return freq;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"HI\"),{'h': 1, 'i': 1});\n}\n\ntest();\n\n",
        "answer": "{'h': 1, 'i': 1}"
    },
    {
        "id": 679,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp7y2mcp7x.js:23:10)\n    at Object.<anonymous> (/tmp/tmp7y2mcp7x.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    if (text === '') {\n        return false;\n    }\n    var first_char = text[0];\n    if (!isNaN(parseInt(text[0]))) {\n        return false;\n    }\n    for (var i = 0; i < text.length; i++) {\n        var last_char = text[i];\n        if (last_char !== '_' && !last_char.match(/[a-zA-Z0-9_]/)) {\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"meet\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 680,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'we32r71g72ug94823658324'\n\nshould loosely deep-equal\n\n'weird'\n    at test (/tmp/tmptah7t6p8.js:16:10)\n    at Object.<anonymous> (/tmp/tmptah7t6p8.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'we32r71g72ug94823658324',\n  expected: 'weird',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let letters = '';\n    for(let i = 0; i < text.length; i++){\n        if(text[i].match(/[a-zA-Z0-9]/)){\n            letters += text[i];\n        }\n    }\n    return letters;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"we@32r71g72ug94=(823658*!@324\"),\"weird\");\n}\n\ntest();\n\n",
        "answer": "\"weird\""
    },
    {
        "id": 681,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5,\n  8,\n  7,\n  2,\n  0,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  7,\n  2,\n  0,\n  3\n]\n    at test (/tmp/tmpb6vnl881.js:12:10)\n    at Object.<anonymous> (/tmp/tmpb6vnl881.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1, 5, 8, 7,\n    2, 0, 3\n  ],\n  expected: [ 1, 5, 7, 2, 0, 3 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array, ind, elem){\n    let index = ind < 0 ? -5 : ind > array.length ? array.length : ind + 1;\n    array.splice(index, 0, elem);\n    return array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 5, 8, 2, 0, 3], 2, 7),[1, 5, 7, 2, 0, 3]);\n}\n\ntest();\n\n",
        "answer": "[1, 5, 7, 2, 0, 3]"
    },
    {
        "id": 682,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hy'\n\nshould loosely deep-equal\n\n'he_on_im_si_p'\n    at test (/tmp/tmp1839qnhq.js:12:10)\n    at Object.<anonymous> (/tmp/tmp1839qnhq.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hy',\n  expected: 'he_on_im_si_p',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text, length, index){\n    let ls = text.split(/\\s+/).slice(-index);\n    return ls.map(l => l.slice(0, length)).join('_');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"hypernimovichyp\", 2, 2),\"he_on_im_si_p\");\n}\n\ntest();\n\n",
        "answer": "\"he_on_im_si_p\""
    },
    {
        "id": 683,
        "res": true,
        "code": "\nfunction f(dict1, dict2){\n    let result = Object.assign({}, dict1);\n    for (let key in dict2) {\n        result[key] = dict2[key];\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"disface\": 9, \"cam\": 7}, {\"mforce\": 5}),{disface: 9, cam: 7, mforce: 5});\n}\n\ntest();\n\n",
        "answer": "{disface: 9, cam: 7, mforce: 5}"
    },
    {
        "id": 684,
        "res": 0
    },
    {
        "id": 685,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpegu2zard.js:10:10)\n    at Object.<anonymous> (/tmp/tmpegu2zard.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array, elem){\n    return array.filter(item => item === elem).length + elem;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 1, 1], -2),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 686,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpspegeqb7.js:18\n  assert.deepEqual(candidate({\"lorem ipsum\": 12, \"dolor\": 23}, [\"lorem ipsum\", \"dolor\"]),{lorem ipsum: 12, dolor: 23});\n                                                                                                ^^^^^\n\nSyntaxError: Unexpected identifier 'ipsum'\n    at wrapSafe (node:internal/modules/cjs/loader:1350:18)\n    at Module._compile (node:internal/modules/cjs/loader:1379:20)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(d, l){\n    let new_d = {};\n\n    l.forEach(k => {\n        if (d[k] !== undefined) {\n            new_d[k] = d[k];\n        }\n    });\n\n    return Object.assign({}, new_d);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"lorem ipsum\": 12, \"dolor\": 23}, [\"lorem ipsum\", \"dolor\"]),{lorem ipsum: 12, dolor: 23});\n}\n\ntest();\n\n",
        "answer": "{lorem ipsum: 12, dolor: 23}"
    },
    {
        "id": 687,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'R:j:u:g: :z:u:f:E:rjug nzufe'\n\nshould loosely deep-equal\n\n'rjgen:nzeuf'\n    at test (/tmp/tmpy2xyjhu2.js:13:10)\n    at Object.<anonymous> (/tmp/tmpy2xyjhu2.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'R:j:u:g: :z:u:f:E:rjug nzufe',\n  expected: 'rjgen:nzeuf',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let t = text.split('');\n    t.splice(Math.floor(t.length / 2), 1);\n    t.push(text.toLowerCase());\n    return t.map(c => c).join(':');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Rjug nzufE\"),\"rjgen:nzeuf\");\n}\n\ntest();\n\n",
        "answer": "\"rjgen:nzeuf\""
    },
    {
        "id": 688,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  1,\n  9,\n  0,\n  2,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9\n]\n    at test (/tmp/tmpwlky170c.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwlky170c.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 1, 9, 0, 2, 8 ],\n  expected: [\n    0, 1, 2, 3, 4,\n    5, 6, 7, 8, 9\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    let l = [];\n    nums.forEach(i => {\n        if (!l.includes(i)) {\n            l.push(i);\n        }\n    });\n    return l;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([3, 1, 9, 0, 2, 0, 8]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n}\n\ntest();\n\n",
        "answer": "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"
    },
    {
        "id": 689,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -15,\n  -6,\n  10,\n  7\n]\n\nshould loosely deep-equal\n\n[\n  -15,\n  105\n]\n    at test (/tmp/tmp2ogz5j5c.js:15:10)\n    at Object.<anonymous> (/tmp/tmp2ogz5j5c.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -15, -6, 10, 7 ],\n  expected: [ -15, 105 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(arr){\n    let count = arr.length;\n    let sub = arr.slice();\n    for (let i = 0; i < count; i += 2) {\n        sub[i] *= 5;\n    }\n    return sub;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([-3, -6, 2, 7]),[-15, 105]);\n}\n\ntest();\n\n",
        "answer": "[-15, 105]"
    },
    {
        "id": 690,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'800'\n\nshould loosely deep-equal\n\n7\n    at test (/tmp/tmpj4cby4z_.js:13:10)\n    at Object.<anonymous> (/tmp/tmpj4cby4z_.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '800',\n  expected: 7,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(n){\n    if (String(n).indexOf('.') !== -1) {\n        return String(parseInt(n) + 2.5);\n    }\n    return String(n);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"800\"),7);\n}\n\ntest();\n\n",
        "answer": "7"
    },
    {
        "id": 691,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'rpytt'\n\nshould loosely deep-equal\n\n'rpyttc'\n    at test (/tmp/tmph3eytuvf.js:15:10)\n    at Object.<anonymous> (/tmp/tmph3eytuvf.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'rpytt',\n  expected: 'rpyttc',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, suffix) {\n    if (suffix && text.includes(suffix[suffix.length - 1])) {\n        return f(text.replace(new RegExp(suffix[suffix.length - 1] + '+$'), ''), suffix.slice(0, -1));\n    } else {\n        return text;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"rpyttc\", \"cyt\"),\"rpyttc\");\n}\n\ntest();\n\n",
        "answer": "\"rpyttc\""
    },
    {
        "id": 692,
        "res": true,
        "code": "\nfunction f(array){\n    let a = [];\n    array.reverse();\n    for (let i = 0; i < array.length; i++) {\n        if (array[i] !== 0) {\n            a.push(array[i]);\n        }\n    }\n    a.reverse();\n    return a;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([]),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 693,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpinsezwgw.js:11\n  assert.deepEqual(candidate(\"sa832d83r xd 8g 26a81xdf\"),\"x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0);\nn\nSyntaxError: Invalid or unexpected token\n    at wrapSafe (node:internal/modules/cjs/loader:1350:18)\n    at Module._compile (node:internal/modules/cjs/loader:1379:20)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    var n = parseInt(text.indexOf('8'));\n    return 'x0'.repeat(n);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"sa832d83r xd 8g 26a81xdf\"),\"x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0);\n}\n\ntest();\n\n",
        "answer": "\"x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0"
    },
    {
        "id": 694,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'c',\n  {\n    d: 2,\n    e: 1\n  }\n]\n\nshould loosely deep-equal\n\n'c3'\n    at test (/tmp/tmpc_cmdiyd.js:14:10)\n    at Object.<anonymous> (/tmp/tmpc_cmdiyd.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'c', { e: 1, d: 2 } ],\n  expected: 'c3',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(d) {\n    let i = Object.keys(d).length - 1;\n    let key = Object.keys(d)[i];\n    delete d[key];\n    return [key, d];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"e\": 1, \"d\": 2, \"c\": 3}),\"c3\");\n}\n\ntest();\n\n",
        "answer": "\"c3\""
    },
    {
        "id": 695,
        "res": true,
        "code": "\nfunction f(d){\n    let result = {};\n    for (let ki in d) {\n        result[ki] = [];\n        for (let kj = 0; kj < d[ki].length; kj++) {\n            result[ki].push({});\n            for (let kk in d[ki][kj]) {\n                result[ki][kj][kk] = Object.assign({}, d[ki][kj][kk]);\n            }\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({}),{});\n}\n\ntest();\n\n",
        "answer": "{}"
    },
    {
        "id": 696,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n7\n    at test (/tmp/tmpgldnxah0.js:14:10)\n    at Object.<anonymous> (/tmp/tmpgldnxah0.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 7,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let s = 0;\n    for(let i = 1; i < text.length; i++){\n        s += text.substr(0, text.lastIndexOf(text[i])).length;\n    }\n    return s;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"wdj\"),7);\n}\n\ntest();\n\n",
        "answer": "7"
    },
    {
        "id": 697,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  '',\n  'not it'\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpuaxf3yj8.js:14:10)\n    at Object.<anonymous> (/tmp/tmpuaxf3yj8.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', '', 'not it' ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s, sep){\n    let sepIndex = s.indexOf(sep);\n    let prefix = s.slice(0, sepIndex);\n    let middle = s.slice(sepIndex, sepIndex + sep.length);\n    let rightStr = s.slice(sepIndex + sep.length);\n    return [prefix, middle, rightStr];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"not it\", \"\"),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 698,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'(((((((((((d.((((('\n\nshould loosely deep-equal\n\n'd'\n    at test (/tmp/tmpbp5t6_m_.js:10:10)\n    at Object.<anonymous> (/tmp/tmpbp5t6_m_.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '(((((((((((d.(((((',\n  expected: 'd',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    return text.split('').filter(x => x !== ')').join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"(((((((((((d))))))))).))))(((((\"),\"d\");\n}\n\ntest();\n\n",
        "answer": "\"d\""
    },
    {
        "id": 699,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '1',\n  'some'\n]\n\nshould loosely deep-equal\n\n'1'\n    at test (/tmp/tmpxgg51o8k.js:19:10)\n    at Object.<anonymous> (/tmp/tmpxgg51o8k.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '1', 'some' ],\n  expected: '1',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, elem){\n    let result = [elem, text];\n    if (elem !== '') {\n        while (text.startsWith(elem)) {\n            text = text.replace(elem, '');\n        }\n        while (elem.startsWith(text)) {\n            elem = elem.replace(text, '');\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"some\", \"1\"),\"1\");\n}\n\ntest();\n\n",
        "answer": "\"1\""
    },
    {
        "id": 700,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely deep-equal\n\n8\n    at test (/tmp/tmp1wbx6h59.js:10:10)\n    at Object.<anonymous> (/tmp/tmp1wbx6h59.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected: 8,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    return text.length - (text.match(/bot/g) || []).length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Where is the bot in this world?\"),8);\n}\n\ntest();\n\n",
        "answer": "8"
    },
    {
        "id": 701,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'31849 let it!31849 pass!'\n\nshould loosely deep-equal\n\n'let it!pass'\n    at test (/tmp/tmpacdx4u50.js:13:10)\n    at Object.<anonymous> (/tmp/tmpacdx4u50.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '31849 let it!31849 pass!',\n  expected: 'let it!pass',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(stg, tabs){\n    tabs.forEach(tab => {\n        stg = stg.replace(new RegExp(tab + '$'), '');\n    });\n    return stg;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"31849 let it!31849 pass!\", [\"3\", \"1\", \"8\", \" \", \"1\", \"9\", \"2\", \"d\"]),\"let it!pass\");\n}\n\ntest();\n\n",
        "answer": "\"let it!pass\""
    },
    {
        "id": 702,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -4,\n  -5,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  -5,\n  -4\n]\n    at test (/tmp/tmpyit6ppaj.js:14:10)\n    at Object.<anonymous> (/tmp/tmpyit6ppaj.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -4, -5, 0 ],\n  expected: [ 0, -5, -4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    let count = nums.length;\n    for(let i = nums.length - 1; i >= 0; i--){\n        nums.splice(i, 0, nums.shift());\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([0, -5, -4]),[0, -5, -4]);\n}\n\ntest();\n\n",
        "answer": "[0, -5, -4]"
    },
    {
        "id": 703,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'zzv2sg'\n\nshould loosely deep-equal\n\n'sg'\n    at test (/tmp/tmpuvdsab85.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuvdsab85.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'zzv2sg',\n  expected: 'sg',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, char){\n    var count = text.split(char+char).length - 1;\n    return text.slice(count);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"vzzv2sg\", \"z\"),\"sg\");\n}\n\ntest();\n\n",
        "answer": "\"sg\""
    },
    {
        "id": 704,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'.'\n\nshould loosely deep-equal\n\n99\n    at test (/tmp/tmpepin9sej.js:14:10)\n    at Object.<anonymous> (/tmp/tmpepin9sej.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '.',\n  expected: 99,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s, n, c){\n    let width = c.length * n;\n    while (s.length < width) {\n        s = c + s;\n    }\n    return s;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\".\", 0, \"99\"),99);\n}\n\ntest();\n\n",
        "answer": "99"
    },
    {
        "id": 705,
        "res": true,
        "code": "\nfunction f(cities, name){\n    if (!name){\n        return cities;\n    }\n    if (name && name !== 'cities'){\n        return [];\n    }\n    return cities.map(city => name + city);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"Sydney\", \"Hong Kong\", \"Melbourne\", \"Sao Paolo\", \"Istanbul\", \"Boston\"], \"Somewhere \"),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 706,
        "res": false,
        "error": "ReferenceError",
        "error_message": "/tmp/tmpf3aza1qe.js:18\n  assert.deepEqual(candidate(\"ab\", \"xy\"),[ab, xy]);\n                                          ^\n\nReferenceError: ab is not defined\n    at test (/tmp/tmpf3aza1qe.js:18:43)\n    at Object.<anonymous> (/tmp/tmpf3aza1qe.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(r, w){\n    let a = [];\n    if (r[0] === w[0] && w[w.length - 1] === r[r.length - 1]) {\n        a.push(r);\n        a.push(w);\n    } else {\n        a.push(w);\n        a.push(r);\n    }\n    return a;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ab\", \"xy\"),[ab, xy]);\n}\n\ntest();\n\n",
        "answer": "[ab, xy]"
    },
    {
        "id": 707,
        "res": false,
        "error": "ReferenceError",
        "error_message": "/tmp/tmpopcjpplg.js:17\n  assert.deepEqual(candidate(\"undbs l\", 1),undb);\n                                           ^\n\nReferenceError: undb is not defined\n    at test (/tmp/tmpopcjpplg.js:17:44)\n    at Object.<anonymous> (/tmp/tmpopcjpplg.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, position){\n    let length = text.length;\n    let index = position % (length + 1);\n    if (position < 0 || index < 0) {\n        index = -1;\n    }\n    let new_text = text.split('');\n    new_text.splice(index, 1);\n    return new_text.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"undbs l\", 1),undb);\n}\n\ntest();\n\n",
        "answer": "undb"
    },
    {
        "id": 708,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'    jcmfxv'\n\nshould loosely deep-equal\n\n'jcmfxv'\n    at test (/tmp/tmpyw5wy02d.js:17:10)\n    at Object.<anonymous> (/tmp/tmpyw5wy02d.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '    jcmfxv',\n  expected: 'jcmfxv',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(string){\n    let l = string.split('');\n    for (let i = l.length - 1; i >= 0; i--) {\n        if (l[i] !== ' ') {\n            break;\n        }\n        l.splice(i, 1);\n    }\n    return l.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"    jcmfxv     \"),\"jcmfxv\");\n}\n\ntest();\n\n",
        "answer": "\"jcmfxv\""
    },
    {
        "id": 709,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'loved a'\n\nshould loosely deep-equal\n\n'a loved'\n    at test (/tmp/tmpx19bqca4.js:12:10)\n    at Object.<anonymous> (/tmp/tmpx19bqca4.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'loved a',\n  expected: 'a loved',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let my_list = text.split(\" \");\n    my_list.sort((a, b) => b.localeCompare(a));\n    return my_list.join(\" \");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"a loved\"),\"a loved\");\n}\n\ntest();\n\n",
        "answer": "\"a loved\""
    },
    {
        "id": 710,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  aki: [\n    '1',\n    '5',\n    '2'\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  '1',\n  '5',\n  '2'\n]\n    at test (/tmp/tmpb67fmhc4.js:12:10)\n    at Object.<anonymous> (/tmp/tmpb67fmhc4.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { aki: [ '1', '5', '2' ] },\n  expected: [ '1', '5', '2' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(playlist, liker_name, song_index){\n    playlist[liker_name] = playlist[liker_name] || [];\n    playlist[liker_name].push(song_index);\n    return playlist;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"aki\": [\"1\", \"5\"]}, \"aki\", \"2\"),[\"1\", \"5\", \"2\"]);\n}\n\ntest();\n\n",
        "answer": "[\"1\", \"5\", \"2\"]"
    },
    {
        "id": 711,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmphd764jgs.js:15\nbananas`),apples\n          ^^^^^^\n\nSyntaxError: missing ) after argument list\n    at wrapSafe (node:internal/modules/cjs/loader:1350:18)\n    at Module._compile (node:internal/modules/cjs/loader:1379:20)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    return text.replace(/\\n/g, '\\t');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(`apples\n\t\npears\n\t\nbananas`),apples\npears\nbananas);\n}\n\ntest();\n\n",
        "answer": "apples\npears\nbananas"
    },
    {
        "id": 712,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpkig9rt4z.js:20\n  assert.deepEqual(candidate(\"A(hiccupnn\nSyntaxError: Unexpected token ')'\n    at wrapSafe (node:internal/modules/cjs/loader:1350:18)\n    at Module._compile (node:internal/modules/cjs/loader:1379:20)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:i",
        "code": "\nfunction f(text){\n    let created = [];\n    let flush = 0;\n    let lines = text.split('\\n');\n    for (let i = lines.length - 1; i >= 0; i--) {\n        let line = lines[i];\n        if (line === '') {\n            break;\n        }\n        created.push([...line.trim().split('').reverse()[flush]]);\n    }\n    return created.reverse();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"A(hiccupn}\n\ntest();\n\n",
        "answer
    },
    {
        "id": 713,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpop737qpb.js:16:10)\n    at Object.<anonymous> (/tmp/tmpop737qpb.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, char){\n    if (text.includes(char)) {\n        text = text.split(char).map(t => t.trim()).filter(t => t.length > 0);\n        if (text.length > 1) {\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"only one line\", \" \"),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 714,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  0,\n  3,\n  -2\n]\n    at test (/tmp/tmp_6qdl19q.js:14:10)\n    at Object.<anonymous> (/tmp/tmp_6qdl19q.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 0, 3, -2 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(array){\n    array.reverse();\n    array.splice(0, array.length);\n    array.push(...Array(array.length).fill('x'));\n    array.reverse();\n    return array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([3, -2, 0]),[0, 3, -2]);\n}\n\ntest();\n\n",
        "answer": "[0, 3, -2]"
    },
    {
        "id": 715,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmplebjcyyj.js:12:10)\n    at Object.<anonymous> (/tmp/tmplebjcyyj.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text, char){\n    let count = text.split(char).length - 1;\n    return count % 2 !== 0;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"abababac\", \"a\"),2);\n}\n\ntest();\n\n",
        "answer": "2"
    },
    {
        "id": 716,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  2,\n  1,\n  2,\n  3,\n  1,\n  6,\n  3,\n  8\n]\n    at test (/tmp/tmpegldi1z4.js:14:10)\n    at Object.<anonymous> (/tmp/tmpegldi1z4.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    2, 1, 2, 3,\n    1, 6, 3, 8\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    let count = nums.length;\n    while (nums.length > Math.floor(count / 2)) {\n        nums.length = 0;\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([2, 1, 2, 3, 1, 6, 3, 8]),[2, 1, 2, 3, 1, 6, 3, 8]);\n}\n\ntest();\n\n",
        "answer": "[2, 1, 2, 3, 1, 6, 3, 8]"
    },
    {
        "id": 717,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n't'\n\nshould loosely deep-equal\n\n'timetable'\n    at test (/tmp/tmpp472mlo6.js:22:10)\n    at Object.<anonymous> (/tmp/tmpp472mlo6.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 't',\n  expected: 'timetable',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let k = 0;\n    let l = text.length - 1;\n    while (!text[l].match(/[a-z]/i)) {\n        l--;\n    }\n    while (!text[k].match(/[a-z]/i)) {\n        k++;\n    }\n    if (k !== 0 || l !== text.length - 1) {\n        return text.slice(k, l + 1);\n    } else {\n        return text[0];\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"timetable, 2mil\"),\"timetable\");\n}\n\ntest();\n\n",
        "answer": "\"timetable\""
    },
    {
        "id": 718,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0ThisIsSoAtrocious'\n\nshould loosely deep-equal\n\n7\n    at test (/tmp/tmpo69efkll.js:14:10)\n    at Object.<anonymous> (/tmp/tmpo69efkll.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0ThisIsSoAtrocious',\n  expected: 7,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let t = text;\n    for (let i of text) {\n        text = text.replace(new RegExp(i, 'g'), '');\n    }\n    return text.length.toString() + t;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ThisIsSoAtrocious\"),7);\n}\n\ntest();\n\n",
        "answer": "7"
    },
    {
        "id": 719,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpexg9afik.js:17\n  assert.deepEqual(candidate(\"if (x) {y = 1;} else {z = 1;}\"),\"if (x) {y = 1;} else {z = 1;}\n                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n    at wrapSafe (node:internal/modules/cjs/loader:1350:18)\n    at Module._compile (node:internal/modules/cjs/loader:1379:20)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(code){\n    let lines = code.split(']');\n    let result = [];\n    let level = 0;\n    lines.forEach(line => {\n        result.push(line[0] + ' ' + '  '.repeat(level) + line.slice(1));\n        level += (line.match(/{/g) || []).length - (line.match(/}/g) || []).length;\n    });\n    return result.join('\\n');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"if (x) {y = 1;} else {z = 1;}\"),\"if (x) {y = 1;} else {z = 1;}\n[5, 12]);\n}\n\ntest();\n\n",
        "answer": "\"if (x) {y = 1;} else {z = 1;}\n[5, 12]"
    },
    {
        "id": 720,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n'banana'\n    at test (/tmp/tmpfahlolvl.js:15:10)\n    at Object.<anonymous> (/tmp/tmpfahlolvl.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 'banana',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(items, item){\n    while (items[items.length - 1] === item) {\n        items.pop();\n    }\n    items.push(item);\n    return items.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"bfreratrrbdbzagbretaredtroefcoiqrrneaosf\"], \"n\"),\"banana\");\n}\n\ntest();\n\n",
        "answer": "\"banana\""
    },
    {
        "id": 721,
        "res": true,
        "code": "\n\nfunction f(nums){\n    let count = nums.length\n    for(let num = 2; num < count; num++){\n        nums.sort((a, b) => a - b);\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([-6, -5, -7, -8, 2]),[-8, -7, -6, -5, 2]);\n}\n\ntest();\n\n",
        "answer": "[-8, -7, -6, -5, 2]"
    },
    {
        "id": 722,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n',WpZpPPDL/'\n\nshould loosely deep-equal\n\n'wPzPppdl/mQnAnAgE'\n    at test (/tmp/tmp4n_h61sp.js:18:10)\n    at Object.<anonymous> (/tmp/tmp4n_h61sp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ',WpZpPPDL/',\n  expected: 'wPzPppdl/mQnAnAgE',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let out = \"\";\n    for(let i = 0; i < text.length; i++){\n        if(text[i] === text[i].toUpperCase()){\n            out += text[i].toLowerCase();\n        } else {\n            out += text[i].toUpperCase();\n        }\n    }\n    return out;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\",wPzPppdl/\"),\"wPzPppdl/mQnAnAgE\");\n}\n\ntest();\n\n",
        "answer": "\"wPzPppdl/mQnAnAgE\""
    },
    {
        "id": 723,
        "res": 0
    },
    {
        "id": 724,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0\n]\n    at test (/tmp/tmpxsawwqkr.js:16:10)\n    at Object.<anonymous> (/tmp/tmpxsawwqkr.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3 ],\n  expected: [ 0, 0 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, keyword){\n    let cites = [text.slice(text.indexOf(keyword) + keyword.length).length];\n    for (let char of text) {\n        if (char === keyword) {\n            cites.push(text.slice(text.indexOf(keyword) + keyword.length).length);\n        }\n    }\n    return cites;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"010100\", \"010\"),[0, 0]);\n}\n\ntest();\n\n",
        "answer": "[0, 0]"
    },
    {
        "id": 725,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpa2xcgxgs.js:14:10)\n    at Object.<anonymous> (/tmp/tmpa2xcgxgs.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let result_list = ['3', '3', '3', '3'];\n    if (result_list.length > 0) {\n        result_list = [];\n    }\n    return text.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"mrq7y\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 726,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  34\n]\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp6dm1hedy.js:16:10)\n    at Object.<anonymous> (/tmp/tmp6dm1hedy.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 34 ],\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let ws = 0;\n    for(let i = 0; i < text.length; i++){\n        if(text[i] === ' '){\n            ws++;\n        }\n    }\n    return [ws, text.length];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"jcle oq wsnibktxpiozyxmopqkfnrfjds\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 727,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'dxh',\n  'ix',\n  'snegi',\n  'wiubvu'\n]\n\nshould loosely deep-equal\n\n[\n  'ix',\n  'snegi',\n  'wiubvu'\n]\n    at test (/tmp/tmpsbgt6zs_.js:10:10)\n    at Object.<anonymous> (/tmp/tmpsbgt6zs_.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'dxh', 'ix', 'snegi', 'wiubvu' ],\n  expected: [ 'ix', 'snegi', 'wiubvu' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(numbers, prefix){\n    return numbers.map(n => n.substring(prefix.length)).filter(n => n.startsWith(prefix)).sort();\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"ix\", \"dxh\", \"snegi\", \"wiubvu\"], \"\"),[\"ix\", \"snegi\", \"wiubvu\"]);\n}\n\ntest();\n\n",
        "answer": "[\"ix\", \"snegi\", \"wiubvu\"]"
    },
    {
        "id": 728,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely deep-equal\n\n'r'\n    at test (/tmp/tmp62qdx3fy.js:20:10)\n    at Object.<anonymous> (/tmp/tmp62qdx3fy.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'r',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let result = [];\n    for(let i = 0; i < text.length; i++){\n        let ch = text[i];\n        if(ch === ch.toLowerCase()){\n            continue;\n        }\n        if(text.length - 1 - i < text.lastIndexOf(ch.toLowerCase())){\n            result.push(ch);\n        }\n    }\n    return result.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"ru\"),\"r\");\n}\n\ntest();\n\n",
        "answer": "\"r\""
    },
    {
        "id": 729,
        "res": 0
    },
    {
        "id": 730,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmppd13x6_9.js:18:10)\n    at Object.<anonymous> (/tmp/tmppd13x6_9.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let m = 0;\n    let cnt = 0;\n    text.split(' ').forEach(word => {\n        if (word.length > m) {\n            cnt++;\n            m = word.length;\n        }\n    });\n    return cnt;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 731,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Chris requires  ride to the irport on Fridy.'\n\nshould loosely deep-equal\n\n'Chris'\n    at test (/tmp/tmps0cf5e4h.js:11:10)\n    at Object.<anonymous> (/tmp/tmps0cf5e4h.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Chris requires  ride to the irport on Fridy.',\n  expected: 'Chris',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(text, use){\n    return text.split(use).join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"Chris requires a ride to the airport on Friday.\", \"a\"),\"Chris\");\n}\n\ntest();\n\n",
        "answer": "\"Chris\""
    },
    {
        "id": 732,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  b: 3,\n  u: 10,\n  v: 2,\n  w: 1,\n  x: 1\n}\n\nshould loosely deep-equal\n\n{\n  b: 3,\n  u: 15,\n  v: 7,\n  w: 3,\n  x: 3\n}\n    at test (/tmp/tmp8u5lob2q.js:14:10)\n    at Object.<anonymous> (/tmp/tmp8u5lob2q.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { u: 10, v: 2, b: 3, w: 1, x: 1 },\n  expected: { u: 15, v: 7, b: 3, w: 3, x: 3 },\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(char_freq){\n    let result = {};\n    for (let [k, v] of Object.entries({...char_freq})) {\n        result[k] = Math.floor(v / 2);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"u\": 20, \"v\": 5, \"b\": 7, \"w\": 3, \"x\": 3}),{u: 15, v: 7, b: 3, w: 3, x: 3});\n}\n\ntest();\n\n",
        "answer": "{u: 15, v: 7, b: 3, w: 3, x: 3}"
    },
    {
        "id": 733,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'n'\n\nshould loosely deep-equal\n\n'nn'\n    at test (/tmp/tmpkq7vqa4l.js:13:10)\n    at Object.<anonymous> (/tmp/tmpkq7vqa4l.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'n',\n  expected: 'nn',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    var length = Math.floor(text.length / 2);\n    var left_half = text.substring(0, length);\n    var right_half = text.substring(length).split(\"\").reverse().join(\"\");\n    return left_half + right_half;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"n\"),\"nn\");\n}\n\ntest();\n\n",
        "answer": "\"nn\""
    },
    {
        "id": 734,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n  3,\n  7\n]\n\nshould loosely deep-equal\n\n[\n  7\n]\n    at test (/tmp/tmp7_rn_97b.js:15:10)\n    at Object.<anonymous> (/tmp/tmp7_rn_97b.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 3, 7 ],\n  expected: [ 7 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    for(let i = nums.length - 1; i >= 0; i--){\n        if(nums[i] % 2 === 0){\n            nums.splice(i, 1);\n        }\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([5, 3, 3, 7]),[7]);\n}\n\ntest();\n\n",
        "answer": "[7]"
    },
    {
        "id": 735,
        "res": false,
        "error": "ReferenceError",
        "error_message": "/tmp/tmpla80pocn.js:17\n  assert.deepEqual(candidate(\"(A (b B))\"),A);\n                                          ^\n\nReferenceError: A is not defined\n    at test (/tmp/tmpla80pocn.js:17:43)\n    at Object.<anonymous> (/tmp/tmpla80pocn.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(sentence) {\n    if (sentence === '') {\n        return '';\n    }\n    sentence = sentence.replace(/\\(/g, '');\n    sentence = sentence.replace(/\\)/g, '');\n    sentence = sentence.replace(/ /g, '');\n    return sentence.charAt(0).toUpperCase() + sentence.slice(1).toLowerCase();\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"(A (b B))\"),A);\n}\n\ntest();\n\n",
        "answer": "A"
    },
    {
        "id": 736,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'pichiwa'\n\nshould loosely deep-equal\n\n'314'\n    at test (/tmp/tmpdjaq5mr4.js:19:10)\n    at Object.<anonymous> (/tmp/tmpdjaq5mr4.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'pichiwa',\n  expected: '314',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, insert){\n    const whitespaces = new Set(['\\t', '\\r', '\\v', ' ', '\\f', '\\n']);\n    let clean = '';\n    for (let char of text) {\n        if (whitespaces.has(char)) {\n            clean += insert;\n        } else {\n            clean += char;\n        }\n    }\n    return clean;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"pi wa\", \"chi\"),\"314\");\n}\n\ntest();\n\n",
        "answer": "\"314\""
    },
    {
        "id": 737,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpmsyosm6j.js:18:10)\n    at Object.<anonymous> (/tmp/tmpmsyosm6j.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    let counts = 0;\n    nums.forEach(i => {\n        if (!isNaN(i)) {\n            if (counts === 0) {\n                counts += 1;\n            }\n        }\n    });\n    return counts;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([0, 6, 2, -1, -2]),2);\n}\n\ntest();\n\n",
        "answer": "2"
    },
    {
        "id": 738,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'r;r;r;r;r;r;r;r;'\n\nshould loosely deep-equal\n\n'r'\n    at test (/tmp/tmpyjt8ars2.js:13:10)\n    at Object.<anonymous> (/tmp/tmpyjt8ars2.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'r;r;r;r;r;r;r;r;',\n  expected: 'r',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, characters){\n    for (let i = 0; i < characters.length; i++) {\n        text = text.replace(new RegExp(`${characters[i]}$`,'g'), '');\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"r;r;r;r;r;r;r;r;r\", \"x.r\"),\"r\");\n}\n\ntest();\n\n",
        "answer": "\"r\""
    },
    {
        "id": 739,
        "res": true,
        "code": "\nfunction f(st, pattern){\n    for(let p of pattern){\n        if(!st.startsWith(p)){\n            return false;\n        }\n        st = st.substring(p.length);\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"qwbnjrxs\", [\"jr\", \"b\", \"r\", \"qw\"]),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 740,
        "res": true,
        "code": "\nfunction f(plot, delin){\n    if (plot.includes(delin)) {\n        let split = plot.indexOf(delin);\n        let first = plot.slice(0, split);\n        let second = plot.slice(split + 1);\n        return first.concat(second);\n    } else {\n        return plot;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 3, 4], 3),[1, 2, 4]);\n}\n\ntest();\n\n",
        "answer": "[1, 2, 4]"
    },
    {
        "id": 741,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n[\n  6,\n  8,\n  2,\n  5,\n  3,\n  1,\n  9,\n  7\n]\n    at test (/tmp/tmpc12b2m43.js:14:10)\n    at Object.<anonymous> (/tmp/tmpc12b2m43.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: [\n    6, 8, 2, 5,\n    3, 1, 9, 7\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums, p){\n    let prev_p = p - 1;\n    if (prev_p < 0) {\n        prev_p = nums.length - 1;\n    }\n    return nums[prev_p];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([6, 8, 2, 5, 3, 1, 9, 7], 6),[6, 8, 2, 5, 3, 1, 9, 7]);\n}\n\ntest();\n\n",
        "answer": "[6, 8, 2, 5, 3, 1, 9, 7]"
    },
    {
        "id": 742,
        "res": true,
        "code": "\nfunction f(text){\n    let b = true;\n    for(let x of text){\n        if(!isNaN(x)){\n            b = true;\n        } else {\n            b = false;\n            break;\n        }\n    }\n    return b;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"-1-3\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 743,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-6\n\nshould loosely deep-equal\n\n-3\n    at test (/tmp/tmpk8likb9k.js:11:10)\n    at Object.<anonymous> (/tmp/tmpk8likb9k.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -6,\n  expected: -3,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let [string_a, string_b] = text.split(',');\n    return -(string_a.length + string_b.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"dog,cat\"),-3);\n}\n\ntest();\n\n",
        "answer": "-3"
    },
    {
        "id": 744,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'jrowdlp'\n\nshould loosely deep-equal\n\n'jorgewdl'\n    at test (/tmp/tmpmx81wb25.js:12:10)\n    at Object.<anonymous> (/tmp/tmpmx81wb25.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'jrowdlp',\n  expected: 'jorgewdl',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, new_ending){\n    let result = text.split('');\n    result.push(...new_ending);\n    return result.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"jro\", \"wdlp\"),\"jorgewdl\");\n}\n\ntest();\n\n",
        "answer": "\"jorgewdl\""
    },
    {
        "id": 745,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'minimc@minimc.io'\n\nshould loosely deep-equal\n\n'minimc'\n    at test (/tmp/tmpkwbhttba.js:15:10)\n    at Object.<anonymous> (/tmp/tmpkwbhttba.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'minimc@minimc.io',\n  expected: 'minimc',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(address){\n    let suffix_start = address.indexOf('@') + 1;\n    if (address.substring(suffix_start).split('.').length > 2) {\n        let parts = address.split('@')[1].split('.').slice(0, 2);\n        address = address.replace('.' + parts.join('.'), '');\n    }\n    return address;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"minimc@minimc.io\"),\"minimc\");\n}\n\ntest();\n\n",
        "answer": "\"minimc\""
    },
    {
        "id": 746,
        "res": true,
        "code": "\nfunction f(dct){\n    let values = Object.values(dct);\n    let result = {};\n    for (let value of values) {\n        let item = value.split('.')[0] + '@pinc.uk';\n        result[value] = item;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({}),{});\n}\n\ntest();\n\n",
        "answer": "{}"
    },
    {
        "id": 747,
        "res": true,
        "code": "\nfunction f(text){\n    if (text === '42.42') {\n        return true;\n    }\n    for (let i = 3; i < text.length - 3; i++) {\n        if (text[i] === '.' && !isNaN(text.slice(i - 3)) && !isNaN(text.slice(0, i))) {\n            return true;\n        }\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"123E-10\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 748,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    'a',\n    123\n  ],\n  [\n    'b',\n    456\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  123,\n  456\n]\n    at test (/tmp/tmpnygukpn0.js:12:10)\n    at Object.<anonymous> (/tmp/tmpnygukpn0.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 'a', 123 ], [ 'b', 456 ] ],\n  expected: [ 123, 456 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(d){\n    let keys = Object.keys(d);\n    let values = Object.values(d);\n    return [ [keys[0], values[0]], [keys[1], values[1]] ];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"a\": 123, \"b\": 456, \"c\": 789}),[123, 456]);\n}\n\ntest();\n\n",
        "answer": "[123, 456]"
    },
    {
        "id": 749,
        "res": 0
    },
    {
        "id": 750,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hbd'\n\nshould loosely deep-equal\n\n'hello'\n    at test (/tmp/tmpsd37jjpy.js:20:10)\n    at Object.<anonymous> (/tmp/tmpsd37jjpy.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hbd',\n  expected: 'hello',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(char_map, text){\n    let new_text = '';\n    for(let i = 0; i < text.length; i++){\n        let ch = text[i];\n        let val = char_map[ch];\n        if (val === undefined){\n            new_text += ch;\n        } else {\n            new_text += val;\n        }\n    }\n    return new_text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({}, \"hbd\"),\"hello\");\n}\n\ntest();\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 751,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'wwwwhhhtttpp'\n\nshould loosely deep-equal\n\n'hello'\n    at test (/tmp/tmpfizs0k5q.js:14:10)\n    at Object.<anonymous> (/tmp/tmpfizs0k5q.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'wwwwhhhtttpp',\n  expected: 'hello',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, char, min_count){\n    var count = (text.match(new RegExp(char, \"g\")) || []).length;\n    if (count < min_count) {\n        return text.toUpperCase() === text ? text.toLowerCase() : text.toUpperCase();\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"wwwwhhhtttpp\", \"w\", 3),\"hello\");\n}\n\ntest();\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 752,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'zzzzzabc'\n\nshould loosely deep-equal\n\n'zzzzzzzz'\n    at test (/tmp/tmp4hbsin3l.js:10:10)\n    at Object.<anonymous> (/tmp/tmp4hbsin3l.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'zzzzzabc',\n  expected: 'zzzzzzzz',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s, amount){\n    return 'z'.repeat(amount - s.length) + s;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"abc\", 8),\"zzzzzzzz\");\n}\n\ntest();\n\n",
        "answer": "\"zzzzzzzz\""
    },
    {
        "id": 753,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  '0': 5\n}\n\nshould loosely deep-equal\n\n{\n  '0': 100,\n  '1': 100,\n  '2': 100,\n  '3': 100,\n  '4': 100\n}\n    at test (/tmp/tmproqsiwsr.js:17:10)\n    at Object.<anonymous> (/tmp/tmproqsiwsr.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { '0': 5 },\n  expected: { '0': 100, '1': 100, '2': 100, '3': 100, '4': 100 },\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(bag){\n    let values = Object.values(bag);\n    let tbl = {};\n    for (let v = 0; v < 100; v++) {\n        if (values.includes(v)) {\n            tbl[v] = values.filter(val => val === v).length;\n        }\n    }\n    return tbl;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({0: 0, 1: 0, 2: 0, 3: 0, 4: 0}),{0: 100, 1: 100, 2: 100, 3: 100, 4: 100});\n}\n\ntest();\n\n",
        "answer": "{0: 100, 1: 100, 2: 100, 3: 100, 4: 100}"
    },
    {
        "id": 754,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '2',\n  '2',\n  '44',\n  '0',\n  '7',\n  '20257'\n]\n\nshould loosely deep-equal\n\n[\n  '1',\n  '2',\n  '2',\n  '44',\n  '0',\n  '7',\n  '20257'\n]\n    at test (/tmp/tmplku7v1sh.js:13:10)\n    at Object.<anonymous> (/tmp/tmplku7v1sh.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '2', '2', '44', '0', '7', '20257' ],\n  expected: [ '1', '2', '2', '44', '0', '7', '20257' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    nums = nums.slice(1).map(val => {\n        return val.toString().padStart(parseInt(nums[0]), '0');\n    });\n    return nums.map(val => val.toString());\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"1\", \"2\", \"2\", \"44\", \"0\", \"7\", \"20257\"]),[\"1\", \"2\", \"2\", \"44\", \"0\", \"7\", \"20257\"]);\n}\n\ntest();\n\n",
        "answer": "[\"1\", \"2\", \"2\", \"44\", \"0\", \"7\", \"20257\"]"
    },
    {
        "id": 755,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'ph>t#A#BiEcDefW#ON#iiNCU'\n\nshould loosely deep-equal\n\n'phttaxbiecdefwooniinccu'\n    at test (/tmp/tmpmgo1p34l.js:14:10)\n    at Object.<anonymous> (/tmp/tmpmgo1p34l.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'ph>t#A#BiEcDefW#ON#iiNCU',\n  expected: 'phttaxbiecdefwooniinccu',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(replace, text, hide){\n    while(text.includes(hide)){\n        replace += 'ax';\n        text = text.replace(hide, replace);\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"###\", \"ph>t#A#BiEcDefW#ON#iiNCU\", \".\"),\"phttaxbiecdefwooniinccu\");\n}\n\ntest();\n\n",
        "answer": "\"phttaxbiecdefwooniinccu\""
    },
    {
        "id": 756,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'string'\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpmebc8fr4.js:13:10)\n    at Object.<anonymous> (/tmp/tmpmebc8fr4.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'string',\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    if (text.match(/^[0-9]+$/) !== null) {\n        return 'integer';\n    }\n    return 'string';\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"\"),undefined);\n}\n\ntest();\n\n",
        "answer": "undefined"
    },
    {
        "id": 757,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'an2a8'\n\nshould loosely deep-equal\n\n'anana'\n    at test (/tmp/tmpxz02cupx.js:10:10)\n    at Object.<anonymous> (/tmp/tmpxz02cupx.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'an2a8',\n  expected: 'anana',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, char, replace){\n    return text.replace(new RegExp(char, 'g'), replace);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"a1a8\", \"1\", \"n2\"),\"anana\");\n}\n\ntest();\n\n",
        "answer": "\"anana\""
    },
    {
        "id": 758,
        "res": true,
        "code": "\nfunction f(nums){\n    if (nums.slice().reverse().join('') === nums.join('')) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([0, 3, 6, 2]),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 759,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  4,\n  6\n]\n    at test (/tmp/tmpu_zjl86x.js:19:10)\n    at Object.<anonymous> (/tmp/tmpu_zjl86x.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ 0, 2, 4, 6 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, sub){\n    let index = [];\n    let starting = 0;\n    while (starting !== -1) {\n        starting = text.indexOf(sub, starting);\n        if (starting !== -1) {\n            index.push(starting);\n            starting += sub.length;\n        }\n    }\n    return index;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"egmdartoa\", \"good\"),[0, 2, 4, 6]);\n}\n\ntest();\n\n",
        "answer": "[0, 2, 4, 6]"
    },
    {
        "id": 760,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'k',\n  'j',\n  'h',\n  'f'\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmpphocz559.js:17:10)\n    at Object.<anonymous> (/tmp/tmpphocz559.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'k', 'j', 'h', 'f' ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(d){\n    let l = [];\n    while (Object.keys(d).length > 0) {\n        let key = Object.keys(d)[Object.keys(d).length - 1];\n        l.push(key);\n        delete d[key];\n    }\n    return l;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"f\": 1, \"h\": 2, \"j\": 3, \"k\": 4}),[1, 2, 3, 4]);\n}\n\ntest();\n\n",
        "answer": "[1, 2, 3, 4]"
    },
    {
        "id": 761,
        "res": true,
        "code": "\nfunction f(array){\n    let output = array.slice();\n    output.filter((element, index) => index % 2 === 0).forEach((element, index) => {\n        output[output.length - 1 - index * 2] = element;\n    });\n    output.reverse();\n    return output;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([]),[]);\n}\n\ntest();\n\n",
        "answer": "[]"
    },
    {
        "id": 762,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'this and cpanel'\n\nshould loosely deep-equal\n\n'T'\n    at test (/tmp/tmpl6n95zb1.js:12:10)\n    at Object.<anonymous> (/tmp/tmpl6n95zb1.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'this and cpanel',\n  expected: 'T',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    text = text.toLowerCase();\n    var capitalize = text.charAt(0).toUpperCase() + text.slice(1);\n    return text.charAt(0) + capitalize.slice(1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"this And cPanel\"),\"T\");\n}\n\ntest();\n\n",
        "answer": "\"T\""
    },
    {
        "id": 763,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'yCxpg2C2Pny'\n\nshould loosely deep-equal\n\n'yCxpg2C2Pny2'\n    at test (/tmp/tmphs2h0zyg.js:10:10)\n    at Object.<anonymous> (/tmp/tmphs2h0zyg.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'yCxpg2C2Pny',\n  expected: 'yCxpg2C2Pny2',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(values, text, markers){\n    return text.replace(new RegExp(`[${values}]+$`, 'g'), '').replace(new RegExp(`^[${markers}]+`, 'g'), '');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"2Pn\", \"yCxpg2C2Pny2\", \"\"),\"yCxpg2C2Pny2\");\n}\n\ntest();\n\n",
        "answer": "\"yCxpg2C2Pny2\""
    },
    {
        "id": 764,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'any test string'\n\nshould loosely deep-equal\n\n'sting'\n    at test (/tmp/tmpf8g1ee5x.js:15:10)\n    at Object.<anonymous> (/tmp/tmpf8g1ee5x.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'any test string',\n  expected: 'sting',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, old, replacement){\n    let text2 = text.replace(old, replacement);\n    let old2 = old.split('').reverse().join('');\n    while (text2.includes(old2)) {\n        text2 = text2.replace(old2, replacement);\n    }\n    return text2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"some test string\", \"some\", \"any\"),\"sting\");\n}\n\ntest();\n\n",
        "answer": "\"sting\""
    },
    {
        "id": 765,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpzwq1fuxv.js:15:10)\n    at Object.<anonymous> (/tmp/tmpzwq1fuxv.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    return text.split('').reduce((count, c) => {\n        if (!isNaN(parseInt(c))) {\n            return count + 1;\n        }\n        return count;\n    }, 0);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"so456\"),6);\n}\n\ntest();\n\n",
        "answer": "6"
    },
    {
        "id": 766,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  '0': 117,\n  '03': 351,\n  '3': 117\n}\n\nshould loosely deep-equal\n\n{\n  '0': 117,\n  '3': 117\n}\n    at test (/tmp/tmpmx9q4lci.js:13:10)\n    at Object.<anonymous> (/tmp/tmpmx9q4lci.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { '0': 117, '3': 117, '03': 351 },\n  expected: { '0': 117, '3': 117 },\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(values, value){\n    let length = values.length;\n    let newDict = Object.fromEntries(values.map(key => [key, value]));\n    newDict[values.sort().join('')] = value * 3;\n    return newDict;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"0\", \"3\"], 117),{'0': 117, '3': 117});\n}\n\ntest();\n\n",
        "answer": "{'0': 117, '3': 117}"
    },
    {
        "id": 767,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'-'\n\nshould loosely deep-equal\n\n'd khqw whi fwi bbn 41'\n    at test (/tmp/tmp0nyrq75l.js:16:10)\n    at Object.<anonymous> (/tmp/tmp0nyrq75l.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '-',\n  expected: 'd khqw whi fwi bbn 41',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let a = text.trim().split(' ');\n    for (let i = 0; i < a.length; i++) {\n        if (isNaN(parseInt(a[i]))) {\n            return '-';\n        }\n    }\n    return a.join(' ');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"d khqw whi fwi bbn 41\"),\"d khqw whi fwi bbn 41\");\n}\n\ntest();\n\n",
        "answer": "\"d khqw whi fwi bbn 41\""
    },
    {
        "id": 768,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'bababba'\n\nshould loosely deep-equal\n\n'bab'\n    at test (/tmp/tmp2iicirsl.js:14:10)\n    at Object.<anonymous> (/tmp/tmp2iicirsl.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'bababba',\n  expected: 'bab',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(s, o){\n    if(s.startsWith(o)){\n        return s;\n    }\n    return o + f(s, o.split('').reverse().join('').slice(1));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"abba\", \"bab\"),\"bab\");\n}\n\ntest();\n\n",
        "answer": "\"bab\""
    },
    {
        "id": 769,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'AKa?RIU'\n\nshould loosely deep-equal\n\n'AbCdEf'\n    at test (/tmp/tmp3e093d_2.js:15:10)\n    at Object.<anonymous> (/tmp/tmp3e093d_2.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'AKa?RIU',\n  expected: 'AbCdEf',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    let textList = text.split('');\n    for (let i = 0; i < textList.length; i++) {\n        textList[i] = textList[i].toUpperCase() === textList[i] ?\n            textList[i].toLowerCase() : textList[i].toUpperCase();\n    }\n    return textList.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"akA?riu\"),\"AbCdEf\");\n}\n\ntest();\n\n",
        "answer": "\"AbCdEf\""
    },
    {
        "id": 770,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'$$78$$'\n\nshould loosely deep-equal\n\n78\n    at test (/tmp/tmpim4yfk5z.js:26:10)\n    at Object.<anonymous> (/tmp/tmpim4yfk5z.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '$$78$$',\n  expected: 78,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction center(line, length, char) {\n    let lineLength = line.length;\n    if (lineLength >= length) {\n        return line;\n    }\n    let padleft = Math.floor((length - lineLength) / 2);\n    let padRight = length - padleft - lineLength;\n    return char.repeat(padleft) + line + char.repeat(padRight);\n}\n\nfunction f(line, char){\n    let count = line.split(char).length - 1;\n    for(let i = count+1; i > 0; i--){\n        line = center(line, line.length + Math.floor(i / char.length), char);\n    }\n    return line;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"$78\", \"$\"),78);\n}\n\ntest();\n\n",
        "answer": "78"
    },
    {
        "id": 771,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  4,\n  6,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  3,\n  5,\n  7,\n  2,\n  4,\n  6,\n  8\n]\n    at test (/tmp/tmpeqq48bs3.js:18:10)\n    at Object.<anonymous> (/tmp/tmpeqq48bs3.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 4, 6, 8 ],\n  expected: [\n    1, 3, 5, 7,\n    2, 4, 6, 8\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(items){\n    items = Array.from(items);\n    let odd_positioned = [];\n    while (items.length > 0) {\n        let position = items.indexOf(Math.min(...items));\n        items.splice(position, 1);\n        let item = items.splice(position, 1)[0];\n        odd_positioned.push(item);\n    }\n    return odd_positioned;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8]),[1, 3, 5, 7, 2, 4, 6, 8]);\n}\n\ntest();\n\n",
        "answer": "[1, 3, 5, 7, 2, 4, 6, 8]"
    },
    {
        "id": 772,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'DFA.'\n\nshould loosely deep-equal\n\n'SerjgpoDdbcA'\n    at test (/tmp/tmpcsyd4hrc.js:16:10)\n    at Object.<anonymous> (/tmp/tmpcsyd4hrc.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'DFA.',\n  expected: 'SerjgpoDdbcA',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(phrase){\n    let result = '';\n    for(let i of phrase){\n        if(i.toUpperCase() === i){\n            result += i;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"serjgpoDFdbcA.\"),\"SerjgpoDdbcA\");\n}\n\ntest();\n\n",
        "answer": "\"SerjgpoDdbcA\""
    },
    {
        "id": 773,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n-1\n    at test (/tmp/tmp6f9ta1d_.js:10:10)\n    at Object.<anonymous> (/tmp/tmp6f9ta1d_.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: -1,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums, n){\n    return nums.splice(n, 1)[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([-7, 3, 1, -1, -1, 0, 4], 6),-1);\n}\n\ntest();\n\n",
        "answer": "-1"
    },
    {
        "id": 774,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'quiz leader = Cornareti, count = 23'\n\nshould loosely deep-equal\n\n23\n    at test (/tmp/tmp7b5qa0ft.js:11:10)\n    at Object.<anonymous> (/tmp/tmp7b5qa0ft.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'quiz leader = Cornareti, count = 23',\n  expected: 23,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(num, name){\n    let f_str = 'quiz leader = {}, count = {}';\n    return f_str.replace('{}', name).replace('{}', num);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(23, \"Cornareti\"),23);\n}\n\ntest();\n\n",
        "answer": "23"
    },
    {
        "id": 775,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  3,\n  1,\n  6,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  1,\n  3,\n  6,\n  1\n]\n    at test (/tmp/tmpj5a4p62v.js:14:10)\n    at Object.<anonymous> (/tmp/tmpj5a4p62v.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 3, 1, 6, 2 ],\n  expected: [ 2, 1, 3, 6, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(nums){\n    let count = nums.length;\n    for (let i = 0; i < count / 2; i++) {\n        [nums[i], nums[count - i - 1]] = [nums[count - i - 1], nums[i]];\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([2, 6, 1, 3, 1]),[2, 1, 3, 6, 1]);\n}\n\ntest();\n\n",
        "answer": "[2, 1, 3, 6, 1]"
    },
    {
        "id": 776,
        "res": true,
        "code": "\nfunction f(dictionary){\n    let a = Object.assign({}, dictionary);\n    for (let key in a){\n        if (key % 2 !== 0){\n            delete a[key];\n            a['$' + key] = a[key];\n        }\n    }\n    return a;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({}),{});\n}\n\ntest();\n\n",
        "answer": "{}"
    },
    {
        "id": 777,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'avc  a .d e'\n]\n\nshould loosely deep-equal\n\n[\n  'avcaead',\n  'e'\n]\n    at test (/tmp/tmp7whc_bqd.js:11:10)\n    at Object.<anonymous> (/tmp/tmp7whc_bqd.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'avc  a .d e' ],\n  expected: [ 'avcaead', 'e' ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(names, excluded){\n    let result = names.map(name => name.replace(excluded, \"\"));\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"avc  a .d e\"], \"\"),[\"avcaead\", \"e\"]);\n}\n\ntest();\n\n",
        "answer": "[\"avcaead\", \"e\"]"
    },
    {
        "id": 778,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'mjsmjqwmjsqjwisojqwiso'\n\nshould loosely deep-equal\n\n'mjs'\n    at test (/tmp/tmp8g3h3ojn.js:14:10)\n    at Object.<anonymous> (/tmp/tmp8g3h3ojn.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'mjsmjqwmjsqjwisojqwiso',\n  expected: 'mjs',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(prefix, text){\n    if (text.startsWith(prefix)) {\n        return text;\n    } else {\n        return prefix + text;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"mjs\", \"mjqwmjsqjwisojqwiso\"),\"mjs\");\n}\n\ntest();\n\n",
        "answer": "\"mjs\""
    },
    {
        "id": 779,
        "res": 0
    },
    {
        "id": 780,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'2'\n\nshould loosely deep-equal\n\n'2 3 5 2 4 5 2 89'\n    at test (/tmp/tmpdpkb6_c7.js:23:10)\n    at Object.<anonymous> (/tmp/tmpdpkb6_c7.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '2',\n  expected: '2 3 5 2 4 5 2 89',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(ints){\n    let counts = new Array(301).fill(0);\n\n    ints.forEach(i => {\n        counts[i] += 1;\n    });\n\n    let r = [];\n    for (let i = 0; i < counts.length; i++) {\n        if (counts[i] >= 3) {\n            r.push(String(i));\n        }\n    }\n    counts = [];\n    return r.join(' ');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([2, 3, 5, 2, 4, 5, 2, 89]),\"2 3 5 2 4 5 2 89\");\n}\n\ntest();\n\n",
        "answer": "\"2 3 5 2 4 5 2 89\""
    },
    {
        "id": 781,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely deep-equal\n\n'6'\n    at test (/tmp/tmpmcwfzk91.js:17:10)\n    at Object.<anonymous> (/tmp/tmpmcwfzk91.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: '6',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(s, ch){\n    if (!s.includes(ch)) {\n        return '';\n    }\n    let reversed = s.split(ch).pop().split('').reverse().join('');\n    for (let i = 0; i < reversed.length; i++) {\n        reversed = reversed.split(ch).pop().split('').reverse().join('');\n    }\n    return reversed;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"shivajimonto6\", \"6\"),\"6\");\n}\n\ntest();\n\n",
        "answer": "\"6\""
    },
    {
        "id": 782,
        "res": true,
        "code": "\nfunction f(input){\n    for(let char of input){\n        if(char === char.toUpperCase()){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"a j c n x X k\"),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 783,
        "res": true,
        "code": "\nfunction f(text, comparison){\n    let length = comparison.length;\n    if (length <= text.length){\n        for (let i = 0; i < length; i++){\n            if (comparison[length - i - 1] !== text[text.length - i - 1]){\n                return i;\n            }\n        }\n    }\n    return length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"managed\", \"\"),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 784,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'read',\n  'Is'\n]\n\nshould loosely deep-equal\n\n'Is'\n    at test (/tmp/tmppzs4izwz.js:12:10)\n    at Object.<anonymous> (/tmp/tmppzs4izwz.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'read', 'Is' ],\n  expected: 'Is',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(key, value){\n    var dict_ = {};\n    dict_[key] = value;\n    return Object.entries(dict_)[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"read\", \"Is\"),\"Is\");\n}\n\ntest();\n\n",
        "answer": "\"Is\""
    },
    {
        "id": 785,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1 '\n\nshould loosely deep-equal\n\n'11'\n    at test (/tmp/tmpu9cymnj3.js:15:10)\n    at Object.<anonymous> (/tmp/tmpu9cymnj3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1 ',\n  expected: '11',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(n){\n    let streak = '';\n    for(let c of n.toString()){\n        streak += c.padEnd(parseInt(c) * 2);\n    }\n    return streak;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(1),\"11\");\n}\n\ntest();\n\n",
        "answer": "\"11\""
    },
    {
        "id": 786,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'kefp719'\n\nshould loosely deep-equal\n\n'19f7'\n    at test (/tmp/tmp2m06qqnq.js:14:10)\n    at Object.<anonymous> (/tmp/tmp2m06qqnq.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'kefp719',\n  expected: '19f7',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, letter){\n    if (text.includes(letter)) {\n        let start = text.indexOf(letter);\n        return text.slice(start + 1) + text.slice(0, start + 1);\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"19kefp7\", \"9\"),\"19f7\");\n}\n\ntest();\n\n",
        "answer": "\"19f7\""
    },
    {
        "id": 787,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Xzd'\n\nshould loosely deep-equal\n\n'XZD'\n    at test (/tmp/tmpcbczgn50.js:14:10)\n    at Object.<anonymous> (/tmp/tmpcbczgn50.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Xzd',\n  expected: 'XZD',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text){\n    if (text.length === 0) {\n        return '';\n    }\n    text = text.toLowerCase();\n    return text.charAt(0).toUpperCase() + text.slice(1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"xzd\"),\"XZD\");\n}\n\ntest();\n\n",
        "answer": "\"XZD\""
    },
    {
        "id": 788,
        "res": true,
        "code": "\nfunction f(text, suffix){\n    if(suffix.startsWith(\"/\")){\n        return text + suffix.substring(1);\n    }\n    return text;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"hello.txt\", \"/\"),\"hello.txt\");\n}\n\ntest();\n\n",
        "answer": "\"hello.txt\""
    },
    {
        "id": 789,
        "res": true,
        "code": "\nfunction f(text, n){\nif (n < 0 || text.length <= n) {\n    return text;\n}\nlet result = text.substring(0, n);\nlet i = result.length - 1;\nwhile (i >= 0) {\n    if (result[i] !== text[i]) {\n        break;\n    }\n    i--;\n}\nreturn text.substring(0, i + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"bR\", -1),\"bR\");\n}\n\ntest();\n\n",
        "answer": "\"bR\""
    },
    {
        "id": 790,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  false,\n  true\n]\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp_m5_e9tl.js:14:10)\n    at Object.<anonymous> (/tmp/tmp_m5_e9tl.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ false, true ],\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(d){\n    let r = {\n        c: Object.assign({}, d),\n        d: Object.assign({}, d)\n    };\n    return [r.c === r.d, JSON.stringify(r.c) === JSON.stringify(r.d)];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"i\": \"1\", \"love\": \"parakeets\"}),false);\n}\n\ntest();\n\n",
        "answer": "false"
    },
    {
        "id": 791,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'08999'\n\nshould loosely deep-equal\n\n99\n    at test (/tmp/tmp6e9lilps.js:15:10)\n    at Object.<anonymous> (/tmp/tmp6e9lilps.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '08999',\n  expected: 99,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(integer, n){\n    let i = 1;\n    let text = integer.toString();\n    while (i + text.length < n) {\n        i += text.length;\n    }\n    return text.padStart(i + text.length, '0');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(8999, 2),99);\n}\n\ntest();\n\n",
        "answer": "99"
    },
    {
        "id": 792,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  a: [\n    'car',\n    'dog'\n  ],\n  b: [\n    'car',\n    'dog'\n  ]\n}\n\nshould loosely deep-equal\n\n[\n  [\n    'a',\n    'b'\n  ],\n  [\n    'car',\n    'dog'\n  ]\n]\n    at test (/tmp/tmp6d0uhgph.js:18:10)\n    at Object.<anonymous> (/tmp/tmp6d0uhgph.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { a: [ 'car', 'dog' ], b: [ 'car', 'dog' ] },\n  expected: [ [ 'a', 'b' ], [ 'car', 'dog' ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\n\nfunction f(l1, l2){\n    if(l1.length !== l2.length){\n        return {};\n    }\n    let result = {};\n    l1.forEach(key => {\n        result[key] = [...l2];\n    });\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([\"a\", \"b\"], [\"car\", \"dog\"]),[[\"a\", \"b\"], [\"car\", \"dog\"]]);\n}\n\ntest();\n\n",
        "answer": "[[\"a\", \"b\"], [\"car\", \"dog\"]]"
    },
    {
        "id": 793,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpuliid0um.js:18:10)\n    at Object.<anonymous> (/tmp/tmpuliid0um.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(lst, start, end){\n    let count = 0;\n    for (let i = start; i < end; i++) {\n        for (let j = i; j < end; j++) {\n            if (lst[i] !== lst[j]) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate([1, 2, 4, 3, 2, 1], 0, 3),0);\n}\n\ntest();\n\n",
        "answer": "0"
    },
    {
        "id": 794,
        "res": 0
    },
    {
        "id": 795,
        "res": 0
    },
    {
        "id": 796,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'fnuiyh'\n\nshould loosely deep-equal\n\n'ny'\n    at test (/tmp/tmpinmu6adv.js:14:10)\n    at Object.<anonymous> (/tmp/tmpinmu6adv.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'fnuiyh',\n  expected: 'ny',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(str, toget){\n    if (str.startsWith(toget)) {\n        return str.slice(toget.length);\n    } else {\n        return str;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"fnuiyh\", \"ni\"),\"ny\");\n}\n\ntest();\n\n",
        "answer": "\"ny\""
    },
    {
        "id": 797,
        "res": true,
        "code": "\nfunction f(dct){\n    let lst = [];\n    Object.keys(dct).sort().forEach(function(key) {\n        lst.push([key, dct[key]]);\n    });\n    return lst;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate({\"a\": 1, \"b\": 2, \"c\": 3}),[[\"a\", 1], [\"b\", 2], [\"c\", 3]]);\n}\n\ntest();\n\n",
        "answer": "[[\"a\", 1], [\"b\", 2], [\"c\", 3]]"
    },
    {
        "id": 798,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'@!'\n\nshould loosely deep-equal\n\n'hihu'\n    at test (/tmp/tmp8seszf_h.js:13:10)\n    at Object.<anonymous> (/tmp/tmp8seszf_h.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '@!',\n  expected: 'hihu',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(text, pre){\n    if (!text.startsWith(pre)) {\n        return text;\n    }\n    return text.substring(pre.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"@hihu@!\", \"@hihu\"),\"hihu\");\n}\n\ntest();\n\n",
        "answer": "\"hihu\""
    },
    {
        "id": 799,
        "res": false,
        "error": "AssertionError",
        "error_message": "node:assert:126\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'neqe-;ew22'\n\nshould loosely deep-equal\n\n'neither'\n    at test (/tmp/tmp21t4xb81.js:15:10)\n    at Object.<anonymous> (/tmp/tmp21t4xb81.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1434:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)\n    at Module.load (node:internal/modules/cjs/loader:1249:32)\n    at Module._load (node:internal/modules/cjs/loader:1065:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:158:12)\n    at node:internal/main/run_main_module:30:49 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'neqe-;ew22',\n  expected: 'neither',\n  operator: 'deepEqual'\n}\n\nNode.js v22.2.0\n",
        "code": "\nfunction f(st){\n    if (st[0] === '~') {\n        let e = st.padStart(10, 's');\n        return f(e);\n    } else {\n        return st.padStart(10, 'n');\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = f;\n  assert.deepEqual(candidate(\"eqe-;ew22\"),\"neither\");\n}\n\ntest();\n\n",
        "answer": "\"neither\""
    }
]