[
    {
        "id": 0,
        "res": true,
        "code": "\n\n# \nsub f {\n    my($nums) = @_;\n    my @output;\n    foreach my $n (@$nums) {\n        push @output, (scalar(grep {$_ == $n} @$nums), $n);\n    }\n    @output = sort {$b <=> $a} @output;\n    return @output;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 1, 3, 1, 3, 1]),(3, 1))) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "(3, 1)"
    },
    {
        "id": 1,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($a, $b, $c) = @_;\n    my %result;\n    foreach my $d ($a, $b, $c) {\n        %result = (%result, map {$_ => undef} @$d);\n    }\n    return \\%result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 3], [1, 4], [1, 2]),{1 => 1, 3 => 1, 4 => 1, 2 => undef})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{1 => 1, 3 => 1, 4 => 1, 2 => undef}"
    },
    {
        "id": 2,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nSmartmatch is experimental at /tmp/tmpjbeg967a.pl line 7.\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @new_text = split(//, $text);\n    for my $i ('+') {\n        if ($i ~~ @new_text) {\n            @new_text = grep { $_ ne $i } @new_text;\n        }\n    }\n    return join('', @new_text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"hbtofdeiequ\"),\"hello\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 3,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $value) = @_;\n    my @text_list = split(//, $text);\n    push @text_list, $value;\n    return join('', @text_list);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"bcksrut\", \"q\"),\"bcksrut\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"bcksrut\""
    },
    {
        "id": 4,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array) = @_;\n    my $s = ' ';\n    $s .= join('', @$array);\n    return $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\" \", \"  \", \"    \", \"   \"]),\"    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"    \""
    },
    {
        "id": 5,
        "res": 0
    },
    {
        "id": 6,
        "res": 0
    },
    {
        "id": 7,
        "res": true,
        "code": "\n# \nsub f {\n    my($lst) = @_;\n    my @original = @{$lst};\n    while(scalar @{$lst} > 1) {\n        pop @{$lst};\n        for(my $i = 0; $i < scalar @{$lst}; $i++) {\n            splice @{$lst}, $i, 1;\n        }\n    }\n    @{$lst} = @original;\n    if(scalar @{$lst} > 0) {\n        shift @{$lst};\n    }\n    return $lst;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[]"
    },
    {
        "id": 8,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($string, $encryption) = @_;\n    if ($encryption == 0) {\n        return $string;\n    } else {\n        return uc($string);\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"UppEr\", 0),\"HELLO\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"HELLO\""
    },
    {
        "id": 9,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\nuse strict;\nuse warnings;\n\nsub f {\n    my($t) = @_;\n    foreach my $c (split //, $t) {\n        if ($c !~ /^\\d+$/) {\n            return \"\";\n        }\n    }\n    return 1;\n}\n\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"#284376598\"),284376598)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "284376598"
    },
    {
        "id": 10,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $new_text = '';\n    foreach my $ch (split('', lc($text =~ s/^\\s+|\\s+$//gr))) {\n        if ($ch =~ /^\\d$/ or $ch =~ /^[ÄäÏïÖöÜü]$/) {\n            $new_text .= $ch;\n        }\n    }\n    return $new_text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"\"),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[]"
    },
    {
        "id": 11,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($a, $b) = @_;\n    foreach my $key (keys %$b) {\n        my $value = $b->{$key};\n        if (not exists $a->{$key}) {\n            $a->{$key} = [$value];\n        } else {\n            push @{$a->{$key}}, $value;\n        }\n    }\n    return $a;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({}, {\"foo\" => \"bar\"}),[\"bar\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"bar\"]"
    },
    {
        "id": 12,
        "res": true,
        "code": "\n# \nsub f {\n    my($s, $x) = @_;\n    my $count = 0;\n    while (substr($s, 0, length($x)) eq $x && $count < length($s) - length($x)) {\n        $s = substr($s, length($x));\n        $count += length($x);\n    }\n    return $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"If you want to live a happy life! Daniel\", \"Daniel\"),\"If you want to live a happy life! Daniel\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"If you want to live a happy life! Daniel\""
    },
    {
        "id": 13,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($names) = @_;\n    my @names = @{$names};\n    my $count = scalar @names;\n    my $numberOfNames = 0;\n    foreach my $name (@names) {\n        if ($name =~ /^[a-zA-Z]+$/) {\n            $numberOfNames++;\n        }\n    }\n    return $numberOfNames;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"sharron\", \"Savannah\", \"Mike Cherokee\"]),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "3"
    },
    {
        "id": 14,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s) = @_;\n    my @arr = reverse(split //, $s =~ s/^\\s+|\\s+$//gr);\n    return join('', @arr);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"   OOP   \"),\"oloh\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"oloh\""
    },
    {
        "id": 15,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $wrong, $right) = @_;\n    my $new_text = $text;\n    $new_text =~ s/$wrong/$right/g;\n    return uc($new_text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"zn kgd jw lnt\", \"h\", \"u\"),\"HELLO WORLD\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"HELLO WORLD\""
    },
    {
        "id": 16,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $suffix) = @_;\n    if (substr($text, -length($suffix)) eq $suffix) {\n        return substr($text, 0, length($text) - length($suffix));\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"zejrohaj\", \"owc\"),\"zejrohajowc\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"zejrohajowc\""
    },
    {
        "id": 17,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    return index($text, ',');\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"There are, no, commas, in this text\"),\"There are\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"There are\""
    },
    {
        "id": 18,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array, $elem) = @_;\n    my @array = @{$array};\n    my $k = 0;\n    my @l = @array;\n    foreach my $i (@l) {\n        if ($i > $elem) {\n            splice(@array, $k, 0, $elem);\n            last;\n        }\n        $k++;\n    }\n    return \\@array;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([5, 4, 3, 2, 1, 0], 3),[5, 4, 3, 2, 1, 0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[5, 4, 3, 2, 1, 0]"
    },
    {
        "id": 19,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($x, $y) = @_;\n    my $tmp = join('', map { $_ eq '9' ? '0' : '9' } reverse(split(//, $y)));\n    if ($x =~ /^\\d+$/ && $tmp =~ /^\\d+$/) {\n        return $x . $tmp;\n    } else {\n        return $x;\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"\", \"sdasdnakjsda80\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 20,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $result = '';\n    for (my $i = length($text)-1; $i >= 0; $i--) {\n        $result .= substr($text, $i, 1);\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"was,\"),\"was,,\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"was,,\""
    },
    {
        "id": 21,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array) = @_;\n    my $n = pop @$array;\n    push @$array, $n, $n;\n    return $array;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 1, 2, 2]),[1, 1, 2, 2, 2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 1, 2, 2, 2, 2]"
    },
    {
        "id": 22,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($a) = @_;\n    if ($a == 0) {\n        return [0];\n    }\n    my @result;\n    while ($a > 0) {\n        push @result, $a % 10;\n        $a = int($a / 10);\n    }\n    @result = reverse @result;\n    return int(join('', map {$_} @result));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(0),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 23,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $chars) = @_;\n    if ($chars) {\n        $text =~ s/[$chars]*$//;\n    } else {\n        $text =~ s/[ ]*$//;\n    }\n    if ($text eq '') {\n        return '-';\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"new-medium-performing-application - XQuery 2.2\", \"0123456789-\"),\"new-medium-performing-application\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"new-medium-performing-application\""
    },
    {
        "id": 24,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums, $i) = @_;\n    splice(@$nums, $i, 1);\n    return $nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([35, 45, 3, 61, 39, 27, 47], 0),[35, 45, 3, 61, 39, 27, 47])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[35, 45, 3, 61, 39, 27, 47]"
    },
    {
        "id": 25,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($d) = @_;\n    my %d = %$d;\n    my @keys = keys %d;\n    delete $d{$keys[-1]};\n    return \\%d;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"l\" => 1, \"t\" => 2, \"x:\" => 3}),{1, 2, 3})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{1, 2, 3}"
    },
    {
        "id": 26,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($items, $target) = @_;\n    my @items = split(' ', $items);\n    foreach my $i (@items) {\n        if(index($target, $i) >= 0) {\n            return index($items, $i) + 1;\n        }\n        if(index($i, '.') == length($i)-1 || index($i, '.') == 0) {\n            return 'error';\n        }\n    }\n    return '.';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"qy. dg. rnvprt rse.. irtwv tx..\", \"wtwdoacb\"),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "3"
    },
    {
        "id": 27,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($w) = @_;\n    my @ls = split(//, $w);\n    my $omw = '';\n    while (scalar @ls > 0) {\n        $omw .= shift @ls;\n        if (scalar @ls * 2 > length($w)) {\n            return substr($w, scalar @ls) eq $omw;\n        }\n    }\n    return 0;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"flak\"),\"flak\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"flak\""
    },
    {
        "id": 28,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($mylist) = @_;\n    my @revl = @{$mylist};\n    my @revl_copy = reverse @{$mylist};\n    @{$mylist} = sort {$b <=> $a} @{$mylist};\n    return \"@{$mylist}\" eq \"@revl_copy\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([5, 8]),[8, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[8, 5]"
    },
    {
        "id": 29,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @nums = grep { $_ =~ /^\\d+$/ } split('', $text);\n    die \"No numeric characters found\" unless @nums;\n    return join('', @nums);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"-123   \t+314\"),123)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "123"
    },
    {
        "id": 30,
        "res": true,
        "code": "\n# \nsub f {\n    my($array) = @_;\n    my @result;\n    foreach my $elem (@$array) {\n        if ($elem =~ m/^[[:ascii:]]+$/ || (ref($elem) eq 'SCALAR' && $elem >= 0 && abs($elem) =~ m/^[[:ascii:]]+$/)) {\n            push @result, $elem;\n        }\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"a\", \"b\", \"c\"]),[\"a\", \"b\", \"c\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"a\", \"b\", \"c\"]"
    },
    {
        "id": 31,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($string) = @_;\n    my $upper = 0;\n    foreach my $c (split(//, $string)) {\n        if (uc($c) eq $c) {\n            $upper += 1;\n        }\n    }\n    return $upper * (2, 1)[$upper % 2];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"PoIOarTvpoead\"),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "3"
    },
    {
        "id": 32,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nBareword found where operator expected at /tmp/tmpl9rxbwl0.pl line 14, near \"print \"ok\"\n  (Might be a runaway multi-line \"\" string starting on line 13)\n\t(Do you need to predeclare print?)\nsyntax error at /tmp/tmpl9rxbwl0.pl line 14, near \"print \"ok\"\nCan't find string terminator '\"' anywhere before EOF at /tmp/tmpl9rxbwl0.pl line 14.\n",
        "code": "\n# \nsub f {\n    my($s, $sep) = @_;\n    my @reverse = map {'*' . $_} split /$sep/, $s;\n    return join(';', reverse @reverse);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"volume\", \"l\"),\"l;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"l;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;ol;"
    },
    {
        "id": 33,
        "res": 0
    },
    {
        "id": 34,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums, $odd1, $odd2) = @_;\n    while (grep { $_ == $odd1 } @{$nums}) {\n        @{$nums} = grep { $_ != $odd1 } @{$nums};\n    }\n    while (grep { $_ == $odd2 } @{$nums}) {\n        @{$nums} = grep { $_ != $odd2 } @{$nums};\n    }\n    return $nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 3, 7, 7, 6, 8, 4, 1, 2, 3, 5, 1, 3, 21, 1, 3], 3, 1),[1, 2, 3, 7, 7, 6, 8, 4, 1, 2, 3, 5, 1, 3, 21, 1, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 2, 3, 7, 7, 6, 8, 4, 1, 2, 3, 5, 1, 3, 21, 1, 3]"
    },
    {
        "id": 35,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($pattern, $items) = @_;\n    my @result;\n    foreach my $text (@$items) {\n        my $pos = rindex($text, $pattern);\n        if ($pos >= 0) {\n            push @result, $pos;\n        }\n    }\n    \n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\" B \", [\" bBb \", \" BaB \", \" bB\", \" bBbB \", \" bbb\"]),[0, 1, 2, 3, 4])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[0, 1, 2, 3, 4]"
    },
    {
        "id": 36,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $chars) = @_;\n    return $text if !$text;\n    return substr($text, 0, rindex($text, $chars) + length($chars));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ha\", \"\"),\"h\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"h\""
    },
    {
        "id": 37,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @text_arr;\n    for (my $j = 0; $j < length($text); $j++) {\n        push @text_arr, substr($text, $j);\n    }\n    return \\@text_arr;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"123\"),[\"1\", \"2\", \"3\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"1\", \"2\", \"3\"]"
    },
    {
        "id": 38,
        "res": 0
    },
    {
        "id": 39,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nSmartmatch is experimental at /tmp/tmpwg_x5j11.pl line 6.\n",
        "code": "\n\n# \nsub f {\n    my($array, $elem) = @_;\n    if ($elem ~~ @$array) {\n        return grep { $array->[$_] eq $elem } 0..$#$array\n    }\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([6, 2, 7, 1], 6),6)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "6"
    },
    {
        "id": 40,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    return $text . \"#\" x (length($text)+1 - length($text));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"the cow goes moo\"),\"the cow goes moo#5\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"the cow goes moo#5\""
    },
    {
        "id": 41,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array, $values) = @_;\n    my @array = reverse(@$array);\n    foreach my $value (@$values) {\n        splice(@array, int(@array) / 2, 0, $value);\n    }\n    @array = reverse(@array);\n    return \\@array;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([58], [21, 92]),[92, 21, 58])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[92, 21, 58]"
    },
    {
        "id": 42,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    @$nums = ();  # clear the array\n    foreach my $num (@$nums) {\n        push @$nums, $num * 2;  # append the doubled number\n    }\n    return $nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([4, 3, 2, 1, 2, -1, 4, 2]),[8, 6, 4, 2, 2, -1, 8, 6, 4])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[8, 6, 4, 2, 2, -1, 8, 6, 4]"
    },
    {
        "id": 43,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($n) = @_;\n    foreach my $i (split(//, $n)) {\n        if ($i !~ /\\d/) {\n            $n = -1;\n            last;\n        }\n    }\n    return $n;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"6 ** 2\"),64)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "64"
    },
    {
        "id": 44,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @ls = split('', $text);\n    for my $i (0..$#ls) {\n        if ($ls[$i] ne '+') {\n            splice(@ls, $i, 0, '*', '+');\n            last;\n        }\n    }\n    return join('+', @ls);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"nzoh\"),\"n*oh\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"n*oh\""
    },
    {
        "id": 45,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $letter) = @_;\n    my %counts;\n    foreach my $char (split(//, $text)) {\n        if (!exists $counts{$char}) {\n            $counts{$char} = 1;\n        } else {\n            $counts{$char} += 1;\n        }\n    }\n    return $counts{$letter} // 0;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"za1fd1as8f7afasdfam97adfa\", \"7\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 46,
        "res": true,
        "code": "\n# \nsub f {\n    my($l, $c) = @_;\n    return join($c, @$l);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"many\", \"letters\", \"asvsz\", \"hello\", \"man\"], \"\"),\"manylettersasvszhelloman\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"manylettersasvszhelloman\""
    },
    {
        "id": 47,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    my $length = length $text;\n    my $half = int($length / 2);\n    my $encode = substr($text, 0, $half);\n    utf8::encode($encode);\n    return substr($text, $half) eq $encode;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"bbbbr\"),\"bbbbr\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"bbbbr\""
    },
    {
        "id": 48,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($names) = @_;\n    if (scalar @$names == 0) {\n        return \"\";\n    }\n    my $smallest = $names->[0];\n    foreach my $name (@$names[1..$#$names]) {\n        if ($name lt $smallest) {\n            $smallest = $name;\n        }\n    }\n    @$names = grep { $_ ne $smallest } @$names;\n    return join('', $smallest);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[]"
    },
    {
        "id": 49,
        "res": true,
        "code": "\n# \nsub f {\n    my($text) = @_;\n    if ($text =~ /^\\w+$/) {\n        return join('', grep { /\\d/ } split('', $text));\n    } else {\n        return join('', split('', $text));\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"816\"),816)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "816"
    },
    {
        "id": 50,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($lst) = @_;\n    $lst = [];\n    push(@$lst, (1) x scalar(@$lst + 1));\n    return $lst;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"a\", \"c\", \"v\"]),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[]"
    },
    {
        "id": 51,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($num) = @_;\n    my $s = '<' x 10;\n    if ($num % 2 == 0) {\n        return $s;\n    } else {\n        return $num - 1;\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(21),5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "5"
    },
    {
        "id": 52,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    my @a = ();\n    for my $i (0 .. length($text) - 1) {\n        if (!(substr($text, $i, 1) =~ /^\\d$/)) {\n            push(@a, substr($text, $i, 1));\n        }\n    }\n    return join('', @a);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"seiq7229 d27\"),\"seiq7229 d27\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"seiq7229 d27\""
    },
    {
        "id": 53,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my %occ;\n    my %name = ('a' => 'b', 'b' => 'c', 'c' => 'd', 'd' => 'e', 'e' => 'f');\n    my @chars = split(//, $text);\n    foreach my $ch (@chars) {\n        my $mapped_ch = $name{$ch} // $ch;\n        $occ{$mapped_ch} = $occ{$mapped_ch} + 1 || 1;\n    }\n    return [values %occ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"URW rNB\"),{'a' => 'b', 'b' => 'c', 'c' => 'd', 'd' => 'e', 'e' => 'f'})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{'a' => 'b', 'b' => 'c', 'c' => 'd', 'd' => 'e', 'e' => 'f'}"
    },
    {
        "id": 54,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $s, $e) = @_;\n    my $sublist = substr($text, $s, $e - $s);\n    if ($sublist eq \"\") {\n        return -1;\n    }\n    my @chars = split(\"\", $sublist);\n    my $min_char = (sort @chars)[0];\n    return index($sublist, $min_char);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"happy\", 0, 3),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 55,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array) = @_;\n    my @array_2;\n    foreach my $i (@$array) {\n        if ($i > 0) {\n            push @array_2, $i;\n        }\n    }\n    @array_2 = sort {$b <=> $a} @array_2;\n    return \\@array_2;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([4, 8, 17, 89, 43, 14]),[4, 8, 17, 14, 43, 89])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[4, 8, 17, 14, 43, 89]"
    },
    {
        "id": 56,
        "res": true,
        "code": "\n# \nsub f {\n    my($sentence) = @_;\n    foreach my $c (split //, $sentence) {\n        if ($c =~ /[^\\x00-\\x7F]/) {\n            return 0;\n        }\n    }\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"1z1z1\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 57,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    $text = uc($text);\n    my $count_upper = 0;\n    foreach my $char (split(//, $text)) {\n        if (uc($char) eq $char) {\n            $count_upper++;\n        } else {\n            return 'no';\n        }\n    }\n    return int($count_upper / 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ax\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 58,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @nums = @{$nums};\n    my $count = scalar @nums;\n    for my $i (map { $_ % 2 } 0..$count-1) {\n        push @nums, $nums[$i];\n    }\n    return \\@nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([-1, 0, 0, 1, 1]),[-1, 0, 0, 1, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[-1, 0, 0, 1, 1]"
    },
    {
        "id": 59,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s) = @_;\n    my @a = split('', $s);\n    my @b = @a;\n    for my $c (reverse @a) {\n        if ($c eq ' ') {\n            pop @b;\n        } else {\n            last;\n        }\n    }\n    return join('', @b);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"hi \"),\"olleh\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"olleh\""
    },
    {
        "id": 60,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($doc) = @_;\n    my @chars = split(//, $doc);\n    foreach my $x (@chars) {\n        if ($x =~ /[a-zA-Z]/) {\n            return uc $x;\n        }\n    }\n    return '-';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"raruwa\"),\"RARAWA\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"RARAWA\""
    },
    {
        "id": 61,
        "res": true,
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @texts = split(' ', $text);\n    if (@texts) {\n        my @xtexts = grep { /\\p{ascii}/ && $_ ne 'nada' && $_ ne '0' } @texts;\n        return (sort { length($b) <=> length($a) } @xtexts)[0] || 'nada';\n    }\n    return 'nada';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"\"),nada)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "nada"
    },
    {
        "id": 62,
        "res": 0
    },
    {
        "id": 63,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $prefix) = @_;\n    while (substr($text, 0, length($prefix)) eq $prefix) {\n        $text = substr($text, length($prefix)) || $text;\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ndbtdabdahesyehu\", \"n\"),\"y\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"y\""
    },
    {
        "id": 64,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $size) = @_;\n    my $counter = length($text);\n    for my $i (0..int($size-int($size%2))) {\n        $text = ' ' . $text . ' ';\n        $counter += 2;\n        if ($counter >= $size) {\n            return $text;\n        }\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"7\", 10),\"  7  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"  7  \""
    },
    {
        "id": 65,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums, $index) = @_;\n    return $nums->[$index] % 42 + splice(@$nums, $index, 1) * 2;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([3, 2, 0, 3, 7], 3),42)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "42"
    },
    {
        "id": 66,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $prefix) = @_;\n    my $prefix_length = length($prefix);\n    if (substr($text, 0, $prefix_length) eq $prefix) {\n        return reverse substr($text, ($prefix_length - 1) / 2, ($prefix_length + 1) / 2 - 1);\n    } else {\n        return $text;\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"happy\", \"ha\"),\"yap\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"yap\""
    },
    {
        "id": 67,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($num1, $num2, $num3) = @_;\n    my @nums = ($num1, $num2, $num3);\n    @nums = sort {$a <=> $b} @nums;\n    return \"$nums[0],$nums[1],$nums[2]\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(6, 8, 8),8,8,8)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "8,8,8"
    },
    {
        "id": 68,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $pref) = @_;\n    if (index($text, $pref) == 0) {\n        my $n = length $pref;\n        my @parts = split(/\\./, substr($text, $n));\n        @parts = @parts[1..$#parts];\n        push @parts, split(/\\./, substr($text, 0, $n));\n        pop @parts;\n        $text = join('.', @parts);\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"omeunhwpvr.dq\", \"omeunh\"),\"omeunhwpvr.dq\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"omeunhwpvr.dq\""
    },
    {
        "id": 69,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($student_marks, $name) = @_;\n    if(exists $student_marks->{$name}) {\n        my $value = delete $student_marks->{$name};\n        return $value;\n    }\n    return 'Name unknown';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"882afmfp\" => 56}, \"6f53p\"),\"882afmfp\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"882afmfp\""
    },
    {
        "id": 70,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($x) = @_;\n    my $a = 0;\n    my @words = split(' ', $x);\n    foreach my $i (@words) {\n        $a += length(sprintf(\"%0*d\", length($i) * 2, $i));\n    }\n    return $a;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"999893767522480\"),78)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "78"
    },
    {
        "id": 71,
        "res": 0
    },
    {
        "id": 72,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    foreach my $c (split('', $text)) {\n        if ($c !~ /^\\d$/) {\n            return 0;\n        }\n    }\n    return length($text) > 0 ? 1 : 0;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"99\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 73,
        "res": true,
        "code": "\n\n# \nsub f {\n    my($row) = @_;\n    $row =~ s/[01]//g;\n    my $count_1 = length($row);\n    $row =~ s/[01]//g;\n    my $count_0 = length($row);\n    return ($count_1, $count_0);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"100010010\"),(8, 4))) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "(8, 4)"
    },
    {
        "id": 74,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nSemicolon seems to be missing at /tmp/tmpbso6th89.pl line 18.\nsyntax error at /tmp/tmpbso6th89.pl line 13, near \",)\"\nMissing right curly or square bracket at /tmp/tmpbso6th89.pl line 20, at end of line\nExecution of /tmp/tmpbso6th89.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($lst, $i, $n) = @_;\n    splice(@{$lst}, $i, 0, $n);\n    return $lst;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([44, 34, 23, 82, 24, 11, 63, 99], 4, 15),[44, 34, 23, 82, 24, 11, 63, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[44, 34, 23, 82, 24, 11, 63, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,"
    },
    {
        "id": 75,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array, $elem) = @_;\n    my $ind = 0;\n    foreach my $i (0..$#{$array}) {\n        if ($array->[$i] == $elem) {\n            $ind = $i;\n            last;\n        }\n    }\n    return $ind * 2 + $array->[-$ind - 1] * 3;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([-1, 2, 1, -8, 2], 2),-2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "-2"
    },
    {
        "id": 76,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @nums = grep { $_ > 0 } @{$nums};\n    if (scalar @nums <= 3) {\n        return \\@nums;\n    }\n    @nums = reverse @nums;\n    my $half = int(@nums/2);\n    return [ @nums[0..$half-1], (0)x5, @nums[$half..$#nums] ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([10, 3, 2, 2, 6, 0]),[10, 3, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[10, 3, 2]"
    },
    {
        "id": 77,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $character) = @_;\n    my $subject = substr($text, rindex($text, $character));\n    return $subject x (() = $text =~ /$character/g);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"h ,lpvvkohh,u\", \"i\"),\"h ,lpvvkohh,u\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"h ,lpvvkohh,u\""
    },
    {
        "id": 78,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    if ($text && uc($text) eq $text) {\n        my $cs = uc(join(\"\", 'A'..'Z'));\n        my $trans = join(\"\", 'a'..'z');\n        $text =~ tr/$cs/$trans/;\n        return $text;\n    } else {\n        return lc(substr($text, 0, 3));\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n\"),\"Hello World\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"Hello World\""
    },
    {
        "id": 79,
        "res": true,
        "code": "\n# \nsub f {\n    my($arr) = @_;\n    my @arr = @{$arr};\n    @arr = ();\n    push @arr, '1';\n    push @arr, '2';\n    push @arr, '3';\n    push @arr, '4';\n    return join(',', @arr);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([0, 1, 2, 3, 4]),\"1,2,3,4\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"1,2,3,4\""
    },
    {
        "id": 80,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s) = @_;\n    return scalar reverse $s =~ s/\\s+$//r;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ab        \"),\"ab\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"ab\""
    },
    {
        "id": 81,
        "res": 0
    },
    {
        "id": 82,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($a, $b, $c, $d) = @_;\n    return $a && $b || $c && $d;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"CJU\", \"BFS\", \"WBYDZPVES\", \"Y\"),True)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "True"
    },
    {
        "id": 83,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @l = split /0/, $text, -1;\n    if ($l[-1] eq '') {\n        return \"-1:-1\";\n    }\n    return length($l[0]) . \":\" . (index($l[-1], \"0\") + 1);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"qq0tt\"),\"1:2\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"1:2\""
    },
    {
        "id": 84,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @arr = split(' ', $text);\n    my @result;\n    foreach my $item (@arr) {\n        if ($item =~ /day$/) {\n            $item .= 'y';\n        } else {\n            $item .= 'day';\n        }\n        push @result, $item;\n    }\n    return join(' ', @result);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"nwv mef ofme bdryl\"),\"ofme bdryl\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"ofme bdryl\""
    },
    {
        "id": 85,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nsyntax error at /tmp/tmp9_esz9mb.pl line 21, near \"-]\"\nExecution of /tmp/tmp9_esz9mb.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($n) = @_;\n    my %values = (0 => 3, 1 => 4.5, 2 => '-');\n    my %res;\n    foreach my $i (keys %values) {\n        my $j = $values{$i};\n        if ($i % $n != 2) {\n            $res{$j} = int($n / 2);\n        }\n    }\n    my @sorted_res = sort keys %res;\n    return \\@sorted_res;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(12),[3, 4.5, -])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[3, 4.5, -]"
    },
    {
        "id": 86,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($instagram, $imgur, $wins) = @_;\n    my @photos = ($instagram, $imgur);\n    if ($instagram eq $imgur) {\n        return $wins;\n    }\n    if ($wins == 1) {\n        return pop @photos;\n    } else {\n        @photos = reverse @photos;\n        return pop @photos;\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"sdfs\", \"drcr\", \"2e\"], [\"sdfs\", \"dr2c\", \"QWERTY\"], 0),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 87,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @reversed_nums = reverse @{$nums};\n    return join('', map {$_} @reversed_nums);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([-1, 9, 3, 1, -2]),\"-21\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"-21\""
    },
    {
        "id": 88,
        "res": true,
        "code": "\n# \nsub f {\n    my($s1, $s2) = @_;\n    if (substr($s2, -length($s1)) eq $s1) {\n        $s2 = substr($s2, 0, length($s2) - length($s1));\n    }\n    return $s2;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"he\", \"hello\"),\"hello\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 89,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($char) = @_;\n    if ($char !~ /[aeiouAEIOU]/) {\n        return undef;\n    }\n    if ($char =~ /[AEIOU]/) {\n        return lc($char);\n    }\n    return uc($char);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"o\"),undef)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "undef"
    },
    {
        "id": 90,
        "res": true,
        "code": "\n# \nsub f {\n    my($array) = @_;\n    my @return_arr;\n    foreach my $a (@$array) {\n        push @return_arr, [@$a];\n    }\n    return \\@return_arr;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([[1, 2, 3], [], [1, 2, 3]]),[[1, 2, 3], [], [1, 2, 3]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[[1, 2, 3], [], [1, 2, 3]]"
    },
    {
        "id": 91,
        "res": 0
    },
    {
        "id": 92,
        "res": 0
    },
    {
        "id": 93,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($n) = @_;\n    my $length = length($n) + 2;\n    my @revn = split(//, $n);\n    my $result = join('', @revn);\n    @revn = ();\n    return $result . ('!' x $length);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"iq\"),\"nigiriq!\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"nigiriq!\""
    },
    {
        "id": 94,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nsyntax error at /tmp/tmp0bfikhri.pl line 12, near \"w:\"\nExecution of /tmp/tmp0bfikhri.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($a, $b) = @_;\n    return { %$a, %$b };\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"w\" => 5, \"wi\" => 10}, {\"w\" => 3}),{w: 5, wi: 10})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{w: 5, wi: 10}"
    },
    {
        "id": 95,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($zoo) = @_;\n    my %zoo = %$zoo;\n    my %flipped_zoo = reverse %zoo;\n    return \\%flipped_zoo;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"AAA\" => \"fr\"}),{fr})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{fr}"
    },
    {
        "id": 96,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    return !grep {$_ eq uc $_} split //, $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"lunabotics\"),True)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "True"
    },
    {
        "id": 97,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($lst) = @_;\n    @{$lst} = ();\n    \n    foreach my $i (@{$lst}) {\n        if ($i == 3) {\n            return 0;\n        }\n    }\n    \n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([2, 0]),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 98,
        "res": true,
        "code": "\n# \nsub f {\n    my($s) = @_;\n    my $count = 0;\n    my @words = split(' ', $s);\n    foreach my $word (@words) {\n        $count += $word =~ /^[A-Z][a-z]*$/;\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"SOME OF THIS Is uknowN!\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 99,
        "res": 0
    },
    {
        "id": 100,
        "res": 0
    },
    {
        "id": 101,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array, $i_num, $elem) = @_;\n    splice(@$array, $i_num, 0, $elem);\n    return $array;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([-4, 1, 0], 1, 4),[-4, 1, 0, 1, 4])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[-4, 1, 0, 1, 4]"
    },
    {
        "id": 102,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($names, $winners) = @_;\n    my @ls;\n    for my $name (@$names) {\n        if (grep { $_ eq $name } @$winners) {\n            push @ls, index($names, $name);\n        }\n    }\n    @ls = sort { $b <=> $a } @ls;\n    return \\@ls;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"e\", \"f\", \"j\", \"x\", \"r\", \"k\"], [\"a\", \"v\", \"2\", \"im\", \"nb\", \"vj\", \"z\"]),[\"e\", \"f\", \"j\", \"x\", \"r\", \"k\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"e\", \"f\", \"j\", \"x\", \"r\", \"k\"]"
    },
    {
        "id": 103,
        "res": true,
        "code": "\n# \nsub f {\n    my($s) = @_;\n    return join('', map {lc($_)} split(//, $s));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"abcDEFGhIJ\"),\"abcdefghij\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"abcdefghij\""
    },
    {
        "id": 104,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my %dic;\n    my @chars = split('', $text);\n    foreach my $char (@chars) {\n        $dic{$char} = $dic{$char} ? $dic{$char} + 1 : 1;\n    }\n    foreach my $key (keys %dic) {\n        if ($dic{$key} > 1) {\n            $dic{$key} = 1;\n        }\n    }\n    return \\%dic;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"a\"),{})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{}"
    },
    {
        "id": 105,
        "res": 0
    },
    {
        "id": 106,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @nums = @{$nums};\n    my $count = scalar @nums;\n    for my $i (0..$count-1) {\n        splice @nums, $i, 0, $nums[$i]*2;\n    }\n    return \\@nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([2, 8, -2, 9, 3, 3]),[8, 12, 6, 9, 6, 12])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[8, 12, 6, 9, 6, 12]"
    },
    {
        "id": 107,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @result;\n    for(my $i = 0; $i < length($text); $i++) {\n        if(ord(substr($text, $i, 1)) > 127) {\n            return 0;\n        } elsif($text =~ /\\w/) {\n            push @result, uc(substr($text, $i, 1));\n        } else {\n            push @result, substr($text, $i, 1);\n        }\n    }\n    return join('', @result);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ua6hajq\"),\"HELLO\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"HELLO\""
    },
    {
        "id": 108,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($var) = @_;\n    my $amount = ref($var) eq 'ARRAY' ? scalar(@$var) : 0;\n    if(ref($var) eq 'HASH') {\n        $amount = scalar(keys %$var);\n    }\n    my $nonzero = $amount > 0 ? $amount : 0;\n    return $nonzero;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(1),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 109,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums, $spot, $idx) = @_;\n    splice(@$nums, $spot, 0, $idx);\n    return $nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 0, 1, 1], 0, 9),[1, 0, 1, 1, 0, 1, 1, 0, 1, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 0, 1, 1, 0, 1, 1, 0, 1, 1]"
    },
    {
        "id": 110,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @a = ('');\n    my $b = '';\n    foreach my $i (split(//, $text)) {\n        if ($i !~ /\\s/) {\n            push @a, $b;\n            $b = '';\n        } else {\n            $b .= $i;\n        }\n    }\n    return scalar(@a);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"       \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 111,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\nsub f {\n    my ($marks) = @_;\n    my $highest = 0;\n    my $lowest = 100;\n    foreach my $value (values %$marks) {\n        if ($value > $highest) {\n            $highest = $value;\n        }\n        if ($value < $lowest) {\n            $lowest = $value;\n        }\n    }\n    return [$highest, $lowest];\n}\n\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"x\" => 67, \"v\" => 89, \"\" => 4, \"alij\" => 11, \"kgfsd\" => 72, \"yafby\" => 83}),[67, 89])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[67, 89]"
    },
    {
        "id": 112,
        "res": 0
    },
    {
        "id": 113,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($line) = @_;\n    my @a = ();\n    my $count = 0;\n    for my $i (0..length($line)-1) {\n        $count += 1;\n        my $char = substr $line, $i, 1;\n        if ($count%2==0) {\n            $char =~ tr/a-zA-Z/A-Za-z/;\n        }\n        push @a, $char;\n    }\n    return join('', @a);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"987yhNSHAshd 93275yrgSgbgSshfbsfB\"),\"yhnshaShdSgbgSfbsfB\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"yhnshaShdSgbgSfbsfB\""
    },
    {
        "id": 114,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $sep) = @_;\n    my @fields = split /$sep/, $text, 3;\n    return \\@fields;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"a-.-.b\", \"-.\"),[\"a\", \"-\", \".-\", \"b\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"a\", \"-\", \".-\", \"b\"]"
    },
    {
        "id": 115,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    my @res = ();\n    for my $ch (split //, $text) {\n        if (ord($ch) == 61) {\n            last;\n        }\n        if (ord($ch) == 0) {\n            next;\n        }\n        push @res, ord($ch).'; ';\n    }\n    return 'b\\''.join('', @res).'\\'';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"os||agx5\"),\"bosc\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"bosc\""
    },
    {
        "id": 116,
        "res": true,
        "code": "\n# \nsub f {\n    my($d, $count) = @_;\n    for (my $i = 0; $i < $count; $i++) {\n        if (keys %$d == 0) {\n            last;\n        }\n        my $key = (keys %$d)[-1];\n        delete $d->{$key};\n    }\n    return $d;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({}, 200),{})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{}"
    },
    {
        "id": 117,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($numbers) = @_;\n    for my $i (0 .. length($numbers) - 1) {\n        if (my @counts = $numbers =~ /3/g) {\n            if (@counts > 1) {\n                return $i;\n            }\n        }\n    }\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"23157\"),2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "2"
    },
    {
        "id": 118,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $chars) = @_;\n    my $num_applies = 2;\n    my $extra_chars = '';\n    foreach my $i (0..$num_applies-1) {\n        $extra_chars .= $chars;\n        $text =~ s/\\Q$extra_chars\\E//g;\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"zbzquiuqnmfkx\", \"mk\"),\"zquiunmfkx\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"zquiunmfkx\""
    },
    {
        "id": 119,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $result = \"\";\n    for(my $i=0; $i<length($text); $i++) {\n        if($i % 2 == 0) {\n            $result .= uc(substr($text, $i, 1));\n        } else {\n            $result .= substr($text, $i, 1);\n        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"vsnlygltaw\"),\"vsnlygltaw\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"vsnlygltaw\""
    },
    {
        "id": 120,
        "res": true,
        "code": "\n# \nsub f {\n    my($countries) = @_;\n    my %language_country;\n    foreach my $country (keys %$countries) {\n        my $language = $countries->{$country};\n        if (not exists $language_country{$language}) {\n            $language_country{$language} = [];\n        }\n        push @{$language_country{$language}}, $country;\n    }\n    return \\%language_country;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({}),{})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{}"
    },
    {
        "id": 121,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s) = @_;\n    my $nums = join('', grep { $_ =~ /^\\d+$/ } split('', $s));\n    if ($nums eq '') {\n        return 'none';\n    }\n    my @num_list = split(',', $nums);\n    my $m = (sort { $b <=> $a } map { int($_) } @num_list)[0];\n    return \"$m\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"01,001\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 122,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($string) = @_;\n    if (substr($string, 0, 4) ne 'Nuva') {\n        return 'no';\n    } else {\n        return (split('\\s', $string))[0];\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Nuva?dlfuyjys\"),\"Nuva\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"Nuva\""
    },
    {
        "id": 123,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array, $elem) = @_;\n    my @array = @{$array};\n    for my $idx (0..$#array) {\n        if ($array[$idx] > $elem && $array[$idx - 1] < $elem) {\n            splice @array, $idx, 0, $elem;\n        }\n    }\n    return \\@array;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 3, 5, 8], 6),[1, 2, 3, 5, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 2, 3, 5, 6]"
    },
    {
        "id": 124,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($txt, $sep, $sep_count) = @_;\n    my $o = '';\n    while ($sep_count > 0 && $txt =~ /$sep/) {\n        $o .= (split(/$sep/, $txt, 2))[0] . $sep;\n        $txt = (split(/$sep/, $txt, 2))[1];\n        $sep_count--;\n    }\n    return $o . $txt;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"i like you\", \" \", -1),\"you\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"you\""
    },
    {
        "id": 125,
        "res": 0
    },
    {
        "id": 126,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    my @s = split('', $text);\n    foreach my $i (@s) {\n        if ($i eq 'o') {\n            my $div = ($s[0] eq '' ? '-' : $s[0]);\n            my $div2 = ($s[2] eq '' ? '-' : $s[2]);\n            return $s[1] . $div . $s[1] . $div2;\n        }\n    }\n    return '-' . $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"kkxkxxfck\"),\"kxkxf-ck\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"kxkxf-ck\""
    },
    {
        "id": 127,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @s = split('\\n', $text);\n    return scalar @s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"145\n\n12fjkjg\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 128,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $odd = '';\n    my $even = '';\n    my @chars = split('', $text);\n    foreach my $i (0..$#chars) {\n        if ($i % 2 == 0) {\n            $even .= $chars[$i];\n        } else {\n            $odd .= $chars[$i];\n        }\n    }\n    return $even . lc($odd);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Mammoth\"),M)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "M"
    },
    {
        "id": 129,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $search_string) = @_;\n    my @indexes;\n    while (index($text, $search_string) != -1) {\n        push @indexes, rindex($text, $search_string);\n        $text = substr($text, 0, rindex($text, $search_string));\n    }\n    return \\@indexes;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ONBPICJOHRHDJOSNCPNJ9ONTHBQCJ\", \"J\"),[5, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[5, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99]"
    },
    {
        "id": 130,
        "res": 0
    },
    {
        "id": 131,
        "res": true,
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $a = length($text);\n    my $count = 0;\n    while ($text) {\n        if ($text =~ /^a/) {\n            $count += index($text, ' ');\n        } else {\n            $count += index($text, \"\\n\");\n        }\n        $text = substr($text, index($text, \"\\n\")+1, index($text, \"\\n\")+$a+1);\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"a\nkgf\nasd\n\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 132,
        "res": 0
    },
    {
        "id": 133,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums, $elements) = @_;\n    my @result;\n    for my $i (0..scalar(@{$elements})-1) {\n        push @result, pop @{$nums};\n    }\n    return $nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([7, 1, 2, 6, 0, 2], [9, 0, 3]),[9, 0, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[9, 0, 3]"
    },
    {
        "id": 134,
        "res": true,
        "code": "\n# \nsub f {\n    my($n) = @_;\n    my $t = 0;\n    my $b = '';\n    my @digits = map {int} split(//, $n);\n    foreach my $d (@digits) {\n        if ($d == 0) {\n            $t += 1;\n        } else {\n            last;\n        }\n    }\n    for (my $i = 0; $i < $t; $i++) {\n        $b .= '1' . '0' . '4';\n    }\n    $b .= $n;\n    return $b;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(372359),372359)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "372359"
    },
    {
        "id": 135,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my() = @_;\n    my %d = (\n        'Russia' => [('Moscow', 'Russia'), ('Vladivostok', 'Russia')],\n        'Kazakhstan' => [('Astana', 'Kazakhstan')],\n    );\n    return [keys %d];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(),[\"Moscow\", \"Vladivostok\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"Moscow\", \"Vladivostok\"]"
    },
    {
        "id": 136,
        "res": 0
    },
    {
        "id": 137,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @nums = @{$nums};\n    my $count = 0;\n    \n    for my $i (0 .. $#nums) {\n        if (@nums == 0) {\n            last;\n        }\n        if ($count % 2 == 0) {\n            pop @nums;\n        } else {\n            shift @nums;\n        }\n        $count += 1;\n    }\n    \n    return \\@nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([3, 2, 0, 0, 2, 3]),[3, 2, 0, 0, 2, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[3, 2, 0, 0, 2, 3]"
    },
    {
        "id": 138,
        "res": true,
        "code": "\n# \nsub f {\n    my($text, $chars) = @_;\n    my @listchars = split('', $chars);\n    my $first = shift @listchars;\n    foreach my $i (@listchars) {\n        $text = substr($text, 0, index($text, $i)) . $i . substr($text, index($text, $i) + 1);\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"tflb omn rtt\", \"m\"),\"tflb omn rtt\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"tflb omn rtt\""
    },
    {
        "id": 139,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($first, $second) = @_;\n    if (scalar(@$first) < 10 || scalar(@$second) < 10) {\n        return 'no';\n    }\n    for my $i (0..4) {\n        if ($first->[$i] != $second->[$i]) {\n            return 'no';\n        }\n    }\n    push @$first, @$second;\n    return $first;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 1], [1, 1, 2]),[1, 1, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 1, 2]"
    },
    {
        "id": 140,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nCan't locate object method \"Hi\" via package \"there\" (perhaps you forgot to load \"there\"?) at /tmp/tmp9_zxaojg.pl line 16.\n",
        "code": "\n# \nsub f {\n    my($st) = @_;\n    if (index(lc($st), 'h', rindex(lc($st), 'i')) >= rindex(lc($st), 'i')) {\n        return 'Hey';\n    } else {\n        return 'Hi';\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Hi there\"),Hi there)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "Hi there"
    },
    {
        "id": 141,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($li) = @_;\n    my @result;\n    foreach my $i (@$li) {\n        push @result, scalar(grep { $_ eq $i } @$li);\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"k\", \"x\", \"c\", \"x\", \"x\", \"b\", \"l\", \"f\", \"r\", \"n\", \"g\"]),[0, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[0, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0]"
    },
    {
        "id": 142,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($x) = @_;\n    if (lc($x) eq $x) {\n        return $x;\n    } else {\n        return reverse($x);\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ykdfhp\"),\"skjh\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"skjh\""
    },
    {
        "id": 143,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s, $n) = @_;\n    return lc($s) eq lc($n);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"daaX\", \"daaX\"),True)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "True"
    },
    {
        "id": 144,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($vectors) = @_;\n    my @sorted_vecs;\n    foreach my $vec (@$vectors) {\n        my @sorted_vec = sort {$a <=> $b} @$vec;\n        push @sorted_vecs, \\@sorted_vec;\n    }\n    return \\@sorted_vecs;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([]),[3, 4, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[3, 4, 5]"
    },
    {
        "id": 145,
        "res": true,
        "code": "\n# \nsub f {\n    my($price, $product) = @_;\n    my @inventory = ('olives', 'key', 'orange');\n    if (not grep { $_ eq $product } @inventory) {\n        return $price;\n    } else {\n        $price *= 0.85;\n        @inventory = grep { $_ ne $product } @inventory;\n    }\n    return $price;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(8.5, \"grapes\"),8.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "8.5"
    },
    {
        "id": 146,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($single_digit) = @_;\n    my @result;\n    for my $c (1..10) {\n        if ($c != $single_digit) {\n            push @result, $c;\n        }\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(5),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 147,
        "res": true,
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my $middle = int(@{$nums} / 2);\n    return [@{$nums}[$middle..$#{$nums}], @{$nums}[0..$middle-1]];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 1, 1]),[1, 1, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 1, 1]"
    },
    {
        "id": 148,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($forest, $animal) = @_;\n    my $index = index($forest, $animal);\n    my @result = split('', $forest);\n    while ($index < length($forest)-1) {\n        $result[$index] = substr($forest, $index+1, 1);\n        $index++;\n    }\n    if ($index == length($forest)-1) {\n        $result[$index] = '-';\n    }\n    return join('', @result);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"2imo 12 tfiqr.\", \"m\"),\"imf-\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"imf-\""
    },
    {
        "id": 149,
        "res": 0
    },
    {
        "id": 150,
        "res": true,
        "code": "\n# \nsub f {\n    my($numbers, $index) = @_;\n    foreach my $n (@{$numbers}[$index..$#{$numbers}]) {\n        splice @{$numbers}, $index, 0, $n;\n        $index++;\n    }\n    return [@{$numbers}[0..$index-1]];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([-2, 4, -4], 0),[-2, 4, -4])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[-2, 4, -4]"
    },
    {
        "id": 151,
        "res": true,
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    for my $c (split //, $text) {\n        if ($c =~ /\\d/) {\n            $c = $c eq '0' ? '.' : ($c eq '1' ? '.' : '0');\n        }\n    }\n    return join('', split //, $text) =~ s/\\./\\0/gr;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"697 this is the ultimate 7 address to attack\"),\"697 this is the ultimate 7 address to attack\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"697 this is the ultimate 7 address to attack\""
    },
    {
        "id": 152,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    my $n = 0;\n    for my $char (split //, $text) {\n        $n++ if $char =~ /[A-Z]/;\n    }\n    return $n;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"AAAAAAAAAAAAAAAAAAAA\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 153,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $suffix, $num) = @_;\n    my $str_num = \"$num\";\n    return substr($text, -length $suffix - length $str_num) eq $suffix . $str_num;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"friends and love\", \"and\", 3),\"llo\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"llo\""
    },
    {
        "id": 154,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s, $c) = @_;\n    my @s = split(' ', $s);\n    return $c . \"  \" . join(\"  \", reverse(@s));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Hello There\", \"*\"),\"ereht  lleH\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"ereht  lleH\""
    },
    {
        "id": 155,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($ip, $n) = @_;\n    my $i = 0;\n    my $out = '';\n    foreach my $c (split('', $ip)) {\n        if ($i == $n) {\n            $out .= \"\\n\";\n            $i = 0;\n        }\n        $i++;\n        $out .= $c;\n    }\n    return $out;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"dskjs hjcdjnxhjicnn\", 4),dskj)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "dskj"
    },
    {
        "id": 156,
        "res": true,
        "code": "\n# \nsub f {\n    my($text, $limit, $char) = @_;\n    if ($limit < length($text)) {\n        return substr($text, 0, $limit);\n    }\n    return $text . $char x ($limit - length($text));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"tqzym\", 5, \"c\"),\"tqzym\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"tqzym\""
    },
    {
        "id": 157,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($phrase) = @_;\n    my $ans = 0;\n    my @words = split(' ', $phrase);\n    foreach my $word (@words) {\n        foreach my $char (split('', $word)) {\n            if ($char eq \"0\") {\n                $ans += 1;\n            }\n        }\n    }\n    return $ans;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"aboba 212 has 0 digits\"),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "3"
    },
    {
        "id": 158,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($arr) = @_;\n    my @n = grep { $_ % 2 == 0 } @$arr;\n    my @m = (@n, @$arr);\n    @m = grep { my $i = $_; scalar(grep { $_ == $i } @n) } @m;\n    return \\@m;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([3, 6, 4, -2, 5]),[6, 4, -2, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[6, 4, -2, 5]"
    },
    {
        "id": 159,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($st) = @_;\n    my $swapped = '';\n    foreach my $ch (reverse(split(//, $st))) {\n        $swapped .= uc($ch) eq $ch ? lc($ch) : uc($ch);\n    }\n    return $swapped;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"RTiGM\"),\"r\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"r\""
    },
    {
        "id": 160,
        "res": true,
        "code": "\n# \nsub f {\n    my($dictionary) = @_;\n    while(!exists $dictionary->{1} || scalar keys %$dictionary == 0){\n        %$dictionary = ();\n        last;\n    }\n    return $dictionary;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({1 => 47698, 1 => 32849, 1 => 38381, 3 => 83607}),{1 => 47698, 1 => 32849, 1 => 38381, 3 => 83607})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{1 => 47698, 1 => 32849, 1 => 38381, 3 => 83607}"
    },
    {
        "id": 161,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $value) = @_;\n    my ($left, $right) = split /$value/, $text, 2;\n    return $right . $left;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"difkj rinpx\", \"k\"),\"rinpx difkj\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"rinpx difkj\""
    },
    {
        "id": 162,
        "res": 0
    },
    {
        "id": 163,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $space_symbol, $size) = @_;\n    my $spaces = $space_symbol x ($size - length($text));\n    return $text . $spaces;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"w\", \"))\", 7),\"w \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"w \""
    },
    {
        "id": 164,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($lst) = @_;\n    my @sorted = sort { $a <=> $b } @$lst;\n    return [@sorted[0..2]];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([5, 8, 1, 3, 0]),[0, 1, 3, 5, 8])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[0, 1, 3, 5, 8]"
    },
    {
        "id": 165,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $lower, $upper) = @_;\n    return substr($text, $lower, $upper - $lower) =~ m/^[\\x00-\\x7F]*\\z/;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"=xtanp|sugv?z\", 3, 6),\"tansp\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"tansp\""
    },
    {
        "id": 166,
        "res": true,
        "code": "\n# \nsub f {\n    my($graph) = @_;\n    my %new_graph;\n    foreach my $key (keys %{$graph}) {\n        $new_graph{$key} = {};\n        foreach my $subkey (keys %{$graph->{$key}}) {\n            $new_graph{$key}{$subkey} = '';\n        }\n    }\n    return \\%new_graph;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({}),{})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{}"
    },
    {
        "id": 167,
        "res": 0
    },
    {
        "id": 168,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $new_value, $index) = @_;\n    my $key = $text;\n    my $old_char = substr($text, $index, 1);\n    my $new_char = $new_value;\n    $key =~ s/\\Q$old_char/$new_char/;\n    return $key;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"spain\", \"b\", 4),\"spain\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"spain\""
    },
    {
        "id": 169,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    my @ls = split(//, $text);\n    my $total = (length($text) - 1) * 2;\n    for my $i (1..$total) {\n        if ($i % 2) {\n            push(@ls, '+');\n        } else {\n            unshift(@ls, '+');\n        }\n    }\n    return join('', @ls);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"taole\"),\"a+o+e+r+l+\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"a+o+e+r+l+\""
    },
    {
        "id": 170,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums, $number) = @_;\n    return scalar(grep { $_ == $number } @$nums);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([12, 0, 13, 4, 12], 12),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 171,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @nums = @{$nums};\n    my $count = int(@nums / 2);\n    for (my $i = 0; $i < $count; $i++) {\n        shift @nums;\n    }\n    return \\@nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([3, 4, 1, 2, 3]),[3, 4, 1, 2, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[3, 4, 1, 2, 3]"
    },
    {
        "id": 172,
        "res": true,
        "code": "\n# \nsub f {\n    my($array) = @_;\n    for my $i (0..$#{$array}) {\n        if ($array->[$i] < 0) {\n            splice @{$array}, $i, 1;\n            $i--; # adjust index after removing element\n        }\n    }\n    return $array;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[]"
    },
    {
        "id": 173,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($list_x) = @_;\n    my @new_list;\n    my $item_count = scalar @{$list_x};\n    for (my $i = 0; $i < $item_count; $i++) {\n        push @new_list, pop @{$list_x};\n    }\n    return \\@new_list;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([5, 8, 6, 8, 4]),[5, 8, 6, 8, 4])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[5, 8, 6, 8, 4]"
    },
    {
        "id": 174,
        "res": true,
        "code": "\n\nsub f {\n    my($lst) = @_;\n    my @new_lst = @{$lst}[0, 2, 1];\n    return \\@new_lst;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 3]),[1, 3, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 3, 2]"
    },
    {
        "id": 175,
        "res": 0
    },
    {
        "id": 176,
        "res": true,
        "code": "\n# \nsub f {\n    my($text, $to_place) = @_;\n    my $after_place = substr($text, 0, index($text, $to_place) + 1);\n    my $before_place = substr($text, index($text, $to_place) + 1);\n    return $after_place . $before_place;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"some text\", \"some\"),\"some text\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"some text\""
    },
    {
        "id": 177,
        "res": 0
    },
    {
        "id": 178,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array, $n) = @_;\n    return [@{$array}[$n..$#{$array}]];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([0, 0, 1, 2, 2, 2, 2], 4),[0, 2, 2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[0, 2, 2, 2]"
    },
    {
        "id": 179,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @nums = @$nums;  # make a copy of nums\n    my $count = scalar @nums;\n    for (my $i = -$count+1; $i < 0; $i++) {\n        unshift @nums, $nums[$i];\n    }\n    return \\@nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([7, 1, 2, 6, 0, 2]),[7, 1, 2, 6, 0, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[7, 1, 2, 6, 0, 2]"
    },
    {
        "id": 180,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @nums = @$nums;\n    my $a = -1;\n    my @b = @nums[1..$#nums];\n    while ($a <= $b[0]) {\n        @nums = grep { $_ != $b[0] } @nums;\n        $a = 0;\n        @b = @b[1..$#b];\n    }\n    return \\@nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([-1, 5, 3, -2, -6, 8, 8]),[-1, 5, 3, -2, -6, 8, 8])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[-1, 5, 3, -2, -6, 8, 8]"
    },
    {
        "id": 181,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s) = @_;\n    my $count = 0;\n    my $digits = \"\";\n    foreach my $c (split //, $s) {\n        if ($c =~ /\\d/) {\n            $count++;\n            $digits .= $c;\n        }\n    }\n    return [$digits, $count];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"qwfasgahh329kn12a23\"),(\"qwfasgahh329kn12a23\",5))) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "(\"qwfasgahh329kn12a23\",5)"
    },
    {
        "id": 182,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($dic) = @_;\n    my @pairs = sort { $a->[0] cmp $b->[0] } map { [ $_ => $dic->{$_} ] } keys %$dic;\n    return \\@pairs;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"b\" => 1, \"a\" => 2}),[\"a\", \"b\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"a\", \"b\"]"
    },
    {
        "id": 183,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    my @ls = split / /, $text;\n    my @lines = split / /, join(\" \", @ls[grep { $_ % 3 == 0 } 0..$#ls]);\n    my @res;\n    for my $i (0..1) {\n        my @ln = @ls[grep { $_ % 3 == 1 } 0..$#ls];\n        if (3 * $i + 1 < @ln) {\n            push @res, join(\" \", @ln[3 * $i..3 * ($i + 1) - 1]);\n        }\n    }\n    return [@lines, @res];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"echo hello!!! nice!\"),[\"hello!!!\", \"nice!\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"hello!!!\", \"nice!\"]"
    },
    {
        "id": 184,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($digits) = @_;\n    my @digits = @$digits;\n    @digits = reverse @digits;\n    if (scalar @digits < 2) {\n        return \\@digits;\n    }\n    for my $i (0..$#digits) {\n        if ($i % 2 == 0 && $i + 1 <= $#digits) {\n            ($digits[$i], $digits[$i+1]) = ($digits[$i+1], $digits[$i]);\n        }\n    }\n    return \\@digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2]),[2, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[2, 1]"
    },
    {
        "id": 185,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($L) = @_;\n    my @L = @{$L};\n    my $N = scalar @L;\n    for my $k (1..int($N/2)) {\n        my $i = $k - 1;\n        my $j = $N - $k;\n        while ($i < $j) {\n            # swap elements:\n            ($L[$i], $L[$j]) = ($L[$j], $L[$i]);\n            # update i, j:\n            $i++;\n            $j--;\n        }\n    }\n    return \\@L;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([16, 14, 12, 7, 9, 11]),[16, 14, 12, 7, 9, 11])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[16, 14, 12, 7, 9, 11]"
    },
    {
        "id": 186,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    return join(' ', map {my $s = $_; $s =~ s/^\\s+//; $s} split(' ', $text));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"pvtso\"),\"please\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"please\""
    },
    {
        "id": 187,
        "res": true,
        "code": "\n# \nsub f {\n    my($d, $index) = @_;\n    my @keys = keys %$d;\n    my $length = scalar @keys;\n    my $idx = $index % $length;\n    my @values = values %$d;\n    my $v = pop @values;\n    for (1..$idx) {\n        pop @values;\n    }\n    return $v;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({27 => 39}, 1),39)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "39"
    },
    {
        "id": 188,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($strings) = @_;\n    my @new_strings;\n    foreach my $string (@$strings) {\n        my $first_two = substr($string, 0, 2);\n        if ($first_two =~ /^[ap]/){\n            push(@new_strings, $first_two);\n        }\n    }\n    return \\@new_strings;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"a\", \"b\", \"car\", \"d\"]),[\"a\", \"b\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"a\", \"b\"]"
    },
    {
        "id": 189,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($out, $mapping) = @_;\n    foreach my $key (keys %$mapping) {\n        $out =~ s/{$_}/$mapping->{$_}[1]/g foreach keys %$mapping;\n        last if ($out !~ m/{\\w}/);\n        $mapping->{$key}[1] = reverse($mapping->{$key}[1]);\n    }\n    return $out;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"{{{{}}}}\", {}),\"{{{}}}{{}}\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"{{{}}}{{}}\""
    },
    {
        "id": 190,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $short = '';\n    for my $c (split('', $text)) {\n        if ($c =~ /[a-z]/) {\n            $short .= $c;\n        }\n    }\n    return $short;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"980jio80jic kld094398IIl \"),\"kld\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"kld\""
    },
    {
        "id": 191,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($string) = @_;\n    return $string eq uc($string);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Ohno\"),\"Ohno\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"Ohno\""
    },
    {
        "id": 192,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $suffix) = @_;\n    my $output = $text;\n    while ($text =~ /$suffix\\z/) {\n        $output = substr($text, 0, length($text) - length($suffix));\n        $text = $output;\n    }\n    return $output;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"!klcd!ma:ri\", \"!\"),\"kclcdma\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"kclcdma\""
    },
    {
        "id": 193,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($string) = @_;\n    my $count = () = $string =~ /:/g;\n    return substr($string, 0, rindex($string, ':')) . substr($string, rindex($string, ':')+1);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"1::1\"),\"1::1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"1::1\""
    },
    {
        "id": 194,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($matr, $insert_loc) = @_;\n    splice(@$matr, $insert_loc, 0, []);\n    return $matr;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([[5, 6, 2, 3], [1, 9, 5, 6]], 0),[[5, 6, 2, 3], [1, 9, 5, 6], [], []])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[[5, 6, 2, 3], [1, 9, 5, 6], [], []]"
    },
    {
        "id": 195,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @p = ('acs', 'asp', 'scn');\n    foreach my $p (@p) {\n        $text =~ s/^$p//;\n        $text = $text . ' ';\n    }\n    $text =~ s/^ //;\n    $text = substr($text, 0, -1);\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ilfdoirwirmtoibsac\"),\"acs asp scn\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"acs asp scn\""
    },
    {
        "id": 196,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    $text =~ s/ x/ x./g;\n    if (ucfirst $text eq $text) { return 'correct' }\n    $text =~ s/ x./ x/g;\n    return 'mixed';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"398 Is A Poor Year To Sow\"),\"is a poor year\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"is a poor year\""
    },
    {
        "id": 197,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nBareword found where operator expected at /tmp/tmp_zfux24h.pl line 15, near \"1 oC\"\n\t(Missing operator before oC?)\nNumber found where operator expected at /tmp/tmp_zfux24h.pl line 15, near \"oC 1234567890\"\n\t(Do you need to predeclare oC?)\nsyntax error at /tmp/tmp_zfux24h.pl line 15, near \"1 oC \"\nExecution of /tmp/tmp_zfux24h.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($temp, $timeLimit) = @_;\n    my $s = int($timeLimit / $temp);\n    my $e = $timeLimit % $temp;\n    return $e . \" oC\" if $s <= 1;\n    return \"$s $e\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(1, 1234567890),1 oC 1234567890)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1 oC 1234567890"
    },
    {
        "id": 198,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $strip_chars) = @_;\n    $text = reverse($text);\n    $text =~ s/^[$strip_chars]+//;\n    $text =~ s/[$strip_chars]+$//;\n    $text = reverse($text);\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"tcmfsmj\", \"cfj\"),\"tcmfsmj\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"tcmfsmj\""
    },
    {
        "id": 199,
        "res": true,
        "code": "\n# \nsub f {\n    my($s, $char) = @_;\n    my $base = $char x ($s =~ tr/$char// + 1);\n    return $s =~ s/\\Q$base\\E$//r;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"mnmnj krupa...##!@#!@#$$@##\", \"@\"),\"mnmnj krupa...##!@#!@#$$@##\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"mnmnj krupa...##!@#!@#$$@##\""
    },
    {
        "id": 200,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $value) = @_;\n    my $length = length($text);\n    my $index = 0;\n    while ($length > 0) {\n        $value = substr($text, $index, 1) . $value;\n        $length -= 1;\n        $index += 1;\n    }\n    return $value;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"jao mt\", \"house\"),\"jao mt\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"jao mt\""
    },
    {
        "id": 201,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @chars;\n    foreach my $c (split(//, $text)) {\n        if ($c =~ /\\d/) {\n            push @chars, $c;\n        }\n    }\n    return join('', reverse @chars);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"--4yrw 251-//4 6p\"),\"nawirf\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"nawirf\""
    },
    {
        "id": 202,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($array, $lst) = @_;\n    push(@$array, @$lst);\n    my @evens = grep { $_ % 2 == 0 } @$array;\n    return [grep { $_ >= 10 } @$array];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([2, 15], [15, 1]),[15, 2, 15, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[15, 2, 15, 1]"
    },
    {
        "id": 203,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($d) = @_;\n    %{$d} = ();\n    return $d;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"a\" => \"3\", \"b\" => \"-1\", \"c\" => \"Dum\"}),\"3\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"3\""
    },
    {
        "id": 204,
        "res": true,
        "code": "\n# \nsub f {\n    my($name) = @_;\n    return ($name->[0], reverse($name->[1])->[0]);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"master. \"),\"siht. nohtyP\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"siht. nohtyP\""
    },
    {
        "id": 205,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($a) = @_;\n    for (my $i = 0; $i < 10; $i++) {\n        my @chars = split //, $a;\n        my $j;\n        for ($j = 0; $j < @chars; $j++) {\n            if ($chars[$j] ne '#') {\n                $a = substr($a, $j);\n                last;\n            }\n        }\n        if ($j == @chars) {\n            $a = \"\";\n            last;\n        }\n    }\n    \n    while (substr($a, -1) eq '#') {\n        $a = substr($a, 0, -1);\n    }\n    \n    return $a;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"##fiu##nk#he###wumun##\"),\"fuunhe###wumun\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"fuunhe###wumun\""
    },
    {
        "id": 206,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($a) = @_;\n    return join(' ', split(' ', $a));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\" h e l l o   w o r l d! \"),\"hello world\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"hello world\""
    },
    {
        "id": 207,
        "res": true,
        "code": "\n# \nsub f {\n    my($commands) = @_;\n    my %d;\n    foreach my $c (@{$commands}) {\n        foreach my $key (keys %{$c}) {\n            $d{$key} = $c->{$key};\n        }\n    }\n    return \\%d;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([{\"brown\" => 2}, {\"blue\" => 5}, {\"bright\" => 4}]),{\n    \"brown\" => 2,\n    \"blue\" => 5,\n    \"bright\" => 4\n})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{\n    \"brown\" => 2,\n    \"blue\" => 5,\n    \"bright\" => 4\n}"
    },
    {
        "id": 208,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($items) = @_;\n    my @result;\n    foreach my $item (@$items) {\n        foreach my $d (split('', $item)) {\n            if ($d !~ /^\\d$/) {\n                push @result, $d;\n            }\n        }\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"123\", \"cat\", \"d dee\"]),[\"1\", \"2\", \"3\", \"c\", \"a\", \"d\", \"e\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"1\", \"2\", \"3\", \"c\", \"a\", \"d\", \"e\"]"
    },
    {
        "id": 209,
        "res": 0
    },
    {
        "id": 210,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($n, $m, $num) = @_;\n    my @x_list = ($n..$m);\n    my $j = 0;\n    while (1) {\n        $j = ($j + $num) % scalar(@x_list);\n        if ($x_list[$j] % 2 == 0) {\n            return $x_list[$j];\n        }\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(46, 48, 21),48)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "48"
    },
    {
        "id": 211,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s) = @_;\n    my $count = 0;\n    my @chars = split('', $s);\n    foreach my $c (@chars) {\n        if (rindex($s, $c) != index($s, $c)) {\n            $count += 1;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"abca dea ead\"),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "3"
    },
    {
        "id": 212,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    for my $i (0..scalar(@$nums) - 2) {\n        @$nums = reverse @$nums;\n    }\n    return $nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, -9, 7, 2, 6, -3, 3]),[-9, 7, 2, 6, 3, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[-9, 7, 2, 6, 3, 1]"
    },
    {
        "id": 213,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s) = @_;\n    $s =~ s/\\(/\\[/g;\n    $s =~ s/\\)/\\]/g;\n    return $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"(ac)\"),[ac])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[ac]"
    },
    {
        "id": 214,
        "res": 0
    },
    {
        "id": 215,
        "res": true,
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $new_text = $text;\n    while (length($text) > 1 && substr($text, 0, 1) eq substr($text, -1, 1)) {\n        $new_text = $text = substr($text, 1, length($text) - 2);\n    }\n    return $new_text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\")\"),\")\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\")\""
    },
    {
        "id": 216,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($letters) = @_;\n    my $count = 0;\n    foreach my $l (split(//, $letters)) {\n        if ($l =~ /\\d/) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"dp ef1 gh2\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 217,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($string) = @_;\n    if ($string =~ /^[a-zA-Z0-9]+$/){\n        return \"ascii encoded is allowed for this language\";\n    }\n    return \"more than ASCII\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Str zahrnuje anglo-ameriæske vasi piscina and kuca!\"),\"ascii encoded is allowed for this language\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"ascii encoded is allowed for this language\""
    },
    {
        "id": 218,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($string, $sep) = @_;\n    my $cnt = () = $string =~ /$sep/g;\n    return scalar reverse(($string . $sep) x $cnt);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"caabcfcabfc\", \"ab\"),\"cafcbafcab\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"cafcbafcab\""
    },
    {
        "id": 219,
        "res": 0
    },
    {
        "id": 220,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $m, $n) = @_;\n    my $text = $text . substr($text, 0, $m) . substr($text, $n);\n    my $result = \"\";\n    for (my $i = $n; $i < length($text)-$m; $i++) {\n        $result = substr($text, $i, 1) . $result;\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"abcdefgabc\", 1, 2),\"abc\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"abc\""
    },
    {
        "id": 221,
        "res": 0
    },
    {
        "id": 222,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($mess, $char) = @_;\n    while (index($mess, $char, rindex($mess, $char) + 1) != -1) {\n        my $index = rindex($mess, $char) + 1;\n        $mess = substr($mess, 0, $index) . substr($mess, $index + 1);\n    }\n    return $mess;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"0aabbaa0b\", \"a\"),\"0bab\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"0bab\""
    },
    {
        "id": 223,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array, $target) = @_;\n    my $count = 0;\n    my $i = 1;\n    for my $j (1..scalar(@$array) - 1) {\n        if (($array->[$j] > $array->[$j-1]) and ($array->[$j] <= $target)) {\n            $count += $i;\n        } elsif ($array->[$j] <= $array->[$j-1]) {\n            $i = 1;\n        } else {\n            $i += 1;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, -1, 4], 2),2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "2"
    },
    {
        "id": 224,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array, $value) = @_;\n    my @array = reverse(@$array);\n    pop @array;\n    my @odd;\n    while (@array) {\n        my %tmp;\n        $tmp{pop @array} = $value;\n        push @odd, \\%tmp;\n    }\n    my %result;\n    while (@odd) {\n        my %tmp = %{pop @odd};\n        %result = (%result, %tmp);\n    }\n    return \\%result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"23\"], 123),[123])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[123]"
    },
    {
        "id": 225,
        "res": 0
    },
    {
        "id": 226,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    foreach my $i (0..$#{$nums}) {\n        if ($nums->[$i] % 3 == 0) {\n            push @{$nums}, $nums->[$i];\n        }\n    }\n    return $nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 3]),[1, 3, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 3, 5]"
    },
    {
        "id": 227,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    $text = lc($text);\n    my $head = substr($text, 0, 1);\n    my $tail = substr($text, 1);\n    return uc($head) . $tail;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Manolo\"),\"M\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"M\""
    },
    {
        "id": 228,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $splitter) = @_;\n    return join $splitter, split(' ', lc $text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"LlTHH sAfLAPkPhtsWP\", \"#\"),\"LTHH sAfLAPkPhtsWP\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"LTHH sAfLAPkPhtsWP\""
    },
    {
        "id": 229,
        "res": 0
    },
    {
        "id": 230,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $result = '';\n    my $i = length($text) - 1;\n    while ($i >= 0) {\n        my $c = substr($text, $i, 1);\n        if ($c =~ /[a-zA-Z]/) {\n            $result .= $c;\n        }\n        $i--;\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"102x0zoq\"),\"qoznax\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"qoznax\""
    },
    {
        "id": 231,
        "res": true,
        "code": "\n# \nsub f {\n    my($years) = @_;\n    my $a10 = scalar(grep {$_ <= 1900} @$years);\n    my $a90 = scalar(grep {$_ > 1910} @$years);\n    \n    if ($a10 > 3) {\n        return 3;\n    } elsif ($a90 > 3) {\n        return 1;\n    } else {\n        return 2;\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1872, 1995, 1945]),2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "2"
    },
    {
        "id": 232,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $changes) = @_;\n    my $result = '';\n    my $count = 0;\n    my @changes = split(\"\", $changes);\n    foreach my $char (split(\"\", $text)) {\n        $result .= $char if $char eq 'e';\n        $result .= $changes[$count % scalar(@changes)] if $char ne 'e';\n        $count += ($char ne 'e' ? 1 : 0);\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"fssnvd\", \"yes\"),\"fssnvdyes\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"fssnvdyes\""
    },
    {
        "id": 233,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($xs) = @_;\n    for my $idx (reverse (-1-$#$xs) .. 0) {\n        unshift @$xs, splice @$xs, 0, 1;\n    }\n    return $xs;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 3]),[3, 2, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[3, 2, 1]"
    },
    {
        "id": 234,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $char) = @_;\n    my $position = length($text);\n    if (index($text, $char) >= 0) {\n        $position = index($text, $char);\n        if ($position > 1) {\n            $position = ($position + 1) % length($text);\n        }\n    }\n    return $position;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"wduhzxlfk\", \"w\"),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "3"
    },
    {
        "id": 235,
        "res": true,
        "code": "\n# \nsub f {\n    my($array, $arr) = @_;\n    my @result;\n    foreach my $s (@$arr) {\n        push @result, grep { $_ ne '' } split($arr->[$array->index($s)], $s);\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([], []),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[]"
    },
    {
        "id": 236,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array) = @_;\n    my @array = @{$array};\n    if (@array == 1) {\n        return join('', @array);\n    }\n    my @result = @array;\n    my $i = 0;\n    while ($i < @array - 1) {\n        for my $j (0..1) {\n            $result[$i*2] = $array[$i];\n            $i++;\n        }\n    }\n    return join('', @result);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"ac8\", \"qk6\", \"9wg\"]),ac8qk69wg)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "ac8qk69wg"
    },
    {
        "id": 237,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $char) = @_;\n    if (index($text, $char) != -1) {\n        my ($suff, $pref) = split(/$char/, $text, 2);\n        $pref = $suff . substr($suff, length($char)) . $char . $pref;\n        return $suff . $char . $pref;\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"uzlwaqiaj\", \"u\"),\"lwaqiaju\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"lwaqiaju\""
    },
    {
        "id": 238,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($ls, $n) = @_;\n    my $answer = 0;\n    foreach my $i (@{$ls}) {\n        if ($i->[0] == $n) {\n            $answer = $i;\n        }\n    }\n    return $answer;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([[1, 9, 4], [83, 0, 5], [9, 6, 100]], 1),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 239,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $froms) = @_;\n    return $text =~ s/^[$froms]+|[$froms]+$//rg;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"0 t 1cos \", \"st 0\t\n  \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 240,
        "res": true,
        "code": "\n# \nsub f {\n    my($float_number) = @_;\n    my $number = $float_number;\n    my $dot = index($number, '.');\n    if ($dot != -1) {\n        return substr($number, 0, $dot) . '.' . substr($number, $dot+1) . '0' x (2 - length(substr($number, $dot+1)));\n    }\n    return $number . '.00';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(3.121),3.121)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "3.121"
    },
    {
        "id": 241,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($postcode) = @_;\n    return substr($postcode, index($postcode, 'C'));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ED20 CW\"),\"20\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"20\""
    },
    {
        "id": 242,
        "res": true,
        "code": "\n# \nsub f {\n    my($book) = @_;\n    my @a = split(':', $book, 2);\n    my @words_before_last = split(' ', $a[0]);\n    my @words_after_first = split(' ', $a[1]);\n    \n    if ($words_before_last[-1] eq $words_after_first[0]) {\n        return f(join(' ', @words_before_last[0 .. $#words_before_last - 1]) . ' ' . $a[1]);\n    }\n    return $book;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"udhv zcvi nhtnfyd :erwuyawa pun\"),\"udhv zcvi nhtnfyd :erwuyawa pun\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"udhv zcvi nhtnfyd :erwuyawa pun\""
    },
    {
        "id": 243,
        "res": true,
        "code": "\n# \nsub f {\n    my($text, $char) = @_;\n    return lc($char) eq $char && lc($text) eq $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"abc\", \"e\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 244,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $symbols) = @_;\n    my $count = 0;\n    if ($symbols) {\n        foreach my $i (split('', $symbols)) {\n            $count += 1;\n        }\n        $text = $text x $count;\n    }\n    return substr(' ' x ($count*2) . $text, 0, length($text) + $count*2 - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"\", \"BC1ty\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"\""
    },
    {
        "id": 245,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($alphabet, $s) = @_;\n    my @a = grep { index(uc($s), $_) != -1 } split('', $alphabet);\n    if ($s eq uc($s)) {\n        push @a, 'all_uppercased';\n    }\n    return \\@a;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"abcdefghijklmnopqrstuvwxyz\", \"uppercased # % ^ @ ! vz.\"),[\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"]"
    },
    {
        "id": 246,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($haystack, $needle) = @_;\n    for my $i (reverse 0..index($haystack, $needle)) {\n        if (substr($haystack, $i) eq $needle) {\n            return $i;\n        }\n    }\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"345gerghjehg\", \"345\"),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "3"
    },
    {
        "id": 247,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s) = @_;\n    if ($s =~ /^[a-zA-Z]+$/) {\n        return \"yes\";\n    }\n    if ($s eq \"\") {\n        return \"str is empty\";\n    }\n    return \"no\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Boolean\"),\"Boolean\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"Boolean\""
    },
    {
        "id": 248,
        "res": true,
        "code": "\n# \nsub f {\n    my($a, $b) = @_;\n    @$a = sort {$a <=> $b} @$a;\n    @$b = sort {$b <=> $a} @$b;\n    return [@$a, @$b];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([666], []),[666])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[666]"
    },
    {
        "id": 249,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nsyntax error at /tmp/tmp9910q9o0.pl line 20, near \"'a':\"\nExecution of /tmp/tmp9910q9o0.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($s) = @_;\n    my %count;\n    foreach my $i (split(//, $s)) {\n        if ($i =~ /[a-z]/) {\n            $count{lc($i)} = () = $s =~ /$i/g + $count{lc($i)};\n        } else {\n            $count{lc($i)} = () = $s =~ /$i/g + $count{lc($i)};\n        }\n    }\n    return \\%count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"FSA\"),{'a': 1, 'b': 1, 'c': 1, 'f': 1, 's': 1})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{'a': 1, 'b': 1, 'c': 1, 'f': 1, 's': 1}"
    },
    {
        "id": 250,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $count = length($text);\n    for my $i (-$count+1..-1) {\n        $text = $text . substr($text, $i, 1);\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"wlace A\"),\"wlace A\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"wlace A\""
    },
    {
        "id": 251,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($messages) = @_;\n    my $phone_code = \"+353\";\n    my @result;\n    for my $message (@$messages) {\n        push @$message, split //, $phone_code;\n        push @result, join \";\", @$message;\n    }\n    return join \". \", @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([[\"Marie\", \"Nelson\", \"Oscar\"]]),[\"Marie;Nelson;Oscar\", \"123-456-7890\", \"555-555-5555\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"Marie;Nelson;Oscar\", \"123-456-7890\", \"555-555-5555\"]"
    },
    {
        "id": 252,
        "res": 0
    },
    {
        "id": 253,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $pref) = @_;\n    my $length = length($pref);\n    if ($pref eq substr($text, 0, $length)) {\n        return substr($text, $length);\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"kumwwfv\", \"k\"),\"kumwwfv\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"kumwwfv\""
    },
    {
        "id": 254,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $repl) = @_;\n    my $trans = {};\n    @{$trans}{split //, lc $text} = split //, lc $repl;\n    \n    my @text = split //, $text;\n    for my $i (0..$#text) {\n        if (exists $trans->{lc $text[$i]}) {\n            $text[$i] = $trans->{lc $text[$i]};\n        }\n    }\n    \n    return join '', @text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"upper case\", \"lower case\"),\"HELLO WORLD\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"HELLO WORLD\""
    },
    {
        "id": 255,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $fill, $size) = @_;\n    if ($size < 0) {\n        $size = -$size;\n    }\n    if (length($text) > $size) {\n        return substr($text, length($text) - $size);\n    }\n    return sprintf(\"%*s\", $size, $text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"no asw\", \"j\", 1),\"no asw\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"no asw\""
    },
    {
        "id": 256,
        "res": true,
        "code": "\n\nsub f {\n    my($text, $sub) = @_;\n    my $a = 0;\n    my $b = length($text) - 1;\n\n    while ($a <= $b) {\n        my $c = int(($a + $b) / 2);\n        if (rindex($text, $sub) >= $c) {\n            $a = $c + 1;\n        }\n        else {\n            $b = $c - 1;\n        }\n    }\n\n    return $a;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"dorfunctions\", \"2\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 257,
        "res": 0
    },
    {
        "id": 258,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($L, $m, $start, $step) = @_;\n    splice(@$L, $start, 0, $m);\n    for my $x (reverse($start-1 .. 1)) {\n        $start -= 1;\n        splice(@$L, $start, 0, splice(@$L, firstidx { $_ == $m } @$L, 1));\n    }\n    return $L;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 7, 9], 3, 3, 2),[1, 2, 7, 9])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 2, 7, 9]"
    },
    {
        "id": 259,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @new_text;\n    foreach my $character (split('', $text)) {\n        if ($character =~ /[A-Z]/) {\n            splice(@new_text, int(@new_text) / 2, 0, $character);\n        }\n    }\n    if (scalar @new_text == 0) {\n        @new_text = ('-');\n    }\n    return join('', @new_text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"String matching is a big part of RexEx library.\"),\"String\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"String\""
    },
    {
        "id": 260,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums, $start, $k) = @_;\n    splice(@$nums, $start, $k, reverse(@$nums[$start..($start+$k-1)]));\n    return $nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 3, 4, 5, 6], 4, 2),[4, 3, 2, 1, 6, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[4, 3, 2, 1, 6, 5]"
    },
    {
        "id": 261,
        "res": 0
    },
    {
        "id": 262,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my $count = scalar(@$nums);\n    my %score = (0 => \"F\", 1 => \"E\", 2 => \"D\", 3 => \"C\", 4 => \"B\", 5 => \"A\", 6 => \"\");\n    my @result;\n    for my $i (0..$count-1) {\n        push @result, $score{$nums->[$i]};\n    }\n    return join('', @result);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([4, 5]),\"FEDCBA\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"FEDCBA\""
    },
    {
        "id": 263,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($base, $delta) = @_;\n    my @base = @{$base};\n    my @delta = @{$delta};\n    \n    for my $j (0 .. $#delta) {\n        for my $i (0 .. $#base) {\n            if ($base[$i] eq $delta[$j][0]) {\n                die \"AssertionError\" if $delta[$j][1] eq $base[$i];\n                $base[$i] = $delta[$j][1];\n            }\n        }\n    }\n    return \\@base;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"gloss\", \"banana\", \"barn\", \"lawn\"], []),gloss)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "gloss"
    },
    {
        "id": 264,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($test_str) = @_;\n    my $s = $test_str;\n    $s =~ s/a/A/g;\n    $s =~ s/e/A/g;\n    return $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"papera\"),\"PAINTER\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"PAINTER\""
    },
    {
        "id": 265,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($d, $k) = @_;\n    my %new_d;\n    foreach my $key (keys %$d) {\n        my $val = $d->{$key};\n        if ($key < $k) {\n            $new_d{$key} = $val;\n        }\n    }\n    return \\%new_d;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({1 => 2, 2 => 4, 3 => 3}, 3),{1 => 2, 2 => 4, 3 => 3})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{1 => 2, 2 => 4, 3 => 3}"
    },
    {
        "id": 266,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @nums = @{$nums};\n    for (my $i = scalar @nums - 1; $i >= 0; $i--) {\n        if ($nums[$i] % 2 == 1) {\n            splice @nums, $i+1, 0, $nums[$i];\n        }\n    }\n    return \\@nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([2, 3, 4, 6, -2]),[2, 3, 4, 6, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[2, 3, 4, 6, -2]"
    },
    {
        "id": 267,
        "res": true,
        "code": "\n# \nsub f {\n    my($text, $space) = @_;\n    if($space < 0) {\n        return $text;\n    }\n    return substr($text, 0, length($text) / 2 + $space) . ' ' x $space;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"sowpf\", -7),\"sowpf\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"sowpf\""
    },
    {
        "id": 268,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nTransliteration pattern not terminated at /tmp/tmpna9zh0wz.pl line 18.\n",
        "code": "\n# \nsub f {\n    my($s, $separator) = @_;\n    for(my $i = 0; $i < length($s); $i++) {\n        if(substr($s, $i, 1) eq $separator){\n            my @new_s = split('', $s);\n            $new_s[$i] = '/';\n            return join(' ', @new_s);\n        }\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"h grateful k\", \" \"),h/a/r/y/k)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "h/a/r/y/k"
    },
    {
        "id": 269,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array) = @_;\n    my @array = @{$array};\n    my $zero_len = (scalar @array - 1) % 3;\n    for my $i (0..$zero_len-1) {\n        $array[$i] = '0';\n    }\n    for my $i ($zero_len+1..$#array) {\n        splice @array, $i-1, 3, '0', '0', '0';\n    }\n    return \\@array;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([9, 2]),[9, 2, 0, 0, 0, 0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[9, 2, 0, 0, 0, 0]"
    },
    {
        "id": 270,
        "res": true,
        "code": "\n# \nsub f {\n    my($dic) = @_;\n    my %d;\n    while (my ($key, $value) = each %$dic) {\n        $d{$key} = delete $dic->{$key};\n    }\n    return \\%d;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({}),{})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{}"
    },
    {
        "id": 271,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $c) = @_;\n    my @ls = split('', $text);\n    if (index($text, $c) == -1) {\n        die \"Text has no $c\\n\";\n    }\n    splice(@ls, rindex($text, $c), 1);\n    return join('', @ls);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"uufhl\", \"l\"),\"hello\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 272,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($base_list, $nums) = @_;\n    push @$base_list, @$nums;\n    my @res = @$base_list;\n    for my $i (-scalar(@$nums)..-1) {\n        push @res, $res[$i];\n    }\n    return \\@res;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([9, 7, 5, 3, 1], [2, 4, 6, 8, 0]),[9, 7, 5, 3, 1, 2, 4, 6, 8, 0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[9, 7, 5, 3, 1, 2, 4, 6, 8, 0]"
    },
    {
        "id": 273,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($name) = @_;\n    my $new_name = '';\n    $name = reverse($name);\n    for my $i (0..length($name)-1) {\n        my $n = substr($name, $i, 1);\n        if ($n ne '.' && $new_name =~ tr/././ < 2) {\n            $new_name = $n . $new_name;\n        } else {\n            last;\n        }\n    }\n    return $new_name;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\".NET\"),\".NET\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\".NET\""
    },
    {
        "id": 274,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums, $target) = @_;\n    my $count = 0;\n    foreach my $n1 (@$nums) {\n        foreach my $n2 (@$nums) {\n            $count += ($n1 + $n2 == $target);\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 3], 4),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 275,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($dic) = @_;\n    my %dic2 = reverse %$dic;\n    return \\%dic2;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({-1 => \"a\", 0 => \"b\", 1 => \"c\"}),{0 => \"c\", 1 => \"b\", -1 => \"a\"})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{0 => \"c\", 1 => \"b\", -1 => \"a\"}"
    },
    {
        "id": 276,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($a) = @_;\n    if (scalar(@$a) >= 2 && $a->[0] > 0 && $a->[1] > 0) {\n        @$a = reverse(@$a);\n        return $a;\n    }\n    push @$a, 0;\n    return $a;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([]),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 277,
        "res": true,
        "code": "\n# \nsub f {\n    my($lst, $mode) = @_;\n    my @result = @{$lst};\n    if ($mode) {\n        @result = reverse @result;\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 3, 4], 1),[4, 3, 2, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[4, 3, 2, 1]"
    },
    {
        "id": 278,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array1, $array2) = @_;\n    my %result;\n    foreach my $key (@$array1) {\n        $result{$key} = [grep { $key * 2 > $_ } @$array2];\n    }\n    return \\%result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([0, 132], [5, 991, 32, 997]),{0 => [], 132 => [], 5 => [], 991 => [], 32 => [], 997 => []})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{0 => [], 132 => [], 5 => [], 991 => [], 32 => [], 997 => []}"
    },
    {
        "id": 279,
        "res": true,
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $ans = '';\n    while ($text ne '') {\n        my ($x, $sep, $rest) = split(/\\(/, $text, 2);\n        $ans = $x . $sep =~ s/\\(/|/rg . $ans;\n        $ans = $ans . substr($rest, 0, 1) . $ans;\n        $text = substr($rest, 1);\n    }\n    return $ans;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"\"),'')) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "''"
    },
    {
        "id": 280,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    my $field = $text;\n    $field =~ s/ //g;\n    my $g = $text;\n    $g =~ s/0/ /g;\n    $text =~ s/1/i/g;\n\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"00000000 00000000 01101100 01100101 01101110\"),\"hello\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 281,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nsyntax error at /tmp/tmp16tdtwy6.pl line 19, near \"\"xcrWt\":\"\nExecution of /tmp/tmp16tdtwy6.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($c, $index, $value) = @_;\n    $c->{$index} = $value;\n    if ($value >= 3) {\n        $c->{message} = 'xcrWt';\n    } else {\n        delete $c->{message};\n    }\n    return $c;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({1 => 2, 3 => 4, 5 => 6, \"message\" => \"qrTHo\"}, 8, 2),{\n    \"xcrWt\": [\n        5,\n        6,\n        \"qrTHo\"\n    ],\n    \"message\": \"qrTHo\"\n})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{\n    \"xcrWt\": [\n        5,\n        6,\n        \"qrTHo\"\n    ],\n    \"message\": \"qrTHo\"\n}"
    },
    {
        "id": 282,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s1, $s2) = @_;\n    my $position = 1;\n    my $count = 0;\n    while ($position > 0) {\n        $position = index($s1, $s2, $position);\n        $count++;\n        $position++;\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"xinyyexyxx\", \"xx\"),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "3"
    },
    {
        "id": 283,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($dictionary, $key) = @_;\n    delete $dictionary->{$key};\n    if ($key eq (sort keys %$dictionary)[0]) {\n        $key = (keys %$dictionary)[0];\n    }\n    return $key;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"Iron Man\" => 4, \"Captain America\" => 3, \"Black Panther\" => 0, \"Thor\" => 1, \"Ant-Man\" => 6}, \"Iron Man\"),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "4"
    },
    {
        "id": 284,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $prefix) = @_;\n    my $idx = 0;\n    foreach my $letter (split(//, $prefix)) {\n        if (substr($text, $idx, 1) ne $letter) {\n            return undef;\n        }\n        $idx++;\n    }\n    return substr($text, $idx);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"bestest\", \"bestest\"),\"bestest\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"bestest\""
    },
    {
        "id": 285,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $ch) = @_;\n    return scalar(() = $text =~ /$ch/g);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"This be Pirate's Speak for 'help'!\", \" \"),8)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "8"
    },
    {
        "id": 286,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array, $x, $i) = @_;\n    my @array = @$array;\n    if ($i < -$#array || $i > $#array) {\n        return 'no';\n    }\n    my $temp = $array[$i];\n    $array[$i] = $x;\n    return \\@array;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 11, 4),[1, 2, 3, 4, 5, 6, 7, 8, 9, 10])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
    },
    {
        "id": 287,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($name) = @_;\n    if (lc($name) eq $name) {\n        $name = uc($name);\n    } else {\n        $name = lc($name);\n    }\n    return $name;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Pinneaple\"),\"Pinneaple\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"Pinneaple\""
    },
    {
        "id": 288,
        "res": 0
    },
    {
        "id": 289,
        "res": 0
    },
    {
        "id": 290,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $prefix) = @_;\n    if (index($text, $prefix) == 0) {\n        return substr($text, length($prefix));\n    }\n    if (index($text, $prefix) != -1) {\n        $text =~ s/$prefix//g;\n        $text =~ s/^\\s+|\\s+$//g;\n        return $text;\n    }\n    return uc($text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"abixaaaily\", \"al\"),\"abixaaaily\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"abixaaaily\""
    },
    {
        "id": 291,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($dictionary, $arr) = @_;\n    my %dictionary = %$dictionary;\n    my @arr = @$arr;\n    \n    $dictionary{$arr[0]} = [$arr[1]];\n    if (scalar @{$dictionary{$arr[0]}} == $arr[1]) {\n        $dictionary{$arr[0]} = $arr[0];\n    }\n    \n    return \\%dictionary;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({}, [\"a\", 2]),{a => 2})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{a => 2}"
    },
    {
        "id": 292,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @new_text = map { $_ =~ /\\d/ ? $_ : '*' } split('', $text);\n    return join('', @new_text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"5f83u23saa\"),\"*****\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"*****\""
    },
    {
        "id": 293,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $s = lc($text);\n    for(my $i = 0; $i < length($s); $i++) {\n        if (substr($s, $i, 1) eq 'x') {\n            return 'no';\n        }\n    }\n    return $text eq uc($text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"dEXE\"),\"dEEXE\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"dEEXE\""
    },
    {
        "id": 294,
        "res": 0
    },
    {
        "id": 295,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($fruits) = @_;\n    if ($fruits->[-1] eq $fruits->[0]) {\n        return 'no';\n    } else {\n        shift @{$fruits};\n        pop @{$fruits};\n        shift @{$fruits};\n        pop @{$fruits};\n        return $fruits;\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"apple\", \"apple\", \"pear\", \"banana\", \"pear\", \"orange\", \"orange\"]),\"apple\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"apple\""
    },
    {
        "id": 296,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($url) = @_;\n    $url =~ s/^http:\\/\\/www\\.//;\n    return $url;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"https://www.www.ekapusta.com/image/url\"),\"https://www.ekapusta.com/image/url\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"https://www.ekapusta.com/image/url\""
    },
    {
        "id": 297,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nCan't locate object method \"Half\" via package \"Life\" (perhaps you forgot to load \"Life\"?) at /tmp/tmpa2up40jv.pl line 15.\n",
        "code": "\n# \nsub f {\n    my($num) = @_;\n    if (0 < $num && $num < 1000 && $num != 6174) {\n        return 'Half Life';\n    }\n    return 'Not found';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(6173),Half Life)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "Half Life"
    },
    {
        "id": 298,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @new_text = split(//, $text);\n    for (my $i = 0; $i < scalar @new_text; $i++) {\n        my $character = $new_text[$i];\n        my $new_character = lc $character ^ uc $character ^ $character;\n        $new_text[$i] = $new_character;\n    }\n    return join('', @new_text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"dst vavf n dmv dfvm gamcu dgcvb.\"),\"dest vavf n dmv dfvm gamcu dgcvb.\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"dest vavf n dmv dfvm gamcu dgcvb.\""
    },
    {
        "id": 299,
        "res": true,
        "code": "\n# \nsub f {\n    my($text, $char) = @_;\n    if (substr($text, -length($char)) ne $char) {\n        return f($char . $text, $char);\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"staovk\", \"k\"),\"staovk\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"staovk\""
    },
    {
        "id": 300,
        "res": true,
        "code": "\n\n# \nsub f {\n    my($nums) = @_;\n    my $count = 1;\n    for my $i ($count..$#$nums - 1) {\n        if ($i % 2 == 1) {\n            $nums->[$i] = ($nums->[$i] > $nums->[$count - 1]) ? $nums->[$i] : $nums->[$count - 1];\n            $count++;\n        }\n    }\n    return $nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 3]),[1, 2, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 2, 3]"
    },
    {
        "id": 301,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @nums = @{$nums};\n    my $count = scalar @nums;\n    for my $i (-$count+1..-1) {\n        push @nums, $nums[$i], $nums[$i];\n    }\n    return \\@nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([0, 6, 2, -1, -2]),[0, 6, 2, -1, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[0, 6, 2, -1, -2]"
    },
    {
        "id": 302,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($string) = @_;\n    $string =~ s/needles/haystacks/g;\n    return $string;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"wdeejjjzsjsjjsxjjneddaddddddefsfd\"),\"hello world\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"hello world\""
    },
    {
        "id": 303,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $i = (length($text) + 1) / 2;\n    my @result = split('', $text);\n    while ($i < length($text)) {\n        my $t = lc($result[$i]);\n        if ($t eq $result[$i]) {\n            $i++;\n        } else {\n            $result[$i] = $t;\n        }\n        $i += 2;\n    }\n    return join('', @result);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"mJkLbn\"),\"MJLBN\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"MJLBN\""
    },
    {
        "id": 304,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($d) = @_;\n    my @sorted_keys = sort { $b <=> $a } keys %$d;\n    my $key1 = $sorted_keys[0];\n    my $val1 = delete $d->{$key1};\n    my $key2 = $sorted_keys[1];\n    my $val2 = delete $d->{$key2};\n    return { $key1 => $val1, $key2 => $val2 };\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({2 => 3, 17 => 3, 16 => 6, 18 => 6, 87 => 7}),{16 => 6, 18 => 6, 2 => 3, 17 => 3, 87 => 7})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{16 => 6, 18 => 6, 2 => 3, 17 => 3, 87 => 7}"
    },
    {
        "id": 305,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $char) = @_;\n    my $length = length($text);\n    my $index = -1;\n    for (my $i = 0; $i < $length; $i++) {\n        if (substr($text, $i, 1) eq $char) {\n            $index = $i;\n        }\n    }\n    if ($index == -1) {\n        $index = int($length / 2);\n    }\n    my @new_text = split(//, $text);\n    splice(@new_text, $index, 1);\n    return join('', @new_text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"o horseto\", \"r\"),\"horseto\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"horseto\""
    },
    {
        "id": 306,
        "res": true,
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @digits;\n    foreach my $num (@$nums) {\n        if ((ref($num) eq 'SCALAR' and ${$num} =~ /^\\d+$/) or ref($num) eq '') {\n            push @digits, $num;\n        }\n    }\n    @digits = map { int($_) } @digits;\n    return \\@digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([0, 6, \"1\", \"2\", 0]),[0, 6, 1, 2, 0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[0, 6, 1, 2, 0]"
    },
    {
        "id": 307,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @rtext = split(//, $text);\n    for my $i (1 .. scalar(@rtext) - 2) {\n        splice(@rtext, $i + 1, 0, '|');\n    }\n    return join('', @rtext);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"pxcznyf\"),\"|px|cz|ny|f|\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"|px|cz|ny|f|\""
    },
    {
        "id": 308,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nsyntax error at /tmp/tmp5la_y3uy.pl line 19, near \"\"La\":\"\nExecution of /tmp/tmp5la_y3uy.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($strings) = @_;\n    my %occurances;\n    foreach my $string (@$strings) {\n        if (not exists $occurances{$string}) {\n            $occurances{$string} = scalar(grep { $_ eq $string } @$strings);\n        }\n    }\n    return \\%occurances;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"La\", \"Q\", \"9\", \"La\", \"La\"]),{\n    \"La\": 2,\n    \"Q\": 1,\n    \"9\": 1\n})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{\n    \"La\": 2,\n    \"Q\": 1,\n    \"9\": 1\n}"
    },
    {
        "id": 309,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $suffix) = @_;\n    $text .= $suffix;\n    while (substr($text, -length($suffix)) eq $suffix) {\n        $text = substr($text, 0, -1);\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"faqo osax f\", \"f\"),\"faqo osax f\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"faqo osax f\""
    },
    {
        "id": 310,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($strands) = @_;\n    my @subs = @$strands;\n    for my $i (0..$#subs) {\n        my @chars = split('', $subs[$i]);\n        for (1..int(@chars/2)) {\n            $subs[$i] = $chars[-1] . join('', @chars[1..$#chars-1]) . $chars[0];\n        }\n    }\n    return join('', @subs);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"__\", \"1\", \".\", \"0\", \"r0\", \"__\", \"a_j\", \"6\", \"__\", \"6\"]),\"1.0r0a_j6\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"1.0r0a_j6\""
    },
    {
        "id": 311,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    $text =~ s/#/1/g;\n    $text =~ s/\\$/5/g;\n    \n    return $text =~ /^\\d+$/ ? 'yes' : 'no';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"A\"),\"yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"yes\""
    },
    {
        "id": 312,
        "res": true,
        "code": "\n# \nsub f {\n    my($s) = @_;\n    if ($s =~ /^[a-zA-Z0-9]+$/) {\n        return \"True\";\n    }\n    return \"False\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"777\"),\"True\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"True\""
    },
    {
        "id": 313,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s, $l) = @_;\n    return substr($s . '=' x ($l - length($s)), 0, $l - 1);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"urecord\", 8),\"record\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"record\""
    },
    {
        "id": 314,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    if ($text =~ /,/) {\n        my ($before, $after) = split(/,/, $text, 2);\n        return $after . ' ' . $before;\n    }\n    return ',' . (split(/ /, $text))[-1] . ' 0';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"244, 105, -90\"),\"105,244\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"105,244\""
    },
    {
        "id": 315,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($challenge) = @_;\n    my $result = lc($challenge);\n    $result =~ s/l/,/g;\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"czywZ\"),\"czywZ\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"czywZ\""
    },
    {
        "id": 316,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($name) = @_;\n    return '| ' . join(' ', split(' ', $name)) . ' |';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"i am your father\"),\"i am your father\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"i am your father\""
    },
    {
        "id": 317,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $a, $b) = @_;\n    $text =~ s/$a/$b/g;\n    return $text =~ s/$b/$a/gr;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\" vup a zwwo oihee amuwuuw! \", \"a\", \"u\"),\"vup amuwuuw!\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"vup amuwuuw!\""
    },
    {
        "id": 318,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($value, $char) = @_;\n    my $total = 0;\n    foreach my $c (split(//, $value)) {\n        if ($c eq $char or $c eq lc $char) {\n            $total += 1;\n        }\n    }\n    return $total;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"234rtccde\", \"e\"),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "3"
    },
    {
        "id": 319,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($needle, $haystack) = @_;\n    my $count = 0;\n    while (index($haystack, $needle) != -1) {\n        $haystack =~ s/\\Q$needle\\E//;\n        $count++;\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"a\", \"xxxaaxaaxx\"),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "3"
    },
    {
        "id": 320,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    my $index = 1;\n    my $text_len = length($text);\n    while ($index < $text_len) {\n        if (substr($text, $index, 1) ne substr($text, $index - 1, 1)) {\n            $index += 1;\n        } else {\n            my $text1 = substr($text, 0, $index);\n            my $text2 = substr($text, $index);\n            $text2 =~ tr/a-zA-Z/A-Za-z/;\n            return $text1 . $text2;\n        }\n    }\n    $text =~ tr/a-zA-Z/A-Za-z/;\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"USaR\"),\"USaR\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"USaR\""
    },
    {
        "id": 321,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nCan't modify constant item in scalar assignment at /tmp/tmp1gli2um0.pl line 20, near \"2,\"\nTransliteration pattern not terminated at /tmp/tmp1gli2um0.pl line 20.\n",
        "code": "\n# \nsub f {\n    my($update, $starting) = @_;\n    my %d = %$starting;\n    foreach my $k (keys %$update) {\n        if (exists $d{$k}) {\n            $d{$k} += $update->{$k};\n        } else {\n            $d{$k} = $update->{$k};\n        }\n    }\n    return \\%d;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({}, {\"desciduous\" => 2}),{desciduous=2, x=5, y=12})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{desciduous=2, x=5, y=12}"
    },
    {
        "id": 322,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($chemicals, $num) = @_;\n    my @fish = @{$chemicals}[1..$#{$chemicals}];\n    @{$chemicals} = reverse @{$chemicals};\n    for my $i (0..$num-1) {\n        push @fish, splice(@{$chemicals}, 1, 1);\n    }\n    @{$chemicals} = reverse @{$chemicals};\n    return $chemicals;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"lsi\", \"s\", \"t\", \"t\", \"d\"], 0),[\"lsi\", \"t\", \"t\", \"d\", \"s\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"lsi\", \"t\", \"t\", \"d\", \"s\"]"
    },
    {
        "id": 323,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @lines = split(/\\n/, $text);\n    return scalar @lines;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ncdsdfdaaa0a1cdscsk*XFd\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 324,
        "res": true,
        "code": "\n\n# \nsub f {\n    my($nums) = @_;\n    my @asc = @$nums;\n    my @desc = reverse @asc;\n    @desc = @desc[0..(scalar @desc // 2 - 1)];\n    return (@desc, @asc, @desc);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([]),())) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "()"
    },
    {
        "id": 325,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s) = @_;\n    my @l = split(//, $s);\n    foreach my $char (@l) {\n        $char = lc($char);\n        if ($char !~ /\\d/) {\n            return 0;\n        }\n    }\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 326,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $number = 0;\n    foreach my $t (split //, $text) {\n        if ($t =~ /\\d/) {\n            $number++;\n        }\n    }\n    return $number;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Thisisastring\"),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "3"
    },
    {
        "id": 327,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($lst) = @_;\n    my @new = ();\n    my $i = scalar(@{$lst}) - 1;\n    for (0..$#{$lst}) {\n        if ($i % 2 == 0) {\n            push @new, -$lst->[$i];\n        } else {\n            push @new, $lst->[$i];\n        }\n        $i--;\n    }\n    return \\@new;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 7, -1, -3]),[1, 7, -1, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 7, -1, -3]"
    },
    {
        "id": 328,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($array, $L) = @_;\n    if ($L <= 0) {\n        return $array;\n    }\n    if (@$array < $L) {\n        push(@$array, @{f($array, $L - @$array)});\n    }\n    return $array;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 3], 4),[1, 2, 3, 4])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 2, 3, 4]"
    },
    {
        "id": 329,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    for(my $i = 0; $i < length($text); $i++) {\n        if(uc(substr($text, $i, 1)) eq substr($text, $i, 1) && lc(substr($text, $i-1, 1))) {\n            return 1;\n        }\n    }\n    return 0;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"jh54kkk6\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 330,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @ans;\n    foreach my $char (split('', $text)) {\n        if ($char =~ /\\d/) {\n            push @ans, $char;\n        } else {\n            push @ans, ' ';\n        }\n    }\n    return join('', @ans);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"m4n2o\"),\"m n o\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"m n o\""
    },
    {
        "id": 331,
        "res": true,
        "code": "\n# \nsub f {\n    my($strand, $zmnc) = @_;\n    my $poz = index($strand, $zmnc);\n    while ($poz != -1) {\n        $strand = substr($strand, $poz + 1);\n        $poz = index($strand, $zmnc);\n    }\n    return rindex($strand, $zmnc);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"\", \"abc\"),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "-1"
    },
    {
        "id": 332,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @nums = @{$nums};\n    my $count = scalar @nums;\n    if ($count == 0) {\n        @nums = (0) x int(pop @nums);\n    } elsif ($count % 2 == 0) {\n        @nums = ();\n    } else {\n        splice @nums, 0, $count/2;\n    }\n    return \\@nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([-6, -2, 1, -3, 0, 1]),[-6, -2, 1, -3, 0, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[-6, -2, 1, -3, 0, 1]"
    },
    {
        "id": 333,
        "res": true,
        "code": "\n# \nsub f {\n    my($places, $lazy) = @_;\n    @$places = sort { $a <=> $b } @$places;\n    foreach my $l (@$lazy) {\n        @$places = grep { $_ != $l } @$places;\n    }\n    if (scalar(@$places) == 1) {\n        return 1;\n    }\n    foreach my $i (0..$#$places) {\n        my $place = $places->[$i];\n        my $count = grep { $_ == $place + 1 } @$places;\n        if ($count == 0) {\n            return $i + 1;\n        }\n    }\n    return $i + 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([375, 564, 857, 90, 728, 92], [728]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 334,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($a, $b) = @_;\n    return join($a, @{$b});\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"00\", [\"nU\", \" 9 rCSAz\", \"w\", \" lpA5BO\", \"sizL\", \"i7rlVr\"]),\"00nU 9 rcsazw lpA5bo sizL i7rlv\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"00nU 9 rcsazw lpA5bo sizL i7rlv\""
    },
    {
        "id": 335,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nsyntax error at /tmp/tmpnr_ni8da.pl line 18, near \",?\"\nExecution of /tmp/tmpnr_ni8da.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($text, $to_remove) = @_;\n    my @new_text = split('', $text);\n    if (index($text, $to_remove) != -1) {\n        my $index = index($text, $to_remove);\n        splice(@new_text, $index, 1, '?');\n        @new_text = grep { $_ ne '?' } @new_text;\n    }\n    return join('', @new_text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"sjbrlfqmw\", \"l\"),?)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "?"
    },
    {
        "id": 336,
        "res": true,
        "code": "\n\n# \nsub f {\n    my($s, $sep) = @_;\n    $s .= $sep;\n    return substr($s, 0, rindex($s, $sep));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"234dsfssdfs333324314\", \"s\"),\"234dsfssdfs333324314\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"234dsfssdfs333324314\""
    },
    {
        "id": 337,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nBareword found where operator expected at /tmp/tmp8azcs2n_.pl line 23, near \"5ll6\"\n\t(Missing operator before ll6?)\nsyntax error at /tmp/tmp8azcs2n_.pl line 23, near \"5ll6\"\nExecution of /tmp/tmp8azcs2n_.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($txt) = @_;\n    my @d;\n    foreach my $c (split(//, $txt)) {\n        if ($c =~ /\\d/) {\n            next;\n        }\n        if ($c =~ /[a-z]/) {\n            push @d, uc($c);\n        } elsif ($c =~ /[A-Z]/) {\n            push @d, lc($c);\n        }\n    }\n    return join('', @d);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"5ll6\"),5ll6)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "5ll6"
    },
    {
        "id": 338,
        "res": 0
    },
    {
        "id": 339,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array, $elem) = @_;\n    my @array = @{$array};\n    $elem = \"$elem\";\n    my $d = 0;\n    \n    foreach my $i (@array){\n        if(\"$i\" eq $elem){\n            $d += 1;\n        }\n    }\n    \n    return $d;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([-1, 2, 1, -8, -8, 2], 2),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 340,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $uppercase_index = index($text, 'A');\n    if ($uppercase_index >= 0) {\n        return substr($text, 0, $uppercase_index) . substr($text, index($text, 'a') + 1);\n    } else {\n        return join('', sort(split('', $text)));\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"E jIkx HtDpV G\"),\"EjIkxHtDpVG\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"EjIkxHtDpVG\""
    },
    {
        "id": 341,
        "res": true,
        "code": "\n# \nsub f {\n    my($cart) = @_;\n    while (scalar(keys %$cart) > 5) {\n        my @keys = keys %$cart;\n        delete $cart->{$keys[-1]};\n    }\n    return $cart;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({}),{})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{}"
    },
    {
        "id": 342,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    return ($text =~ tr/-//) == length($text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"---123-4\"),True)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "True"
    },
    {
        "id": 343,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array, $elem) = @_;\n    push @{$array}, @{$elem};\n    return $array;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([[1, 2, 3], [1, 2], 1], [[1, 2, 3], 3, [2, 1]]),[1, 2, 3, 1, 2, 1, 2, 3, 3, 2, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 2, 3, 1, 2, 1, 2, 3, 3, 2, 1]"
    },
    {
        "id": 344,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($lst) = @_;\n    my $operation = sub { my @array = @{$_[0]}; @array = sort { $a <=> $b } @array; return \\@array; };\n    my @new_list = @{$lst};\n    @new_list = sort { $a <=> $b } @new_list;\n    $new_list = $operation->(\\@new_list);\n    return $lst;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([6, 4, 2, 8, 15]),[2, 4, 6, 8, 9, 10, 12, 15])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[2, 4, 6, 8, 9, 10, 12, 15]"
    },
    {
        "id": 345,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\nuse strict;\nuse warnings;\n\nsub f {\n    my ($a, $b) = @_;\n    if ($a lt $b) {\n        return [$b, $a];\n    }\n    return [$a, $b];\n}\n\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ml\", \"mv\"),\"mv ml\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"mv ml\""
    },
    {
        "id": 346,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($filename) = @_;\n    my @suffix = split(/\\./, $filename);\n    pop @suffix;\n    $suffix = join('.', @suffix);\n    my $f2 = $filename . reverse($suffix);\n    return substr($f2, -length($suffix)) eq $suffix;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"docs.doc\"),\"docs.doc\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"docs.doc\""
    },
    {
        "id": 347,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @ls = split('', $text);\n    my $length = scalar @ls;\n    for my $i (0..$length-1) {\n        splice @ls, $i, 0, $ls[$i];\n    }\n    return join('', @ls) . ' ' x ($length * 2 - length(join('', @ls)));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"hzcw\"),\"hello world\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"hello world\""
    },
    {
        "id": 348,
        "res": true,
        "code": "\n# \nsub f {\n    my($dictionary) = @_;\n    return { %$dictionary };\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({563 => 555, 133 => undef}),{563 => 555, 133 => undef})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{563 => 555, 133 => undef}"
    },
    {
        "id": 349,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($dictionary) = @_;\n    $dictionary->{1049} = 55;\n    my($key, $value) = each %$dictionary;\n    delete $dictionary->{$key};\n    $dictionary->{$key} = $value;\n    return $dictionary;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"noeohqhk\" => 623}),55)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "55"
    },
    {
        "id": 350,
        "res": 0
    },
    {
        "id": 351,
        "res": true,
        "code": "\n# \nsub f {\n    my($text) = @_;\n    while(index($text, 'nnet lloP') != -1) {\n        $text =~ s/nnet lloP/nnet loLp/g;\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"a_A_b_B3 \"),\"a_A_b_B3 \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"a_A_b_B3 \""
    },
    {
        "id": 352,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    return $nums->[int(@$nums/2)];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([-1, -3, -5, -7, 0]),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "-1"
    },
    {
        "id": 353,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($x) = @_;\n    if (@$x == 0) {\n        return -1;\n    } else {\n        my %cache;\n        foreach my $item (@$x) {\n            if (exists $cache{$item}) {\n                $cache{$item}++;\n            } else {\n                $cache{$item} = 1;\n            }\n        }\n        return (reverse sort values %cache)[0];\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 0, 2, 2, 0, 0, 0, 1]),2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "2"
    },
    {
        "id": 354,
        "res": 0
    },
    {
        "id": 355,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $prefix) = @_;\n    return substr($text, length($prefix));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"123x John z\", \"z\"),John)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "John"
    },
    {
        "id": 356,
        "res": true,
        "code": "\n# \nsub f {\n    my($array, $num) = @_;\n    my $reverse = 0;\n    if ($num < 0) {\n        $reverse = 1;\n        $num *= -1;\n    }\n    my @array = reverse @$array;\n    @array = (@array) x $num;\n    my $l = scalar @array;\n    \n    if ($reverse) {\n        @array = reverse @array;\n    }\n    return \\@array;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2], 1),[2, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[2, 1]"
    },
    {
        "id": 357,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s) = @_;\n    my @r;\n    for (my $i = length($s) - 1; $i >= 0; $i--) {\n        push @r, substr($s, $i, 1);\n    }\n    return join('', @r);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"crew\"),\"cra\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"cra\""
    },
    {
        "id": 358,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $value) = @_;\n    my @indexes;\n    for(my $i = 0; $i < length($text); $i++) {\n        if(substr($text, $i, 1) eq $value && ($i == 0 || substr($text, $i-1, 1) ne $value)) {\n            push @indexes, $i;\n        }\n    }\n    if(scalar @indexes % 2 == 1) {\n        return $text;\n    }\n    return substr($text, $indexes[0]+1, $indexes[-1]-$indexes[0]-1);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"btrburger\", \"b\"),\"btrburger\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"btrburger\""
    },
    {
        "id": 359,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($lines) = @_;\n    foreach my $i (0..scalar(@$lines)-1) {\n        $lines->[$i] = sprintf(\"%*s\", length($lines->[-1]), $lines->[$i]);\n    }\n    return $lines;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"dZwbSR\", \"wijHeq\", \"qluVok\", \"dxjxbF\"]),[\"   *   \", \"  ***  \", \" ***** \", \"*******\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"   *   \", \"  ***  \", \" ***** \", \"*******\"]"
    },
    {
        "id": 360,
        "res": true,
        "code": "\n# \nsub f {\n    my($text, $n) = @_;\n    if(length($text) <= 2) {\n        return $text;\n    }\n    my $leading_chars = substr($text, 0, 1) x ($n - length($text) + 1);\n    return $leading_chars . substr($text, 1, -1) . substr($text, -1);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"g\", 15),\"g\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"g\""
    },
    {
        "id": 361,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    return scalar(split('#', (split(':', $text))[0])) - 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"#! : #!\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 362,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    for my $i (0..length($text)-2) {\n        if (lc(substr($text, $i)) eq substr($text, $i)) {\n            return substr($text, $i + 1);\n        }\n    }\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"wrazugizoernmgzu\"),\"wrazugizoernmgzu\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"wrazugizoernmgzu\""
    },
    {
        "id": 363,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($nums) = @_;\n    my @nums = sort { $a <=> $b } @$nums;\n    my $n = @nums;\n    my @new_nums = ($nums[int($n/2)]);\n    \n    if ($n % 2 == 0) {\n        @new_nums = ($nums[int($n/2) - 1], $nums[int($n/2)]);\n    }\n    \n    for my $i (0..int($n/2)-1) {\n        unshift(@new_nums, $nums[$n-$i-1]);\n        push(@new_nums, $nums[$i]);\n    }\n    return \\@new_nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1]),[1, 2, 3, 4, 5, 6, 7, 8, 9, 10])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
    },
    {
        "id": 364,
        "res": 0
    },
    {
        "id": 365,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($n, $s) = @_;\n    if ($s =~ /^$n/) {\n        my ($pre, $suffix) = split(/$n/, $s, 2);\n        return $pre . $n . substr($s, length($n));\n    }\n    return $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"xqc\", \"mRcwVqXsRDRb\"),\"xqcmRcwVqXsRDRb\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"xqcmRcwVqXsRDRb\""
    },
    {
        "id": 366,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($string) = @_;\n    my $tmp = lc($string);\n    foreach my $char (split //, lc($string)) {\n        if (index($tmp, $char) != -1) {\n            $tmp =~ s/\\Q$char//;\n        }\n    }\n    return $tmp;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"[ Hello ]+ Hello, World!!_ Hi\"),\"Hello, World!!_Hi\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"Hello, World!!_Hi\""
    },
    {
        "id": 367,
        "res": true,
        "code": "\n# \nsub f {\n    my($nums, $rmvalue) = @_;\n    my @res = @{$nums};\n    while (grep { $_ == $rmvalue } @res) {\n        my $index = 0;\n        foreach my $num (@res) {\n            if ($num == $rmvalue) {\n                splice @res, $index, 1;\n                if ($num != $rmvalue) {\n                    push @res, $num;\n                }\n                last;\n            }\n            $index++;\n        }\n    }\n    return \\@res;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([6, 2, 1, 1, 4, 1], 5),[6, 2, 1, 1, 4, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[6, 2, 1, 1, 4, 1]"
    },
    {
        "id": 368,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($string, $numbers) = @_;\n    my @arr;\n    foreach my $num (@$numbers) {\n        push @arr, sprintf(\"%0*d\", $num, $string);\n    }\n    return join(' ', @arr);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"4327\", [2, 8, 9, 2, 7, 1]),\"4327 2 7 1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"4327 2 7 1\""
    },
    {
        "id": 369,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($var) = @_;\n    if ($var =~ /^\\d+$/) {\n        return \"int\";\n    } elsif ($var =~ /^\\d*\\.\\d+$/) {\n        return \"float\";\n    } elsif ($var =~ /^ +$/) {\n        return \"str\";\n    } elsif (length($var) == 1) {\n        return \"char\";\n    } else {\n        return \"tuple\";\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\" 99 777\"),\"99\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"99\""
    },
    {
        "id": 370,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n\nuse strict;\nuse warnings;\n\nsub f {\n    my($text) = @_;\n    my @text = split //, $text;\n    foreach my $char (@text) {\n        if ($char !~ /\\s/) {\n            return \"\";\n        }\n    }\n    return 1;\n}\n\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"     i\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 371,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @nums = @{$nums};\n    \n    for (my $i = 0; $i < scalar @nums; $i++) {\n        my $odd = $nums[$i];\n        if ($odd % 2 != 0) {\n            splice @nums, $i, 1;\n            $i--; # Adjust index after removing element\n        }\n    }\n    \n    my $sum = 0;\n    foreach my $num (@nums) {\n        $sum += $num;\n    }\n    \n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([11, 21, 0, 11]),30)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "30"
    },
    {
        "id": 372,
        "res": 0
    },
    {
        "id": 373,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($orig) = @_;\n    my $copy = $orig;\n    push(@$copy, 100);\n    pop(@$orig);\n    return $copy;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 3]),[1, 2, 3, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 2, 3, 100]"
    },
    {
        "id": 374,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($seq, $v) = @_;\n    my @a;\n    foreach my $i (@$seq) {\n        if ($i =~ /$v$/) {\n            push @a, $i x 2;\n        }\n    }\n    return \\@a;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"oH\", \"ee\", \"mb\", \"deft\", \"n\", \"zz\", \"f\", \"abA\"], \"zz\"),[\"hh\", \"ee\", \"mm\", \"dd\", \"ff\", \"aa\", \"bb\", \"cc\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"hh\", \"ee\", \"mm\", \"dd\", \"ff\", \"aa\", \"bb\", \"cc\"]"
    },
    {
        "id": 375,
        "res": 0
    },
    {
        "id": 376,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    for(my $i = 0; $i < length($text); $i++) {\n        if(substr($text, 0, $i) =~ /^two/) {\n            return substr($text, $i);\n        }\n    }\n    return 'no';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"2two programmers\"),\"two programmers\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"two programmers\""
    },
    {
        "id": 377,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    return join(', ', split('\\n', $text));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"BYE\nNO\nWAY\"),\"bye, no way\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"bye, no way\""
    },
    {
        "id": 378,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($dic, $key) = @_;\n    my %dic = %$dic;\n    my $v = delete $dic{$key};\n    if (!defined $v) {\n        return 'No such key!';\n    }\n    while (keys %dic > 0) {\n        my ($k, $v) = each %dic;\n        delete $dic{$k};\n        $dic{$v} = $k;\n    }\n    my ($k) = each %dic;\n    return int($k);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"did\" => 0}, \"u\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 379,
        "res": 0
    },
    {
        "id": 380,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $delimiter) = @_;\n    $text =~ /(.*)$delimiter(.*)/;\n    return \"$1$2\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"xxjarczx\", \"x\"),\"xxjarczx\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"xxjarczx\""
    },
    {
        "id": 381,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $num_digits) = @_;\n    my $width = ($num_digits > 1) ? $num_digits : 1;\n    return sprintf(\"%0${width}d\", $text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"19\", 5),\"19\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"19\""
    },
    {
        "id": 382,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($a) = @_;\n    my %s = reverse %$a;\n    return join(\" \", map { \"(\" . $s{$_} . \", '\" . $_ . \"')\" } sort { $a <=> $b } keys %s);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({15 => \"Qltuf\", 12 => \"Rwrepny\"}),\"Rwrepny Qltuf\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"Rwrepny Qltuf\""
    },
    {
        "id": 383,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $chars) = @_;\n    my @result = split('', $text);\n    while (index(join('', @result[-3..0]), $chars) != -1) {\n        splice(@result, -3, 2);\n    }\n    return join('', @result) =~ s/\\.$//r;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ellod!p.nkyp.exa.bi.y.hain\", \".n.in.ha.y\"),\"hello.n.in.ha.y\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"hello.n.in.ha.y\""
    },
    {
        "id": 384,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $chars) = @_;\n    my @chars = split(//, $chars);\n    my @text = split(//, $text);\n    my @new_text = @text;\n    while (scalar(@new_text) > 0 && @text) {\n        if (grep {$_ eq $new_text[0]} @chars) {\n            shift @new_text;\n        } else {\n            last;\n        }\n    }\n    return join('', @new_text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"asfdellos\", \"Ta\"),\"asfdellos\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"asfdellos\""
    },
    {
        "id": 385,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nSmartmatch is experimental at /tmp/tmp5mk_pw9n.pl line 8.\n",
        "code": "\n# \nsub f {\n    my($lst) = @_;\n    my $i = 0;\n    my @new_list;\n    while ($i < scalar(@$lst)) {\n        if ($lst->[$i] ~~ @{$lst}[($i+1)..$#$lst]) {\n            push @new_list, $lst->[$i];\n            if (scalar(@new_list) == 3) {\n                return \\@new_list;\n            }\n        }\n        $i++;\n    }\n    return \\@new_list;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([0, 2, 1, 2, 6, 2, 6, 3, 0]),[0, 2, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[0, 2, 1]"
    },
    {
        "id": 386,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($concat, $di) = @_;\n    my %di = %$di;\n    my $count = keys %di;\n    foreach my $i (0..$count-1) {\n        if (index($concat, $di{$i}) != -1) {\n            delete $di{$i};\n        }\n    }\n    return \"Done!\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"mid\", {\"0\" => \"q\", \"1\" => \"f\", \"2\" => \"w\", \"3\" => \"i\"}),\"mid\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"mid\""
    },
    {
        "id": 387,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums, $pos, $value) = @_;\n    splice(@$nums, $pos, 0, $value);\n    return $nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([3, 1, 2], 2, 0),[3, 1, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[3, 1, 2]"
    },
    {
        "id": 388,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $characters) = @_;\n    my @character_list = split(//, $characters);\n    push @character_list, ' ';\n    push @character_list, '_';\n\n    my $i = 0;\n    while ($i < length($text) and index(@character_list, substr($text, $i, 1)) != -1) {\n        $i += 1;\n    }\n\n    return substr($text, $i);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"2nm_28in\", \"nm\"),\"2_n_28\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"2_n_28\""
    },
    {
        "id": 389,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($total, $arg) = @_;\n    if (ref $arg eq 'ARRAY') {\n        foreach my $e (@$arg) {\n            push @$total, split //, $e;\n        }\n    } else {\n        push @$total, split //, $arg;\n    }\n    return $total;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"1\", \"2\", \"3\"], \"nammo\"),[\"1\", \"2\", \"3\", \"nammo\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"1\", \"2\", \"3\", \"nammo\"]"
    },
    {
        "id": 390,
        "res": true,
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    if (! $text =~ m/^\\s*$/) {\n        return length($text =~ s/^\\s*//r =~ s/\\s*$//r);\n    }\n    return undef;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\" \t \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 391,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($students) = @_;\n    my @seatlist = @{$students};\n    @seatlist = reverse @seatlist;\n    my $cnt = 0;\n    for my $i (0..$#seatlist) {\n        $cnt += 2;\n        splice @seatlist, $cnt-1, 1, '+';\n    }\n    push @seatlist, '+';\n    return \\@seatlist;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"r\", \"9\"]),[\"r\", \"+\", \"9\", \"+\", \"r\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"r\", \"+\", \"9\", \"+\", \"r\"]"
    },
    {
        "id": 392,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    if (uc($text) eq $text) {\n        return 'ALL UPPERCASE';\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Hello Is It MyClass\"),\"HELLO IS IT MYCLASS\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"HELLO IS IT MYCLASS\""
    },
    {
        "id": 393,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    my $ls = reverse($text);\n    my $text2 = '';\n    for (my $i = length($ls) - 3; $i > 0; $i -= 3) {\n        $text2 .= join('---', split(//, substr($ls, $i, 3))) . '---';\n    }\n    return substr($text2, 0, -3);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"scala\"),\"tac\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"tac\""
    },
    {
        "id": 394,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @k = split(\"\\n\", $text);\n    my $i = 0;\n    foreach my $j (@k) {\n        if (length($j) == 0) {\n            return $i;\n        }\n        $i += 1;\n    }\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"2 m2 \n\nbike\"),2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "2"
    },
    {
        "id": 395,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s) = @_;\n    for my $i (0 .. length($s) - 1) {\n        if (substr($s, $i, 1) =~ /\\d/) {\n            return $i + ($s[$i] eq '0');\n        } elsif ($s[$i] eq '0') {\n            return -1;\n        }\n    }\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"11\"),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "-1"
    },
    {
        "id": 396,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($ets) = @_;\n    while (my($k, $v) = each %$ets) {\n        $ets->{$k} = $v**2;\n        delete $ets->{$k};\n    }\n    return $ets;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({}),25)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "25"
    },
    {
        "id": 397,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($ls) = @_;\n    return { map { $_ => 0 } @$ls };\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"x\", \"u\", \"w\", \"j\", \"3\", \"6\"]),{})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{}"
    },
    {
        "id": 398,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($counts) = @_;\n    my %dict;\n    foreach my $k (keys %$counts) {\n        my $v = $counts->{$k};\n        my $count = $counts->{$k};\n        unless (exists $dict{$count}) {\n            $dict{$count} = [];\n        }\n        push @{$dict{$count}}, $k;\n    }\n    $counts = {%$counts, %dict};\n    return $counts;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"2\" => 2, \"0\" => 1, \"1\" => 2}),{\n    \"2\" => [\n        0,\n        1\n    ],\n    \"0\" => [\n        1\n    ],\n    \"1\" => [\n        0,\n        1\n    ]\n})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{\n    \"2\" => [\n        0,\n        1\n    ],\n    \"0\" => [\n        1\n    ],\n    \"1\" => [\n        0,\n        1\n    ]\n}"
    },
    {
        "id": 399,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $old, $new) = @_;\n    if (length($old) > 3) {\n        return $text;\n    }\n    if (index($text, $old) != -1 && index($text, ' ') == -1) {\n        return $text =~ s/\\Q$old/$new x length($old)/reg;\n    }\n    while (index($text, $old) != -1) {\n        $text =~ s/\\Q$old/$new/g;\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"avacado\", \"va\", \"-\"),\"avacado\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"avacado\""
    },
    {
        "id": 400,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($multi_string) = @_;\n    my @words = split(\" \", $multi_string);\n    my @cond_string = map { $_ =~ /^[[:ascii:]]+$/ } @words;\n    if (grep { $_ } @cond_string) {\n        return join(', ', grep { $_ =~ /^[[:ascii:]]+$/ } @words);\n    }\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"I am hungry! eat food.\"),\"I am hungry, eat food.\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"I am hungry, eat food.\""
    },
    {
        "id": 401,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $suffix) = @_;\n    if ($suffix && substr($text, -length($suffix)) eq $suffix) {\n        return substr($text, 0, -length($suffix));\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"mathematics\", \"example\"),\"mathematics example\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"mathematics example\""
    },
    {
        "id": 402,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nsyntax error at /tmp/tmpfxn20lp7.pl line 17, near \", ...\"\nExecution of /tmp/tmpfxn20lp7.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($n, $l) = @_;\n    my %archive;\n    for my $i (0..$n-1) {\n        %archive = ();\n        %archive = map { $_ + 10 => $_ * 10 } @$l;\n    }\n    return \\%archive;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(0, [\"aaa\", \"bbb\"]),{aa00, aa01, aa02, ..., aa09, aa10, aa11, aa12})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{aa00, aa01, aa02, ..., aa09, aa10, aa11, aa12}"
    },
    {
        "id": 403,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($full, $part) = @_;\n    my $length = length($part);\n    my $index = index($full, $part);\n    my $count = 0;\n    while ($index >= 0) {\n        $full = substr($full, $index + $length);\n        $index = index($full, $part);\n        $count++;\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"hrsiajiajieihruejfhbrisvlmmy\", \"hr\"),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "3"
    },
    {
        "id": 404,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($no) = @_;\n    my %d;\n    foreach my $item (@$no) {\n        $d{$item} = 0;\n    }\n    return scalar keys %d;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"l\", \"f\", \"h\", \"g\", \"s\", \"b\"]),{})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{}"
    },
    {
        "id": 405,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($xs) = @_;\n    my @xs = @{$xs};\n    my $new_x = $xs[0] - 1;\n    shift @xs;\n    while ($new_x <= $xs[0]) {\n        shift @xs;\n        $new_x -= 1;\n    }\n    unshift @xs, $new_x;\n    return \\@xs;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([6, 3, 4, 1, 2, 3, 5]),[5, 6, 3, 4, 1, 2, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[5, 6, 3, 4, 1, 2, 3]"
    },
    {
        "id": 406,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nSmartmatch is experimental at /tmp/tmpco1_cy8h.pl line 8.\n",
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    my @ls = split //, $text;\n    @ls[0, -1] = map { uc $_ } @ls[0, -1];\n    return join('', @ls) ~~ /^(\\p{Lu}{1}\\p{Ll}*)$/;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Josh\"),\"jOhn\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"jOhn\""
    },
    {
        "id": 407,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s) = @_;\n    while (@$s > 1) {\n        @$s = ();  # clear the array\n        push @$s, scalar(@$s);\n    }\n    return pop @$s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([6, 1, 2, 3]),6)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "6"
    },
    {
        "id": 408,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($m) = @_;\n    @{$m} = reverse @{$m};\n    return $m;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([-4, 6, 0, 4, -7, 2, -1]),[-7, -4, 2, 6, 0, 4, -4])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[-7, -4, 2, 6, 0, 4, -4]"
    },
    {
        "id": 409,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $char) = @_;\n    if($text) {\n        $text =~ s/^$char//;\n        $text =~ s/^$text[-1]//;\n        $text = substr($text, 0, -1) . uc(substr($text, -1, 1));\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"querist\", \"u\"),\"QUERIST\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"QUERIST\""
    },
    {
        "id": 410,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @nums = @{$nums};\n    my $a = 0;\n    for my $i (0..$#nums) {\n        splice @nums, $i, 0, $nums[$a];\n        $a++;\n    }\n    return \\@nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 3, -1, 1, -2, 6]),[1, 3, -1, 1, -2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 3, -1, 1, -2, 6]"
    },
    {
        "id": 411,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nCan't locate object method \"Hello\" via package \"World\" (perhaps you forgot to load \"World\"?) at /tmp/tmp5z_aryoi.pl line 17.\n",
        "code": "\n\n# \nsub f {\n    my($text, $pref) = @_;\n    if (ref($pref) eq 'ARRAY') {\n        return join(', ', map { substr($text, 0, length($_)) eq $_ } @$pref);\n    } else {\n        return substr($text, 0, length($pref)) eq $pref;\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Hello World\", \"W\"),Hello World)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "Hello World"
    },
    {
        "id": 412,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nSmartmatch is experimental at /tmp/tmp3jonwlsy.pl line 7.\n",
        "code": "\n\n# \nsub f {\n    my($start, $end, $interval) = @_;\n    my @steps = ($start .. $end);\n    if (1 ~~ @steps) {\n        $steps[-1] = $end + 1;\n    }\n    return scalar @steps;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(3, 10, 1),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "3"
    },
    {
        "id": 413,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s) = @_;\n    return substr($s, 3) . substr($s, 2, 1) . substr($s, 5, 3);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"jbucwc\"),\"jboucw\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"jboucw\""
    },
    {
        "id": 414,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($d) = @_;\n    my %dCopy = %$d;\n    foreach my $key (keys %dCopy){\n        foreach my $i (0..$#{$dCopy{$key}}){\n            $dCopy{$key}[$i] = uc $dCopy{$key}[$i];\n        }\n    }\n    return \\%dCopy;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"X\" => [\"x\", \"y\"]}),[\"X\", \"Y\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"X\", \"Y\"]"
    },
    {
        "id": 415,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($array) = @_;\n    my %d = map { @$_ } @$array;\n    foreach my $key (keys %d) {\n        my $value = $d{$key};\n        if ($value < 0 || $value > 9) {\n            return undef;\n        }\n    }\n    return \\%d;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([[8, 5], [8, 2], [5, 3]]),{8, 5})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{8, 5}"
    },
    {
        "id": 416,
        "res": true,
        "code": "\n# \nsub f {\n    my($text, $old, $new) = @_;\n    my $index = rindex($text, $old, index($text, $old));\n    my @result = split('', $text);\n    while ($index > 0) {\n        splice(@result, $index, length($old), $new);\n        $index = rindex($text, $old, $index);\n    }\n    return join('', @result);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"jysrhfm ojwesf xgwwdyr dlrul ymba bpq\", \"j\", \"1\"),\"jysrhfm ojwesf xgwwdyr dlrul ymba bpq\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"jysrhfm ojwesf xgwwdyr dlrul ymba bpq\""
    },
    {
        "id": 417,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($lst) = @_;\n    my @lst = reverse @{$lst};\n    pop @lst;\n    @lst = reverse @lst;\n    return \\@lst;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([7, 8, 2, 8]),[8, 2, 7])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[8, 2, 7]"
    },
    {
        "id": 418,
        "res": true,
        "code": "\n\n# \nsub f {\n    my($s, $p) = @_;\n    my @arr = split /($p)/, $s;\n    my $part_one = length($arr[0]);\n    my $part_two = length($arr[1]);\n    my $part_three = length($arr[2]);\n    if ($part_one >= 2 and $part_two <= 2 and $part_three >= 2) {\n        return join '', reverse($arr[0]), $arr[1], reverse($arr[2]), '#';\n    }\n    return join '', $arr[0], $arr[1], $arr[2];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"qqqqq\", \"qqq\"),\"qqqqq\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"qqqqq\""
    },
    {
        "id": 419,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $value) = @_;\n    if (index($text, $value) == -1) {\n        return '';\n    }\n    return (split(/$value/, $text))[0];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"mmfbifen\", \"i\"),\"mmf\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"mmf\""
    },
    {
        "id": 420,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    return ($text =~ /^[a-zA-Z]+$/) ? 1 : 0;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"x\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 421,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s, $n) = @_;\n    if (length($s) < $n) {\n        return $s;\n    } else {\n        return substr($s, $n);\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"try.\", 5),\"try\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"try\""
    },
    {
        "id": 422,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array) = @_;\n    my @new_array = reverse(@$array);\n    return [map {$_ * $_} @new_array];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 1]),[2, 4, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[2, 4, 2]"
    },
    {
        "id": 423,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($selfie) = @_;\n    my @selfie = @{$selfie};\n    my $lo = scalar @selfie;\n    for my $i (reverse 0..$lo-1) {\n        if ($selfie[$i] == $selfie[0]) {\n            splice @selfie, $lo-1, 1;\n        }\n    }\n    return \\@selfie;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([4, 2, 5, 1, 3, 2, 6]),[4, 2, 5, 1, 3, 2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[4, 2, 5, 1, 3, 2, 6]"
    },
    {
        "id": 424,
        "res": 0
    },
    {
        "id": 425,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($a) = @_;\n    $a =~ s/\\//:/g;\n    my @z = $a =~ /(.*?)(:)(.*)/;\n    return [$z[0], $z[1], $z[2]];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"/CL44     \"),\"CL44\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"CL44\""
    },
    {
        "id": 426,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($numbers, $elem, $idx) = @_;\n    splice(@{$numbers}, $idx, 0, $elem);\n    return $numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 3], 8, 5),[1, 2, 8, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 2, 8, 5]"
    },
    {
        "id": 427,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s) = @_;\n    my $count = length($s) - 1;\n    my $reverse_s = reverse($s);\n    while ($count > 0 && rindex($reverse_s, 'sea', 0) == -1) {\n        $count--;\n        $reverse_s = substr($reverse_s, 0, $count);\n    }\n    return substr($reverse_s, $count);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"s a a b s d s a a s a a\"),\"ssad\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"ssad\""
    },
    {
        "id": 428,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    for(my $i = 0; $i < scalar(@{$nums}); $i++) {\n        if($i % 2 == 0) {\n            push @{$nums}, $nums->[$i] * $nums->[$i + 1];\n        }\n    }\n    return $nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([]),[10, 20, 30, 40])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[10, 20, 30, 40]"
    },
    {
        "id": 429,
        "res": 0
    },
    {
        "id": 430,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($arr1, $arr2) = @_;\n    my @new_arr = @$arr1;\n    push @new_arr, @$arr2;\n    return \\@new_arr;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([5, 1, 3, 7, 8], [\"\", 0, -1, []]),[5, 1, 3, 7, 8])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[5, 1, 3, 7, 8]"
    },
    {
        "id": 431,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($n, $m) = @_;\n    my @arr = (1..$n);\n    for (my $i = 0; $i < $m; $i++) {\n        @arr = ();\n    }\n    return \\@arr;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(1, 3),[1, 2, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 2, 3]"
    },
    {
        "id": 432,
        "res": 0
    },
    {
        "id": 433,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @text = split(',', $text);\n    shift @text;\n    my $index = 0;\n    foreach my $i (0..$#text) {\n        if ($text[$i] eq 'T') {\n            $index = $i;\n            last;\n        }\n    }\n    splice(@text, 0, 0, splice(@text, $index, 1));\n    return 'T,' . join(',', @text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Dmreh,Sspp,T,G ,.tB,Vxk,Cct\"),\"Dmreh,Sspp,T,G ,.tB,Vxk,Cct\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"Dmreh,Sspp,T,G ,.tB,Vxk,Cct\""
    },
    {
        "id": 434,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($string) = @_;\n    if (index($string, 'e') != -1) {\n        return rindex($string, 'e');\n    } else {\n        return \"Nuk\";\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"eeuseeeoehasa\"),\"eeuseeeoehasa\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"eeuseeeoehasa\""
    },
    {
        "id": 435,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nNumber found where operator expected at /tmp/tmp_4wzym3x.pl line 18, near \"1 2\"\n\t(Missing operator before  2?)\nNumber found where operator expected at /tmp/tmp_4wzym3x.pl line 18, near \"2 3\"\n\t(Missing operator before  3?)\nNumber found where operator expected at /tmp/tmp_4wzym3x.pl line 18, near \"3 4\"\n\t(Missing operator before  4?)\nNumber found where operator expected at /tmp/tmp_4wzym3x.pl line 18, near \"4 5\"\n\t(Missing operator before  5?)\nNumber found where operator expected at /tmp/tmp_4wzym3x.pl line 18, near \"5 6\"\n\t(Missing operator before  6?)\nNumber found where operator expected at /tmp/tmp_4wzym3x.pl line 18, near \"6 7\"\n\t(Missing operator before  7?)\nNumber found where operator expected at /tmp/tmp_4wzym3x.pl line 18, near ",
        "code": "\n# \nsub f {\n    my($numbers, $num, $val) = @_;\n    while (scalar(@$numbers) < $num) {\n        splice(@$numbers, int(scalar(@$numbers) / 2), 0, $val);\n    }\n    for (my $i = 0; $i < int(scalar(@$numbers) / ($num - 1) - 4); $i++) {\n        splice(@$numbers, int(scalar(@$numbers) / 2), 0, $val);\n    }\n    return join(' ', @$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([], 0, 1),1 2 3 4 5 6 7 8 9 10)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1 2 3 4 5 6 7 8 9 10"
    },
    {
        "id": 436,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s, $characters) = @_;\n    my @result;\n    for my $i (@$characters) {\n        push @result, substr($s, $i, 1);\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"s7 6s 1ss\", [1, 3, 6, 1, 2]),[\"s\", \"7\", \"s\", \"6\", \"s\", \"1\", \"s\", \"ss\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"s\", \"7\", \"s\", \"6\", \"s\", \"1\", \"s\", \"ss\"]"
    },
    {
        "id": 437,
        "res": 0
    },
    {
        "id": 438,
        "res": 0
    },
    {
        "id": 439,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($value) = @_;\n    my @parts = split(' ', $value);\n    my @filtered_parts;\n    foreach my $i (0 .. $#parts) {\n        push @filtered_parts, $parts[$i] if $i % 2 == 0;\n    }\n    return join('', @filtered_parts);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"coscifysu\"),\"cosifysu\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"cosifysu\""
    },
    {
        "id": 440,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    if ($text =~ /^\\d+$/) {\n        return 'yes';\n    } else {\n        return 'no';\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"abc\"),\"yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"yes\""
    },
    {
        "id": 441,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($base, $k, $v) = @_;\n    $base->{$k} = $v;\n    return $base;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({37 => \"forty-five\"}, \"23\", \"what?\"),42)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "42"
    },
    {
        "id": 442,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($lst) = @_;\n    my @res;\n    foreach my $i (0..$#{$lst}) {\n        if ($lst->[$i] % 2 == 0) {\n            push @res, $lst->[$i];\n        }\n    }\n    \n    return [@$lst];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 3, 4]),[2, 4])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[2, 4]"
    },
    {
        "id": 443,
        "res": true,
        "code": "\n# \nsub f {\n    my($text) = @_;\n    foreach my $space (split //, $text) {\n        if ($space eq ' ') {\n            $text =~ s/^\\s+//;\n        } else {\n            $text =~ s/cd/$space/g;\n        }\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"lorem ipsum\"),\"lorem ipsum\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"lorem ipsum\""
    },
    {
        "id": 444,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @nums = @{$nums};\n    my $count = scalar @nums;\n    for (my $i = $count-1; $i > 0; $i -= 2) {\n        splice @nums, $i, 0, shift(@nums) + shift(@nums);\n    }\n    return \\@nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([-5, 3, -2, -3, -1, 3, 5]),[-5, 3, -2, -3, -1, 3, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[-5, 3, -2, -3, -1, 3, 5]"
    },
    {
        "id": 445,
        "res": 0
    },
    {
        "id": 446,
        "res": true,
        "code": "\n# \nsub f {\n    my($array) = @_;\n    my @array = @{$array};\n    my $l = scalar @array;\n    if ($l % 2 == 0) {\n        @array = ();\n    } else {\n        @array = reverse @array;\n    }\n    return \\@array;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[]"
    },
    {
        "id": 447,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nsyntax error at /tmp/tmpwwge4jzq.pl line 21, near \",|\"\nExecution of /tmp/tmpwwge4jzq.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($text, $tab_size) = @_;\n    my $res = '';\n    $text =~ s/\\t/ ' ' x ($tab_size-1) /ge;\n    for (my $i = 0; $i < length($text); $i++) {\n        if (substr($text, $i, 1) eq ' ') {\n            $res .= '|';\n        } else {\n            $res .= substr($text, $i, 1);\n        }\n    }\n    return $res;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"\ta\", 3),|a|a|a)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "|a|a|a"
    },
    {
        "id": 448,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $suffix) = @_;\n    if ($suffix eq '') {\n        $suffix = undef;\n    }\n    return substr($text, -length($suffix)) eq $suffix;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"uMeGndkGh\", \"kG\"),True)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "True"
    },
    {
        "id": 449,
        "res": true,
        "code": "\n# \nsub f {\n    my($x) = @_;\n    my $n = length($x);\n    my $i = 0;\n    while ($i < $n && $x =~ /^\\d+$/) {\n        $i++;\n    }\n    return $i == $n;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"1\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 450,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($strs) = @_;\n    my @strs = split(' ', $strs);\n    for (my $i = 1; $i < scalar @strs; $i += 2) {\n        my @chars = reverse(split('', $strs[$i]));\n        $strs[$i] = join('', @chars);\n    }\n    return join(' ', @strs);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"K zBK\"),\"k zbk\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"k zbk\""
    },
    {
        "id": 451,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $char) = @_;\n    my @text = split('', $text);\n    foreach my $index (0..$#text) {\n        if ($text[$index] eq $char) {\n            splice(@text, $index, 1);\n            return join('', @text);\n        }\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"pn\", \"p\"),\"p\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"p\""
    },
    {
        "id": 452,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $counter = 0;\n    foreach my $char (split('', $text)) {\n        if ($char =~ /[a-zA-Z]/) {\n            $counter++;\n        }\n    }\n    return $counter;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"l000*\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 453,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($string, $c) = @_;\n    return substr($string, -length($c)) eq $c;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"wrsch)xjmb8\", \"c\"),\"wrsch\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"wrsch\""
    },
    {
        "id": 454,
        "res": true,
        "code": "\n# \nsub f {\n    my($d, $count) = @_;\n    my %new_dict;\n    for (my $i = 0; $i < $count; $i++) {\n        my %copy = %$d;\n        %new_dict = (%copy, %new_dict);\n    }\n    return \\%new_dict;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"a\" => 2, \"b\" => [], \"c\" => {}}, 0),{})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{}"
    },
    {
        "id": 455,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nsyntax error at /tmp/tmp0pukeoee.pl line 18, near \",?\"\nExecution of /tmp/tmp0pukeoee.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $uppers = 0;\n    foreach my $c (split(\"\", $text)) {\n        if (uc($c) eq $c) {\n            $uppers++;\n        }\n    }\n    return $uppers >= 10 ? uc($text) : $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"?XyZ\"),?XyZ)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "?XyZ"
    },
    {
        "id": 456,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nCan't locate object method \"in\" via package \"Hungary\" (perhaps you forgot to load \"Hungary\"?) at /tmp/tmpw1r1dlfz.pl line 12.\n",
        "code": "\n# \nsub f {\n    my($s, $tab) = @_;\n    return $s =~ s/\\t/' ' x $tab/reg;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Join us in Hungary\", 4),Join us in Hungary)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "Join us in Hungary"
    },
    {
        "id": 457,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @count = (0..$#{$nums});\n    for my $i (0..$#{$nums}) {\n        pop @{$nums};\n        if (@count) {\n            shift @count;\n        }\n    }\n    return $nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([3, 1, 7, 5, 6]),[3, 1, 7, 5, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[3, 1, 7, 5, 6]"
    },
    {
        "id": 458,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $search_chars, $replace_chars) = @_;\n\n    my @search_chars = split //, $search_chars;\n    my @replace_chars = split //, $replace_chars;\n\n    my %trans_table = map { $search_chars[$_] => $replace_chars[$_] } 0..$#search_chars;\n\n    my @text = split //, $text;\n    for my $i (0..$#text) {\n        if (exists $trans_table{$text[$i]}) {\n            $text[$i] = $trans_table{$text[$i]};\n        }\n    }\n\n    my $result = join '', @text;\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"mmm34mIm\", \"mm3\", \",po\"),\"Immmp\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"Immmp\""
    },
    {
        "id": 459,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nsyntax error at /tmp/tmp5phm8a0h.pl line 19, near \"\"b\":\"\nExecution of /tmp/tmp5phm8a0h.pl aborted due to compilation errors.\n",
        "code": "\n\n# \nsub f {\n    my($arr, $d) = @_;\n    for my $i (1..$#$arr) {\n        if ($i % 2 == 1) {\n            $d->{$arr->[$i]} = $arr->[$i-1];\n        }\n    }\n    return $d;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"b\", \"vzjmc\", \"f\", \"ae\", \"0\"], {}),{\n    \"b\": \"v\",\n    \"v\": \"z\",\n    \"z\": \"j\",\n    \"j\": \"m\",\n    \"m\": \"c\",\n    \"c\": \"a\",\n    \"a\": \"0\"\n})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{\n    \"b\": \"v\",\n    \"v\": \"z\",\n    \"z\": \"j\",\n    \"j\": \"m\",\n    \"m\": \"c\",\n    \"c\": \"a\",\n    \"a\": \"0\"\n}"
    },
    {
        "id": 460,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nCan't locate object method \"GENERAL\" via package \"NAGOOR\" (perhaps you forgot to load \"NAGOOR\"?) at /tmp/tmpyhd7fr0i.pl line 19.\n",
        "code": "\n# \nsub f {\n    my($text, $amount) = @_;\n    my $length = length($text);\n    my $pre_text = '|';\n    if ($amount >= $length) {\n        my $extra_space = $amount - $length;\n        $pre_text .= ' ' x int($extra_space / 2);\n        return $pre_text . $text . $pre_text;\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"GENERAL NAGOOR\", 5),GENERAL NAGOOR)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "GENERAL NAGOOR"
    },
    {
        "id": 461,
        "res": true,
        "code": "\n# \nsub f {\n    my($text, $search) = @_;\n    return substr($search, 0, length($text)) eq $text ? 1 : 0;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"123\", \"123eenhas0\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 462,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $value) = @_;\n    my $length = length($text);\n    my @letters = split('', $text);\n    if (index($text, $value) == -1) {\n        $value = $letters[0];\n    }\n    return $value x $length;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ldebgp o\", \"o\"),\"hello\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 463,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($dict) = @_;\n    my %result = %$dict;\n    my @remove_keys;\n    foreach my $k (keys %$dict) {\n        my $v = $dict->{$k};\n        if (exists $dict->{$v}) {\n            push @remove_keys, $k;\n        }\n    }\n    foreach my $k (@remove_keys) {\n        delete $result{$k};\n    }\n    return \\%result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({-1 => -1, 5 => 5, 3 => 6, -4 => -4}),{})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{}"
    },
    {
        "id": 464,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($ans) = @_;\n    if ($ans =~ /^\\d+$/) {\n        my $total = $ans * 4 - 50;\n        my @non_even_digits = grep { $_ !~ /[02468]/ } split //, $ans;\n        $total -= scalar @non_even_digits * 100;\n        return $total;\n    }\n    return 'NAN';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"0\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 465,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($seq, $value) = @_;\n    my %roles = map { $_ => 'north' } @$seq;\n    if ($value) {\n        my @keys = map { $_ => 1 } map { split ', ' } split /, /, $value;\n        @roles{keys @keys} = values @keys;\n    }\n    return \\%roles;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"wise king\", \"young king\"], \"\"),{north})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{north}"
    },
    {
        "id": 466,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nString found where operator expected at /tmp/tmpck487cet.pl line 26, near \"[/5]\"\"\n\t(Missing semicolon on previous line?)\nString found where operator expected at /tmp/tmpck487cet.pl line 33, near \"[/5]\"\"\n\t(Missing semicolon on previous line?)\nString found where operator expected at /tmp/tmpck487cet.pl line 40, near \"[/5]\"\"\n\t(Missing semicolon on previous line?)\nString found where operator expected at /tmp/tmpck487cet.pl line 47, near \"[/5]\"\"\n\t(Missing semicolon on previous line?)\nString found where operator expected at /tmp/tmpck487cet.pl line 54, near \"[/5]\"\"\n\t(Missing semicolon on previous line?)\nString found where operator expected at /tmp/tmpck487cet.pl line 61, near \"[/5]\"\"\n\t(Missing semicolon on previous line?)\nString found w",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $length = length($text);\n    my $index = 0;\n    while ($index < $length && substr($text, $index, 1) =~ /\\s/) {\n        $index++;\n    }\n    return substr($text, $index, 5);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"-----\t\n\tth\n-----\"),\"-----\t\nth\n-----\"\n[5]\n[/5]\n\n\n\"th\n-----\n-----\n[5]\n[/5]\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"-----\t\nth\n-----\"\n[5]\n[/5]\n\n\n\"th\n-----\n-----\n[5]\n[/5]\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\"-----\nth\n-----\n[5]\n[/5]\"\n\n\n\""
    },
    {
        "id": 467,
        "res": true,
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my %copy = %{$nums};\n    my %newDict = ();\n    foreach my $k (keys %copy) {\n        $newDict{$k} = scalar @{$copy{$k}};\n    }\n    return \\%newDict;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({}),{})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{}"
    },
    {
        "id": 468,
        "res": true,
        "code": "\n# \nsub f {\n    my($a, $b, $n) = @_;\n    my ($result, $m) = ($b, $b);\n    for (my $i = 0; $i < $n; $i++) {\n        if ($m) {\n            ($a, $m) = ($a =~ s/\\Q$m\\E//r, undef);\n            ($result, $m) = ($b, $b);\n        }\n    }\n    return (join $result, split /$b/, $a);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"unrndqafi\", \"c\", 2),\"unrndqafi\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"unrndqafi\""
    },
    {
        "id": 469,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $position, $value) = @_;\n    my $length = length($text);\n    my $index = $position % $length;\n    if ($position < 0) {\n        $index = $length / 2;\n    }\n    my @new_text = split(//, $text);\n    splice(@new_text, $index, 0, $value);\n    splice(@new_text, $length - 1, 1);\n    return join('', @new_text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"sduyai\", 1, \"y\"),\"y\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"y\""
    },
    {
        "id": 470,
        "res": 0
    },
    {
        "id": 471,
        "res": true,
        "code": "\n# \nsub f {\n    my($val, $text) = @_;\n    my @indices;\n    for my $index (0 .. length($text) - 1) {\n        push @indices, $index if substr($text, $index, 1) eq $val;\n    }\n    if (@indices == 0) {\n        return -1;\n    } else {\n        return $indices[0];\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"o\", \"fnmart\"),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "-1"
    },
    {
        "id": 472,
        "res": true,
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my %d;\n    my @chars = split(\"\", $text);\n    foreach my $char (@chars) {\n        $char = lc $char;\n        $d{$char} = exists $d{$char} ? $d{$char} + 1 : 1;\n    }\n    my @sorted_keys = sort { $d{$a} <=> $d{$b} } keys %d;\n    my @result = map { $d{$_} } @sorted_keys;\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"x--y-z-5-C\"),[\"x\", \"y\", \"z\", \"5\", \"C\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"x\", \"y\", \"z\", \"5\", \"C\"]"
    },
    {
        "id": 473,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $value) = @_;\n    my @indexes;\n    for(my $i = 0; $i < length($text); $i++) {\n        if(substr($text, $i, 1) eq $value) {\n            push @indexes, $i;\n        }\n    }\n    my @new_text = split('', $text);\n    foreach my $i (@indexes) {\n        splice @new_text, $i, 1, '';\n    }\n    return join('', @new_text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"scedvtvotkwqfoqn\", \"o\"),\"scedvotkwqfoqn\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"scedvotkwqfoqn\""
    },
    {
        "id": 474,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nsyntax error at /tmp/tmpsjs78qos.pl line 20, near \"\"ok!\" }\"\nExecution of /tmp/tmpsjs78qos.pl aborted due to compilation errors.\n",
        "code": "\n\n# \nsub f {\n    my($txt, $marker) = @_;\n    my @a;\n    my @lines = split(/\\n/, $txt);\n    for my $line (@lines) {\n        push(@a, sprintf(\"%*s\", int(($marker + length($line))/2), $line));\n    }\n    return join(\"\\n\", @a);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"#[)[]>[^e>\n 8\", -5),[#])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[#]"
    },
    {
        "id": 475,
        "res": true,
        "code": "\n# \nsub f {\n    my($array, $index) = @_;\n    if ($index < 0) {\n        $index = scalar(@$array) + $index;\n    }\n    return $array->[$index];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1], 0),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 476,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n\nsub f {\n    my($a, $split_on) = @_;\n    my @t = split(' ', $a);\n    my @a = ();\n    for my $i (@t) {\n        for my $j (split //, $i) {\n            push @a, $j;\n        }\n    }\n    if (grep($_ eq $split_on, @a)) {\n        return 1;\n    } else {\n        return \"\";\n    }\n}\n\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"booty boot-boot bootclass\", \"k\"),\"booty\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"booty\""
    },
    {
        "id": 477,
        "res": true,
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    my($topic, $sep, $problem) = ($text =~ /^(.*)(\\|)(.*)$/);\n    if (defined $sep) {\n        $problem = $topic;\n        $problem =~ s/u/p/g;\n    } else {\n        $sep = '';\n        $problem = $text;\n    }\n    return ($topic, $problem);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"|xduaisf\"),\"|xduaisf\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"|xduaisf\""
    },
    {
        "id": 478,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nCan't modify constant item in scalar assignment at /tmp/tmpxvjr0d9v.pl line 16, near \"2,\"\nExecution of /tmp/tmpxvjr0d9v.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($sb) = @_;\n    my %d;\n    foreach my $s (split(\"\", $sb)) {\n        $d{$s} = $d{$s} ? $d{$s} + 1 : 1;\n    }\n    return \\%d;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"meow meow\"),{meow=2, meow=2})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{meow=2, meow=2}"
    },
    {
        "id": 479,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums, $pop1, $pop2) = @_;\n    splice(@$nums, $pop1 - 1, 1);\n    splice(@$nums, $pop2 - 1, 1);\n    return $nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 5, 2, 3, 6], 2, 4),[1, 5, 2, 3, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 5, 2, 3, 6]"
    },
    {
        "id": 480,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s, $c1, $c2) = @_;\n    if ($s eq '') {\n        return $s;\n    }\n    my @ls = split(/$c1/, $s);\n    foreach my $index (0 .. $#ls) {\n        if (index($ls[$index], $c1) != -1) {\n            $ls[$index] =~ s/$c1/$c2/;\n        }\n    }\n    return join($c1, @ls);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"\", \"mi\", \"siast\"),\"m\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"m\""
    },
    {
        "id": 481,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($values, $item1, $item2) = @_;\n    if ($values->[-1] == $item2) {\n        if ($values->[0] && !grep { $_ == $values->[0] } @{$values}[1..$#{$values}]) {\n            push @{$values}, $values->[0];\n        }\n    }\n    elsif ($values->[-1] == $item1) {\n        if ($values->[0] == $item2) {\n            push @{$values}, $values->[0];\n        }\n    }\n    return $values;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 1], 2, 3),[1, 2, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 2, 3]"
    },
    {
        "id": 482,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    $text =~ s/\\\\\\\"/\\\"/g;\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Because it intrigues them\"),\"Because it ignors them\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"Because it ignors them\""
    },
    {
        "id": 483,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $char) = @_;\n    my $result = ' '.join(split /$char/, $text);\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"a\", \"a\"),\"a a\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"a a\""
    },
    {
        "id": 484,
        "res": 0
    },
    {
        "id": 485,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($tokens) = @_;\n    my @tokens = split(' ', $tokens);\n    if (scalar @tokens == 2) {\n        @tokens = reverse @tokens;\n    }\n    my $result = sprintf(\"%-5s %-5s\", $tokens[0], $tokens[1]);\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"gsd avdropj\"),\"gsd\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"gsd\""
    },
    {
        "id": 486,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($dic) = @_;\n    my %dic_op = %$dic;\n    foreach my $key (keys %dic_op) {\n        $dic_op{$key} = $dic_op{$key} * $dic_op{$key};\n    }\n    return \\%dic_op;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({1 => 1, 2 => 2, 3 => 3}),{1 => 2, 2 => 4, 3 => 6})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{1 => 2, 2 => 4, 3 => 6}"
    },
    {
        "id": 487,
        "res": true,
        "code": "\n# \nsub f {\n    my($dict) = @_;\n    my @even_keys;\n    foreach my $key (keys %$dict) {\n        if ($key % 2 == 0) {\n            push @even_keys, $key;\n        }\n    }\n    return \\@even_keys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({4 => \"a\"}),[4])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[4]"
    },
    {
        "id": 488,
        "res": 0
    },
    {
        "id": 489,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $value) = @_;\n    return substr($text, length($value));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"coscifysu\", \"cos\"),\"cos\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"cos\""
    },
    {
        "id": 490,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s) = @_;\n    return join('', grep { $_ =~ /\\s/ } split('', $s));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"\ngiyixjkvu\n\r\r \frgjuo\"),\"giyixjkv\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"giyixjkv\""
    },
    {
        "id": 491,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($xs) = @_;\n    for my $i (-1, -2, -3, -4) {\n        push @$xs, (@{$xs}[$i], @{$xs}[$i]);\n    }\n    return $xs;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([4, 8, 8, 5]),[4, 8, 8, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[4, 8, 8, 5]"
    },
    {
        "id": 492,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nSmartmatch is experimental at /tmp/tmpsvciop_p.pl line 7.\n",
        "code": "\n# \nsub f {\n    my($text, $value) = @_;\n    my @ls = split('', $text);\n    if ((grep { $_ eq $value } @ls) % 2 == 0) {\n        while ($value ~~ @ls) {\n            @ls = grep { $_ ne $value } @ls;\n        }\n    } else {\n        @ls = ();\n    }\n    return join('', @ls);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"abbkebaniuwurzvr\", \"m\"),\"bierwurzvr\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"bierwurzvr\""
    },
    {
        "id": 493,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\nsub f {\n    my($d) = @_;\n    my @keys;\n    while (my ($k, $v) = each %$d) {\n        push @keys, \"$k => $v\";\n    }\n    return \\@keys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"-4\" => \"4\", \"1\" => \"2\", \"-\" => \"-3\"}),[\"-4\" => \"4\", \"1\" => \"2\", \"-\" => \"-3\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"-4\" => \"4\", \"1\" => \"2\", \"-\" => \"-3\"]"
    },
    {
        "id": 494,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($num, $l) = @_;\n    my $t = \"\";\n    while($l > length($num)) {\n        $t .= '0';\n        $l -= 1;\n    }\n    return $t . $num;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"1\", 3),\"100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"100\""
    },
    {
        "id": 495,
        "res": 0
    },
    {
        "id": 496,
        "res": 0
    },
    {
        "id": 497,
        "res": true,
        "code": "\n# \nsub f {\n    my($n) = @_;\n    my @b = split(//, $n);\n    for my $i (2..$#b) {\n        $b[$i] .= '+';\n    }\n    return @b;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(44),[4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]"
    },
    {
        "id": 498,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums, $idx, $added) = @_;\n    splice(@$nums, $idx, 0, $added);\n    return $nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([2, 2, 2, 3, 3], 2, 3),[2, 2, 3, 0, 0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[2, 2, 3, 0, 0]"
    },
    {
        "id": 499,
        "res": 0
    },
    {
        "id": 500,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $delim) = @_;\n    my $index = rindex($text, $delim);\n    return substr($text, 0, length($text) - $index - length($delim));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"dsj osq wi w\", \" \"),\"dsj osq wi w\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"dsj osq wi w\""
    },
    {
        "id": 501,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $char) = @_;\n    my $index = rindex($text, $char);\n    my @result = split('', $text);\n    while ($index > 0) {\n        $result[$index] = $result[$index-1];\n        $result[$index-1] = $char;\n        $index -= 2;\n    }\n    return join('', @result);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"qpfi jzm\", \"j\"),qpfijm)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "qpfijm"
    },
    {
        "id": 502,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($name) = @_;\n    return join('*', split(' ', $name));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Fred Smith\"),\"Fred Smith\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"Fred Smith\""
    },
    {
        "id": 503,
        "res": true,
        "code": "\n# \nsub f {\n    my($d) = @_;\n    my @result;\n    my @keys = keys %$d;\n    my $a = my $b = 0;\n    while (%$d) {\n        my $key = $keys[$a];\n        push @result, delete $d->{$key};\n        ($a, $b) = ($b, ($b+1) % scalar @keys);\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({}),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[]"
    },
    {
        "id": 504,
        "res": true,
        "code": "\n# \nsub f {\n    my($values) = @_;\n    @{$values} = sort {$a <=> $b} @{$values};\n    return $values;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 1, 1, 1]),[1, 1, 1, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 1, 1, 1]"
    },
    {
        "id": 505,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($string) = @_;\n    while ($string) {\n        if (substr($string, -1) =~ /[a-zA-Z]/) {\n            return $string;\n        }\n        $string = substr($string, 0, -1);\n    }\n    return $string;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"--4/0-209\"),\"--4/0-209\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"--4/0-209\""
    },
    {
        "id": 506,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($n) = @_;\n    my $p = '';\n    if ($n % 2 == 1) {\n        $p .= 'sn';\n    } else {\n        return $n * $n;\n    }\n    for my $x (1..$n) {\n        if ($x % 2 == 0) {\n            $p .= 'to';\n        } else {\n            $p .= 'ts';\n        }\n    }\n    return $p;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(1),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 507,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $search) = @_;\n    my $result = lc($text);\n    return index($result, lc($search));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"car hat\", \"car\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 508,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $sep, $maxsplit) = @_;\n    my @splitted = reverse(split(/$sep/, $text, $maxsplit + 1));\n    my $length = @splitted;\n    @splitted = @splitted[0..($length / 2)] if $length % 2 == 0;\n    @splitted = @splitted[0..(($length - 1) / 2)];\n    return join($sep, @splitted);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ertubwi\", \"p\", 5),\"tbuiw\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"tbuiw\""
    },
    {
        "id": 509,
        "res": true,
        "code": "\n# \nsub f {\n    my($value, $width) = @_;\n    if ($value >= 0) {\n        return sprintf(\"%0*d\", $width, $value);\n    }\n    elsif ($value < 0) {\n        return '-' . sprintf(\"%0*d\", $width, -$value);\n    }\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(5, 1),5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "5"
    },
    {
        "id": 510,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($a, $b, $c, $d, $e) = @_;\n    my %a = %{$a};\n    my $key = $d;\n    if (exists $a{$key}) {\n        my $num = delete $a{$key};\n    }\n    if ($b > 3) {\n        return join('', $c);\n    } else {\n        return $num;\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({7 => \"ii5p\", 1 => \"o3Jwus\", 3 => \"lot9L\", 2 => \"04g\", 9 => \"Wjf\", 8 => \"5b\", 0 => \"te6\", 5 => \"flLO\", 6 => \"jq\", 4 => \"vfa0tW\"}, 4, \"Wy\", \"Wy\", 1.0),5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "5"
    },
    {
        "id": 511,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nsyntax error at /tmp/tmpoha7knsl.pl line 17, near \"\"ct\":\"\nExecution of /tmp/tmpoha7knsl.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($fields, $update_dict) = @_;\n    my %di = map { $_ => '' } @{$fields};\n    foreach my $key (keys %{$update_dict}) {\n        $di{$key} = $update_dict->{$key};\n    }\n    return \\%di;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"ct\", \"c\", \"ca\"], {\"ca\" => \"cx\"}),{\n    \"ct\": \"\",\n    \"c\": \"\",\n    \"ca\": \"cx\"\n})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{\n    \"ct\": \"\",\n    \"c\": \"\",\n    \"ca\": \"cx\"\n}"
    },
    {
        "id": 512,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s) = @_;\n    return length($s) == (() = $s =~ /0/g) + (() = $s =~ /1/g);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"102\"),false)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "false"
    },
    {
        "id": 513,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array) = @_;\n    while (grep {$_ == -1} @$array) {\n        splice(@$array, -3, 1);\n    }\n    while (grep {$_ == 0} @$array) {\n        pop(@$array);\n    }\n    while (grep {$_ == 1} @$array) {\n        shift(@$array);\n    }\n    return $array;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([0, 2]),[0, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[0, 2]"
    },
    {
        "id": 514,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @words = split(' ', $text);\n    foreach my $item (@words) {\n        $text =~ s/-\\Q$item\\E/ /g;\n        $text =~ s/\\Q$item\\E-/ /g;\n    }\n    $text =~ s/^-+|-+$//g;\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"-stew---corn-and-beans-in soup-.-\"),\"stew corn and beans in soup\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"stew corn and beans in soup\""
    },
    {
        "id": 515,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array) = @_;\n    my @result = reverse(@$array);\n    @result = map { $_ * 2 } @result;\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 3, 4, 5]),[5, 10, 15, 20, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[5, 10, 15, 20, 25]"
    },
    {
        "id": 516,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($strings, $substr) = @_;\n    my @list = grep { $_ =~ /^$substr/ } @{$strings};\n    my @sorted_list = sort { length($a) <=> length($b) } @list;\n    return \\@sorted_list;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"condor\", \"eyes\", \"gay\", \"isa\"], \"d\"),[\"condor\", \"eyes\", \"gay\", \"isa\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"condor\", \"eyes\", \"gay\", \"isa\"]"
    },
    {
        "id": 517,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    for my $i (reverse(1..length($text)-1)) {\n        if (lc(substr($text, $i, 1)) eq substr($text, $i, 1)) {\n            return substr($text, 0, $i);\n        }\n    }\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"SzHjifnzog\"),\"SzHjifnzog\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"SzHjifnzog\""
    },
    {
        "id": 518,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    return !($text =~ /^\\d+$/);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"the speed is -36 miles per hour\"),True)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "True"
    },
    {
        "id": 519,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($d) = @_;\n    $d->{'luck'} = 42;\n    %{$d} = ();\n    return {1 => '', 2 => 1};\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({}),{})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{}"
    },
    {
        "id": 520,
        "res": true,
        "code": "\n# \nsub f {\n    my($album_sales) = @_;\n    while (scalar(@$album_sales) != 1) {\n        push @$album_sales, shift @$album_sales;\n    }\n    return $album_sales->[0];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([6]),6)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "6"
    },
    {
        "id": 521,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @nums = @{$nums};\n    my $m = 0;\n    foreach my $num (@nums) {\n        $m = $num if $num > $m;\n    }\n    for (my $i = 0; $i < $m; $i++) {\n        @nums = reverse @nums;\n    }\n    return \\@nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([43, 0, 4, 77, 5, 2, 0, 9, 77]),[77, 77, 43, 0, 4, 5, 2, 9, 77])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[77, 77, 43, 0, 4, 5, 2, 9, 77]"
    },
    {
        "id": 522,
        "res": true,
        "code": "\n\n# \nsub f {\n    my($numbers) = @_;\n    my @floats = map { $_ % 1 } @$numbers;\n    return @floats ? @floats : ();\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119]),[100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119]"
    },
    {
        "id": 523,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @text = split(//, $text);\n    for (my $i = $#text; $i >= 0; $i--) {\n        if ($text[$i] =~ /\\s/) {\n            $text[$i] = '&nbsp;';\n        }\n    }\n    return join('', @text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"   \"),\"hello world\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"hello world\""
    },
    {
        "id": 524,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($dict0) = @_;\n    my %new = %$dict0;\n    my @sorted_keys = sort { $a <=> $b } keys %new;\n    for (my $i = 0; $i < scalar @sorted_keys - 1; $i++) {\n        $dict0->{$sorted_keys[$i]} = $i;\n    }\n    return $dict0;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({2 => 5, 4 => 1, 3 => 5, 1 => 3, 5 => 1}),{1, 2, 3, 4, 5})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{1, 2, 3, 4, 5}"
    },
    {
        "id": 525,
        "res": 0
    },
    {
        "id": 526,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($label1, $char, $label2, $index) = @_;\n    my $m = rindex($label1, $char);\n    if ($m >= $index) {\n        return substr($label2, 0, $m - $index + 1);\n    } else {\n        return $label1 . substr($label2, $index - $m - 1);\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ekwies\", \"s\", \"rpg\", 1),\"r\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"r\""
    },
    {
        "id": 527,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $value) = @_;\n    return $text . (\"?\" x (length($value) - length($text)));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"!?\", \"\"),\"??\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"??\""
    },
    {
        "id": 528,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s) = @_;\n    my $b = '';\n    my $c = '';\n    for my $i (split('', $s)) {\n        $c = $c . $i;\n        if (index($s, $c) > -1) {\n            return rindex($s, $c);\n        }\n    }\n    return 0;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"papeluchis\"),\"papeluchis\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"papeluchis\""
    },
    {
        "id": 529,
        "res": true,
        "code": "\n# \nsub f {\n    my($array) = @_;\n    my @newArray = @{$array};\n    my $prev = $array->[0];\n    \n    for my $i (1 .. $#{$array}) {\n        if ($prev != $array->[$i]) {\n            $newArray[$i] = $array->[$i];\n        } else {\n            splice @newArray, $i, 1;\n        }\n        $prev = $array->[$i];\n    }\n    \n    return \\@newArray;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 3]),[1, 2, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 2, 3]"
    },
    {
        "id": 530,
        "res": 0
    },
    {
        "id": 531,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\nsub f {\n    my ($text, $x) = @_;\n    if (index($text, $x) != 0) {\n        return f(substr($text, 1), $x);\n    } else {\n        return $text;\n    }\n}\n\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Ibaskdjgblw asdl \", \"djgblw\"),\"Ibaskd\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"Ibaskd\""
    },
    {
        "id": 532,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($n, $array) = @_;\n    my @final = [@$array];\n    for my $i (0..$n-1) {\n        my @arr = @$array;\n        push @arr, @{$final[-1]};\n        push @final, \\@arr;\n    }\n    return \\@final;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(1, [1, 2, 3]),[1, 2, 3, 1, 2, 3, 1, 2, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 2, 3, 1, 2, 3, 1, 2, 3]"
    },
    {
        "id": 533,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($query, $base) = @_;\n    my($query, $base) = @_;\n    my $net_sum = 0;\n    foreach my $key (keys %$base) {\n        my $val = $base->{$key};\n        if (substr($key, 0, 1) eq $query && length($key) == 3) {\n            $net_sum -= $val;\n        } elsif (substr($key, -1) eq $query && length($key) == 3) {\n            $net_sum += $val;\n        }\n    }\n    return $net_sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"a\", {}),-10)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "-10"
    },
    {
        "id": 534,
        "res": true,
        "code": "\n# \nsub f {\n    my($sequence, $value) = @_;\n    my $i = index($sequence, $value) - int(length($sequence) / 3);\n    $i = $i >= 0 ? $i : 0;\n    my $result = '';\n    for my $j (0 .. length($sequence) - $i - 1) {\n        my $v = substr($sequence, $i + $j, 1);\n        if ($v eq '+') {\n            $result .= $value;\n        } else {\n            $result .= substr($sequence, $i + $j, 1);\n        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"hosu\", \"o\"),\"hosu\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"hosu\""
    },
    {
        "id": 535,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($n) = @_;\n    $n =~ s/[^0-24-9]//g; # remove all characters that are not in the set [0-24-9]\n    return $n eq $_[0]; # if the resulting string is equal to the original string, return True\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(1341240312),True)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "True"
    },
    {
        "id": 536,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($cat) = @_;\n    my $digits = 0;\n    foreach my $char (split //, $cat) {\n        if ($char =~ /\\d/) {\n            $digits++;\n        }\n    }\n    return $digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"C24Bxxx982ab\"),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "3"
    },
    {
        "id": 537,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $value) = @_;\n    my @new_text = split(//, $text);\n    eval { push(@new_text, $value); };\n    my $length = @new_text;\n    return '[' . $length . ']';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"abv\", \"a\"),[3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[3]"
    },
    {
        "id": 538,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\nsub f {\n    my($text, $width) = @_;\n    my $new_text = substr($text, 0, $width);\n    return substr(\"zzz${new_text}zzz\", 0, $width);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"0574\", 9),\"0574\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"0574\""
    },
    {
        "id": 539,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($array) = @_;\n    my $c = $array;\n    my $array_copy = $array;\n\n    while (1) {\n        push(@$c, '_');\n        if ($c eq $array_copy) {\n            $array_copy->[scalar @$c-1] = '';\n            last;\n        }\n    }\n    return $array_copy;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[]"
    },
    {
        "id": 540,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($a) = @_;\n    my @b = @{$a};\n    for(my $k = 0; $k < scalar(@{$a}) - 1; $k += 2) {\n        splice(@b, $k + 1, 0, $b[$k]);\n    }\n    push(@b, $b[0]);\n    return \\@b;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([5, 5, 5, 6, 4, 9]),[5, 5, 5, 6, 4, 9])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[5, 5, 5, 6, 4, 9]"
    },
    {
        "id": 541,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    my @new_text = split(//, $text);\n    return join('', grep /\\S/, @new_text) ne '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\" \t  　\"),\" \t  　\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\" \t  　\""
    },
    {
        "id": 542,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($test, $sep, $maxsplit) = @_;\n    $sep = ' ' unless defined $sep;\n    $maxsplit = -1 unless defined $maxsplit;\n    \n    eval {\n        return [ reverse split($sep, $test, $maxsplit) ];\n    } or do {\n        return [ reverse split(' ', $test) ];\n    };\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ab cd\", \"x\", 2),[\"c d\", \"x\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"c d\", \"x\"]"
    },
    {
        "id": 543,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($item) = @_;\n    my $modified = $item;\n    $modified =~ s/\\. / , /g;\n    $modified =~ s/&#33; /! /g;\n    $modified =~ s/\\. /? /g;\n    $modified =~ s/\\. /\\. /g;\n    $modified = ucfirst(substr($modified, 0, 1)) . substr($modified, 1);\n    \n    return $modified;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\".,,,,,. منبت\"),\"أنبت\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"أنبت\""
    },
    {
        "id": 544,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @a = split('\\n', $text);\n    my @b;\n    foreach my $line (@a) {\n        my $c = $line;\n        $c =~ s/\\t/    /g;\n        push @b, $c;\n    }\n    return join('\\n', @b);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"\t\t\ttab tab tabulates\"),\"tab\\t\\tabulates\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"tab\\t\\tabulates\""
    },
    {
        "id": 545,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array) = @_;\n    my @result;\n    my $index = 0;\n    while ($index < scalar(@{$array})) {\n        push @result, pop(@{$array});\n        $index += 2;\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([8, 8, -4, -9, 2, 8, -1, 8]),[8, -4, 2, 8, -1, 8])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[8, -4, 2, 8, -1, 8]"
    },
    {
        "id": 546,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $speaker) = @_;\n    while (index($text, $speaker) == 0) {\n        $text = substr($text, length($speaker));\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"[CHARRUNNERS]Do you know who the other was? [NEGMENDS]\", \"[CHARRUNNERS]\"),\"yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"yes\""
    },
    {
        "id": 547,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($letters) = @_;\n    $letters =~ s/^[\\., !\\?\\*]|[\\., !\\?\\*]$//g;\n    return join(\"....\", split(/ /, $letters));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"h,e,l,l,o,wo,r,ld,\"),\"hello world\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"hello world\""
    },
    {
        "id": 548,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $suffix) = @_;\n    if ($suffix && $text && substr($text, -length($suffix)) eq $suffix) {\n        return substr($text, 0, -length($suffix));\n    } else {\n        return $text;\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"spider\", \"ed\"),\"spidered\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"spidered\""
    },
    {
        "id": 549,
        "res": true,
        "code": "\n\n# \nsub f {\n    my($matrix) = @_;\n    my $result = [];\n    @$matrix = reverse @$matrix;\n    for my $primary (@$matrix) {\n        my $max = max(@$primary);\n        @$primary = sort {$b <=> $a} @$primary;\n        push @$result, $primary;\n    }\n    return $result;\n}\nuse List::Util qw(max);\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([[1, 1, 1, 1]]),[[1, 1, 1, 1]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[[1, 1, 1, 1]]"
    },
    {
        "id": 550,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    foreach my $i (0..$#{$nums}) {\n        splice @{$nums}, $i, 0, $nums->[$i]**2;\n    }\n    return $nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 4]),[1, 4, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 4, 16]"
    },
    {
        "id": 551,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($data) = @_;\n    my @members;\n    foreach my $item (keys %$data) {\n        foreach my $member (@{$data->{$item}}) {\n            if (!grep { $_ eq $member } @members) {\n                push @members, $member;\n            }\n        }\n    }\n    return [sort @members];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"inf\" => [\"a\", \"b\"], \"a\" => [\"inf\", \"c\"], \"d\" => [\"inf\"]}),[\"a\", \"inf\", \"c\", \"inf\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"a\", \"inf\", \"c\", \"inf\"]"
    },
    {
        "id": 552,
        "res": true,
        "code": "\n# \nsub f {\n    my($d) = @_;\n    my %result;\n    foreach my $k (keys %$d) {\n        my $v = $d->{$k};\n        if (ref $k eq 'HASH') {\n            foreach my $i (@$v) {\n                $result{$i} = $k;\n            }\n        } else {\n            $result{$k} = $v;\n        }\n    }\n    return \\%result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({2 => 0.76, 5 => [3, 6, 9, 12]}),{2 => 0.76, 5 => [3, 6, 9, 12]})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{2 => 0.76, 5 => [3, 6, 9, 12]}"
    },
    {
        "id": 553,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $count) = @_;\n    foreach my $i (1..$count) {\n        $text = reverse $text;\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"439m2670hlsw\", 3),\"sihtlwrom sihtlwym\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"sihtlwrom sihtlwym\""
    },
    {
        "id": 554,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($arr) = @_;\n    return [reverse @$arr];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([2, 0, 1, 9999, 3, -5]),[9999, 3, -5, 2, 0, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[9999, 3, -5, 2, 0, 1]"
    },
    {
        "id": 555,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $tabstop) = @_;\n    $text =~ s/\\n/_____/g;\n    $text =~ s/\\t/' ' x $tabstop/ge;\n    $text =~ s/_____/\\\\n/g;\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"odes\tcode\twell\", 2),\"odes code well\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"odes code well\""
    },
    {
        "id": 556,
        "res": 0
    },
    {
        "id": 557,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($s) = @_;\n    my @d = $s =~ /(.*)(ar)(.*)/;\n    return join(' ', @d);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"xxxarmmarxx\"),\"arm mar\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"arm mar\""
    },
    {
        "id": 558,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\nuse strict;\nuse warnings;\n\nsub f {\n    my ($nums, $mos) = @_;\n    foreach my $num (@$mos) {\n        my $index = 0;\n        foreach my $n (@$nums) {\n            last if $n == $num;\n            $index++;\n        }\n        splice(@$nums, $index, 1);\n    }\n    @$nums = sort { $a <=> $b } @$nums;\n    push(@$nums, @$mos);\n    for (my $i = 0; $i < @$nums - 1; $i++) {\n        if ($nums->[$i] > $nums->[$i + 1]) {\n            return \"\";\n        }\n    }\n    return 1;\n}\n\n\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([3, 1, 2, 1, 4, 1], [1]),[1, 1, 2, 3, 4, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 1, 2, 3, 4, 1]"
    },
    {
        "id": 559,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($n) = @_;\n    $n = \"$n\";\n    return substr($n, 0, 1) . '.' . substr($n, 1, length($n)-1) =~ s/-/_/gr;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"first-second-third\"),\"f.t\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"f.t\""
    },
    {
        "id": 560,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $x = 0;\n    if ($text =~ /^[a-z]+$/) {\n        my @chars = split(//, $text);\n        foreach my $c (@chars) {\n            if ($c =~ /\\d/ && $c < 9) {\n                $x += 1;\n            }\n        }\n    }\n    return $x;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"591237865\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 561,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $digit) = @_;\n    my $count = () = $text =~ /$digit/g;\n    return int($digit) * $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"7Ljnw4Lj\", \"7\"),42)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "42"
    },
    {
        "id": 562,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    return uc($text) eq $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"VTBAEPJSLGAHINS\"),True)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "True"
    },
    {
        "id": 563,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\nuse strict;\nuse warnings;\nuse List::Util qw(sum);\n\nsub f {\n    my ($text1, $text2) = @_;\n    my @nums;\n    foreach my $i (0 .. length($text2) - 1) {\n        my $char = substr($text2, $i, 1);\n        push @nums, scalar(grep { $_ eq $char } split //, $text1);\n    }\n    return sum(@nums);\n}\n\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"jivespdcxc\", \"sx\"),15)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "15"
    },
    {
        "id": 564,
        "res": true,
        "code": "\n# \nsub f {\n    my($lists) = @_;\n    $lists->[1] = [];\n    push @{$lists->[2]}, @{$lists->[1]};\n    return $lists->[0];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([[395, 666, 7, 4], [], [4223, 111]]),[395, 666, 7, 4])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[395, 666, 7, 4]"
    },
    {
        "id": 565,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my $max_index = -1;\n    \n    foreach my $ch (@vowels) {\n        my $index = index($text, $ch);\n        $max_index = $index if $index > $max_index;\n    }\n    \n    return $max_index;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"qsqgijwmmhbchoj\"),8)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "8"
    },
    {
        "id": 566,
        "res": true,
        "code": "\n\nuse Encode;\n\nsub f {\n    my($string, $code) = @_;\n    my $t;\n    eval {\n        $t = encode($code, $string);\n        if(substr($t, -1) eq \"\\n\"){\n            $t = substr($t, 0, -1);\n        }\n        $t = decode('UTF-8', $t);\n    };\n    return $t;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"towaru\", \"UTF-8\"),\"towaru\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"towaru\""
    },
    {
        "id": 567,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\nsub f {\n    my($s, $n) = @_;\n    my @ls = split / /, $s;\n    my @out = ();\n    while (@ls >= $n) {\n        push @out, @ls[ -$n .. -1 ];\n        splice @ls, -$n;\n    }\n    return [ @ls, join '_', @out ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"one two three four five\", 3),\"five_four_three\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"five_four_three\""
    },
    {
        "id": 568,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($num) = @_;\n    my $num = shift;\n    my $letter = 1;\n    foreach my $i ('1','2','3','4','5','6','7','8','9','0') {\n        $num =~ s/$i//g;\n        if (length($num) == 0) { last; }\n        $num = substr($num, $letter) . substr($num, 0, $letter);\n        $letter += 1;\n    }\n    return $num;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"bwmm7h\"),\"123\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"123\""
    },
    {
        "id": 569,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($txt) = @_;\n    my %coincidences;\n    \n    foreach my $c (split '', $txt) {\n        if (exists $coincidences{$c}) {\n            $coincidences{$c} += 1;\n        } else {\n            $coincidences{$c} = 1;\n        }\n    }\n    \n    my $sum = 0;\n    foreach my $value (values %coincidences) {\n        $sum += $value;\n    }\n    \n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"11 1 1\"),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "3"
    },
    {
        "id": 570,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array, $index, $value) = @_;\n    unshift @{$array}, $index + 1;\n    if ($value >= 1) {\n        splice @{$array}, $index, 0, $value;\n    }\n    return $array;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([2], 0, 2),[2, 2, 2, 2, 2, 2, 2, 2, 2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"
    },
    {
        "id": 571,
        "res": true,
        "code": "\n\n# \nsub f {\n    my($input_string, $spaces) = @_;\n    return $input_string;\n}\n\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"a\\tb\", 4),\"a\\tb\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"a\\tb\""
    },
    {
        "id": 572,
        "res": 0
    },
    {
        "id": 573,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($string, $prefix) = @_;\n    if (index($string, $prefix) == 0) {\n        return substr($string, length($prefix));\n    }\n    return $string;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Vipra\", \"via\"),\"Vipr\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"Vipr\""
    },
    {
        "id": 574,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($simpons) = @_;\n    while (scalar(@$simpons)) {\n        my $pop = pop(@$simpons);\n        if ($pop eq ucfirst($pop)) {\n            return $pop;\n        }\n    }\n    return $pop;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"George\", \"Michael\", \"George\", \"Costanza\"]),\"George\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"George\""
    },
    {
        "id": 575,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($nums, $val) = @_;\n    my @new_list;\n    for my $i (@$nums) {\n        push @new_list, ($i) x $val;\n    }\n    return List::Util::sum(@new_list);\n}\nuse List::Util qw(sum);\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([10, 4], 3),30)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "30"
    },
    {
        "id": 576,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array, $const) = @_;\n    my @output = ('x');\n    for my $i (1..scalar(@$array)) {\n        if ($i % 2 != 0) {\n            push @output, $array->[$i - 1] * -2;\n        } else {\n            push @output, $const;\n        }\n    }\n    return \\@output;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 3], -1),[-1, 2, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[-1, 2, -3]"
    },
    {
        "id": 577,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\nsub f {\n    my($items) = @_;\n    my @result;\n    for my $number (@$items) {\n        my %d = @$items;\n        my ($k) = keys %d;\n        delete $d{$k};\n        push @result, {%d};\n        @$items = %d;\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([[1, \"pos\"]]),[1, \"pos\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, \"pos\"]"
    },
    {
        "id": 578,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nsyntax error at /tmp/tmp5hj4ddmm.pl line 18, near \"R:\"\nExecution of /tmp/tmp5hj4ddmm.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($obj) = @_;\n    foreach my $k (keys %$obj) {\n        my $v = $obj->{$k};\n        if ($v >= 0) {\n            $obj->{$k} = -$v;\n        }\n    }\n    return $obj;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"R\" => 0, \"T\" => 3, \"F\" => -6, \"K\" => 0}),{R: 0, T: 3, F: -6, K: 0})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{R: 0, T: 3, F: -6, K: 0}"
    },
    {
        "id": 579,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    if ($text =~ /^[A-Z][a-z]*$/) {\n        if (length($text) > 1 && lc($text) ne $text) {\n            return lc(substr($text, 0, 1)) . substr($text, 1);\n        }\n    } elsif ($text =~ /^[a-zA-Z]+$/) {\n        return ucfirst(lc($text));\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"\"),\"A\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"A\""
    },
    {
        "id": 580,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $char) = @_;\n    my $new_text = $text;\n    my @a;\n    while ($new_text =~ /$char/) {\n        push(@a, index($new_text, $char));\n        substr($new_text, index($new_text, $char), 1) = '';\n    }\n    return \\@a;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"rvr\", \"r\"),[\"r\", \"r\", \"r\", \"r\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"r\", \"r\", \"r\", \"r\"]"
    },
    {
        "id": 581,
        "res": 0
    },
    {
        "id": 582,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($k, $j) = @_;\n    my @arr;\n    for (my $i = 0; $i < $k; $i++) {\n        push @arr, $j;\n    }\n    return \\@arr;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(7, 5),[7, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[7, 5]"
    },
    {
        "id": 583,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $ch) = @_;\n    my @result;\n    my @lines = split(/\\n/, $text);\n    foreach my $line (@lines) {\n        if (length($line) > 0 && substr($line, 0, 1) eq $ch) {\n            push @result, lc($line);\n        } else {\n            push @result, uc($line);\n        }\n    }\n    return join(\"\\n\", @result);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"t\nza\na\", \"t\"),\"T\\nZ\\nA\\nT\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"T\\nZ\\nA\\nT\""
    },
    {
        "id": 584,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($txt) = @_;\n    return sprintf($txt, ('0' x 20));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"5123807309875480094949830\"),\"123807309875480094949830\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"123807309875480094949830\""
    },
    {
        "id": 585,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $count = () = $text =~ /$text/g;\n    my @ls = split('', $text);\n    for (my $i = 0; $i < $count; $i++) {\n        shift @ls;\n    }\n    return join('', @ls);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\";,,,?\"),\"hello world\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"hello world\""
    },
    {
        "id": 586,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $char) = @_;\n    return rindex($text, $char);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"breakfast\", \"e\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 587,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums, $fill) = @_;\n    my %ans = map { $_ => $fill } @{$nums};\n    return \\%ans;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([0, 1, 1, 2], \"abcca\"),{0 => \"a\", 1 => \"b\", 2 => \"c\", \"fill\" => \"a\"})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{0 => \"a\", 1 => \"b\", 2 => \"c\", \"fill\" => \"a\"}"
    },
    {
        "id": 588,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($items, $target) = @_;\n    my $index = -1;\n    for my $i (0 .. $#$items) {\n        if ($items->[$i] eq $target) {\n            $index = $i;\n            last;\n        }\n    }\n    return $index;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"1\", \"+\", \"-\", \"**\", \"//\", \"*\", \"+\"], \"**\"),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "-1"
    },
    {
        "id": 589,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($num) = @_;\n    push @{$num}, $num->[-1];\n    return $num;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([-70, 20, 9, 1]),[-70, 20, 9, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[-70, 20, 9, 1]"
    },
    {
        "id": 590,
        "res": 0
    },
    {
        "id": 591,
        "res": 0
    },
    {
        "id": 592,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($numbers) = @_;\n    my @new_numbers;\n    for my $i (0..$#{$numbers}) {\n        push @new_numbers, $numbers->[$#{$numbers}-$i];\n    }\n    return \\@new_numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([11, 3]),[11, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[11, 3]"
    },
    {
        "id": 593,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nSemicolon seems to be missing at /tmp/tmpbhmmaef7.pl line 22.\nsyntax error at /tmp/tmpbhmmaef7.pl line 17, near \",)\"\nMissing right curly or square bracket at /tmp/tmpbhmmaef7.pl line 24, at end of line\nExecution of /tmp/tmpbhmmaef7.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($nums, $n) = @_;\n    my @nums = @{$nums};\n    my $pos = scalar @nums - 1;\n    for my $i (-scalar @nums .. -1) {\n        splice @nums, $pos, 0, $nums[$i];\n    }\n    return \\@nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([], 14),[14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,"
    },
    {
        "id": 594,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($file) = @_;\n    return index($file, \"\\n\");\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"n wez szize lnson tilebi it 504n.\n\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 595,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $prefix) = @_;\n    if (index($text, $prefix) == 0) {\n        $text =~ s/^\\Q$prefix\\E//;\n    }\n    $text = ucfirst($text);\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"qdhstudentamxupuihbuztn\", \"jdm\"),\"QDHSTUIAHBNUZT\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"QDHSTUIAHBNUZT\""
    },
    {
        "id": 596,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($txt, $alpha) = @_;\n    my @txt = sort @$txt;\n    if((grep { $txt[$_] eq $alpha } 0..$#txt)[0] % 2 == 0) {\n      return [reverse @txt];\n    }\n    return \\@txt;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"8\", \"9\", \"7\", \"4\", \"3\", \"2\"], \"9\"),[\"9\", \"8\", \"7\", \"4\", \"3\", \"2\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"9\", \"8\", \"7\", \"4\", \"3\", \"2\"]"
    },
    {
        "id": 597,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s) = @_;\n    return uc($s);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Jaafodsfa SOdofj AoaFjIs  JAFasIdfSa1\"),\"JAFAsIdfSa1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"JAFAsIdfSa1\""
    },
    {
        "id": 598,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $n) = @_;\n    my $length = length($text);\n    return substr($text, $length*($n%4), $length);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"abc\", 1),\"abc\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"abc\""
    },
    {
        "id": 599,
        "res": 0
    },
    {
        "id": 600,
        "res": true,
        "code": "\n# \nsub f {\n    my($array) = @_;\n    my @just_ns = map { 'n' x $_ } @{$array};\n    my @final_output;\n    foreach my $wipe (@just_ns) {\n        push @final_output, $wipe;\n    }\n    return \\@final_output;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[]"
    },
    {
        "id": 601,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $t = 5;\n    my @tab;\n    foreach my $i (split(//, $text)) {\n        if (lc $i eq 'a' || lc $i eq 'e' || lc $i eq 'i' || lc $i eq 'o' || lc $i eq 'u' || lc $i eq 'y') {\n            push @tab, uc($i) x $t;\n        } else {\n            push @tab, $i x $t;\n        }\n    }\n    return join(' ', @tab);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"csharp\"),\"C# I5\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"C# I5\""
    },
    {
        "id": 602,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums, $target) = @_;\n    my @nums = @{$nums};\n    my $cnt = grep { $_ == $target } @nums;\n    return $cnt * 2;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 1], 1),2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "2"
    },
    {
        "id": 603,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($sentences) = @_;\n    my @sentences = split(/\\./, $sentences);\n    if (grep(!/^\\d+$/, @sentences)) {\n        return 'not oscillating';\n    } else {\n        return 'oscillating';\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"not numbers\"),not oscillating)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "not oscillating"
    },
    {
        "id": 604,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $start) = @_;\n    return substr($text, 0, length($start)) eq $start;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Hello world\", \"Hello\"),\"Hello\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"Hello\""
    },
    {
        "id": 605,
        "res": true,
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    @$nums = ();\n    return \"quack\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([2, 5, 1, 7, 9, 3]),\"quack\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"quack\""
    },
    {
        "id": 606,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($value) = @_;\n    my @ls = split(//, $value);\n    push @ls, 'NHIB';\n    return join('', @ls);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ruam\"),\"ruam\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"ruam\""
    },
    {
        "id": 607,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @symbols = ('.', '!', '?');\n    foreach my $i (@symbols) {\n        if ($text =~ /$i$/) {\n            return 1;\n        }\n    }\n    return 0;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\". C.\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 608,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($aDict) = @_;\n    return { reverse %$aDict };\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({1 => 1, 2 => 2, 3 => 3}),{3, 2, 1})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{3, 2, 1}"
    },
    {
        "id": 609,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array, $elem) = @_;\n    my %result = %{$array};\n    while (%result) {\n        my ($key, $value) = each %result;\n        if ($elem eq $key || $elem eq $value) {\n            %result = (%result, %{$array});\n        }\n        delete $result{$key};\n    }\n    return \\%result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({}, 1),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[]"
    },
    {
        "id": 610,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\nsub f {\n    my($keys, $value) = @_;\n    my %d = map { $_ => $value } @$keys;\n    my @keys = sort { $a <=> $b } keys %d;\n    for my $i (0..$#keys) {\n        my $k = $keys[$i];\n        if (exists $d{$k} and exists $d{$i+1} and $d{$k} == $d{$i+1}) {\n            delete $d{$i+1};\n        }\n    }\n    return \\%d;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 1, 1], 3),{1 => 3})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{1 => 3}"
    },
    {
        "id": 611,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    @{$nums} = reverse @{$nums};\n    return $nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([-6, -2, 1, -3, 0, 1]),[6, 2, 1, 3, 0, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[6, 2, 1, 3, 0, 1]"
    },
    {
        "id": 612,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nsyntax error at /tmp/tmp2cys7upv.pl line 13, near \"\"a\":\"\nExecution of /tmp/tmp2cys7upv.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($d) = @_;\n    return { %$d };\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"a\" => 42, \"b\" => 1337, \"c\" => -1, \"d\" => 5}),{\n    \"a\": 42,\n    \"b\": 1337,\n    \"c\": -1,\n    \"d\": 5\n})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{\n    \"a\": 42,\n    \"b\": 1337,\n    \"c\": -1,\n    \"d\": 5\n}"
    },
    {
        "id": 613,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $result = '';\n    my $mid = int((length($text) - 1) / 2);\n    for my $i (0..$mid-1) {\n        $result .= substr($text, $i, 1);\n    }\n    for my $i ($mid..length($text)-2) {\n        $result .= substr($text, $mid + length($text) - 1 - $i, 1);\n    }\n    return $result . substr($text, -1) x (length($text) - length($result));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"eat!\"),\"eatt\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"eatt\""
    },
    {
        "id": 614,
        "res": true,
        "code": "\n# \nsub f {\n    my($text, $substr, $occ) = @_;\n    my $n = 0;\n    while (1) {\n        my $i = rindex($text, $substr);\n        if ($i == -1) {\n            last;\n        } elsif ($n == $occ) {\n            return $i;\n        } else {\n            $n++;\n            $text = substr($text, 0, $i);\n        }\n    }\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"zjegiymjc\", \"j\", 2),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "-1"
    },
    {
        "id": 615,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($in_list, $num) = @_;\n    push @{$in_list}, $num;\n    my $max_index = 0;\n    my $max_value = $in_list->[0];\n    for (my $i = 0; $i < @{$in_list} - 1; $i++) {\n        if ($in_list->[$i] > $max_value) {\n            $max_value = $in_list->[$i];\n            $max_index = $i;\n        }\n    }\n    return $max_index;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([-1, 12, -6, -2], -1),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "-1"
    },
    {
        "id": 616,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($body) = @_;\n    my @ls = split(//, $body);\n    my $dist = 0;\n    for my $i (0..$#ls-1) {\n        if ($ls[$i - 2 >= 0 ? $i - 2 : 0] eq \"\\t\") {\n            $dist += (1 + ($ls[$i - 1] =~ tr/\\t//)) * 3;\n        }\n        $ls[$i] = '[' . $ls[$i] . ']';\n    }\n    return join(\"\", @ls) =~ s/\\t/    /gr;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"\n\ny\n\"),\"[]\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"[]\""
    },
    {
        "id": 617,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    if ($text =~ m/^[\\x00-\\x7F]*$/s) {\n        return 'ascii';\n    } else {\n        return 'non ascii';\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"<<<<\"),\"hello\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 618,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($match, $fill, $n) = @_;\n    return substr($fill, 0, $n) . $match;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"9\", \"8\", 2),\"99\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"99\""
    },
    {
        "id": 619,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($title) = @_;\n    return lc($title);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"   Rock   Paper   SCISSORS  \"),\"rock science\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"rock science\""
    },
    {
        "id": 620,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nCan't locate object method \"gnadnu\" via package \"si\" (perhaps you forgot to load \"si\"?) at /tmp/tmps858z3ru.pl line 12.\n",
        "code": "\n# \nsub f {\n    my($x) = @_;\n    return join(' ', reverse split('', $x));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"lert dna ndqmxohi3\"),gnadnu si sihT)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "gnadnu si sihT"
    },
    {
        "id": 621,
        "res": 0
    },
    {
        "id": 622,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s) = @_;\n    my ($left, $sep, $right) = reverse split /\\./, $s;\n    my $new = join $sep, $right, $left;\n    my (undef, $sep, undef) = reverse split /\\./, $new;\n    $new =~ s/$sep/, /g;\n    return $new;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"galgu\"),\"galguf\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"galguf\""
    },
    {
        "id": 623,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $rules) = @_;\n    foreach my $rule (@$rules) {\n        if ($rule eq '@') {\n            $text = reverse $text;\n        } elsif ($rule eq '~') {\n            $text = uc $text;\n        } elsif ($text && substr($text, -1) eq $rule) {\n            $text = substr($text, 0, length($text) - 1);\n        }\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"hi~!\", [\"~\", \"`\", \"!\", \"&\"]),\"siht\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"siht\""
    },
    {
        "id": 624,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $char) = @_;\n    my $char_index = index($text, $char);\n    my @result = ();\n    if ($char_index > 0) {\n        @result = split(//, substr($text, 0, $char_index));\n    }\n    push @result, split(//, $char), split(//, substr($text, $char_index+length($char)));\n    return join('', @result);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"llomnrpc\", \"x\"),\"lomnrpcx\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"lomnrpcx\""
    },
    {
        "id": 625,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nSmartmatch is experimental at /tmp/tmpl_27p99e.pl line 8.\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $count = 0;\n    my @punctuation = qw(. ? ! , .);\n    foreach my $char (split('', $text)) {\n        $count++ if $char ~~ @punctuation;\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"bwiajegrwjd??djoda,?\"),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "3"
    },
    {
        "id": 626,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($line, $equalityMap) = @_;\n    my %rs = map { $_->[0] => $_->[1] } @{$equalityMap};\n    return $line =~ s/(.)/exists $rs{$1} ? $rs{$1} : $1 /egr;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"abab\", [[\"a\", \"b\"], [\"b\", \"a\"]]),\"abab\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"abab\""
    },
    {
        "id": 627,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($parts) = @_;\n    my %temp_hash = map {@$_} @$parts;\n    return [values %temp_hash];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([[\"u\", 1], [\"s\", 7], [\"u\", -5]]),[\"u\", 1, \"s\", 7, \"u\", -5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"u\", 1, \"s\", 7, \"u\", -5]"
    },
    {
        "id": 628,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums, $delete) = @_;\n    my @result = grep { $_ != $delete } @$nums;\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([4, 5, 3, 6, 1], 5),[4, 6, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[4, 6, 1]"
    },
    {
        "id": 629,
        "res": true,
        "code": "\n# \nsub f {\n    my($text, $dng) = @_;\n    if (index($text, $dng) == -1) {\n        return $text;\n    }\n    if (substr($text, -length($dng)) eq $dng) {\n        return substr($text, 0, -length($dng));\n    }\n    return substr($text, 0, -1) . f(substr($text, 0, -2), $dng);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"catNG\", \"NG\"),\"cat\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"cat\""
    },
    {
        "id": 630,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($original, $string) = @_;\n    my %temp = %$original;\n    while (my ($a, $b) = each %$string) {\n        $temp{$b} = $a;\n    }\n    return \\%temp;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({1 => -9, 0 => -7}, {1 => 2, 0 => 3}),{1 => -9, 0 => -7})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{1 => -9, 0 => -7}"
    },
    {
        "id": 631,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\nsub f {\n    my($text, $num) = @_;\n    my $req = $num - length $text;\n    $text = '*' x (($req // 2) - $num // 2) . $text . '*' x ($req // 2);\n    my $start = $req // 2;\n    my $end = -$req // 2;\n    return substr($text, $start, -$end);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"a\", 19),\"a****a\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"a****a\""
    },
    {
        "id": 632,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($lst) = @_;\n    for my $i (reverse 1..scalar(@$lst) - 1) {\n        for my $j (0..$i-1) {\n            if ($lst->[$j] > $lst->[$j + 1]) {\n                ($lst->[$j], $lst->[$j + 1]) = ($lst->[$j + 1], $lst->[$j]);\n                @$lst = sort { $a <=> $b } @$lst;\n            }\n        }\n    }\n    return $lst;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([63, 0, 1, 5, 9, 87, 0, 7, 25, 4]),[9, 87, 7, 25, 25, 63, 0, 1, 5, 4])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[9, 87, 7, 25, 25, 63, 0, 1, 5, 4]"
    },
    {
        "id": 633,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($array, $elem) = @_;\n    my $found;\n    $array = [reverse @$array];\n    for my $i (0..$#$array) {\n        if ($array->[$i] == $elem) {\n            $found = $i;\n            last;\n        }\n    }\n    $array = [reverse @$array];\n    return $found;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([5, -3, 3, 2], 2),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 634,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($input_string) = @_;\n    my $table = {'a' => 'i', 'i' => 'o', 'o' => 'u', 'e' => 'a'};\n    while ($input_string =~ /a|A/) {\n        $input_string =~ tr/aioe/ioua/;\n    }\n    return $input_string;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"biec\"),\"ioua\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"ioua\""
    },
    {
        "id": 635,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\nBEGIN {\n    $ENV{LC_ALL} = 'C';\n}\n\nsub f {\n    my($text) = @_;\n    $text = uc($text);\n    my @valid_chars = ('-', '_', '+', '.', '/', ' ');\n    foreach my $char (split //, $text) {\n        if ($char !~ /[[:alnum:]]/ && !grep {$_ eq $char} @valid_chars) {\n            return \"\";\n        }\n    }\n    return 1;\n}\n\n\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW\"),\"H7HPeaQ\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"H7HPeaQ\""
    },
    {
        "id": 636,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($d) = @_;\n    my %r;\n    while (keys %$d) {\n        %r = (%r, %$d);\n        delete $d->{(sort {$a <=> $b} keys %$d)[-1]};\n    }\n    return \\%r;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({3 => \"A3\", 1 => \"A1\", 2 => \"A2\"}),[\"A3\", \"A1\", \"A2\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"A3\", \"A1\", \"A2\"]"
    },
    {
        "id": 637,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n\"no\" not allowed in expression at /tmp/tmpjaq75woh.pl line 18, at end of line\nsyntax error at /tmp/tmpjaq75woh.pl line 18, near \",no\"\nExecution of /tmp/tmpjaq75woh.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @text = split(' ', $text);\n    foreach my $t (@text) {\n        if ($t !~ /^\\d+$/) {\n            return 'no';\n        }\n    }\n    return 'yes';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"03625163633 d\"),no)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "no"
    },
    {
        "id": 638,
        "res": true,
        "code": "\n# \nsub f {\n    my($s, $suffix) = @_;\n    if ($suffix eq \"\") {\n        return $s;\n    }\n    while ($s =~ /$suffix$/) {\n        $s = substr($s, 0, length($s) - length($suffix));\n    }\n    return $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ababa\", \"ab\"),\"ababa\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"ababa\""
    },
    {
        "id": 639,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($perc, $full) = @_;\n    my $reply = \"\";\n    my $i = 0;\n    while (substr($perc, $i, 1) eq substr($full, $i, 1) && $i < length($full) && $i < length($perc)) {\n        if (substr($perc, $i, 1) eq substr($full, $i, 1)) {\n            $reply .= \"yes \";\n        } else {\n            $reply .= \"no \";\n        }\n        $i++;\n    }\n    return $reply;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"xabxfiwoexahxaxbxs\", \"xbabcabccb\"),\"yes yes no yes no yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"yes yes no yes no yes\""
    },
    {
        "id": 640,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $a = 0;\n    if (index($text, substr($text, 0, 1), 1) != -1) {\n        $a += 1;\n    }\n    for my $i (0..length($text)-2) {\n        if (index($text, substr($text, $i, 1), $i+1) != -1) {\n            $a += 1;\n        }\n    }\n    return $a;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"3eeeeeeoopppppppw14film3oee3\"),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "3"
    },
    {
        "id": 641,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\nuse strict;\nuse warnings;\n\nsub f {\n    my($number) = @_;\n    return $number =~ /^\\d+$/ ? 1 : \"\";\n}\n\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"dummy33;d\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 642,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n\"no\" not allowed in expression at /tmp/tmpk7gsia2i.pl line 19, at end of line\nsyntax error at /tmp/tmpk7gsia2i.pl line 19, near \",no\"\nExecution of /tmp/tmpk7gsia2i.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $i = 0;\n    while ($i < length($text) && substr($text, $i, 1) =~ /\\s/) {\n        $i++;\n    }\n    if ($i == length($text)) {\n        return 'space';\n    }\n    return 'no';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"     \"),no)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "no"
    },
    {
        "id": 643,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $suffix) = @_;\n    if (substr($text, -length($suffix)) eq $suffix) {\n        $text = substr($text, 0, -1) . uc(substr($text, -1, 1));\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"damdrodm\", \"m\"),\"damdrodm\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"damdrodm\""
    },
    {
        "id": 644,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums, $pos) = @_;\n    my @s = (0 .. $#{$nums});\n    if ($pos % 2) {\n        @s = (0 .. $#{$nums} - 1);\n    }\n    @{$nums}[@s] = reverse @{$nums}[@s];\n    return $nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([6, 1], 3),[6, 1, 5, 4, 3, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[6, 1, 5, 4, 3, 2]"
    },
    {
        "id": 645,
        "res": true,
        "code": "\n\n# \nsub f {\n    my($nums, $target) = @_;\n    my $count = scalar(grep { $_ == 0 } @$nums);\n    if ($count) {\n        return 0;\n    }\n    elsif (scalar(grep { $_ == $target } @$nums) < 3) {\n        return 1;\n    }\n    else {\n        my $index = firstidx { $_ == $target } @$nums;\n        return $index;\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 1, 1, 2], 3),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 646,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $count) = @_;\n    for (my $i = 0; $i < $count; $i++) {\n        $text = reverse($text);\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"aBc, ,SzY\", 2),\"syc\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"syc\""
    },
    {
        "id": 647,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $chunks) = @_;\n    my @lines = split(\"\\n\", $text);\n    return \\@lines;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"/alcm@ an)t//eprw)/e!/d\nujv\", 0),[\"alcm\", \"an\", \"t\", \"eprw\", \"e\", \"d\", \"ujv\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"alcm\", \"an\", \"t\", \"eprw\", \"e\", \"d\", \"ujv\"]"
    },
    {
        "id": 648,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nSmartmatch is experimental at /tmp/tmpmoubg_kh.pl line 7.\n",
        "code": "\n# \nsub f {\n    my($list1, $list2) = @_;\n    my @l = @{$list1};\n    while (@l) {\n        if ($l[-1] ~~ @{$list2}) {\n            pop @l;\n        } else {\n            return $l[-1];\n        }\n    }\n    return \"missing\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([0, 4, 5, 6], [13, 23, -5, 0]),missing)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "missing"
    },
    {
        "id": 649,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $tabsize) = @_;\n    my @lines = split(\"\\n\", $text);\n    my @expanded_lines = map { $_ =~ s/\\t/ /g; $_ } @lines;\n    return join(\"\\n\", @expanded_lines);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"\tf9\n\tldf9\n\tadf9!\n\tf9?\", 1),\"f9\\nldf9\\nadf9\\nf9\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"f9\\nldf9\\nadf9\\nf9\""
    },
    {
        "id": 650,
        "res": true,
        "code": "\n# \nsub f {\n    my($string, $substring) = @_;\n    while (index($string, $substring) == 0) {\n        $string = substr($string, length($substring));\n    }\n    return $string;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"\", \"A\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"\""
    },
    {
        "id": 651,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $letter) = @_;\n    if (lc($letter) eq $letter) {\n        $letter = uc($letter);\n    }\n    $text =~ s/($letter)/$1 eq lc($1) ? uc($1) : $1/ge;\n    $text = ucfirst($text);\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"E wrestled evil until upperfeat\", \"e\"),\"E WTRED A LIVING FINE\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"E WTRED A LIVING FINE\""
    },
    {
        "id": 652,
        "res": true,
        "code": "\n# \nsub f {\n    my($string) = @_;\n    if (!$string || !($string =~ /^\\d/)) {\n        return 'INVALID';\n    }\n    my $cur = 0;\n    for my $i (0..length($string)-1) {\n        $cur = $cur * 10 + int(substr($string, $i, 1));\n    }\n    return \"$cur\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"3\"),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "3"
    },
    {
        "id": 653,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $letter) = @_;\n    my @alphabet = ('a'..'z');\n    my $t = $text;\n    for my $alph (@alphabet) {\n        $t =~ s/$alph//g;\n    }\n    return scalar(split(/$letter/, $t));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"c, c, c ,c, c\", \"c\"),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "3"
    },
    {
        "id": 654,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($s, $from_c, $to_c) = @_;\n    my %table;\n    @table{split //, $from_c} = split //, $to_c;\n    return join '', map { $table{$_} // $_ } split //, $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"aphid\", \"i\", \"?\"),\"aphid\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"aphid\""
    },
    {
        "id": 655,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s) = @_;\n    $s =~ s/a//g;\n    $s =~ s/r//g;\n    return $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"rpaar\"),\"rp\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"rp\""
    },
    {
        "id": 656,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($letters) = @_;\n    my @a;\n    for(my $i = 0; $i < scalar(@$letters); $i++) {\n        if(grep { $_ eq $letters->[$i] } @a) {\n            return 'no';\n        }\n        push @a, $letters->[$i];\n    }\n    return 'yes';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"b\", \"i\", \"r\", \"o\", \"s\", \"j\", \"v\", \"p\"]),\"brjvps\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"brjvps\""
    },
    {
        "id": 657,
        "res": true,
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    for my $punct ('!', '.', '?', ',', ':', ';') {\n        if ($text =~ tr/$punct// > 1) {\n            return 'no';\n        }\n        if (substr($text, -1) eq $punct) {\n            return 'no';\n        }\n    }\n    return ucfirst($text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"djhasghasgdha\"),\"Djhasghasgdha\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"Djhasghasgdha\""
    },
    {
        "id": 658,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($d, $get_ary) = @_;\n    my @result;\n    foreach my $key (@$get_ary) {\n        push @result, exists $d->{$key} ? $d->{$key} : undef;\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({3 => \"swims like a bull\"}, [3, 2, 5]),undef)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "undef"
    },
    {
        "id": 659,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($bots) = @_;\n    my @clean;\n    foreach my $username (@{$bots}) {\n        if ($username !~ /^[A-Z]+$/) {\n            push @clean, substr($username, 0, 2) . substr($username, -3);\n        }\n    }\n    return scalar @clean;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"yR?TAJhIW?n\", \"o11BgEFDfoe\", \"KnHdn2vdEd\", \"wvwruuqfhXbGis\"]),[\"yR\", \"TAJhIW\", \"n\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"yR\", \"TAJhIW\", \"n\"]"
    },
    {
        "id": 660,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\nuse strict;\nuse warnings;\nuse List::Util qw(sum);\n\nsub f {\n    my($num) = @_;\n\n    my @initial = (1);\n    my @total = @initial;\n    for (1 .. $num) {\n        @total = (1, map { $total[$_] + $total[$_ + 1] } 0 .. $#total - 1);\n        push @initial, $total[-1];\n    }\n    return sum(@initial);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(3),6)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "6"
    },
    {
        "id": 661,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($letters, $maxsplit) = @_;\n    my @split_letters = split(' ', $letters);\n    return join('', @split_letters[-$maxsplit..-1]);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"elrts,SS ee\", 6),\"elrts,SS ee\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"elrts,SS ee\""
    },
    {
        "id": 662,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($values) = @_;\n    my @names = ('Pete', 'Linda', 'Angela');\n    push @names, @{$values};\n    @names = sort @names;\n    return \\@names;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"Dan\", \"Joe\", \"Dusty\"]),[\"Dan\", \"Joe\", \"Linda\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"Dan\", \"Joe\", \"Linda\"]"
    },
    {
        "id": 663,
        "res": true,
        "code": "\n# \nsub f {\n    my($container, $cron) = @_;\n    my @container = @{$container};\n    if (!grep { $_ eq $cron } @container) {\n        return $container;\n    }\n    \n    my @pref = @container[0..(first_index { $_ eq $cron } @container)-1];\n    my @suff = @container[(first_index { $_ eq $cron } @container)+1..$#container];\n    \n    return [@pref, @suff];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([], 2),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[]"
    },
    {
        "id": 664,
        "res": 0
    },
    {
        "id": 665,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my ($chars) = @_;\n    my $s = '';\n    foreach my $ch (split //, $chars) {\n        my $count = () = $chars =~ /\\Q$ch\\E/g;\n        if ($count % 2 == 0) {\n            $s .= uc($ch);\n        } else {\n            $s .= $ch;\n        }\n    }\n    return $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"acbced\"),\"ace\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"ace\""
    },
    {
        "id": 666,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($d1, $d2) = @_;\n    my $mmax = 0;\n    foreach my $k1 (keys %{$d1}) {\n        my $p = scalar(@{$d1->{$k1}}) + scalar(@{$d2->{$k1} // []});\n        if ($p) {\n            if ($p > $mmax) {\n                $mmax = $p;\n            }\n        }\n    }\n    return $mmax;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({0 => [], 1 => []}, {0 => [0, 0, 0, 0], 2 => [2, 2, 2]}),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 667,
        "res": true,
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @new_text;\n    for(my $i = 0; $i < length($text) / 3; $i++) {\n        push @new_text, \"< \" . substr($text, $i * 3, 3) . \" level=$i >\";\n    }\n    my $last_item = substr($text, int(length($text) / 3) * 3);\n    push @new_text, \"< $last_item level=\" . int(length($text) / 3) . \" >\";\n    return @new_text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"C7\"),< C7 level=0 >)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "< C7 level=0 >"
    },
    {
        "id": 668,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    return substr($text, -1) . substr($text, 0, length($text)-1);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"hellomyfriendear\"),\"yhelloyfriendear\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"yhelloyfriendear\""
    },
    {
        "id": 669,
        "res": true,
        "code": "\n# \nsub f {\n    my($t) = @_;\n    my($a, $sep, $b) = split /-/, $t, -1;\n    if (length($b) == length($a)) {\n        return 'imbalanced';\n    }\n    return $a . (my $new_b = $b); # Replace sep in $b with an empty string\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"fubarbaz\"),\"fubarbaz\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"fubarbaz\""
    },
    {
        "id": 670,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($a, $b) = @_;\n    my %d = map { $a->[$_] => $b->[$_] } 0..$#{$a};\n    @$a = sort { $d{$b} <=> $d{$a} } @$a;\n    return [map { delete $d{$_} } @$a];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"12\", \"ab\"], [2, 2]),[\"ab\", \"12\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"ab\", \"12\"]"
    },
    {
        "id": 671,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $char1, $char2) = @_;\n    my @t1a;\n    my @t2a;\n    for my $i (0 .. length($char1)-1) {\n        push @t1a, substr($char1, $i, 1);\n        push @t2a, substr($char2, $i, 1);\n    }\n    my %t1 = map { $t1a[$_] => $t2a[$_] } 0 .. $#t1a;\n    my $trans = join '', map { defined $t1{$_} ? $t1{$_} : $_ } split //, $text;\n    return $trans;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ewriyat emf rwto segya\", \"tey\", \"dgo\"),\"ewryyat emf rwto segya\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"ewryyat emf rwto segya\""
    },
    {
        "id": 672,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $position, $value) = @_;\n    my $length = length($text);\n    my $index = ($position % ($length + 2)) - 1;\n    if ($index >= $length || $index < 0) {\n        return $text;\n    }\n    my @text_list = split('', $text);\n    $text_list[$index] = $value;\n    return join('', @text_list);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"1zd\", 0, \"m\"),\"m\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"m\""
    },
    {
        "id": 673,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($string) = @_;\n    if ($string eq uc $string) {\n        return lc $string;\n    } elsif ($string eq lc $string) {\n        return uc $string;\n    }\n    return $string;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"cA\"),\"Cat\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"Cat\""
    },
    {
        "id": 674,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @ls = split(//, $text);\n    for(my $x = $#ls; $x >= 0; $x--){\n        if(scalar @ls <= 1) { last; }\n        if(index('zyxwvutsrqponmlkjihgfedcba', $ls[$x]) == -1){\n            splice(@ls, $x, 1);\n        }\n    }\n    return join(\"\", @ls);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"qq\"),\"hello\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 675,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums, $sort_count) = @_;\n    @$nums = sort { $a <=> $b } @$nums;\n    return [@{$nums}[0..$sort_count-1]];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 2, 3, 4, 5], 1),[1, 2, 2, 3, 4, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 2, 2, 3, 4, 5]"
    },
    {
        "id": 676,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $tab_size) = @_;\n    $text =~ s/\\t/ /g while $text =~ /\\t/;\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"a\", 100),\"a b c d e f\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"a b c d e f\""
    },
    {
        "id": 677,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $length) = @_;\n    $length = -$length if $length < 0;\n    my $output = '';\n    my @chars = split //, $text;\n    for my $idx (0..$length-1) {\n        if ($chars[$idx % scalar @chars] ne ' ') {\n            $output .= $chars[$idx % scalar @chars];\n        } else {\n            last;\n        }\n    }\n    return $output;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"I got 1 and 0.\", 5),\"Igot1and0\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"Igot1and0\""
    },
    {
        "id": 678,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nsyntax error at /tmp/tmp2rwuripv.pl line 21, near \"'H':\"\nExecution of /tmp/tmp2rwuripv.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my %freq;\n    my @chars = split(\"\", lc $text);\n    foreach my $c (@chars) {\n        if (exists $freq{$c}) {\n            $freq{$c} += 1;\n        } else {\n            $freq{$c} = 1;\n        }\n    }\n    return \\%freq;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"HI\"),{'H': 1, 'I': 1, 'R': 1, 'N': 1, 'D': 1})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{'H': 1, 'I': 1, 'R': 1, 'N': 1, 'D': 1}"
    },
    {
        "id": 679,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    if ($text eq '') {\n        return 0;\n    }\n    my $first_char = substr($text, 0, 1);\n    if ($first_char =~ /^\\d/) {\n        return 0;\n    }\n    for my $last_char (split //, $text) {\n        if ($last_char ne '_' && $last_char !~ /\\w/) {\n            return 0;\n        }\n    }\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"meet\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 680,
        "res": 0
    },
    {
        "id": 681,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array, $ind, $elem) = @_;\n    splice(@$array, $ind < 0 ? -5 : $ind > scalar(@$array) ? scalar(@$array) : $ind + 1, 0, $elem);\n    return $array;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 5, 8, 2, 0, 3], 2, 7),[1, 5, 7, 2, 0, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 5, 7, 2, 0, 3]"
    },
    {
        "id": 682,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $length, $index) = @_;\n    my @ls = reverse split ' ', $text, $index;\n    return join '_', map { substr($_, 0, $length) } @ls;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"hypernimovichyp\", 2, 2),\"nehm\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"nehm\""
    },
    {
        "id": 683,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nsyntax error at /tmp/tmpoplh3go2.pl line 16, near \"disface:\"\nExecution of /tmp/tmpoplh3go2.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($dict1, $dict2) = @_;\n    my %result = %{$dict1};\n    foreach my $key (keys %{$dict2}) {\n        $result{$key} = $dict2->{$key};\n    }\n    return \\%result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"disface\" => 9, \"cam\" => 7}, {\"mforce\" => 5}),{disface: 9, cam: 7})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{disface: 9, cam: 7}"
    },
    {
        "id": 684,
        "res": 0
    },
    {
        "id": 685,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array, $elem) = @_;\n    return scalar(grep {$_ == $elem} @$array) + $elem;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 1, 1], -2),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 686,
        "res": 0
    },
    {
        "id": 687,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @t = split('', $text);\n    splice(@t, int(scalar(@t) / 2), 1);\n    push @t, lc $text;\n    return join(':', @t);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Rjug nzufE\"),\"RjgnizneF\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"RjgnizneF\""
    },
    {
        "id": 688,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @l;\n    my %seen;\n    foreach my $i (@$nums) {\n        push @l, $i unless $seen{$i};\n        $seen{$i} = 1;\n    }\n    return \\@l;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([3, 1, 9, 0, 2, 0, 8]),[3, 1, 9, 0, 2, 0, 8])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[3, 1, 9, 0, 2, 0, 8]"
    },
    {
        "id": 689,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($arr) = @_;\n    my @sub = @{$arr};\n    my $count = scalar @sub;\n    for(my $i = 0; $i < $count; $i += 2) {\n        $sub[$i] *= 5;\n    }\n    return \\@sub;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([-3, -6, 2, 7]),[-15, 10])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[-15, 10]"
    },
    {
        "id": 690,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($n) = @_;\n    if(index($n, '.') != -1) {\n        return int($n)+2.5;\n    }\n    return $n;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"800\"),8.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "8.0"
    },
    {
        "id": 691,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $suffix) = @_;\n    if ($suffix ne '' and index($suffix, substr($suffix, -1)) >= 0) {\n        return f($text =~ s/[\\Q$suffix\\E]$//r, substr($suffix, 0, -1));\n    } else {\n        return $text;\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"rpyttc\", \"cyt\"),\"rpyttc\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"rpyttc\""
    },
    {
        "id": 692,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array) = @_;\n    my @a;\n    @{$array} = reverse @{$array};\n    foreach my $element (@{$array}) {\n        if ($element != 0) {\n            push @a, $element;\n        }\n    }\n    @{$array} = reverse @a;\n    return $array;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([]),[5, 12, 10])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[5, 12, 10]"
    },
    {
        "id": 693,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $n = index($text, '8');\n    return 'x0' x $n;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"sa832d83r xd 8g 26a81xdf\"),\"8g\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"8g\""
    },
    {
        "id": 694,
        "res": 0
    },
    {
        "id": 695,
        "res": true,
        "code": "\n# \nsub f {\n    my($d) = @_;\n    my %result;\n    foreach my $ki (keys %$d) {\n        $result{$ki} = [];\n        my $li = $d->{$ki};\n        foreach my $kj (0 .. $#{$li}) {\n            push @{$result{$ki}}, {};\n            my $dj = $li->[$kj];\n            foreach my $kk (keys %$dj) {\n                $result{$ki}[$kj]{$kk} = {%{$dj->{$kk}}};\n            }\n        }\n    }\n    return \\%result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({}),{})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{}"
    },
    {
        "id": 696,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    my $s = 0;\n    foreach my $i (1..length($text)-1) {\n        $s += length(substr($text, 0, rindex($text, substr($text, $i, 1))));\n    }\n    return $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"wdj\"),6)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "6"
    },
    {
        "id": 697,
        "res": true,
        "code": "\n# \nsub f {\n    my($s, $sep) = @_;\n    my $sep_index = index($s, $sep);\n    my $prefix = substr($s, 0, $sep_index);\n    my $middle = substr($s, $sep_index, length($sep));\n    my $right_str = substr($s, $sep_index + length($sep));\n    return ($prefix, $middle, $right_str);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"not it\", \"\"),(\"not it\", \"\", \"\"))) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "(\"not it\", \"\", \"\")"
    },
    {
        "id": 698,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    $text =~ s/\\)//g;\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"(((((((((((d))))))))).))))(((((\"),\"(((((((((d)))))))))\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"(((((((((d)))))))))\""
    },
    {
        "id": 699,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $elem) = @_;\n    if ($elem ne '') {\n        while ($text =~ /^$elem/) {\n            $text =~ s/$elem//g;\n        }\n        while ($elem =~ /^$text/) {\n            $elem =~ s/$text//g;\n        }\n    }\n    return [$elem, $text];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"some\", \"1\"),\"1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"1\""
    },
    {
        "id": 700,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    return length($text) - (() = $text =~ s/bot//g);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Where is the bot in this world?\"),42)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "42"
    },
    {
        "id": 701,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($stg, $tabs) = @_;\n    foreach my $tab (@$tabs) {\n        $stg =~ s/$tab$//g;\n    }\n    return $stg;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"31849 let it!31849 pass!\", [\"3\", \"1\", \"8\", \" \", \"1\", \"9\", \"2\", \"d\"]),\"let it!pass!\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"let it!pass!\""
    },
    {
        "id": 702,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @nums = @{$nums};\n    my $count = scalar(@nums);\n    for (my $i = $#nums; $i >= 0; $i--) {\n        my $num = shift @nums;\n        splice @nums, $i, 0, $num;\n    }\n    return \\@nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([0, -5, -4]),[0, -5, -4])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[0, -5, -4]"
    },
    {
        "id": 703,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $char) = @_;\n    my $count =()= $text =~ /$char$char/g;\n    return substr($text, $count);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"vzzv2sg\", \"z\"),\"vzzv2sg\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"vzzv2sg\""
    },
    {
        "id": 704,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s, $n, $c) = @_;\n    my $width = length($c) * $n;\n    while (length($s) < $width) {\n        $s = $c . $s;\n    }\n    return $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\".\", 0, \"99\"),\"..........99\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"..........99\""
    },
    {
        "id": 705,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($cities, $name) = @_;\n    if (!$name) {\n        return $cities;\n    }\n    if ($name and $name ne 'cities') {\n        return [];\n    }\n    return map { $name . $_ } @$cities;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"Sydney\", \"Hong Kong\", \"Melbourne\", \"Sao Paolo\", \"Istanbul\", \"Boston\"], \"Somewhere \"),[\"Sydney\", \"Hong Kong\", \"Melbourne\", \"Sao Paolo\", \"Istanbul\", \"Boston\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"Sydney\", \"Hong Kong\", \"Melbourne\", \"Sao Paolo\", \"Istanbul\", \"Boston\"]"
    },
    {
        "id": 706,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($r, $w) = @_;\n    my @a;\n    if (substr($r, 0, 1) eq substr($w, 0, 1) && substr($w, -1) eq substr($r, -1)) {\n        push(@a, $r);\n        push(@a, $w);\n    } else {\n        push(@a, $w);\n        push(@a, $r);\n    }\n    return \\@a;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ab\", \"xy\"),[\"ab\", \"xy\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"ab\", \"xy\"]"
    },
    {
        "id": 707,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $position) = @_;\n    my $length = length($text);\n    my $index = $position % ($length + 1);\n    if ($position < 0 || $index < 0) {\n        $index = -1;\n    }\n    my @new_text = split(//, $text);\n    splice(@new_text, $index, 1);\n    return join('', @new_text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"undbs l\", 1),undbs)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "undbs"
    },
    {
        "id": 708,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($string) = @_;\n    my @l = split(//, $string);\n    for my $i (reverse(0..$#l)) {\n        if ($l[$i] ne ' ') {\n            last;\n        }\n        splice(@l, $i, 1);\n    }\n    return join('', @l);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"    jcmfxv     \"),\"jcmfxv\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"jcmfxv\""
    },
    {
        "id": 709,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @my_list = split(' ', $text);\n    @my_list = sort {$b cmp $a} @my_list;\n    return join(' ', @my_list);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"a loved\"),\"a loved\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"a loved\""
    },
    {
        "id": 710,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($playlist, $liker_name, $song_index) = @_;\n    $playlist->{$liker_name} = $playlist->{$liker_name} // [];\n    push(@{$playlist->{$liker_name}}, $song_index);\n    return $playlist;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"aki\" => [\"1\", \"5\"]}, \"aki\", \"2\"),[\"1\", \"5\", \"2\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"1\", \"5\", \"2\"]"
    },
    {
        "id": 711,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    $text =~ s/\\n/\\t/g;\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"apples\n\t\npears\n\t\nbananas\"),\"apples\\tpears\\tbananas\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"apples\\tpears\\tbananas\""
    },
    {
        "id": 712,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nBareword found where operator expected at /tmp/tmpi_fmz5wp.pl line 25, near \")A\"\n\t(Missing operator before A?)\nsyntax error at /tmp/tmpi_fmz5wp.pl line 25, near \")A\"\nExecution of /tmp/tmpi_fmz5wp.pl aborted due to compilation errors.\n",
        "code": "\n\n# \nuse strict;\n\nsub f {\n    my($text) = @_;\n    my @created;\n    my @lines = split(/\\n/, $text);\n    foreach my $line (@lines) {\n        if ($line eq '') {\n            last;\n        }\n        my @line_chars = split(//, $line);\n        my @reversed_line = reverse(@line_chars);\n        push(@created, [splice(@reversed_line, 0, 1)]);\n    }\n    return [reverse(@created)];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"A(hiccup)A\"),[A(hiccup)A])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[A(hiccup)A]"
    },
    {
        "id": 713,
        "res": true,
        "code": "\n# \nsub f {\n    my($text, $char) = @_;\n    if (index($text, $char) != -1) {\n        my @text_arr = grep { $_ } map { s/^\\s+|\\s+$//g; $_ } split /$char/, $text;\n        if (@text_arr > 1) {\n            return 1;\n        }\n    }\n    return 0;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"only one line\", \" \"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 714,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($array) = @_;\n    @$array = reverse(@$array);\n    @$array = ();\n    push @$array, ('x') x scalar(@$array);\n    @$array = reverse(@$array);\n    return $array;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([3, -2, 0]),[3, -2, 0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[3, -2, 0]"
    },
    {
        "id": 715,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $char) = @_;\n    my $count = () = $text =~ /$char/g;\n    return $count % 2 != 0;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"abababac\", \"a\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 716,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @nums = @{$nums};\n    my $count = scalar @nums;\n    while (scalar @nums > int($count/2)) {\n        @nums = ();\n    }\n    return \\@nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([2, 1, 2, 3, 1, 6, 3, 8]),[2, 1, 2, 3, 1, 6, 3, 8])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[2, 1, 2, 3, 1, 6, 3, 8]"
    },
    {
        "id": 717,
        "res": true,
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    my ($k, $l) = (0, length($text) - 1);\n    while ($text =~ m/^[^a-zA-Z]/ && $l >= 0) {\n        $l--;\n    }\n    while ($text =~ m/[^a-zA-Z]$/ && $k < length($text)) {\n        $k++;\n    }\n    if ($k != 0 || $l != length($text) - 1) {\n        return substr($text, $k, $l - $k + 1);\n    } else {\n        return substr($text, 0, 1);\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"timetable, 2mil\"),\"t\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"t\""
    },
    {
        "id": 718,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $t = $text;\n    foreach my $i (split //, $text) {\n        $text =~ s/\\Q$i//g;\n    }\n    return length($text) . $t;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ThisIsSoAtrocious\"),42)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "42"
    },
    {
        "id": 719,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nsyntax error at /tmp/tmpoysaj6kh.pl line 20, near \",if\"\nTransliteration replacement not terminated at /tmp/tmpoysaj6kh.pl line 20.\n",
        "code": "\n\n# \nsub f {\n    my($code) = @_;\n    my @lines = split(']', $code);\n    my @result;\n    my $level = 0;\n    for my $line (@lines) {\n        push @result, substr($line, 0, 1) . ' ' . '  ' x $level . substr($line, 1);\n        $level += ($line =~ tr/\\{\\g//) - ($line =~ tr/\\}\\g//);\n    }\n    return join('\\n', @result);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"if (x) {y = 1;} else {z = 1;}\"),if (x) {y = 1;} else {z = 1;})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "if (x) {y = 1;} else {z = 1;}"
    },
    {
        "id": 720,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($items, $item) = @_;\n    while ($items->[-1] eq $item) {\n        pop @$items;\n    }\n    push @$items, $item;\n    return scalar @$items;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"bfreratrrbdbzagbretaredtroefcoiqrrneaosf\"], \"n\"),\"bfreratrrbdbag\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"bfreratrrbdbag\""
    },
    {
        "id": 721,
        "res": true,
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @nums = @{$nums};\n    my $count = scalar @nums;\n    for my $num (2..$count-1) {\n        @nums = sort {$a <=> $b} @nums;\n    }\n    return \\@nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([-6, -5, -7, -8, 2]),[-8, -7, -6, -5, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[-8, -7, -6, -5, 2]"
    },
    {
        "id": 722,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nBareword found where operator expected at /tmp/tmptmg61yqp.pl line 21, near \"print \"ok\"\n  (Might be a runaway multi-line \"\" string starting on line 20)\n\t(Do you need to predeclare print?)\nsyntax error at /tmp/tmptmg61yqp.pl line 21, near \"print \"ok\"\nCan't find string terminator '\"' anywhere before EOF at /tmp/tmptmg61yqp.pl line 21.\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $out = \"\";\n    for my $i (0..length($text)-1) {\n        if (uc(substr($text, $i, 1)) eq substr($text, $i, 1)) {\n            $out .= lc substr($text, $i, 1);\n        } else {\n            $out .= uc substr($text, $i, 1);\n        }\n    }\n    return $out;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\",wPzPppdl/\"),\"wPzPppdl/pZzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pP)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"wPzPppdl/pZzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pPzPppd/pP"
    },
    {
        "id": 723,
        "res": 0
    },
    {
        "id": 724,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $function) = @_;\n    my @cites = (length(substr($text, index($text, $function) + length($function))));\n    my @chars = split(//, $text);\n    for my $char (@chars) {\n        if ($char eq $function) {\n            push(@cites, length(substr($text, index($text, $function) + length($function))));\n        }\n    }\n    return \\@cites;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"010100\", \"010\"),[5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[5]"
    },
    {
        "id": 725,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @result_list = ('3', '3', '3', '3');\n    if (@result_list) {\n        @result_list = ();\n    }\n    return length($text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"mrq7y\"),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "4"
    },
    {
        "id": 726,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\nsub f {\n    my($text) = @_;\n    my $ws = 0;\n    foreach my $s (split //, $text) {\n        if ($s =~ /\\s/) {\n            $ws += 1;\n        }\n    }\n    return [$ws, length($text)];\n}\n\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"jcle oq wsnibktxpiozyxmopqkfnrfjds\"),8)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "8"
    },
    {
        "id": 727,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($numbers, $prefix) = @_;\n    my @result = sort map { (length($_) > length($prefix) && substr($_, 0, length($prefix)) eq $prefix) ? substr($_, length($prefix)) : $_ } @$numbers;\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"ix\", \"dxh\", \"snegi\", \"wiubvu\"], \"\"),[\"ix\", \"dxh\", \"snegi\", \"wiubvu\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"ix\", \"dxh\", \"snegi\", \"wiubvu\"]"
    },
    {
        "id": 728,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @result;\n    my @chars = split(//, $text);\n    for my $i (0..$#chars) {\n        my $ch = $chars[$i];\n        unless ($ch eq lc $ch) {\n            if ($#chars - $i < rindex($text, lc $ch)) {\n                push @result, $ch;\n            }\n        }\n    }\n    return join('', @result);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"ru\"),\"r\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"r\""
    },
    {
        "id": 729,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s1, $s2) = @_;\n    my @res;\n    my $i = rindex($s1, $s2);\n    while ($i != -1) {\n        push @res, $i + length($s2) - 1;\n        $i = rindex($s1, $s2, $i - length($s2));\n    }\n    return \\@res;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"abcdefghabc\", \"abc\"),[0, 8])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[0, 8]"
    },
    {
        "id": 730,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $m = 0;\n    my $cnt = 0;\n    my @words = split(' ', $text);\n    foreach my $i (@words) {\n        if (length($i) > $m) {\n            $cnt += 1;\n            $m = length($i);\n        }\n    }\n    return $cnt;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "1"
    },
    {
        "id": 731,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $use) = @_;\n    $text =~ s/$use//g;\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Chris requires a ride to the airport on Friday.\", \"a\"),\"ride to airport on Friday.\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"ride to airport on Friday.\""
    },
    {
        "id": 732,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nsyntax error at /tmp/tmptagvsa5y.pl line 17, near \"u:\"\nExecution of /tmp/tmptagvsa5y.pl aborted due to compilation errors.\n",
        "code": "\n\n# \nsub f {\n    my($char_freq) = @_;\n    my %result;\n    while (my($k, $v) = each %$char_freq) {\n        $result{$k} = int($v / 2);\n    }\n    return \\%result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"u\" => 20, \"v\" => 5, \"b\" => 7, \"w\" => 3, \"x\" => 3}),{u: 10, v: 5, b: 2, w: 1, x: 1})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{u: 10, v: 5, b: 2, w: 1, x: 1}"
    },
    {
        "id": 733,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my $length = length($text) / 2;\n    my $left_half = substr($text, 0, $length);\n    my $right_half = scalar reverse substr($text, $length);\n    return $left_half . $right_half;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"n\"),\"nn\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"nn\""
    },
    {
        "id": 734,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    for(my $i = @{$nums}-1; $i >= 0; $i--) {\n        if($nums->[$i] % 2 == 0) {\n            splice(@$nums, $i, 1);\n        }\n    }\n    return $nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([5, 3, 3, 7]),[5, 7])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[5, 7]"
    },
    {
        "id": 735,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nCan't locate object method \"b\" via package \"B\" (perhaps you forgot to load \"B\"?) at /tmp/tmp6mozvf0o.pl line 19.\n",
        "code": "\n\n# \nsub f {\n    my($sentence) = @_;\n    if ($sentence eq '') {\n        return '';\n    }\n    $sentence =~ s/\\(//g;\n    $sentence =~ s/\\)//g;\n    $sentence =~ s/^(.)|\\s+(.)/\\U$1\\E\\L$2/g;\n    return $sentence;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"(A (b B))\"),(A (b B)))) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "(A (b B))"
    },
    {
        "id": 736,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nSmartmatch is experimental at /tmp/tmp1_bxeajp.pl line 8.\n",
        "code": "\n# \nsub f {\n    my($text, $insert) = @_;\n    my @whitespaces = (\"\\t\", \"\\r\", \"\\v\", \" \", \"\\f\", \"\\n\");\n    my $clean = '';\n    for my $char (split //, $text) {\n        if ($char ~~ @whitespaces) {\n            $clean .= $insert;\n        } else {\n            $clean .= $char;\n        }\n    }\n    return $clean;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"pi wa\", \"chi\"),\"31415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"31415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679\""
    },
    {
        "id": 737,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my $counts = 0;\n    foreach my $i (@{$nums}) {\n        if ($i =~ /^\\d+$/) {\n            if ($counts == 0) {\n                $counts += 1;\n            }\n        }\n    }\n    return $counts;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([0, 6, 2, -1, -2]),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 738,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $characters) = @_;\n    for my $i (split //, $characters) {\n        my $char = $i;\n        $text =~ s/[$char]*$//;\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"r;r;r;r;r;r;r;r;r\", \"x.r\"),\"r\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"r\""
    },
    {
        "id": 739,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\nuse strict;\nuse warnings;\n\nsub f {\n    my($st, $pattern) = @_;\n    for my $p (@$pattern) {\n        return \"\" unless $st =~ /^$p/;\n        $st = substr($st, length($p));\n    }\n    return 1;\n}\n\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"qwbnjrxs\", [\"jr\", \"b\", \"r\", \"qw\"]),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 740,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\nsub f {\n    my ($plot, $delin) = @_;\n    my @plot = @$plot;\n    if (grep { $_ == $delin } @plot) {\n        my $split = 0;\n        $split++ until $plot[$split] == $delin;\n        my @first = @plot[0 .. $split - 1];\n        my @second = @plot[$split + 1 .. $#plot];\n        return [@first, @second];\n    } else {\n        return $plot;\n    }\n}\n\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 3, 4], 3),[1, 2, 3, 4])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 2, 3, 4]"
    },
    {
        "id": 741,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums, $p) = @_;\n    my @nums = @{$nums};\n    my $prev_p = $p - 1;\n    if($prev_p < 0){\n        $prev_p = scalar @nums - 1;\n    }\n    return $nums[$prev_p];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([6, 8, 2, 5, 3, 1, 9, 7], 6),6)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "6"
    },
    {
        "id": 742,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    my $b = 'True';\n    for my $x (split //, $text) {\n        if ($x =~ /\\d/) {\n            $b = 'True';\n        } else {\n            $b = 'False';\n            last;\n        }\n    }\n    return $b eq 'True';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"-1-3\"),False)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "False"
    },
    {
        "id": 743,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my($string_a, $string_b) = split(',', $text);\n    return -(length($string_a) + length($string_b));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"dog,cat\"),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "-1"
    },
    {
        "id": 744,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $new_ending) = @_;\n    my @result = split(//, $text);\n    push @result, split(//, $new_ending);\n    return join('', @result);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"jro\", \"wdlp\"),\"jro wdlp\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"jro wdlp\""
    },
    {
        "id": 745,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nArray found where operator expected at /tmp/tmpgh671jtg.pl line 19, near \"minimc@minimc\"\nsyntax error at /tmp/tmpgh671jtg.pl line 19, near \"minimc@minimc\"\nExecution of /tmp/tmpgh671jtg.pl aborted due to compilation errors.\n",
        "code": "\n# \nsub f {\n    my($address) = @_;\n    my $suffix_start = index($address, '@') + 1;\n    if (substr($address, $suffix_start) =~ tr/././ > 1) {\n        my @split_address = split('@', $address);\n        my @suffix_parts = split('.', $split_address[1]);\n        splice @suffix_parts, 2;\n        $address = $split_address[0] . '@' . join('.', @suffix_parts);\n    }\n    return $address;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"minimc@minimc.io\"),minimc@minimc.io)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "minimc@minimc.io"
    },
    {
        "id": 746,
        "res": true,
        "code": "\n# \nsub f {\n    my($dct) = @_;\n    my %result;\n    foreach my $value (values %$dct) {\n        my $item = (split /\\./, $value)[0] . '@pinc.uk';\n        $result{$value} = $item;\n    }\n    return \\%result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({}),{})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{}"
    },
    {
        "id": 747,
        "res": 0
    },
    {
        "id": 748,
        "res": true,
        "code": "\n\n# \nsub f {\n    my($d) = @_;\n    my $i = each %$d;\n    return ($i->[0], $i->[1]), (each %$d)[0, 1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"a\" => 123, \"b\" => 456, \"c\" => 789}),(123, 456))) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "(123, 456)"
    },
    {
        "id": 749,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text, $width) = @_;\n    my @lines = split /\\n/, $text;\n    my $result = \"\";\n    foreach my $l (@lines) {\n        $result .= substr(\" \" x $width, 0, int(($width - length $l) / 2)) . \"$l\" . substr(\" \" x $width, 0, $width - length $l - int(($width - length $l) / 2));\n        $result .= \"\\n\";\n    }\n    $result = substr($result, 0, -1);\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"l\nl\", 2),\"l\nl\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"l\nl\""
    },
    {
        "id": 750,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($char_map, $text) = @_;\n    my $new_text = '';\n    foreach my $ch (split('', $text)) {\n        my $val = $char_map->{$ch};\n        if (!defined($val)) {\n            $new_text .= $ch;\n        } else {\n            $new_text .= $val;\n        }\n    }\n    return $new_text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({}, \"hbd\"),\"hello\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 751,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $char, $min_count) = @_;\n    my $count = () = $text =~ /$char/g;\n    if ($count < $min_count) {\n        return uc($text) ^ lc($text);\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"wwwwhhhtttpp\", \"w\", 3),\"hello\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"hello\""
    },
    {
        "id": 752,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s, $amount) = @_;\n    return ('z' x ($amount - length($s))) . $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"abc\", 8),\"abcdefgh\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"abcdefgh\""
    },
    {
        "id": 753,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($bag) = @_;\n    my @values = values %$bag;\n    my %tbl;\n    foreach my $v (0..99) {\n        if (grep {$_ == $v} @values) {\n            $tbl{$v} = grep {$_ == $v} @values;\n        }\n    }\n    return \\%tbl;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({0 => 0, 1 => 0, 2 => 0, 3 => 0, 4 => 0}),{})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{}"
    },
    {
        "id": 754,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @nums = @{$nums};\n    my $width = shift @nums;\n    my @formatted_nums = map { sprintf(\"%0*d\", $width, $_) } @nums;\n    return \\@formatted_nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"1\", \"2\", \"2\", \"44\", \"0\", \"7\", \"20257\"]),[\"1\", \"2\", \"2\", \"44\", \"0\", \"7\", \"20257\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"1\", \"2\", \"2\", \"44\", \"0\", \"7\", \"20257\"]"
    },
    {
        "id": 755,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($replace, $text, $hide) = @_;\n    while (index($text, $hide) != -1) {\n        $replace .= 'ax';\n        $text =~ s/\\Q$hide/$replace/e;\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"###\", \"ph>t#A#BiEcDefW#ON#iiNCU\", \".\"),\"phaxonaxonax\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"phaxonaxonax\""
    },
    {
        "id": 756,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    if ($text =~ /^[0-9]+$/) {\n        return 'integer';\n    }\n    return 'string';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 757,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $char, $replace) = @_;\n    $text =~ s/$char/$replace/g;\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"a1a8\", \"1\", \"n2\"),\"a1n2\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"a1n2\""
    },
    {
        "id": 758,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nSmartmatch is experimental at /tmp/tmpcnty6jpu.pl line 7.\n",
        "code": "\n\n# \nsub f {\n    my($nums) = @_;\n    my @reversed = reverse @$nums;\n    return @reversed ~~ @$nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([0, 3, 6, 2]),[6, 3, 0, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[6, 3, 0, 2]"
    },
    {
        "id": 759,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $sub) = @_;\n    my @index;\n    my $starting = 0;\n    while ($starting != -1) {\n        $starting = index($text, $sub, $starting);\n        if ($starting != -1) {\n            push @index, $starting;\n            $starting += length($sub);\n        }\n    }\n    return \\@index;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"egmdartoa\", \"good\"),[\"g\", \"o\", \"m\", \"d\", \"a\", \"r\", \"o\", \"a\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"g\", \"o\", \"m\", \"d\", \"a\", \"r\", \"o\", \"a\"]"
    },
    {
        "id": 760,
        "res": 0
    },
    {
        "id": 761,
        "res": true,
        "code": "\n\n# \nsub f {\n    my($array) = @_;\n    my @output = @$array;\n    @output[grep { $_ % 2 == 0 } 0..$#output] = reverse @output[grep { $_ % 2 == 0 } 0..$#output];\n    return [reverse @output];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[]"
    },
    {
        "id": 762,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    $text = lc($text);\n    my $capitalize = ucfirst($text);\n    return substr($text, 0, 1) . substr($capitalize, 1);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"this And cPanel\"),\"This And\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"This And\""
    },
    {
        "id": 763,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($values, $text, $markers) = @_;\n    return $text =~ s/[$values$markers]+$//r;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"2Pn\", \"yCxpg2C2Pny2\", \"\"),\"yCxpg2C2Pny2\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"yCxpg2C2Pny2\""
    },
    {
        "id": 764,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $old, $new) = @_;\n    my $text2 = $text;\n    $text2 =~ s/$old/$new/g;\n    my $old2 = reverse $old;\n    while (index($text2, $old2) != -1) {\n        $text2 =~ s/$old2/$new/g;\n    }\n    return $text2;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"some test string\", \"some\", \"any\"),\"some any test string\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"some any test string\""
    },
    {
        "id": 765,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    return scalar(() = $text =~ /\\d/g);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"so456\"),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "4"
    },
    {
        "id": 766,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($values, $value) = @_;\n    my @values = @{$values};\n    my $length = scalar @values;\n    my %new_dict;\n    foreach my $v (@values) {\n        $new_dict{$v} = $value;\n    }\n    my $sorted_values = join(\"\", sort @values);\n    $new_dict{$sorted_values} = $value * 3;\n    return \\%new_dict;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"0\", \"3\"], 117),{0, 3})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{0, 3}"
    },
    {
        "id": 767,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @a = split(' ', $text);\n    foreach my $word (@a) {\n        if ($word !~ /^\\d+$/) {\n            return '-';\n        }\n    }\n    return join(\" \", @a);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"d khqw whi fwi bbn 41\"),\"41\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"41\""
    },
    {
        "id": 768,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s, $o) = @_;\n    if (index($s, $o) == 0) {\n        return $s;\n    }\n    return $o . f($s, substr($o, -2) . reverse(substr($o, 0, -2)));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"abba\", \"bab\"),\"abba\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"abba\""
    },
    {
        "id": 769,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    my @text_list = split(//, $text);\n    foreach my $i (0..$#text_list) {\n        $text_list[$i] = uc($text_list[$i]) eq $text_list[$i] ? lc($text_list[$i]) : uc($text_list[$i]);\n    }\n    return join('', @text_list);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"akA?riu\"),\"AkiRaU\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"AkiRaU\""
    },
    {
        "id": 770,
        "res": 0
    },
    {
        "id": 771,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($items) = @_;\n    my @items = @{$items};\n    my @odd_positioned;\n    while (scalar @items > 0) {\n        my $position = 0;\n        my $min_item = $items[0];\n        for (my $i = 1; $i < scalar @items; $i++) {\n            if ($items[$i] < $min_item) {\n                $min_item = $items[$i];\n                $position = $i;\n            }\n        }\n        splice @items, $position, 1;\n        my $item = splice @items, $position, 1;\n        push @odd_positioned, $item;\n    }\n    return \\@odd_positioned;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 3, 4, 5, 6, 7, 8]),[1, 3, 5, 7, 9])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[1, 3, 5, 7, 9]"
    },
    {
        "id": 772,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($phrase) = @_;\n    my $result = '';\n    foreach my $i (split(//, $phrase)) {\n        if ($i !~ /[a-z]/) {\n            $result .= $i;\n        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"serjgpoDFdbcA.\"),\"SerjgpoDdbcA.\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"SerjgpoDdbcA.\""
    },
    {
        "id": 773,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums, $n) = @_;\n    return splice(@{$nums}, $n, 1);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([-7, 3, 1, -1, -1, 0, 4], 6),[-7, 3, 1, -1, -1, 0, 4])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[-7, 3, 1, -1, -1, 0, 4]"
    },
    {
        "id": 774,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($num, $name) = @_;\n    return \"quiz leader = $name, count = $num\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(23, \"Cornareti\"),\"cornareti\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"cornareti\""
    },
    {
        "id": 775,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($nums) = @_;\n    my @nums = @{$nums};\n    my $count = scalar @nums;\n    for my $i (0..int($count/2)-1) {\n        ($nums[$i], $nums[$count-$i-1]) = ($nums[$count-$i-1], $nums[$i]);\n    }\n    return \\@nums;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([2, 6, 1, 3, 1]),[2, 6, 1, 3, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[2, 6, 1, 3, 1]"
    },
    {
        "id": 776,
        "res": true,
        "code": "\n# \nsub f {\n    my($dictionary) = @_;\n    my %a = %$dictionary;\n    foreach my $key (keys %a) {\n        if ($key % 2 != 0) {\n            delete $a{$key};\n            $a{'$' . $key} = $a{$key};\n        }\n    }\n    return \\%a;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({}),{})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "{}"
    },
    {
        "id": 777,
        "res": true,
        "code": "\n# \nsub f {\n    my($names, $excluded) = @_;\n    my @names = @{$names};\n    my $excluded = $excluded;\n    for(my $i = 0; $i < scalar @names; $i++){\n        if(index($names[$i], $excluded) != -1){\n            $names[$i] =~ s/$excluded//g;\n        }\n    }\n    return \\@names;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"avc  a .d e\"], \"\"),[\"avc  a .d e\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"avc  a .d e\"]"
    },
    {
        "id": 778,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($prefix, $text) = @_;\n    if (index($text, $prefix) == 0) {\n        return $text;\n    } else {\n        return $prefix . $text;\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"mjs\", \"mjqwmjsqjwisojqwiso\"),\"mjs\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"mjs\""
    },
    {
        "id": 779,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    my @values = split / /, $text;\n    return \"$$values[0]y, $$values[1]x, $$values[2]r, $$values[3]p\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"python ruby c javascript\"),\"python, ruby, c, javascript\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"python, ruby, c, javascript\""
    },
    {
        "id": 780,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\nNumber found where operator expected at /tmp/tmpq1rwfs2_.pl line 26, near \"2 3\"\n\t(Missing operator before  3?)\nNumber found where operator expected at /tmp/tmpq1rwfs2_.pl line 26, near \"3 5\"\n\t(Missing operator before  5?)\nNumber found where operator expected at /tmp/tmpq1rwfs2_.pl line 26, near \"5 2\"\n\t(Missing operator before  2?)\nNumber found where operator expected at /tmp/tmpq1rwfs2_.pl line 26, near \"2 4\"\n\t(Missing operator before  4?)\nNumber found where operator expected at /tmp/tmpq1rwfs2_.pl line 26, near \"4 5\"\n\t(Missing operator before  5?)\nNumber found where operator expected at /tmp/tmpq1rwfs2_.pl line 26, near \"5 2\"\n\t(Missing operator before  2?)\nNumber found where operator expected at /tmp/tmpq1rwfs2_.pl line 26, near ",
        "code": "\n\n# \nsub f {\n    my($ints) = @_;\n    my @counts = (0) x 301;\n\n    foreach my $i (@$ints) {\n        $counts[$i]++;\n    }\n\n    my @r = ();\n    foreach my $i (0..$#counts) {\n        if ($counts[$i] >= 3) {\n            push @r, $i;\n        }\n    }\n    @counts = ();\n    return join(' ', @r);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([2, 3, 5, 2, 4, 5, 2, 89]),2 3 5 2 4 5 2 89)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "2 3 5 2 4 5 2 89"
    },
    {
        "id": 781,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($s, $ch) = @_;\n    if (index($s, $ch) == -1) {\n        return '';\n    }\n    $s = substr($s, rindex($s, $ch) + 1);\n    for (my $i = 0; $i < length($s); $i++) {\n        $s = substr($s, rindex($s, $ch) + 1);\n    }\n    return $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"shivajimonto6\", \"6\"),\"shivajimonto\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"shivajimonto\""
    },
    {
        "id": 782,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n\nuse POSIX qw(setlocale LC_ALL);\nsetlocale(LC_ALL, 'C.UTF-8');\n\nsub f {\n    my($input) = @_;\n    for my $char (split //, $input) {\n        if ($char eq uc $char) {\n            return \"\";\n        }\n    }\n    return 1;\n}\n\n\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"a j c n x X k\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 783,
        "res": true,
        "code": "\n# \nsub f {\n    my($text, $comparison) = @_;\n    my $length = length($comparison);\n    if ($length <= length($text)) {\n        for my $i (0..$length-1) {\n            if (substr($comparison, $length-$i-1, 1) ne substr($text, length($text)-$i-1, 1)) {\n                return $i;\n            }\n        }\n    }\n    return $length;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"managed\", \"\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 784,
        "res": true,
        "code": "\n\n# \nsub f {\n    my($key, $value) = @_;\n    my %dict_ = ($key => $value);\n    return (keys %dict_)[0] => (delete %dict_{(keys %dict_)[0]});\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"read\", \"Is\"),\"Is\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"Is\""
    },
    {
        "id": 785,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($n) = @_;\n    my $streak = '';\n    foreach my $c (split('', $n)) {\n        $streak .= $c . (' ' x ($c * 2 - length $c));\n    }\n    return $streak;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(1),\"1 2 3 4 5 6 7 8 9 10\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"1 2 3 4 5 6 7 8 9 10\""
    },
    {
        "id": 786,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $letter) = @_;\n    if (index($text, $letter) != -1) {\n        my $start = index($text, $letter);\n        return substr($text, $start + 1) . substr($text, 0, $start + 1);\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"19kefp7\", \"9\"),\"19fpe7\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"19fpe7\""
    },
    {
        "id": 787,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text) = @_;\n    if (length($text) == 0) {\n        return '';\n    }\n    $text = lc($text);\n    return ucfirst($text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"xzd\"),\"XZD\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"XZD\""
    },
    {
        "id": 788,
        "res": true,
        "code": "\n# \nsub f {\n    my($text, $suffix) = @_;\n    if ($suffix =~ m|^/|) {\n        return $text . substr($suffix, 1);\n    }\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"hello.txt\", \"/\"),\"hello.txt\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"hello.txt\""
    },
    {
        "id": 789,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $n) = @_;\n    if ($n < 0 || length($text) <= $n) {\n        return $text;\n    }\n    my $result = substr($text, 0, $n);\n    my $i = length($result) - 1;\n    while ($i >= 0) {\n        if (substr($result, $i, 1) ne substr($text, $i, 1)) {\n            last;\n        }\n        $i--;\n    }\n    return substr($text, 0, $i + 1);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"bR\", -1),[b])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[b]"
    },
    {
        "id": 790,
        "res": true,
        "code": "\n# \nsub f {\n    my($d) = @_;\n    my %r = (\n        'c' => {%$d},\n        'd' => {%$d}\n    );\n    return ($r{'c'} == $r{'d'}, $r{'c'} eq $r{'d'});\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"i\" => \"1\", \"love\" => \"parakeets\"}),True)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "True"
    },
    {
        "id": 791,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($integer, $n) = @_;\n    my $i = 1;\n    my $text = $integer;\n    while (($i + length($text)) < $n) {\n        $i += length($text);\n    }\n    return sprintf(\"%0*d\", $i + length($text), $text);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(8999, 2),99)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "99"
    },
    {
        "id": 792,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($l1, $l2) = @_;\n    if (@$l1 != @$l2) {\n        return {};\n    }\n    return {map {$_ => $l2} @$l1};\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([\"a\", \"b\"], [\"car\", \"dog\"]),[\"car\", \"dog\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"car\", \"dog\"]"
    },
    {
        "id": 793,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($lst, $start, $end) = @_;\n    my $count = 0;\n    for my $i ($start..$end-1) {\n        for my $j ($i..$end-1) {\n            if ($lst->[$i] != $lst->[$j]) {\n                $count += 1;\n            }\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->([1, 2, 4, 3, 2, 1], 0, 3),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "0"
    },
    {
        "id": 794,
        "res": 0
    },
    {
        "id": 795,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($text) = @_;\n    $text =~ s/(\\w+)/\\u\\L$1/g;\n    $text =~ s/Io/io/g;\n    return $text;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"Fu,ux zfujijabji pfu.\"),\"Fu,ux zfujijabji pfu.\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"Fu,ux zfujijabji pfu.\""
    },
    {
        "id": 796,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($str, $toget) = @_;\n    if (index($str, $toget) == 0) {\n        return substr($str, length($toget));\n    } else {\n        return $str;\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"fnuiyh\", \"ni\"),\"fnuiyhni\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"fnuiyhni\""
    },
    {
        "id": 797,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n\n# \nsub f {\n    my($dct) = @_;\n    my @lst;\n    foreach my $key (sort keys %$dct) {\n        push @lst, [ $key, $dct->{$key} ];\n    }\n    return \\@lst;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->({\"a\" => 1, \"b\" => 2, \"c\" => 3}),[\"a\", 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "[\"a\", 1]"
    },
    {
        "id": 798,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($text, $pre) = @_;\n    if (index($text, $pre) != 0) {\n        return $text;\n    }\n    return substr($text, length($pre));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"@hihu@!\", \"@hihu\"),\"hihu\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"hihu\""
    },
    {
        "id": 799,
        "res": false,
        "error": "Exception",
        "error_message": "perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_CTYPE = \"C.UTF-8\",\n\tLANG = \"en_US.UTF-8\"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale (\"C\").\n",
        "code": "\n# \nsub f {\n    my($st) = @_;\n    if (substr($st, 0, 1) eq '~') {\n        my $e = 's' x (10 - length($st)) . $st;\n        return f($e);\n    } else {\n        return 'n' x (10 - length($st)) . $st;\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&f;\n        if(eq_deeply($candidate->(\"eqe-;ew22\"),\"eqe-;ew22\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();\n\n",
        "answer": "\"eqe-;ew22\""
    }
]