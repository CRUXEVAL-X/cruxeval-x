[
    {
        "id": 0,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpy8gllo0h.cpp:3:\n/tmp/tmpy8gllo0h.cpp: In function ‘int main()’:\n/tmp/tmpy8gllo0h.cpp:14:99: error: no match for ‘operator==’ (operand types are ‘std::vector<std::tuple<long int, long int> >’ and ‘int’)\n   14 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)1, (long)3, (long)1}))) == (3, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~\n      |                     |                                                                                  |\n      |                     std::vector<std::tuple<long int, long int> >                                       int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpy8gllo0h.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpy8gllo0h.cpp:3:\n/tmp/tmpy8gllo0h.cpp:14:107: note:   ‘std::vector<std::tuple<long int, long int> >’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((std::vector<long>({(long)1, (long)1",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::tuple<long, long>> f(std::vector<long> nums) {\n    std::vector<std::tuple<long, long>> output;\n    for (long n : nums) {\n        output.push_back(std::make_tuple(std::count(nums.begin(), nums.end(), n), n));\n    }\n    std::sort(output.begin(), output.end(), std::greater<>());\n    return output;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)3, (long)1, (long)3, (long)1}))) == (3, 1));\n}\n\n\n",
        "answer": "(3, 1)"
    },
    {
        "id": 1,
        "res": 0
    },
    {
        "id": 2,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp_2ypbyvr.cpp:3:\n/tmp/tmp_2ypbyvr.cpp: In function ‘int main()’:\n/tmp/tmp_2ypbyvr.cpp:16:43: error: ‘hbtofdeiequ’ was not declared in this scope\n   16 |     assert(candidate((\"hbtofdeiequ\")) == (hbtofdeiequ));\n      |                                           ^~~~~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string new_text = text;\n    for (char i : \"+\") {\n        size_t pos = new_text.find(i);\n        if (pos != std::string::npos) {\n            new_text.erase(pos, 1);\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"hbtofdeiequ\")) == (hbtofdeiequ));\n}\n\n\n",
        "answer": "(hbtofdeiequ)"
    },
    {
        "id": 3,
        "res": false,
        "error": "Exception",
        "error_message": "tmpx3tieiai: /tmp/tmpx3tieiai.cpp:10: int main(): Assertion `candidate((\"bcksrut\"), (\"q\")) == (\"bckrut\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string value) {\n    text.push_back(value[0]);\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"bcksrut\"), (\"q\")) == (\"bckrut\"));\n}\n\n\n",
        "answer": "(\"bckrut\")"
    },
    {
        "id": 4,
        "res": false,
        "error": "Exception",
        "error_message": "tmpfizyyfvr: /tmp/tmpfizyyfvr.cpp:13: int main(): Assertion `candidate((std::vector<std::string>({(std::string)\" \", (std::string)\"  \", (std::string)\"    \", (std::string)\"   \"}))) == (\" !\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::vector<std::string> array) {\n    std::string s = \" \";\n    for(const std::string& str: array) {\n        s += str;\n    }\n    return s;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\" \", (std::string)\"  \", (std::string)\"    \", (std::string)\"   \"}))) == (\" !\"));\n}\n\n\n",
        "answer": "(\" !\")"
    },
    {
        "id": 5,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpou4fzt8e.cpp:4:\n/tmp/tmpou4fzt8e.cpp: In function ‘int main()’:\n/tmp/tmpou4fzt8e.cpp:23:60: error: no match for ‘operator==’ (operand types are ‘std::tuple<long int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >’ and ‘int’)\n   23 |     assert(candidate((\"DSUWeqExTQdCMGpqur\"), (\"a\"), (\"x\")) == (1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                          |\n      |                     |                                          int\n      |                     std::tuple<long int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpou4fzt8e.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpou4fzt8e.cpp:4:\n/tmp/tmpou4fzt8e.cpp:23:65: note:   ‘std::tuple<long int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::tuple<long, std::string> f(std::string text, std::string lower, std::string upper) {\n    long count = 0;\n    std::string new_text = \"\";\n    for (char& char_ : text) {\n        if (isdigit(char_)) {\n            char_ = lower[0];\n        } else {\n            char_ = upper[0];\n        }\n        if (char_ == 'p' || char_ == 'C') {\n            count += 1;\n        }\n        new_text += char_;\n    }\n    return std::make_tuple(count, new_text);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"DSUWeqExTQdCMGpqur\"), (\"a\"), (\"x\")) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 6,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpaik_9u_f.cpp:4:\n/tmp/tmpaik_9u_f.cpp: In function ‘int main()’:\n/tmp/tmpaik_9u_f.cpp:22:112: error: no match for ‘operator==’ (operand types are ‘std::vector<std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long int> >’ and ‘int’)\n   22 |     assert(candidate((std::map<std::string,long>({{\"11\", 52}, {\"65\", 34}, {\"a\", 12}, {\"4\", 52}, {\"74\", 31}}))) == (52));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                              |\n      |                     |                                                                                              int\n      |                     std::vector<std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long int> >\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpaik_9u_f.cpp:4:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocato",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::tuple<std::string, long>> f(std::map<std::string,long> dic) {\n    while (dic.size() > 1) {\n        auto it = std::min_element(dic.begin(), dic.end(),\n            [](const std::pair<std::string, long>& a,\n               const std::pair<std::string, long>& b) {\n                return a.first.size() < b.first.size();\n            });\n        dic.erase(it);\n    }\n    std::vector<std::tuple<std::string, long>> result;\n    for (const auto& p : dic) {\n        result.push_back(std::make_tuple(p.first, p.second));\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>({{\"11\", 52}, {\"65\", 34}, {\"a\", 12}, {\"4\", 52}, {\"74\", 31}}))) == (52));\n}\n\n\n",
        "answer": "(52)"
    },
    {
        "id": 7,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpqwhii2hw.cpp:4:\n/tmp/tmpqwhii2hw.cpp: In function ‘int main()’:\n/tmp/tmpqwhii2hw.cpp:21:49: error: expected primary-expression before ‘)’ token\n   21 |     assert(candidate((std::vector<long>())) == ());\n      |                                                 ^\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> list) {\n    std::vector<long> original = list;\n    while (list.size() > 1) {\n        list.pop_back();\n        for (size_t i = 0; i < list.size(); i++) {\n            list.erase(list.begin() + i);\n        }\n    }\n    list = original;\n    if (!list.empty()) {\n        list.erase(list.begin());\n    }\n    return list;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>())) == ());\n}\n\n\n",
        "answer": "()"
    },
    {
        "id": 8,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpijpxfzek.cpp:3:\n/tmp/tmpijpxfzek.cpp: In function ‘int main()’:\n/tmp/tmpijpxfzek.cpp:23:38: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   23 |     assert(candidate((\"UppEr\"), (0)) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                    |\n      |                     |                    int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpijpxfzek.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpijpxfzek.cpp:3:\n/tmp/tmpijpxfzek.cpp:23:43: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   23 |     assert(candidate((\"UppEr\"), (0)) == (0));\n      |                                           ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string string, long encryption) {\n    if (encryption == 0) {\n        return string;\n    } else {\n        std::string result = string;\n        for (char& c : result) {\n            if (isalpha(c)) {\n                if (islower(c)) {\n                    c = 'a' + (c - 'a' + encryption) % 26;\n                } else {\n                    c = 'A' + (c - 'A' + encryption) % 26;\n                }\n            }\n        }\n        return result;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"UppEr\"), (0)) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 9,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpfv3clu0c.cpp:3:\n/tmp/tmpfv3clu0c.cpp: In function ‘int main()’:\n/tmp/tmpfv3clu0c.cpp:14:38: error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   14 |     assert(candidate((\"#284376598\")) == (\"284376598\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string t) {\n    for (char c : t) {\n        if (!std::isdigit(c)) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"#284376598\")) == (\"284376598\"));\n}\n\n\n",
        "answer": "(\"284376598\")"
    },
    {
        "id": 10,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string new_text = \"\";\n    for (char ch : text) {\n        if (std::isdigit(ch) || ch == 'Ä' || ch == 'ä' || ch == 'Ï' || ch == 'ï' || ch == 'Ö' || ch == 'ö' || ch == 'Ü' || ch == 'ü') {\n            new_text += ch;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"\")) == (\"\"));\n}\n\n\n",
        "answer": "(\"\")"
    },
    {
        "id": 11,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmptf0jnoz3.cpp:4:\n/tmp/tmptf0jnoz3.cpp: In function ‘int main()’:\n/tmp/tmptf0jnoz3.cpp:17:133: error: expected primary-expression before ‘)’ token\n   17 |     assert(candidate((std::map<std::string,std::vector<std::string>>()), (std::map<std::string,std::string>({{\"foo\", \"bar\"}}))) == ());\n      |                                                                                                                                     ^\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,std::vector<std::string>> f(std::map<std::string,std::vector<std::string>> a, std::map<std::string,std::string> b) {\n    for (auto &it : b) {\n        if (a.find(it.first) == a.end()) {\n            a[it.first] = std::vector<std::string>{it.second};\n        } else {\n            a[it.first].push_back(it.second);\n        }\n    }\n    return a;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,std::vector<std::string>>()), (std::map<std::string,std::string>({{\"foo\", \"bar\"}}))) == ());\n}\n\n\n",
        "answer": "()"
    },
    {
        "id": 12,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s, std::string x) {\n    int count = 0;\n    while (s.substr(0, x.length()) == x && count < s.length() - x.length()) {\n        s = s.substr(x.length());\n        count += x.length();\n    }\n    return s;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"If you want to live a happy life! Daniel\"), (\"Daniel\")) == (\"If you want to live a happy life! Daniel\"));\n}\n\n\n",
        "answer": "(\"If you want to live a happy life! Daniel\")"
    },
    {
        "id": 13,
        "res": false,
        "error": "Exception",
        "error_message": "tmp9ka4ymih: /tmp/tmp9ka4ymih.cpp:23: int main(): Assertion `candidate((std::vector<std::string>({(std::string)\"sharron\", (std::string)\"Savannah\", (std::string)\"Mike Cherokee\"}))) == (3)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<std::string> names) {\n    int count = names.size();\n    int numberOfNames = 0;\n    for (std::string name : names) {\n        bool isAlpha = true;\n        for (char c : name) {\n            if (!isalpha(c)) {\n                isAlpha = false;\n                break;\n            }\n        }\n        if (isAlpha) {\n            numberOfNames++;\n        }\n    }\n    return numberOfNames;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"sharron\", (std::string)\"Savannah\", (std::string)\"Mike Cherokee\"}))) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 14,
        "res": false,
        "error": "Exception",
        "error_message": "tmp8ec60jko: /tmp/tmp8ec60jko.cpp:12: int main(): Assertion `candidate((\"   OOP   \")) == (\"olleH\")' failed.\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s) {\n    s.erase(std::remove(s.begin(), s.end(), ' '), s.end());\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"   OOP   \")) == (\"olleH\"));\n}\n\n\n",
        "answer": "(\"olleH\")"
    },
    {
        "id": 15,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp3697sfgl.cpp:3:\n/tmp/tmp3697sfgl.cpp: In function ‘int main()’:\n/tmp/tmp3697sfgl.cpp:18:59: error: ‘H’ was not declared in this scope\n   18 |     assert(candidate((\"zn kgd jw lnt\"), (\"h\"), (\"u\")) == (H));\n      |                                                           ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string wrong, std::string right) {\n    std::string new_text = text;\n    size_t pos = 0;\n    while ((pos = new_text.find(wrong, pos)) != std::string::npos) {\n        new_text.replace(pos, wrong.length(), right);\n        pos += right.length();\n    }\n    \n    std::transform(new_text.begin(), new_text.end(), new_text.begin(), ::toupper);\n    \n    return new_text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"zn kgd jw lnt\"), (\"h\"), (\"u\")) == (H));\n}\n\n\n",
        "answer": "(H)"
    },
    {
        "id": 16,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp3v0h5jts.cpp:3:\n/tmp/tmp3v0h5jts.cpp: In function ‘int main()’:\n/tmp/tmp3v0h5jts.cpp:12:49: error: ‘zjrohaj’ was not declared in this scope\n   12 |     assert(candidate((\"zejrohaj\"), (\"owc\")) == (zjrohaj));\n      |                                                 ^~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string suffix) {\n    if (text.substr(text.size() - suffix.size()) == suffix) {\n        return text.substr(0, text.size() - suffix.size());\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"zejrohaj\"), (\"owc\")) == (zjrohaj));\n}\n\n\n",
        "answer": "(zjrohaj)"
    },
    {
        "id": 17,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp35x_vgwv.cpp:3:\n/tmp/tmp35x_vgwv.cpp: In function ‘int main()’:\n/tmp/tmp35x_vgwv.cpp:9:63: error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n    9 |     assert(candidate((\"There are, no, commas, in this text\")) == (\"There are\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    return text.find(\",\");\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"There are, no, commas, in this text\")) == (\"There are\"));\n}\n\n\n",
        "answer": "(\"There are\")"
    },
    {
        "id": 18,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpqoy393ro.cpp:3:\n/tmp/tmpqoy393ro.cpp: In function ‘int main()’:\n/tmp/tmpqoy393ro.cpp:18:104: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   18 |     assert(candidate((std::vector<long>({(long)5, (long)4, (long)3, (long)2, (long)1, (long)0})), (3)) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                      |\n      |                     std::vector<long int>                                                                  int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpqoy393ro.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpqoy393ro.cpp:3:\n/tmp/tmpqoy393ro.cpp:18:109: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   18 |     assert(candidate((std::vector<long>({(long)5, (long)4, (long)3, (long)2, (long)1, (lon",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> array, long elem) {\n    int k = 0;\n    std::vector<long> l = array;\n    for (int i : l) {\n        if (i > elem) {\n            array.insert(array.begin() + k, elem);\n            break;\n        }\n        k++;\n    }\n    return array;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)5, (long)4, (long)3, (long)2, (long)1, (long)0})), (3)) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 19,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmptk2spu39.cpp:4:\n/tmp/tmptk2spu39.cpp: In function ‘int main()’:\n/tmp/tmptk2spu39.cpp:18:48: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   18 |     assert(candidate((\"\"), (\"sdasdnakjsda80\")) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                              |\n      |                     |                              int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmptk2spu39.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmptk2spu39.cpp:4:\n/tmp/tmptk2spu39.cpp:18:53: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   18 |     assert(candidate((\"\"), (\"sdasdnakjsda80\")) == (0));\n      |                                                     ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/sp",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string x, std::string y) {\n    std::reverse(y.begin(), y.end());\n    for (auto &c : y) {\n        if (c == '9') c = '0';\n        else if (c == '0') c = '9';\n    }\n    if (x.find_first_not_of(\"0123456789\") == std::string::npos && y.find_first_not_of(\"0123456789\") == std::string::npos)\n        return x + y;\n    else \n        return x;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"\"), (\"sdasdnakjsda80\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 20,
        "res": false,
        "error": "Exception",
        "error_message": "tmp2z2n80bw: /tmp/tmp2z2n80bw.cpp:13: int main(): Assertion `candidate((\"was,\")) == (\"was\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string result = \"\";\n    for (int i = text.length() - 1; i >= 0; i--) {\n        result += text[i];\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"was,\")) == (\"was\"));\n}\n\n\n",
        "answer": "(\"was\")"
    },
    {
        "id": 21,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpfbh9g0nd.cpp:3:\n/tmp/tmpfbh9g0nd.cpp: In function ‘int main()’:\n/tmp/tmpfbh9g0nd.cpp:13:81: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   13 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)2, (long)2}))) == (2, 2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~\n      |                     |                                                                |\n      |                     std::vector<long int>                                            int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpfbh9g0nd.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpfbh9g0nd.cpp:3:\n/tmp/tmpfbh9g0nd.cpp:13:89: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   13 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)2, (long)2}))) == (2, 2));\n      |                                                                             ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> array) {\n    long n = array.back();\n    array.pop_back();\n    array.push_back(n);\n    array.push_back(n);\n    return array;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)2, (long)2}))) == (2, 2));\n}\n\n\n",
        "answer": "(2, 2)"
    },
    {
        "id": 22,
        "res": false,
        "error": "Exception",
        "error_message": "tmpo4iqtgpa: /tmp/tmpo4iqtgpa.cpp:33: int main(): Assertion `candidate((0)) == (0)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_vector_long__long{\n    std::vector<long> f0;\n    long f1;    Union_std_vector_long__long(std::vector<long> _f0) : f0(_f0) {}\n    Union_std_vector_long__long(long _f1) : f1(_f1) {}\n    ~Union_std_vector_long__long() {}\n    bool operator==(std::vector<long> f) {\n        return f0 == f ;\n    }    bool operator==(long f) {\n        return f1 == f ;\n    }\n};\nUnion_std_vector_long__long f(long a) {\n    if (a == 0) {\n        return Union_std_vector_long__long(std::vector<long>{0});\n    }\n    std::vector<long> result;\n    while (a > 0) {\n        result.push_back(a % 10);\n        a = a / 10;\n    }\n    std::reverse(result.begin(), result.end());\n    std::string result_str;\n    for (int i : result) {\n        result_str += std::to_string(i);\n    }\n    return Union_std_vector_long__long(std::stol(result_str));\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((0)) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 23,
        "res": false,
        "error": "Exception",
        "error_message": "tmp90rdewfr: /tmp/tmp90rdewfr.cpp:17: int main(): Assertion `candidate((\"new-medium-performing-application - XQuery 2.2\"), (\"0123456789-\")) == (\"XQuery 2.2\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string chars) {\n    if (!chars.empty()) {\n        text.erase(text.find_last_not_of(chars) + 1);\n    } else {\n        text.erase(text.find_last_not_of(' ') + 1);\n    }\n    if (text.empty()) {\n        return \"-\";\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"new-medium-performing-application - XQuery 2.2\"), (\"0123456789-\")) == (\"XQuery 2.2\"));\n}\n\n\n",
        "answer": "(\"XQuery 2.2\")"
    },
    {
        "id": 24,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpun5_n_gq.cpp:3:\n/tmp/tmpun5_n_gq.cpp: In function ‘int main()’:\n/tmp/tmpun5_n_gq.cpp:10:119: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   10 |     assert(candidate((std::vector<long>({(long)35, (long)45, (long)3, (long)61, (long)39, (long)27, (long)47})), (0)) == (3, 61, 39, 27, 47));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~\n      |                     |                                                                                                                  |\n      |                     std::vector<long int>                                                                                              int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpun5_n_gq.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpun5_n_gq.cpp:3:\n/tmp/tmpun5_n_gq.cpp:10:140: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_Iterat",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums, long i) {\n    nums.erase(nums.begin() + i);\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)35, (long)45, (long)3, (long)61, (long)39, (long)27, (long)47})), (0)) == (3, 61, 39, 27, 47));\n}\n\n\n",
        "answer": "(3, 61, 39, 27, 47)"
    },
    {
        "id": 25,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpx4mzdgzz.cpp:3:\n/tmp/tmpx4mzdgzz.cpp: In function ‘int main()’:\n/tmp/tmpx4mzdgzz.cpp:10:85: error: no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, long int>’ and ‘int’)\n   10 |     assert(candidate((std::map<std::string,long>({{\"l\", 1}, {\"t\", 2}, {\"x:\", 3}}))) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                   |\n      |                     std::map<std::__cxx11::basic_string<char>, long int>                int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpx4mzdgzz.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::pair<const std::__cxx11::basic_string<char>, long int> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,long> f(std::map<std::string,long> d) {\n    d.erase(std::prev(d.end()));\n    return d;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>({{\"l\", 1}, {\"t\", 2}, {\"x:\", 3}}))) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 26,
        "res": false,
        "error": "Exception",
        "error_message": "tmpc3hxh1uh: /tmp/tmpc3hxh1uh.cpp:30: int main(): Assertion `candidate((\"qy. dg. rnvprt rse.. irtwv tx..\"), (\"wtwdoacb\")) == (5)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_std_string{\n    long f0;\n    std::string f1;    Union_long_std_string(long _f0) : f0(_f0) {}\n    Union_long_std_string(std::string _f1) : f1(_f1) {}\n    ~Union_long_std_string() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(std::string f) {\n        return f1 == f ;\n    }\n};\nUnion_long_std_string f(std::string items, std::string target) {\n    std::stringstream ss(items);\n    std::string item;\n    while (ss >> item) {\n        if (target.find(item) != std::string::npos) {\n            return Union_long_std_string(items.find(item) + 1);\n        }\n        if (item.find('.') == item.length() - 1 || item.find('.') == 0) {\n            return Union_long_std_string(\"error\");\n        }\n    }\n    return Union_long_std_string(\".\");\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"qy. dg. rnvprt rse.. irtwv tx..\"), (\"wtwdoacb\")) == (5));\n}\n\n\n",
        "answer": "(5)"
    },
    {
        "id": 27,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpcl1wy91k.cpp:3:\n/tmp/tmpcl1wy91k.cpp: In function ‘int main()’:\n/tmp/tmpcl1wy91k.cpp:18:36: error: ‘flak’ was not declared in this scope\n   18 |     assert(candidate((\"flak\")) == (flak));\n      |                                    ^~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string w) {\n    std::vector<char> ls(w.begin(), w.end());\n    std::string omw = \"\";\n    while (ls.size() > 0) {\n        omw += ls[0];\n        ls.erase(ls.begin());\n        if (ls.size() * 2 > w.length()) {\n            return w.substr(ls.size()) == omw;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"flak\")) == (flak));\n}\n\n\n",
        "answer": "(flak)"
    },
    {
        "id": 28,
        "res": false,
        "error": "Exception",
        "error_message": "tmpadk7q9qm: /tmp/tmpadk7q9qm.cpp:12: int main(): Assertion `candidate((std::vector<long>({(long)5, (long)8}))) == (5, 8)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::vector<long> mylist) {\n    std::vector<long> revl = mylist;\n    std::reverse(revl.begin(), revl.end());\n    std::sort(mylist.begin(), mylist.end(), std::greater<long>());\n    return mylist == revl;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)5, (long)8}))) == (5, 8));\n}\n\n\n",
        "answer": "(5, 8)"
    },
    {
        "id": 29,
        "res": false,
        "error": "Exception",
        "error_message": "tmpako4nez7: /tmp/tmpako4nez7.cpp:16: int main(): Assertion `candidate((\"-123   \t+314\")) == (\"-123   \t+314\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::vector<char> nums;\n    for (char& c : text) {\n        if (std::isdigit(c)) {\n            nums.push_back(c);\n        }\n    }\n    assert(nums.size() > 0);\n    return std::string(nums.begin(), nums.end());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"-123   \t+314\")) == (\"-123   \t+314\"));\n}\n\n\n",
        "answer": "(\"-123   \t+314\")"
    },
    {
        "id": 30,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpe_kl1k43.cpp:4:\n/tmp/tmpe_kl1k43.cpp: In function ‘int main()’:\n/tmp/tmpe_kl1k43.cpp:29:120: error: ‘a’ was not declared in this scope\n   29 |     assert(candidate((std::vector<Union_std_string_long>({(std::string)\"a\", (std::string)\"b\", (std::string)\"c\"}))) == (a));\n      |                                                                                                                        ^\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\n#include<variant>\n\ntypedef std::variant<std::string, long> Union_std_string_long;\n\nstd::vector<Union_std_string_long> f(std::vector<Union_std_string_long> array) {\n    std::vector<Union_std_string_long> result;\n    for (auto const& elem : array) {\n        std::visit([&](auto&& arg) {\n            using T = std::decay_t<decltype(arg)>;\n            if constexpr (std::is_same_v<T, long>) {\n                result.push_back(arg);\n            } else if constexpr (std::is_same_v<T, std::string>) {\n                std::locale loc;\n                if (std::all_of(arg.begin(), arg.end(),\n                                [&loc](char c){ return std::isprint(c, loc); })) {\n                    result.push_back(arg);\n                }\n            }\n        }, elem);\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<Union_std_string_long>({(std::string)\"a\", (std::string)\"b\", (std::string)\"c\"}))) == (a));\n}\n\n\n",
        "answer": "(a)"
    },
    {
        "id": 31,
        "res": false,
        "error": "Exception",
        "error_message": "tmp2810lyww: /tmp/tmp2810lyww.cpp:15: int main(): Assertion `candidate((\"PoIOarTvpoead\")) == (2)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string string) {\n    int upper = 0;\n    for (char c : string) {\n        if (std::isupper(c)) {\n            upper++;\n        }\n    }\n    return upper * ((upper % 2 == 0) ? 2 : 1);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"PoIOarTvpoead\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 32,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp5vywlou3.cpp:3:\n/tmp/tmp5vywlou3.cpp: In function ‘int main()’:\n/tmp/tmp5vywlou3.cpp:21:45: error: ‘volume’ was not declared in this scope\n   21 |     assert(candidate((\"volume\"), (\"l\")) == (volume;l));\n      |                                             ^~~~~~\n/tmp/tmp5vywlou3.cpp:21:51: error: expected ‘)’ before ‘;’ token\n   21 |     assert(candidate((\"volume\"), (\"l\")) == (volume;l));\n      |                                            ~      ^\n/tmp/tmp5vywlou3.cpp:21:51: error: expected ‘)’ before ‘;’ token\n/tmp/tmp5vywlou3.cpp:21:51: error: expected ‘)’ before ‘;’ token\n/tmp/tmp5vywlou3.cpp:21:5: note: to match this ‘(’\n   21 |     assert(candidate((\"volume\"), (\"l\")) == (volume;l));\n      |     ^~~~~~\n/tmp/tmp5vywlou3.cpp:21:52: error: ‘l’ was not declared in this scope\n   21 |     assert(candidate((\"volume\"), (\"l\")) == (volume;l));\n      |                                                    ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s, std::string sep) {\n    std::vector<std::string> tokens;\n    std::string token;\n    std::istringstream tokenStream(s);\n    \n    while (std::getline(tokenStream, token, sep[0])) {\n        tokens.push_back(\"*\" + token);\n    }\n\n    std::reverse(tokens.begin(), tokens.end());\n\n    return std::accumulate(tokens.begin(), tokens.end(), std::string{}, [](const std::string& a, const std::string& b) {\n        return a + (a.empty() ? \"\" : \";\") + b;\n    });\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"volume\"), (\"l\")) == (volume;l));\n}\n\n\n",
        "answer": "(volume;l)"
    },
    {
        "id": 33,
        "res": 0
    },
    {
        "id": 34,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpulj3kxvq.cpp:3:\n/tmp/tmpulj3kxvq.cpp: In function ‘int main()’:\n/tmp/tmpulj3kxvq.cpp:15:209: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)7, (long)7, (long)6, (long)8, (long)4, (long)1, (long)2, (long)3, (long)5, (long)1, (long)3, (long)21, (long)1, (long)3})), (3), (1)) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                                                                                                               |\n      |                     std::vector<long int>                                                                                                                                                                           int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpulj3kxvq.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn fi",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums, long odd1, long odd2) {\n    while (std::find(nums.begin(), nums.end(), odd1) != nums.end()) {\n        nums.erase(std::remove(nums.begin(), nums.end(), odd1), nums.end());\n    }\n    while (std::find(nums.begin(), nums.end(), odd2) != nums.end()) {\n        nums.erase(std::remove(nums.begin(), nums.end(), odd2), nums.end());\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)7, (long)7, (long)6, (long)8, (long)4, (long)1, (long)2, (long)3, (long)5, (long)1, (long)3, (long)21, (long)1, (long)3})), (3), (1)) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 35,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpw3wib9_d.cpp:3:\n/tmp/tmpw3wib9_d.cpp: In function ‘int main()’:\n/tmp/tmpw3wib9_d.cpp:17:169: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   17 |     assert(candidate((\" B \"), (std::vector<std::string>({(std::string)\" bBb \", (std::string)\" BaB \", (std::string)\" bB\", (std::string)\" bBbB \", (std::string)\" bbb\"}))) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                                                                       |\n      |                     std::vector<long int>                                                                                                                                   int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpw3wib9_d.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpw3wi",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::string pattern, std::vector<std::string> items) {\n    std::vector<long> result;\n    for (const std::string& text : items) {\n        size_t pos = text.rfind(pattern);\n        if (pos != std::string::npos) {\n            result.push_back(pos);\n        }\n    }\n    \n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\" B \"), (std::vector<std::string>({(std::string)\" bBb \", (std::string)\" BaB \", (std::string)\" bB\", (std::string)\" bBbB \", (std::string)\" bbb\"}))) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 36,
        "res": false,
        "error": "Exception",
        "error_message": "tmpzl_5szck: /tmp/tmpzl_5szck.cpp:9: int main(): Assertion `candidate((\"ha\"), (\"\")) == (\"h\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string chars) {\n    return text.substr(0, text.find_last_not_of(chars) + 1);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ha\"), (\"\")) == (\"h\"));\n}\n\n\n",
        "answer": "(\"h\")"
    },
    {
        "id": 37,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmprosa85c2.cpp:3:\n/tmp/tmprosa85c2.cpp: In function ‘int main()’:\n/tmp/tmprosa85c2.cpp:13:31: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)\n   13 |     assert(candidate((\"123\")) == (\"1\", \"2\", \"3\"));\n      |            ~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~\n      |                     |                     |\n      |                     |                     const char [2]\n      |                     std::vector<std::__cxx11::basic_string<char> >\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmprosa85c2.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::__cxx11::basic_string<char> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmprosa85c2.cpp:3:\n/tmp/tmprosa85c2.cpp:13:",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::string text) {\n    std::vector<std::string> text_arr;\n    for (int j = 0; j < text.length(); j++) {\n        text_arr.push_back(text.substr(j));\n    }\n    return text_arr;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"123\")) == (\"1\", \"2\", \"3\"));\n}\n\n\n",
        "answer": "(\"1\", \"2\", \"3\")"
    },
    {
        "id": 38,
        "res": 0
    },
    {
        "id": 39,
        "res": false,
        "error": "Exception",
        "error_message": "tmptb9w1ub3: /tmp/tmptb9w1ub3.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)6, (long)2, (long)7, (long)1})), (6)) == (6)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> array, long elem) {\n    for(int i = 0; i < array.size(); i++) {\n        if(array[i] == elem) {\n            return i;\n        }\n    }\n    return -1;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)6, (long)2, (long)7, (long)1})), (6)) == (6));\n}\n\n\n",
        "answer": "(6)"
    },
    {
        "id": 40,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    return text.append(text.size() + 1 - text.size(), '#');\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"the cow goes moo\")) == (\"the cow goes moo#\"));\n}\n\n\n",
        "answer": "(\"the cow goes moo#\")"
    },
    {
        "id": 41,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmph216vfxk.cpp:3:\n/tmp/tmph216vfxk.cpp: In function ‘int main()’:\n/tmp/tmph216vfxk.cpp:14:98: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   14 |     assert(candidate((std::vector<long>({(long)58})), (std::vector<long>({(long)21, (long)92}))) == (92));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                |\n      |                     std::vector<long int>                                                            int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmph216vfxk.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmph216vfxk.cpp:3:\n/tmp/tmph216vfxk.cpp:14:104: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((std::vector<long>({(long)58})), (std::vector<long>({(long)21, (long)92}))) == (92));\n      ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> array, std::vector<long> values) {\n    std::reverse(array.begin(), array.end());\n    for (int value : values) {\n        array.insert(array.begin() + array.size() / 2, value);\n    }\n    std::reverse(array.begin(), array.end());\n    return array;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)58})), (std::vector<long>({(long)21, (long)92}))) == (92));\n}\n\n\n",
        "answer": "(92)"
    },
    {
        "id": 42,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpxl08u_od.cpp:3:\n/tmp/tmpxl08u_od.cpp: In function ‘int main()’:\n/tmp/tmpxl08u_od.cpp:14:118: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   14 |     assert(candidate((std::vector<long>({(long)4, (long)3, (long)2, (long)1, (long)2, (long)-1, (long)4, (long)2}))) == (8));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                    |\n      |                     std::vector<long int>                                                                                int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpxl08u_od.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpxl08u_od.cpp:3:\n/tmp/tmpxl08u_od.cpp:14:123: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((std::vector<",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    nums.clear();\n    std::vector<long> result;\n    for (long num : nums) {\n        result.push_back(num * 2);\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)4, (long)3, (long)2, (long)1, (long)2, (long)-1, (long)4, (long)2}))) == (8));\n}\n\n\n",
        "answer": "(8)"
    },
    {
        "id": 43,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpr4z6tzdd.cpp:3:\n/tmp/tmpr4z6tzdd.cpp: In function ‘int main()’:\n/tmp/tmpr4z6tzdd.cpp:15:34: error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   15 |     assert(candidate((\"6 ** 2\")) == (\"-1\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string n) {\n    for(char i : n) {\n        if (!isdigit(i)) {\n            n = \"-1\";\n            break;\n        }\n    }\n    return stoi(n);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"6 ** 2\")) == (\"-1\"));\n}\n\n\n",
        "answer": "(\"-1\")"
    },
    {
        "id": 44,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpe5n6gmep.cpp:4:\n/tmp/tmpe5n6gmep.cpp: In function ‘int main()’:\n/tmp/tmpe5n6gmep.cpp:25:36: error: ‘nzoh’ was not declared in this scope\n   25 |     assert(candidate((\"nzoh\")) == (nzoh));\n      |                                    ^~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string ls = text;\n    for (int i = 0; i < ls.length(); i++) {\n        if (ls[i] != '+') {\n            ls.insert(i, \"+\");\n            ls.insert(i, \"*\");\n            break;\n        }\n    }\n    std::string result;\n    for (int i = 0; i < ls.length(); i++) {\n        result += ls[i];\n        if (i != ls.length() - 1) {\n            result += '+';\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"nzoh\")) == (nzoh));\n}\n\n\n",
        "answer": "(nzoh)"
    },
    {
        "id": 45,
        "res": false,
        "error": "Exception",
        "error_message": "tmph7gp2_fy: /tmp/tmph7gp2_fy.cpp:14: int main(): Assertion `candidate((\"za1fd1as8f7afasdfam97adfa\"), (\"7\")) == (7)' failed.\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text, std::string letter) {\n    std::unordered_map<char, long> counts;\n    for (char c : text) {\n        counts[c]++;\n    }\n    return counts[letter[0]];\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"za1fd1as8f7afasdfam97adfa\"), (\"7\")) == (7));\n}\n\n\n",
        "answer": "(7)"
    },
    {
        "id": 46,
        "res": false,
        "error": "Exception",
        "error_message": "tmp1wwwm48d: /tmp/tmp1wwwm48d.cpp:13: int main(): Assertion `candidate((std::vector<std::string>({(std::string)\"many\", (std::string)\"letters\", (std::string)\"asvsz\", (std::string)\"hello\", (std::string)\"man\"})), (\"\")) == (\"manyasvszhellomanan\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::vector<std::string> l, std::string c) {\n    std::string result = \"\";\n    for (const std::string& str : l) {\n        result += str + c;\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"many\", (std::string)\"letters\", (std::string)\"asvsz\", (std::string)\"hello\", (std::string)\"man\"})), (\"\")) == (\"manyasvszhellomanan\"));\n}\n\n\n",
        "answer": "(\"manyasvszhellomanan\")"
    },
    {
        "id": 47,
        "res": false,
        "error": "Exception",
        "error_message": "tmpif_85o18: /tmp/tmpif_85o18.cpp:16: int main(): Assertion `candidate((\"bbbbr\")) == (3)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text) {\n    int length = text.size();\n    int half = length / 2;\n    std::string encode = text.substr(0, half);\n    if (text.substr(half) == encode) {\n        return true;\n    } else {\n        return false;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"bbbbr\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 48,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpswy1mwjn.cpp:3:\n/tmp/tmpswy1mwjn.cpp: In function ‘int main()’:\n/tmp/tmpswy1mwjn.cpp:19:56: error: expected primary-expression before ‘)’ token\n   19 |     assert(candidate((std::vector<std::string>())) == ());\n      |                                                        ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::vector<std::string> names) {\n    if (names.empty()) {\n        return \"\";\n    }\n    std::string smallest = names[0];\n    for (size_t i = 1; i < names.size(); ++i) {\n        if (names[i] < smallest) {\n            smallest = names[i];\n        }\n    }\n    names.erase(std::remove(names.begin(), names.end(), smallest), names.end());\n    return smallest;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>())) == ());\n}\n\n\n",
        "answer": "()"
    },
    {
        "id": 49,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpa89mnyw3.cpp:3:\n/tmp/tmpa89mnyw3.cpp: In function ‘int main()’:\n/tmp/tmpa89mnyw3.cpp:19:31: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   19 |     assert(candidate((\"816\")) == (816));\n      |            ~~~~~~~~~~~~~~~~~~ ^~ ~~~~~\n      |                     |             |\n      |                     |             int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpa89mnyw3.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpa89mnyw3.cpp:3:\n/tmp/tmpa89mnyw3.cpp:19:38: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   19 |     assert(candidate((\"816\")) == (816));\n      |                                      ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/i",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    if (std::all_of(text.begin(), text.end(), isalnum)) {\n        return std::accumulate(text.begin(), text.end(), std::string{}, [](std::string result, char c) {\n            if (isdigit(c)) {\n                return result + c;\n            } else {\n                return result;\n            }\n        });\n    } else {\n        return text;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"816\")) == (816));\n}\n\n\n",
        "answer": "(816)"
    },
    {
        "id": 50,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpitvlrw0j.cpp:3:\n/tmp/tmpitvlrw0j.cpp: In function ‘int main()’:\n/tmp/tmpitvlrw0j.cpp:11:106: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   11 |     assert(candidate((std::vector<std::string>({(std::string)\"a\", (std::string)\"c\", (std::string)\"v\"}))) == (1, 1, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~\n      |                     |                                                                                            |\n      |                     std::vector<long int>                                                                        int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpitvlrw0j.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpitvlrw0j.cpp:3:\n/tmp/tmpitvlrw0j.cpp:11:117: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   11 |     assert(candidate((std::vector<std::string>({(std::string)\"",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<std::string> lst) {\n    lst.clear();\n    std::vector<long> result(lst.size() + 1, 1);\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"a\", (std::string)\"c\", (std::string)\"v\"}))) == (1, 1, 1));\n}\n\n\n",
        "answer": "(1, 1, 1)"
    },
    {
        "id": 51,
        "res": false,
        "error": "Exception",
        "error_message": "tmpvoivczf9: /tmp/tmpvoivczf9.cpp:25: int main(): Assertion `candidate((21)) == (10)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) : f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long() {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }    bool operator==(long f) {\n        return f1 == f ;\n    }\n};\nUnion_std_string_long f(long num) {\n    std::string s = std::string(10, '<');\n    if (num % 2 == 0) {\n        return Union_std_string_long(s);\n    } else {\n        return Union_std_string_long(num - 1);\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((21)) == (10));\n}\n\n\n",
        "answer": "(10)"
    },
    {
        "id": 52,
        "res": false,
        "error": "Exception",
        "error_message": "tmpyhqkrsh8: /tmp/tmpyhqkrsh8.cpp:15: int main(): Assertion `candidate((\"seiq7229 d27\")) == (\"seven\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (!std::isdigit(text[i])) {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"seiq7229 d27\")) == (\"seven\"));\n}\n\n\n",
        "answer": "(\"seven\")"
    },
    {
        "id": 53,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpvdbqmx78.cpp:3:\n/tmp/tmpvdbqmx78.cpp: In function ‘int main()’:\n/tmp/tmpvdbqmx78.cpp:20:41: error: expected ‘)’ before numeric constant\n   20 |     assert(candidate((\"URW rNB\")) == (1 2 3 4 5));\n      |                                      ~  ^\n/tmp/tmpvdbqmx78.cpp:20:35: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   20 |     assert(candidate((\"URW rNB\")) == (1 2 3 4 5));\n      |            ~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                 |\n      |                     |                 int\n      |                     std::vector<long int>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpvdbqmx78.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpvdbqmx78.cpp:3:\n/tmp/tmpvdbqmx78.cpp:20:5: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   20 |     assert(candidate((\"URW rNB\")) == (1 2 3 4 5));\n      |     ^~~~~~\nIn file included from /usr/include/c++/11/bits/stl_algo",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::string text) {\n    std::unordered_map<char, int> occ;\n    for (char ch : text) {\n        std::unordered_map<char, char> name = {{'a', 'b'}, {'b', 'c'}, {'c', 'd'}, {'d', 'e'}, {'e', 'f'}};\n        char newName = name.find(ch) != name.end() ? name[ch] : ch;\n        occ[newName] = occ[newName] + 1;\n    }\n    \n    std::vector<long> result;\n    for (auto& pair : occ) {\n        result.push_back(pair.second);\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"URW rNB\")) == (1 2 3 4 5));\n}\n\n\n",
        "answer": "(1 2 3 4 5)"
    },
    {
        "id": 54,
        "res": false,
        "error": "Exception",
        "error_message": "tmpieyzmvj7: /tmp/tmpieyzmvj7.cpp:13: int main(): Assertion `candidate((\"happy\"), (0), (3)) == (-1)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text, long s, long e) {\n    std::string sublist = text.substr(s, e - s);\n    if (sublist.empty()) {\n        return -1;\n    }\n    return sublist.find_first_of(*std::min_element(sublist.begin(), sublist.end()));\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"happy\"), (0), (3)) == (-1));\n}\n\n\n",
        "answer": "(-1)"
    },
    {
        "id": 55,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpp8b4nayu.cpp:3:\n/tmp/tmpp8b4nayu.cpp: In function ‘int main()’:\n/tmp/tmpp8b4nayu.cpp:16:103: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   16 |     assert(candidate((std::vector<long>({(long)4, (long)8, (long)17, (long)89, (long)43, (long)14}))) == (89, 43, 14, 17, 4));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~\n      |                     |                                                                                                   |\n      |                     std::vector<long int>                                                                               int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpp8b4nayu.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpp8b4nayu.cpp:3:\n/tmp/tmpp8b4nayu.cpp:16:124: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   16 |     assert(candidate((std::vector<",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> array) {\n    std::vector<long> array_2;\n    for (long i : array) {\n        if (i > 0) {\n            array_2.push_back(i);\n        }\n    }\n    std::sort(array_2.begin(), array_2.end(), std::greater<long>());\n    return array_2;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)4, (long)8, (long)17, (long)89, (long)43, (long)14}))) == (89, 43, 14, 17, 4));\n}\n\n\n",
        "answer": "(89, 43, 14, 17, 4)"
    },
    {
        "id": 56,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpe9vn_ygl.cpp:3:\n/tmp/tmpe9vn_ygl.cpp: In function ‘int main()’:\n/tmp/tmpe9vn_ygl.cpp:14:37: error: ‘True’ was not declared in this scope\n   14 |     assert(candidate((\"1z1z1\")) == (True));\n      |                                     ^~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string sentence) {\n    for(char c : sentence) {\n        if (!isascii(c)) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"1z1z1\")) == (True));\n}\n\n\n",
        "answer": "(True)"
    },
    {
        "id": 57,
        "res": false,
        "error": "Exception",
        "error_message": "tmpvv20n9wt: /tmp/tmpvv20n9wt.cpp:18: int main(): Assertion `candidate((\"ax\")) == (0.5)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    std::transform(text.begin(), text.end(), text.begin(), ::toupper);\n    int count_upper = 0;\n    for (char& c : text) {\n        if (std::isupper(c)) {\n            count_upper++;\n        } else {\n            return 0;\n        }\n    }\n    return count_upper / 2;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ax\")) == (0.5));\n}\n\n\n",
        "answer": "(0.5)"
    },
    {
        "id": 58,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp2sm_q3ij.cpp:3:\n/tmp/tmp2sm_q3ij.cpp: In function ‘int main()’:\n/tmp/tmp2sm_q3ij.cpp:13:91: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   13 |     assert(candidate((std::vector<long>({(long)-1, (long)0, (long)0, (long)1, (long)1}))) == (0, 1, 0, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~\n      |                     |                                                                                |\n      |                     std::vector<long int>                                                            int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp2sm_q3ij.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp2sm_q3ij.cpp:3:\n/tmp/tmp2sm_q3ij.cpp:13:105: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   13 |     assert(candidate((std::vector<long>({(long)-1, (long)0, (long)0, (long)1, (long)1}))) == (0, 1, 0, 1));\n   ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    int count = nums.size();\n    for (int i = 0; i < count; i++) {\n        nums.push_back(nums[i % 2]);\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)-1, (long)0, (long)0, (long)1, (long)1}))) == (0, 1, 0, 1));\n}\n\n\n",
        "answer": "(0, 1, 0, 1)"
    },
    {
        "id": 59,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp9kjcjjdv.cpp:3:\n/tmp/tmp9kjcjjdv.cpp: In function ‘int main()’:\n/tmp/tmp9kjcjjdv.cpp:25:35: error: ‘hi’ was not declared in this scope\n   25 |     assert(candidate((\"hi \")) == (hi));\n      |                                   ^~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s) {\n    std::vector<char> a;\n    for(char c : s) {\n        if(c != ' ') {\n            a.push_back(c);\n        }\n    }\n\n    std::vector<char> b = a;\n    for(auto it = a.rbegin(); it != a.rend(); ++it) {\n        if(*it == ' ') {\n            b.pop_back();\n        } else {\n            break;\n        }\n    }\n\n    return std::string(b.begin(), b.end());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"hi \")) == (hi));\n}\n\n\n",
        "answer": "(hi)"
    },
    {
        "id": 60,
        "res": false,
        "error": "Exception",
        "error_message": "tmpneeio7s7: /tmp/tmpneeio7s7.cpp:14: int main(): Assertion `candidate((\"raruwa\")) == (\"r-a-w\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string doc) {\n    for(char x : doc){\n        if(std::isalpha(x)){\n            return std::string(1, std::toupper(x));\n        }\n    }\n    return \"-\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"raruwa\")) == (\"r-a-w\"));\n}\n\n\n",
        "answer": "(\"r-a-w\")"
    },
    {
        "id": 61,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpfrzkbubg.cpp:3:\n/tmp/tmpfrzkbubg.cpp: In function ‘int main()’:\n/tmp/tmpfrzkbubg.cpp:34:31: error: ‘nada’ was not declared in this scope\n   34 |     assert(candidate((\"\")) == nada);\n      |                               ^~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::vector<std::string> texts;\n    std::string word;\n    std::istringstream iss(text);\n    while (iss >> word) {\n        texts.push_back(word);\n    }\n\n    if (!texts.empty()) {\n        std::vector<std::string> xtexts;\n        for (const auto& t : texts) {\n            if (std::all_of(t.begin(), t.end(), isascii) && t != \"nada\" && t != \"0\") {\n                xtexts.push_back(t);\n            }\n        }\n\n        if (!xtexts.empty()) {\n            auto max_element = std::max_element(xtexts.begin(), xtexts.end(), \n                [](const std::string& a, const std::string& b) {\n                    return a.length() < b.length();\n                });\n            return *max_element;\n        }\n        return \"nada\";\n    }\n\n    return \"nada\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"\")) == nada);\n}\n\n\n",
        "answer": "nada"
    },
    {
        "id": 62,
        "res": 0
    },
    {
        "id": 63,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpnu0ara6x.cpp:3:\n/tmp/tmpnu0ara6x.cpp: In function ‘int main()’:\n/tmp/tmpnu0ara6x.cpp:12:55: error: ‘hhesyehu’ was not declared in this scope\n   12 |     assert(candidate((\"ndbtdabdahesyehu\"), (\"n\")) == (hhesyehu));\n      |                                                       ^~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string prefix) {\n    while(text.find(prefix) == 0) {\n        text = text.substr(prefix.length());\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ndbtdabdahesyehu\"), (\"n\")) == (hhesyehu));\n}\n\n\n",
        "answer": "(hhesyehu)"
    },
    {
        "id": 64,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpsjmkh6df.cpp:3:\n/tmp/tmpsjmkh6df.cpp: In function ‘int main()’:\n/tmp/tmpsjmkh6df.cpp:17:35: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   17 |     assert(candidate((\"7\"), (10)) == (7));\n      |            ~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                 |\n      |                     |                 int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpsjmkh6df.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpsjmkh6df.cpp:3:\n/tmp/tmpsjmkh6df.cpp:17:40: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   17 |     assert(candidate((\"7\"), (10)) == (7));\n      |                                        ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n            ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long size) {\n    long counter = text.length();\n    for (long i = 0; i < size - (size % 2); ++i) {\n        text = \" \" + text + \" \";\n        counter += 2;\n        if (counter >= size) {\n            return text;\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"7\"), (10)) == (7));\n}\n\n\n",
        "answer": "(7)"
    },
    {
        "id": 65,
        "res": false,
        "error": "Exception",
        "error_message": "tmppf_ohp35: /tmp/tmppf_ohp35.cpp:11: int main(): Assertion `candidate((std::vector<long>({(long)3, (long)2, (long)0, (long)3, (long)7})), (3)) == (42)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> nums, long index) {\n    long result = nums[index] % 42 + nums[index] * 2;\n    nums.erase(nums.begin() + index);\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)0, (long)3, (long)7})), (3)) == (42));\n}\n\n\n",
        "answer": "(42)"
    },
    {
        "id": 66,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpiyecgbbg.cpp:4:\n/tmp/tmpiyecgbbg.cpp: In function ‘int main()’:\n/tmp/tmpiyecgbbg.cpp:15:45: error: ‘happy’ was not declared in this scope\n   15 |     assert(candidate((\"happy\"), (\"ha\")) == (happy));\n      |                                             ^~~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string prefix) {\n    int prefix_length = prefix.size();\n    if (text.substr(0, prefix_length) == prefix) {\n        return text.substr(prefix_length / 2,prefix_length % 2);\n    } else {\n        return text;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"happy\"), (\"ha\")) == (happy));\n}\n\n\n",
        "answer": "(happy)"
    },
    {
        "id": 67,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpco4f37vy.cpp:3:\n/tmp/tmpco4f37vy.cpp: In function ‘int main()’:\n/tmp/tmpco4f37vy.cpp:11:37: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   11 |     assert(candidate((6), (8), (8)) == (6,8,8));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~\n      |                     |                      |\n      |                     |                      int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpco4f37vy.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpco4f37vy.cpp:3:\n/tmp/tmpco4f37vy.cpp:11:46: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   11 |     assert(candidate((6), (8), (8)) == (6,8,8));\n      |                                              ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/inclu",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(long num1, long num2, long num3) {\n    std::vector<long> nums = {num1, num2, num3};\n    std::sort(nums.begin(), nums.end());\n    return std::to_string(nums[0]) + \",\" + std::to_string(nums[1]) + \",\" + std::to_string(nums[2]);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((6), (8), (8)) == (6,8,8));\n}\n\n\n",
        "answer": "(6,8,8)"
    },
    {
        "id": 68,
        "res": false,
        "error": "Exception",
        "error_message": "tmpwfqhyo44: /tmp/tmpwfqhyo44.cpp:16: int main(): Assertion `candidate((\"omeunhwpvr.dq\"), (\"omeunh\")) == (std::string(\"omeunhwpvr.dq\"))' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string pref) {\n    if (text.find(pref) == 0) {\n        size_t n = pref.length();\n        size_t pos = text.find('.', n);\n        if (pos != std::string::npos) {\n            text = text.substr(pos + 1);\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"omeunhwpvr.dq\"), (\"omeunh\")) == (std::string(\"omeunhwpvr.dq\")));\n}\n\n\n",
        "answer": "(std::string(\"omeunhwpvr.dq\"))"
    },
    {
        "id": 69,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpx0clry56.cpp:3:\n/tmp/tmpx0clry56.cpp: In function ‘int main()’:\n/tmp/tmpx0clry56.cpp:25:103: error: unable to find numeric literal operator ‘operator\"\"afmfp’\n   25 |     assert(candidate((std::map<std::string,long>({{\"882afmfp\", 56}})), (\"6f53p\")) == (std::make_tuple(882afmfp, 56)));\n      |                                                                                                       ^~~~~~~~\n/tmp/tmpx0clry56.cpp:25:103: note: use ‘-fext-numeric-literals’ to enable more built-in suffixes\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_std_string{\n    long f0;\n    std::string f1;    Union_long_std_string(long _f0) : f0(_f0) {}\n    Union_long_std_string(std::string _f1) : f1(_f1) {}\n    ~Union_long_std_string() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(std::string f) {\n        return f1 == f ;\n    }\n};\nUnion_long_std_string f(std::map<std::string,long> student_marks, std::string name) {\n    if (student_marks.find(name) != student_marks.end()) {\n        long value = student_marks[name];\n        student_marks.erase(name);\n        return value;\n    }\n    return Union_long_std_string(\"Name unknown\");\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>({{\"882afmfp\", 56}})), (\"6f53p\")) == (std::make_tuple(882afmfp, 56)));\n}\n\n\n",
        "answer": "(std::make_tuple(882afmfp, 56))"
    },
    {
        "id": 70,
        "res": false,
        "error": "Exception",
        "error_message": "tmp399bb88c: /tmp/tmp399bb88c.cpp:15: int main(): Assertion `candidate((\"999893767522480\")) == (99989024)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string x) {\n    int a = 0;\n    std::stringstream ss(x);\n    std::string word;\n    while (ss >> word) {\n        a += word.size() * 2;\n    }\n    return a;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"999893767522480\")) == (99989024));\n}\n\n\n",
        "answer": "(99989024)"
    },
    {
        "id": 71,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp8o9k0_d7.cpp:3:\n/tmp/tmp8o9k0_d7.cpp: In function ‘int main()’:\n/tmp/tmp8o9k0_d7.cpp:14:93: error: no match for ‘operator==’ (operand types are ‘std::map<long int, long int>’ and ‘int’)\n   14 |     assert(candidate((std::map<long,long>({{1, 2}, {3, 4}, {5, 6}, {7, 8}, {9, 10}})), (1)) == (1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                           |\n      |                     std::map<long int, long int>                                                int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp8o9k0_d7.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp8o9k0_d7.cpp:3:\n/tmp/tmp8o9k0_d7.cpp:14:98: note:   ‘std::map<long int, long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((std::map<long,long>({{1, 2}, {3, 4}, {5, 6}, {7, 8}, {9, 10}})), (1)) == (1));\n      |              ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<long,long> f(std::map<long,long> d, long n) {\n    for(int i=0; i<n; i++) {\n        auto item = *d.rbegin();\n        d.erase(item.first);\n        d[item.second] = item.first;\n    }\n    return d;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,long>({{1, 2}, {3, 4}, {5, 6}, {7, 8}, {9, 10}})), (1)) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 72,
        "res": false,
        "error": "Exception",
        "error_message": "tmpiwr_afp_: /tmp/tmpiwr_afp_.cpp:14: int main(): Assertion `candidate((\"99\")) == (false)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text) {\n    for(char c : text) {\n        if (!std::isdigit(c)) {\n            return false;\n        }\n    }\n    return !text.empty();\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"99\")) == (false));\n}\n\n\n",
        "answer": "(false)"
    },
    {
        "id": 73,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpio0n_qa1.cpp:4:\n/tmp/tmpio0n_qa1.cpp: In function ‘int main()’:\n/tmp/tmpio0n_qa1.cpp:10:37: error: no match for ‘operator==’ (operand types are ‘std::tuple<long int, long int>’ and ‘int’)\n   10 |     assert(candidate((\"100010010\")) == (6, 4));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~\n      |                     |                    |\n      |                     |                    int\n      |                     std::tuple<long int, long int>\nIn file included from /usr/include/c++/11/regex:63,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:110,\n                 from /tmp/tmpio0n_qa1.cpp:4:\n/usr/include/c++/11/bits/regex.h:1059:5: note: candidate: ‘template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)’\n 1059 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/regex.h:1059:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpio0n_qa1.cpp:4:\n/tmp/tmpio0n_qa1.cpp:10:45: note:   ‘std::tuple<long int, long int>’ is not derived from ‘const std::__cxx11::sub_match<_BiIter>’\n   10 |     assert(candidate((\"100010010\")) == (6, 4));\n      |                                             ^\nIn file included from /usr/include/c++/11/regex:63,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:110,\n                 from /tmp/tmpio0n_qa1.cpp:4:\n/usr/include/c++/11/bits/regex.h:1155:5: note: candidate: ‘template<class _Bi_iter, class _Ch_traits, class _Ch_alloc> bool std::__cxx11::operator==(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits, _Ch_alloc>&, const ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::tuple<long, long> f(std::string row) {\n    return std::make_tuple(std::count(row.begin(), row.end(), '1'), std::count(row.begin(), row.end(), '0'));\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"100010010\")) == (6, 4));\n}\n\n\n",
        "answer": "(6, 4)"
    },
    {
        "id": 74,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmppgdd0vxj.cpp:3:\n/tmp/tmppgdd0vxj.cpp: In function ‘int main()’:\n/tmp/tmppgdd0vxj.cpp:10:136: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   10 |     assert(candidate((std::vector<long>({(long)44, (long)34, (long)23, (long)82, (long)24, (long)11, (long)63, (long)99})), (4), (15)) == (44));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                                                      |\n      |                     std::vector<long int>                                                                                                  int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmppgdd0vxj.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmppgdd0vxj.cpp:3:\n/tmp/tmppgdd0vxj.cpp:10:142: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iter",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> lst, long i, long n) {\n    lst.insert(lst.begin() + i, n);\n    return lst;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)44, (long)34, (long)23, (long)82, (long)24, (long)11, (long)63, (long)99})), (4), (15)) == (44));\n}\n\n\n",
        "answer": "(44)"
    },
    {
        "id": 75,
        "res": false,
        "error": "Exception",
        "error_message": "tmpog1zkam0: /tmp/tmpog1zkam0.cpp:10: int main(): Assertion `candidate((std::vector<long>({(long)-1, (long)2, (long)1, (long)-8, (long)2})), (2)) == (2)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> array, long elem) {\n    int ind = std::find(array.begin(), array.end(), elem) - array.begin();\n    return ind * 2 + array[array.size() - ind - 1] * 3;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)-1, (long)2, (long)1, (long)-8, (long)2})), (2)) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 76,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpwvkduhw8.cpp:3:\n/tmp/tmpwvkduhw8.cpp: In function ‘int main()’:\n/tmp/tmpwvkduhw8.cpp:28:100: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   28 |     assert(candidate((std::vector<long>({(long)10, (long)3, (long)2, (long)2, (long)6, (long)0}))) == (2, 3, 2, 2, 6, 0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~\n      |                     |                                                                                               |\n      |                     std::vector<long int>                                                                           int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpwvkduhw8.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpwvkduhw8.cpp:3:\n/tmp/tmpwvkduhw8.cpp:28:120: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   28 |     assert(candidate((std::vector<long>({(long)10,",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    std::vector<long> result;\n    for (auto y : nums) {\n        if (y > 0) {\n            result.push_back(y);\n        }\n    }\n    \n    if (result.size() <= 3) {\n        return result;\n    }\n    \n    std::reverse(result.begin(), result.end());\n    size_t half = result.size() / 2;\n    \n    std::vector<long> finalResult;\n    finalResult.insert(finalResult.end(), result.begin(), result.begin() + half);\n    finalResult.insert(finalResult.end(), 5, 0);\n    finalResult.insert(finalResult.end(), result.begin() + half, result.end());\n    \n    return finalResult;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)10, (long)3, (long)2, (long)2, (long)6, (long)0}))) == (2, 3, 2, 2, 6, 0));\n}\n\n\n",
        "answer": "(2, 3, 2, 2, 6, 0)"
    },
    {
        "id": 77,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp01ebkzrg.cpp:4:\n/tmp/tmp01ebkzrg.cpp: In function ‘int main()’:\n/tmp/tmp01ebkzrg.cpp:16:48: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   16 |     assert(candidate((\"h ,lpvvkohh,u\"), (\"i\")) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                              |\n      |                     |                              int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp01ebkzrg.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp01ebkzrg.cpp:4:\n/tmp/tmp01ebkzrg.cpp:16:53: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   16 |     assert(candidate((\"h ,lpvvkohh,u\"), (\"i\")) == (2));\n      |                                                     ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/sp",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string character) {\n    int pos = text.rfind(character);\n    if (pos != std::string::npos) {\n        std::string subject = text.substr(pos);\n        int count = std::count(text.begin(), text.end(), character[0]);\n        return subject.append(count-1, character[0]);\n    }\n    return \"\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"h ,lpvvkohh,u\"), (\"i\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 78,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmprvx9whny.cpp:4:\n/tmp/tmprvx9whny.cpp: In function ‘int main()’:\n/tmp/tmprvx9whny.cpp:11:159: error: expected ‘)’ before ‘]’ token\n   11 |     assert(candidate((\"mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n\")) == (std::transform(std::make_tuple(\"mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n)\"), \"mtywlrvoskzorke[ko[{n)\"])));\n      |                                                                               ~                                                                               ^\n/tmp/tmprvx9whny.cpp:11:159: error: expected ‘)’ before ‘]’ token\n   11 |     assert(candidate((\"mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n\")) == (std::transform(std::make_tuple(\"mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n)\"), \"mtywlrvoskzorke[ko[{n)\"])));\n      |                                                                ~                                                                                              ^\n/tmp/tmprvx9whny.cpp:11:163: error: expected ‘)’ before ‘;’ token\n   11 |     assert(candidate((\"mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n\")) == (std::transform(std::make_tuple(\"mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n)\"), \"mtywlrvoskzorke[ko[{n)\"])));\n      |                                                                                                                                                                   ^\n/tmp/tmprvx9whny.cpp:11:163: error: expected ‘)’ before ‘;’ token\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmprvx9whny.cpp:4:\n/tmp/tmprvx9whny.cpp:11:5: note: to match this ‘(’\n   11 |     assert(candidate((\"mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n\")) == (std::transform(std::make_tuple(\"mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n)\"), \"mtywlrvoskzorke[ko[{n)\"])));\n      |     ^~~~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::transform(text.begin(), text.end(), text.begin(), ::tolower);\n    return text.substr(0, 3);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n\")) == (std::transform(std::make_tuple(\"mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n)\"), \"mtywlrvoskzorke[ko[{n)\"])));\n}\n\n\n",
        "answer": "(std::transform(std::make_tuple(\"mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n)\"), \"mtywlrvoskzorke[ko[{n)\"]))"
    },
    {
        "id": 79,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpaqz_738y.cpp:3:\n/tmp/tmpaqz_738y.cpp: In function ‘int main()’:\n/tmp/tmpaqz_738y.cpp:23:90: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   23 |     assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4}))) == (1,2,3,4));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~\n      |                     |                                                                             |\n      |                     std::__cxx11::basic_string<char>                                              int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpaqz_738y.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpaqz_738y.cpp:3:\n/tmp/tmpaqz_738y.cpp:23:101: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   23 |     assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4}))) == (1,2,3,4));",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::vector<long> arr) {\n    arr.clear();\n    arr.push_back(1);\n    arr.push_back(2);\n    arr.push_back(3);\n    arr.push_back(4);\n\n    std::stringstream ss;\n    for (auto& num : arr) {\n        ss << num;\n        if (&num != &arr.back()) {\n            ss << \",\";\n        }\n    }\n    \n    return ss.str();\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)3, (long)4}))) == (1,2,3,4));\n}\n\n\n",
        "answer": "(1,2,3,4)"
    },
    {
        "id": 80,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp91bi8hkl.cpp:4:\n/tmp/tmp91bi8hkl.cpp: In function ‘int main()’:\n/tmp/tmp91bi8hkl.cpp:14:42: error: ‘ab’ was not declared in this scope; did you mean ‘abs’?\n   14 |     assert(candidate((\"ab        \")) == (ab));\n      |                                          ^~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s) {\n    s.erase(std::find_if(s.rbegin(), s.rend(), [](int ch) {\n        return !std::isspace(ch);\n    }).base(), s.end());\n    std::reverse(s.begin(), s.end());\n    return s;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ab        \")) == (ab));\n}\n\n\n",
        "answer": "(ab)"
    },
    {
        "id": 81,
        "res": 0
    },
    {
        "id": 82,
        "res": false,
        "error": "Exception",
        "error_message": "tmpgn95qq0p: /tmp/tmpgn95qq0p.cpp:9: int main(): Assertion `candidate((\"CJU\"), (\"BFS\"), (\"WBYDZPVES\"), (\"Y\")) == (\"\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string a, std::string b, std::string c, std::string d) {\n    return a.empty() ? c.empty() ? \"\" : d : b;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"CJU\"), (\"BFS\"), (\"WBYDZPVES\"), (\"Y\")) == (\"\"));\n}\n\n\n",
        "answer": "(\"\")"
    },
    {
        "id": 83,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpfxcj0brs.cpp:3:\n/tmp/tmpfxcj0brs.cpp: In function ‘int main()’:\n/tmp/tmpfxcj0brs.cpp:13:33: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   13 |     assert(candidate((\"qq0tt\")) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |               |\n      |                     |               int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpfxcj0brs.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpfxcj0brs.cpp:3:\n/tmp/tmpfxcj0brs.cpp:13:38: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   13 |     assert(candidate((\"qq0tt\")) == (3));\n      |                                      ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /u",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string l = text.substr(0, text.find_last_of('0'));\n    if (l.empty()) {\n        return \"-1:-1\";\n    }\n    return std::to_string(l.length()) + \":\" + std::to_string(l.find('0') + 1);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"qq0tt\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 84,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpzlhkfv3u.cpp:3:\n/tmp/tmpzlhkfv3u.cpp: In function ‘int main()’:\n/tmp/tmpzlhkfv3u.cpp:30:50: error: ‘ofme’ was not declared in this scope\n   30 |     assert(candidate((\"nwv mef ofme bdryl\")) == (ofme bdryl));\n      |                                                  ^~~~\n/tmp/tmpzlhkfv3u.cpp:30:55: error: expected ‘)’ before ‘bdryl’\n   30 |     assert(candidate((\"nwv mef ofme bdryl\")) == (ofme bdryl));\n      |                                                 ~     ^~~~~\n/tmp/tmpzlhkfv3u.cpp:30:62: error: expected ‘)’ before ‘;’ token\n   30 |     assert(candidate((\"nwv mef ofme bdryl\")) == (ofme bdryl));\n      |                                                              ^\n/tmp/tmpzlhkfv3u.cpp:30:62: error: expected ‘)’ before ‘;’ token\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpzlhkfv3u.cpp:3:\n/tmp/tmpzlhkfv3u.cpp:30:5: note: to match this ‘(’\n   30 |     assert(candidate((\"nwv mef ofme bdryl\")) == (ofme bdryl));\n      |     ^~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::istringstream iss(text);\n    std::vector<std::string> arr;\n    std::string word;\n    while (iss >> word) {\n        arr.push_back(word);\n    }\n\n    std::vector<std::string> result;\n    for (const auto& item : arr) {\n        if (item.find(\"day\") != std::string::npos && item.find(\"day\") == item.size() - 3) {\n            result.push_back(item + 'y');\n        } else {\n            result.push_back(item + \"day\");\n        }\n    }\n\n    std::string final_result;\n    for (const auto& item : result) {\n        final_result += item + \" \";\n    }\n    final_result.pop_back(); // remove the extra space at the end\n    return final_result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"nwv mef ofme bdryl\")) == (ofme bdryl));\n}\n\n\n",
        "answer": "(ofme bdryl)"
    },
    {
        "id": 85,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp3jtkr2zw.cpp:3:\n/tmp/tmp3jtkr2zw.cpp: In function ‘int main()’:\n/tmp/tmp3jtkr2zw.cpp:22:28: error: no match for ‘operator==’ (operand types are ‘std::vector<float>’ and ‘double’)\n   22 |     assert(candidate((12)) == (0.0, 3.0, 1.0));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~\n      |                     |                  |\n      |                     std::vector<float> double\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp3jtkr2zw.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp3jtkr2zw.cpp:3:\n/tmp/tmp3jtkr2zw.cpp:22:45: note:   ‘std::vector<float>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   22 |     assert(candidate((12)) == (0.0, 3.0, 1.0));\n      |                                             ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:",
        "code": "\n\n#include<bits/stdc++.h>\n\nstd::vector<float> f(long n) {\n    std::map<long, float> values = {{0, 3}, {1, 4.5}, {2, 0}};\n    std::map<long, long> res;\n    for (auto const &pair : values) {\n        if (pair.first % n != 2) {\n            res[pair.second] = n / 2;\n        }\n    }\n    std::vector<float> result;\n    for (auto const &pair : res) {\n        result.push_back(pair.first);\n    }\n    std::sort(result.begin(), result.end());\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((12)) == (0.0, 3.0, 1.0));\n}\n\n\n",
        "answer": "(0.0, 3.0, 1.0)"
    },
    {
        "id": 86,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpdfr4mg10.cpp:4:\n/tmp/tmpdfr4mg10.cpp: In function ‘int main()’:\n/tmp/tmpdfr4mg10.cpp:33:213: error: no match for ‘operator==’ (operand types are ‘Union_std_string_std_vector_std_string_’ and ‘int’)\n   33 |     assert(candidate((std::vector<std::string>({(std::string)\"sdfs\", (std::string)\"drcr\", (std::string)\"2e\"})), (std::vector<std::string>({(std::string)\"sdfs\", (std::string)\"dr2c\", (std::string)\"QWERTY\"})), (0)) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                                                                                                                   |\n      |                     Union_std_string_std_vector_std_string_                                                                                                                                                             int\n/tmp/tmpdfr4mg10.cpp:12:10: note: candidate: ‘bool Union_std_string_std_vector_std_string_::operator==(std::string)’\n   12 |     bool operator==(std::string f) {\n      |          ^~~~~~~~\n/tmp/tmpdfr4mg10.cpp:12:33: note:   no known conversion for argument 1 from ‘int’ to ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’}\n   12 |     bool operator==(std::string f) {\n      |                     ~~~~~~~~~~~~^\n/tmp/tmpdfr4mg10.cpp:15:10: note: candidate: ‘bool Union_std_string_std_vector_std_string_::operator==(std::vector<std::__cxx11::basic_string<char> >)’\n   15 |     bool operator==(std::vector<std::string> f) {\n      |          ^~~~~~~~\n/tmp/tmpdfr4mg10.cpp:15:46: note:   no known conversion for argument 1 from ‘int’ to ‘",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\n\nunion Union_std_string_std_vector_std_string_{\n    std::string f0;\n    std::vector<std::string> f1;\n    Union_std_string_std_vector_std_string_(std::string _f0) : f0(_f0) {}\n    Union_std_string_std_vector_std_string_(std::vector<std::string> _f1) : f1(_f1) {}\n    ~Union_std_string_std_vector_std_string_() {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }\n    bool operator==(std::vector<std::string> f) {\n        return f1 == f ;\n    }\n};\n\nUnion_std_string_std_vector_std_string_ f(std::vector<std::string> instagram, std::vector<std::string> imgur, long wins) {\n    std::vector<std::vector<std::string>> photos = {instagram, imgur};\n    if (instagram == imgur) {\n        return Union_std_string_std_vector_std_string_(std::to_string(wins));\n    }\n    if (wins == 1) {\n        return Union_std_string_std_vector_std_string_(photos.back());\n    } else {\n        std::reverse(photos.begin(), photos.end());\n        return Union_std_string_std_vector_std_string_(photos.back());\n    }}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"sdfs\", (std::string)\"drcr\", (std::string)\"2e\"})), (std::vector<std::string>({(std::string)\"sdfs\", (std::string)\"dr2c\", (std::string)\"QWERTY\"})), (0)) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 87,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpqskj_jz2.cpp:3:\n/tmp/tmpqskj_jz2.cpp: In function ‘int main()’:\n/tmp/tmpqskj_jz2.cpp:14:92: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   14 |     assert(candidate((std::vector<long>({(long)-1, (long)9, (long)3, (long)1, (long)-2}))) == (-2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                          |\n      |                     std::__cxx11::basic_string<char>                                           int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpqskj_jz2.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpqskj_jz2.cpp:3:\n/tmp/tmpqskj_jz2.cpp:14:98: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((std::vector<long>({(long)-1, (long)9, (long)3, (long)1, (long)-2}))) == (-2));\n      |        ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::vector<long> nums) {\n    std::reverse(nums.begin(), nums.end());\n    std::stringstream ss;\n    for (int num : nums) {\n        ss << num;\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)-1, (long)9, (long)3, (long)1, (long)-2}))) == (-2));\n}\n\n\n",
        "answer": "(-2)"
    },
    {
        "id": 88,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s1, std::string s2) {\n    if (s2.substr(s2.size() - s1.size()) == s1) {\n        s2 = s2.substr(0, s2.size() - s1.size());\n    }\n    return s2;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"he\"), (\"hello\")) == (\"hello\"));\n}\n\n\n",
        "answer": "(\"hello\")"
    },
    {
        "id": 89,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp6_5y9hmt.cpp:4:\n/tmp/tmp6_5y9hmt.cpp: In function ‘int main()’:\n/tmp/tmp6_5y9hmt.cpp:19:33: error: ‘None’ was not declared in this scope\n   19 |     assert(candidate((\"o\")) == (None));\n      |                                 ^~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string charac) {\n    std::string vowels = \"aeiouAEIOU\";\n    std::string char_str(1, charac[0]);\n    if (vowels.find(char_str) == std::string::npos) {\n        return \"None\";\n    }\n    if (std::isupper(charac[0])) {\n        return char_str;\n    }\n    std::transform(char_str.begin(), char_str.end(), char_str.begin(), ::toupper);\n    return char_str;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"o\")) == (None));\n}\n\n\n",
        "answer": "(None)"
    },
    {
        "id": 90,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp2ei1n41o.cpp:3:\n/tmp/tmp2ei1n41o.cpp: In function ‘int main()’:\n/tmp/tmp2ei1n41o.cpp:13:238: error: expected ‘)’ before numeric constant\n   13 |     assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>(), (std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3})}))) == (1 2 3));\n      |                                                                                                                                                                                                                                           ~  ^\n/tmp/tmp2ei1n41o.cpp:13:232: error: no match for ‘operator==’ (operand types are ‘std::vector<std::vector<long int> >’ and ‘int’)\n   13 |     assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>(), (std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3})}))) == (1 2 3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                                                                                                                                                      |\n      |                     std::vector<std::vector<long int> >                                                                                                                                                                                    int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::vector<long>> f(std::vector<std::vector<long>> array) {\n    std::vector<std::vector<long>> return_arr;\n    for (const auto& a : array) {\n        return_arr.push_back(a);\n    }\n    return return_arr;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>(), (std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3})}))) == (1 2 3));\n}\n\n\n",
        "answer": "(1 2 3)"
    },
    {
        "id": 91,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpwixgm5ox.cpp:4:\n/tmp/tmpwixgm5ox.cpp: In function ‘int main()’:\n/tmp/tmpwixgm5ox.cpp:18:36: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)\n   18 |     assert(candidate((\"12ab23xy\")) == (\"12\", \"x\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~\n      |                     |                      |\n      |                     |                      const char [2]\n      |                     std::vector<std::__cxx11::basic_string<char> >\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpwixgm5ox.cpp:4:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::__cxx11::basic_string<char> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpwixgm5ox.cpp:4:\n/tmp/tmpwixgm5ox.cpp",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::string s) {\n    std::vector<std::string> keys;\n    std::map<char, int> d;\n    for (char c : s) {\n        if (d.find(c) == d.end()) {\n            keys.push_back(std::string(1, c));\n            d[c] = 1;\n        }\n    }\n    return keys;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"12ab23xy\")) == (\"12\", \"x\"));\n}\n\n\n",
        "answer": "(\"12\", \"x\")"
    },
    {
        "id": 92,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /tmp/tmppu036swa.cpp:2:\n/tmp/tmppu036swa.cpp: In function ‘int main()’:\n/tmp/tmppu036swa.cpp:12:69: error: ‘True’ was not declared in this scope\n   12 |     assert(candidate((\"wW의IV]HDJjhgK[dGIUlVO@Ess$coZkBqu[Ct\")) == (True));\n      |                                                                     ^~~~\n",
        "code": "\n#include <cassert>\n#include <string>\n#include <algorithm>\n#include <cctype>\n\nbool f(std::string text) {\n    return std::all_of(text.begin(), text.end(), [](unsigned char c) { return isascii(c); });\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"wW의IV]HDJjhgK[dGIUlVO@Ess$coZkBqu[Ct\")) == (True));\n}\n\n\n",
        "answer": "(True)"
    },
    {
        "id": 93,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpq5t2q4zt.cpp:3:\n/tmp/tmpq5t2q4zt.cpp: In function ‘int main()’:\n/tmp/tmpq5t2q4zt.cpp:13:30: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   13 |     assert(candidate((\"iq\")) == (3));\n      |            ~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |            |\n      |                     |            int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpq5t2q4zt.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpq5t2q4zt.cpp:3:\n/tmp/tmpq5t2q4zt.cpp:13:35: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   13 |     assert(candidate((\"iq\")) == (3));\n      |                                   ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string n) {\n    int length = n.length() + 2;\n    std::vector<char> revn(n.begin(), n.end());\n    std::string result(revn.begin(), revn.end());\n    revn.clear();\n    return result + std::string(length, '!');\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"iq\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 94,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpj3nlrsta.cpp:3:\n/tmp/tmpj3nlrsta.cpp: In function ‘int main()’:\n/tmp/tmpj3nlrsta.cpp:13:118: error: no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, long int>’ and ‘int’)\n   13 |     assert(candidate((std::map<std::string,long>({{\"w\", 5}, {\"wi\", 10}})), (std::map<std::string,long>({{\"w\", 3}}))) == (5));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                    |\n      |                     std::map<std::__cxx11::basic_string<char>, long int>                                                 int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpj3nlrsta.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::pair<const std::__cxx11::basic_string<char>, long int> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   templ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,long> f(std::map<std::string,long> a, std::map<std::string,long> b) {\n    std::map<std::string, long> result = a;\n    for (const auto& pair : b) {\n        result[pair.first] = pair.second;\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>({{\"w\", 5}, {\"wi\", 10}})), (std::map<std::string,long>({{\"w\", 3}}))) == (5));\n}\n\n\n",
        "answer": "(5)"
    },
    {
        "id": 95,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpjhl718n0.cpp:3:\n/tmp/tmpjhl718n0.cpp: In function ‘int main()’:\n/tmp/tmpjhl718n0.cpp:13:80: error: ‘AAA’ was not declared in this scope\n   13 |     assert(candidate((std::map<std::string,std::string>({{\"AAA\", \"fr\"}}))) == (AAA, fr));\n      |                                                                                ^~~\n/tmp/tmpjhl718n0.cpp:13:85: error: ‘fr’ was not declared in this scope; did you mean ‘f’?\n   13 |     assert(candidate((std::map<std::string,std::string>({{\"AAA\", \"fr\"}}))) == (AAA, fr));\n      |                                                                                     ^~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,std::string> f(std::map<std::string,std::string> zoo) {\n    std::map<std::string, std::string> result;\n    for (const auto& pair : zoo) {\n        result[pair.second] = pair.first;\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,std::string>({{\"AAA\", \"fr\"}}))) == (AAA, fr));\n}\n\n\n",
        "answer": "(AAA, fr)"
    },
    {
        "id": 96,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpm_bgyu7w.cpp:3:\n/tmp/tmpm_bgyu7w.cpp: In function ‘int main()’:\n/tmp/tmpm_bgyu7w.cpp:9:38: error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n    9 |     assert(candidate((\"lunabotics\")) == (\"lunabotics\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text) {\n    return std::none_of(text.begin(), text.end(), [](char c){ return std::isupper(c); });\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"lunabotics\")) == (\"lunabotics\"));\n}\n\n\n",
        "answer": "(\"lunabotics\")"
    },
    {
        "id": 97,
        "res": false,
        "error": "Exception",
        "error_message": "tmpm_vqzk_q: /tmp/tmpm_vqzk_q.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)2, (long)0}))) == (0)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::vector<long> lst) {\n    lst.clear();\n    for (long i : lst) {\n        if (i == 3) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)2, (long)0}))) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 98,
        "res": false,
        "error": "Exception",
        "error_message": "tmpcho0m7kh: /tmp/tmpcho0m7kh.cpp:17: int main(): Assertion `candidate((\"SOME OF THIS Is uknowN!\")) == (2)' failed.\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string s) {\n    std::stringstream ss(s);\n    std::string word;\n    long count = 0;\n    while (ss >> word) {\n        if (std::isupper(word[0]) && std::all_of(word.begin() + 1, word.end(), ::islower)) \n            ++count;\n    }\n    return count;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"SOME OF THIS Is uknowN!\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 99,
        "res": false,
        "error": "Exception",
        "error_message": "tmp_1y29i9u: /tmp/tmp_1y29i9u.cpp:10: int main(): Assertion `candidate((\"aa+++bb\"), (\"+\"), (1)) == (\"aa___bb\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string sep, long num) {\n    std::size_t pos = text.find_last_of(sep);\n    return text.substr(0, pos) + \"___\" + text.substr(pos + 1);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"aa+++bb\"), (\"+\"), (1)) == (\"aa___bb\"));\n}\n\n\n",
        "answer": "(\"aa___bb\")"
    },
    {
        "id": 100,
        "res": 0
    },
    {
        "id": 101,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpzkspwdnz.cpp:4:\n/tmp/tmpzkspwdnz.cpp: In function ‘int main()’:\n/tmp/tmpzkspwdnz.cpp:11:83: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   11 |     assert(candidate((std::vector<long>({(long)-4, (long)1, (long)0})), (1), (4)) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                 |\n      |                     std::vector<long int>                                             int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpzkspwdnz.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpzkspwdnz.cpp:4:\n/tmp/tmpzkspwdnz.cpp:11:88: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   11 |     assert(candidate((std::vector<long>({(long)-4, (long)1, (long)0})), (1), (4)) == (0));\n      |                                                                              ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> array, int i_num, long elem) {\n    array.insert(array.begin() + i_num, elem);\n    return array;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)-4, (long)1, (long)0})), (1), (4)) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 102,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp9zz4s3w1.cpp:3:\n/tmp/tmp9zz4s3w1.cpp: In function ‘int main()’:\n/tmp/tmp9zz4s3w1.cpp:19:319: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   19 |     assert(candidate((std::vector<std::string>({(std::string)\"e\", (std::string)\"f\", (std::string)\"j\", (std::string)\"x\", (std::string)\"r\", (std::string)\"k\"})), (std::vector<std::string>({(std::string)\"a\", (std::string)\"v\", (std::string)\"2\", (std::string)\"im\", (std::string)\"nb\", (std::string)\"vj\", (std::string)\"z\"}))) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                                                                                                                                                                                                                             |\n      |                     std::vector<long int>                                                                                                                                                                                                                                                                                         int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp9zz4s3w1.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<std::string> names, std::vector<std::string> winners) {\n    std::vector<long> result;\n    for (const auto& name : names) {\n        auto it = std::find(winners.begin(), winners.end(), name);\n        if (it != winners.end()) {\n            result.push_back(std::distance(names.begin(), it));\n        }\n    }\n    \n    std::sort(result.rbegin(), result.rend());\n    \n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"e\", (std::string)\"f\", (std::string)\"j\", (std::string)\"x\", (std::string)\"r\", (std::string)\"k\"})), (std::vector<std::string>({(std::string)\"a\", (std::string)\"v\", (std::string)\"2\", (std::string)\"im\", (std::string)\"nb\", (std::string)\"vj\", (std::string)\"z\"}))) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 103,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s) {\n    std::transform(s.begin(), s.end(), s.begin(), [](unsigned char c){ return std::tolower(c); });\n    return s;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"abcDEFGhIJ\")) == (\"abcdefghij\"));\n}\n\n\n",
        "answer": "(\"abcdefghij\")"
    },
    {
        "id": 104,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp1kabiljp.cpp:3:\n/tmp/tmp1kabiljp.cpp: In function ‘int main()’:\n/tmp/tmp1kabiljp.cpp:18:29: error: no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, long int>’ and ‘int’)\n   18 |     assert(candidate((\"a\")) == (1));\n      |            ~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |           |\n      |                     |           int\n      |                     std::map<std::__cxx11::basic_string<char>, long int>\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmp1kabiljp.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::pair<const std::__cxx11::basic_string<char>, long int> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp1kabiljp.cpp:3:\n/tmp/tmp1kabiljp.cpp:18:34: note:   mismatched types ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,long> f(std::string text) {\n    std::map<std::string, long> dic;\n    for (char& c : text) {\n        dic[std::string(1, c)] = dic[std::string(1, c)] + 1;\n    }\n    for (auto& pair : dic) {\n        if (pair.second > 1) {\n            pair.second = 1;\n        }\n    }\n    return dic;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"a\")) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 105,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpxgqblw80.cpp:4:\n/tmp/tmpxgqblw80.cpp: In function ‘int main()’:\n/tmp/tmpxgqblw80.cpp:23:53: error: ‘P’ was not declared in this scope\n   23 |     assert(candidate((\"PermissioN is GRANTed\")) == (P));\n      |                                                     ^\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    for(int i = 0; i < text.size(); ++i)\n    {\n        if (i == 0 || !std::isalpha(text[i-1]))\n        {\n            if (std::islower(text[i]))\n                text[i] = std::toupper(text[i]);\n        }\n        else\n        {\n            if (std::isupper(text[i]))\n                text[i] = std::tolower(text[i]);\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"PermissioN is GRANTed\")) == (P));\n}\n\n\n",
        "answer": "(P)"
    },
    {
        "id": 106,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpznfxun3k.cpp:3:\n/tmp/tmpznfxun3k.cpp: In function ‘int main()’:\n/tmp/tmpznfxun3k.cpp:13:100: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   13 |     assert(candidate((std::vector<long>({(long)2, (long)8, (long)-2, (long)9, (long)3, (long)3}))) == (2, 4, 6, 8, 10));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~\n      |                     |                                                                                            |\n      |                     std::vector<long int>                                                                        int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpznfxun3k.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpznfxun3k.cpp:3:\n/tmp/tmpznfxun3k.cpp:13:118: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   13 |     assert(candidate((std::vector<long>({(long)2, (long)8, (",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    int count = nums.size();\n    for (int i = 0; i < count; i++) {\n        nums.insert(nums.begin() + i, nums[i]*2);\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)2, (long)8, (long)-2, (long)9, (long)3, (long)3}))) == (2, 4, 6, 8, 10));\n}\n\n\n",
        "answer": "(2, 4, 6, 8, 10)"
    },
    {
        "id": 107,
        "res": false,
        "error": "Exception",
        "error_message": "tmpob2djn6a: /tmp/tmpob2djn6a.cpp:19: int main(): Assertion `candidate((\"ua6hajq\")) == (\"Hello World\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (!isascii(text[i])) {\n            return \"\";\n        } else if (isalnum(text[i])) {\n            result += toupper(text[i]);\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ua6hajq\")) == (\"Hello World\"));\n}\n\n\n",
        "answer": "(\"Hello World\")"
    },
    {
        "id": 108,
        "res": true,
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\n#include <variant>\n\nusing var_t = std::variant<int, std::map<std::string, long>, std::vector<long>>;\n\nlong f(var_t var) {\n    long amount = 0;\n    if (std::holds_alternative<std::map<std::string, long>>(var)) {\n        amount = std::get<std::map<std::string, long>>(var).size();\n    } \n    else if (std::holds_alternative<std::vector<long>>(var)) {\n        amount = std::get<std::vector<long>>(var).size();\n    }\n    long nonzero = amount > 0 ? amount : 0;\n    return nonzero;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((1)) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 109,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpjgb6gal3.cpp:3:\n/tmp/tmpjgb6gal3.cpp: In function ‘int main()’:\n/tmp/tmpjgb6gal3.cpp:10:91: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   10 |     assert(candidate((std::vector<long>({(long)1, (long)0, (long)1, (long)1})), (0), (9)) == (1, 0, 1, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~\n      |                     |                                                                                |\n      |                     std::vector<long int>                                                            int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpjgb6gal3.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpjgb6gal3.cpp:3:\n/tmp/tmpjgb6gal3.cpp:10:105: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   10 |     assert(candidate((std::vector<long>({(long)1, (long)0, (long)1, (long)1})), (0), (9)) == (1, 0, 1, 1));\n   ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums, long spot, long idx) {\n    nums.insert(nums.begin() + spot, idx);\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)0, (long)1, (long)1})), (0), (9)) == (1, 0, 1, 1));\n}\n\n\n",
        "answer": "(1, 0, 1, 1)"
    },
    {
        "id": 110,
        "res": false,
        "error": "Exception",
        "error_message": "tmp9g9d8ibt: /tmp/tmp9g9d8ibt.cpp:19: int main(): Assertion `candidate((\"       \")) == (0)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    std::vector<std::string> a{\"\"};\n    std::string b = \"\";\n    for (char i : text) {\n        if (!std::isspace(i)) {\n            a.push_back(b);\n            b = \"\";\n        } else {\n            b += i;\n        }\n    }\n    return a.size();\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"       \")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 111,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp57pve4xm.cpp:3:\n/tmp/tmp57pve4xm.cpp: In function ‘int main()’:\n/tmp/tmp57pve4xm.cpp:20:129: error: no match for ‘operator==’ (operand types are ‘std::tuple<long int, long int>’ and ‘int’)\n   20 |     assert(candidate((std::map<std::string,long>({{\"x\", 67}, {\"v\", 89}, {\"\", 4}, {\"alij\", 11}, {\"kgfsd\", 72}, {\"yafby\", 83}}))) == (67));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                                               |\n      |                     std::tuple<long int, long int>                                                                                  int\nIn file included from /usr/include/c++/11/regex:63,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:110,\n                 from /tmp/tmp57pve4xm.cpp:3:\n/usr/include/c++/11/bits/regex.h:1059:5: note: candidate: ‘template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)’\n 1059 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/regex.h:1059:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp57pve4xm.cpp:3:\n/tmp/tmp57pve4xm.cpp:20:135: note:   ‘std::tuple<long int, long int>’ is not derived from ‘const std::__cxx11::sub_match<_BiIter>’\n   20 |     assert(candidate((std::map<std::string,long>({{\"x\", 67}, {\"v\", 89}, {\"\", 4}, {\"alij\", 11}, {\"kgfsd\", 72}, {\"yafby\", 83}}))) == (67));\n      |                                                     ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::tuple<long, long> f(std::map<std::string,long> marks) {\n    long highest = 0;\n    long lowest = 100;\n    for (const auto& pair : marks) {\n        long value = pair.second;\n        if (value > highest) {\n            highest = value;\n        }\n        if (value < lowest) {\n            lowest = value;\n        }\n    }\n    return std::make_tuple(highest, lowest);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>({{\"x\", 67}, {\"v\", 89}, {\"\", 4}, {\"alij\", 11}, {\"kgfsd\", 72}, {\"yafby\", 83}}))) == (67));\n}\n\n\n",
        "answer": "(67)"
    },
    {
        "id": 112,
        "res": 0
    },
    {
        "id": 113,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmplhr8fsn2.cpp:4:\n/tmp/tmplhr8fsn2.cpp: In function ‘int main()’:\n/tmp/tmplhr8fsn2.cpp:21:61: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   21 |     assert(candidate((\"987yhNSHAshd 93275yrgSgbgSshfbsfB\")) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                           |\n      |                     std::__cxx11::basic_string<char>            int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmplhr8fsn2.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmplhr8fsn2.cpp:4:\n/tmp/tmplhr8fsn2.cpp:21:66: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   21 |     assert(candidate((\"987yhNSHAshd 93275yrgSgbgSshfbsfB\")) == (3));\n      |                                                                  ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/inclu",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string line) {\n    int count = 0;\n    std::string a;\n    for (int i = 0; i < line.length(); i++) {\n        count += 1;\n        if (count%2==0) {\n            a.push_back(tolower(line[i]) == line[i] ? toupper(line[i]) : tolower(line[i]));\n        }\n        else {\n            a.push_back(line[i]);\n        }\n    }\n    return a;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"987yhNSHAshd 93275yrgSgbgSshfbsfB\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 114,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmptq_wgzom.cpp:3:\n/tmp/tmptq_wgzom.cpp: In function ‘int main()’:\n/tmp/tmptq_wgzom.cpp:22:46: error: ‘a’ was not declared in this scope\n   22 |     assert(candidate((\"a-.-.b\"), (\"-.\")) == (a-b));\n      |                                              ^\n/tmp/tmptq_wgzom.cpp:22:48: error: ‘b’ was not declared in this scope\n   22 |     assert(candidate((\"a-.-.b\"), (\"-.\")) == (a-b));\n      |                                                ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::string text, std::string sep) {\n    std::vector<std::string> result;\n    size_t pos = 0;\n    size_t found;\n    int maxsplit = 2;\n    \n    while ((found = text.find(sep, pos)) != std::string::npos && maxsplit > 0) {\n        result.push_back(text.substr(pos, found - pos));\n        pos = found + sep.length();\n        maxsplit--;\n    }\n    \n    result.push_back(text.substr(pos));\n\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"a-.-.b\"), (\"-.\")) == (a-b));\n}\n\n\n",
        "answer": "(a-b)"
    },
    {
        "id": 115,
        "res": false,
        "error": "Exception",
        "error_message": "tmpfxgs2fga: /tmp/tmpfxgs2fga.cpp:21: int main(): Assertion `candidate((\"os||agx5\")) == (\"agx5\")' failed.\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string res = \"\";\n    \n    for (char ch : text) {\n        if (ch == 61) {\n            break;\n        }\n        if (ch == 0) {\n            continue;\n        }\n        res += std::to_string((int)ch) + \"; \";\n    }\n    return \"b'\" + res + \"'\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"os||agx5\")) == (\"agx5\"));\n}\n\n\n",
        "answer": "(\"agx5\")"
    },
    {
        "id": 116,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpj32nuvye.cpp:4:\n/tmp/tmpj32nuvye.cpp: In function ‘int main()’:\n/tmp/tmpj32nuvye.cpp:16:54: error: no match for ‘operator==’ (operand types are ‘std::map<long int, long int>’ and ‘int’)\n   16 |     assert(candidate((std::map<long,long>()), (200)) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                    |\n      |                     std::map<long int, long int>         int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpj32nuvye.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpj32nuvye.cpp:4:\n/tmp/tmpj32nuvye.cpp:16:59: note:   ‘std::map<long int, long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   16 |     assert(candidate((std::map<long,long>()), (200)) == (0));\n      |                                                           ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<long,long> f(std::map<long,long> d, long count) {\n    for(long i = 0; i < count; i++){\n        if(d.empty()) {\n            break;\n        }\n        d.erase(std::prev(d.end()));\n    } \n    return d;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,long>()), (200)) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 117,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string numbers) {\n    for(int i = 0; i < numbers.length(); i++) {\n        if (std::count(numbers.begin(), numbers.end(), '3') > 1) {\n            return i;\n        }\n    }\n    return -1;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"23157\")) == (-1));\n}\n\n\n",
        "answer": "(-1)"
    },
    {
        "id": 118,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpr1yduhh2.cpp:3:\n/tmp/tmpr1yduhh2.cpp: In function ‘int main()’:\n/tmp/tmpr1yduhh2.cpp:19:49: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   19 |     assert(candidate((\"zbzquiuqnmfkx\"), (\"mk\")) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                               |\n      |                     |                               int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpr1yduhh2.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpr1yduhh2.cpp:3:\n/tmp/tmpr1yduhh2.cpp:19:54: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   19 |     assert(candidate((\"zbzquiuqnmfkx\"), (\"mk\")) == (2));\n      |                                                      ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/b",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string chars) {\n    int num_applies = 2;\n    std::string extra_chars = \"\";\n    for (int i = 0; i < num_applies; i++) {\n        extra_chars += chars;\n        size_t pos = text.find(extra_chars);\n        while (pos != std::string::npos) {\n            text.replace(pos, extra_chars.length(), \"\");\n            pos = text.find(extra_chars);\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"zbzquiuqnmfkx\"), (\"mk\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 119,
        "res": false,
        "error": "Exception",
        "error_message": "tmpzunisj_b: /tmp/tmpzunisj_b.cpp:17: int main(): Assertion `candidate((\"vsnlygltaw\")) == (\"vsNlyGlToAw\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (i % 2 == 0) {\n            result += std::toupper(text[i]);\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"vsnlygltaw\")) == (\"vsNlyGlToAw\"));\n}\n\n\n",
        "answer": "(\"vsNlyGlToAw\")"
    },
    {
        "id": 120,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpb6ibt028.cpp:3:\n/tmp/tmpb6ibt028.cpp: In function ‘int main()’:\n/tmp/tmpb6ibt028.cpp:16:65: error: expected primary-expression before ‘)’ token\n   16 |     assert(candidate((std::map<std::string,std::string>())) == ());\n      |                                                                 ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,std::vector<std::string>> f(std::map<std::string,std::string> countries) {\n    std::map<std::string, std::vector<std::string>> language_country;\n    for (const auto& pair : countries) {\n        if (language_country.find(pair.second) == language_country.end()) {\n            language_country[pair.second] = std::vector<std::string>();\n        }\n        language_country[pair.second].push_back(pair.first);\n    }\n    return language_country;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,std::string>())) == ());\n}\n\n\n",
        "answer": "()"
    },
    {
        "id": 121,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp9jri968r.cpp:3:\n/tmp/tmp9jri968r.cpp: In function ‘int main()’:\n/tmp/tmp9jri968r.cpp:28:34: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   28 |     assert(candidate((\"01,001\")) == (1));\n      |            ~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                |\n      |                     |                int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp9jri968r.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp9jri968r.cpp:3:\n/tmp/tmp9jri968r.cpp:28:39: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   28 |     assert(candidate((\"01,001\")) == (1));\n      |                                       ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 f",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s) {\n    std::string nums;\n    for(char c : s) {\n        if(std::isdigit(c)) {\n            nums.push_back(c);\n        }\n    }\n\n    if(nums.empty()) {\n        return \"none\";\n    }\n\n    std::istringstream iss(nums);\n    std::vector<int> numbers;\n    std::string num;\n    while(std::getline(iss, num, ',')) {\n        numbers.push_back(std::stoi(num));\n    }\n\n    int m = *std::max_element(numbers.begin(), numbers.end());\n    return std::to_string(m);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"01,001\")) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 122,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpa9ya7512.cpp:3:\n/tmp/tmpa9ya7512.cpp: In function ‘int main()’:\n/tmp/tmpa9ya7512.cpp:13:44: error: ‘no’ was not declared in this scope\n   13 |     assert(candidate((\"Nuva?dlfuyjys\")) == no);\n      |                                            ^~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string string) {\n    if (string.substr(0, 4) != \"Nuva\") {\n        return \"no\";\n    } else {\n        return string;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Nuva?dlfuyjys\")) == no);\n}\n\n\n",
        "answer": "no"
    },
    {
        "id": 123,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpvzwg9bql.cpp:3:\n/tmp/tmpvzwg9bql.cpp: In function ‘int main()’:\n/tmp/tmpvzwg9bql.cpp:14:95: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   14 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)5, (long)8})), (6)) == (6));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                             |\n      |                     std::vector<long int>                                                         int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpvzwg9bql.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpvzwg9bql.cpp:3:\n/tmp/tmpvzwg9bql.cpp:14:100: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)5, (long)8})), (6)) == (6));\n      |                 ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> array, long elem) {\n    for (int idx = 0; idx < array.size(); idx++) {\n        if (array[idx] > elem && array[idx - 1] < elem) {\n            array.insert(array.begin() + idx, elem);\n        }\n    }\n    return array;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)5, (long)8})), (6)) == (6));\n}\n\n\n",
        "answer": "(6)"
    },
    {
        "id": 124,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp9fyd6fkm.cpp:3:\n/tmp/tmp9fyd6fkm.cpp: In function ‘int main()’:\n/tmp/tmp9fyd6fkm.cpp:16:55: error: expected primary-expression before ‘long’\n   16 |     assert(candidate((\"i like you\"), (\" \"), (-1)) == (long));\n      |                                                       ^~~~\n/tmp/tmp9fyd6fkm.cpp:16:55: error: expected ‘)’ before ‘long’\n   16 |     assert(candidate((\"i like you\"), (\" \"), (-1)) == (long));\n      |                                                      ~^~~~\n/tmp/tmp9fyd6fkm.cpp:16:61: error: expected ‘)’ before ‘;’ token\n   16 |     assert(candidate((\"i like you\"), (\" \"), (-1)) == (long));\n      |                                                             ^\n/tmp/tmp9fyd6fkm.cpp:16:61: error: expected ‘)’ before ‘;’ token\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp9fyd6fkm.cpp:3:\n/tmp/tmp9fyd6fkm.cpp:16:5: note: to match this ‘(’\n   16 |     assert(candidate((\"i like you\"), (\" \"), (-1)) == (long));\n      |     ^~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string txt, std::string sep, long sep_count) {\n    std::string o = \"\";\n    while (sep_count > 0 && txt.find(sep) != std::string::npos) {\n        size_t pos = txt.find_last_of(sep);\n        o += txt.substr(0, pos + 1);\n        txt = txt.substr(pos + 1);\n        sep_count--;\n    }\n    return o + txt;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"i like you\"), (\" \"), (-1)) == (long));\n}\n\n\n",
        "answer": "(long)"
    },
    {
        "id": 125,
        "res": 0
    },
    {
        "id": 126,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp6r6_snhc.cpp:4:\n/tmp/tmp6r6_snhc.cpp: In function ‘int main()’:\n/tmp/tmp6r6_snhc.cpp:26:37: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘std::string(std::string)’ {aka ‘std::__cxx11::basic_string<char>(std::__cxx11::basic_string<char>)’})\n   26 |     assert(candidate((\"kkxkxxfck\")) == (f));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                   |\n      |                     |                   std::string(std::string) {aka std::__cxx11::basic_string<char>(std::__cxx11::basic_string<char>)}\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp6r6_snhc.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp6r6_snhc.cpp:4:\n/tmp/tmp6r6_snhc.cpp:26:42: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   26 |     assert(candidate((\"kkxkxxfck\")) == (f));\n      |                               ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string s = text;\n    std::string::size_type i = s.rfind('o');\n\n    if (i == std::string::npos) {\n        return \"-\" + s;\n    }\n\n    std::string div = s.substr(0, i);\n    std::string div2 = s.substr(i+1);\n\n    if(div.empty())\n        div = \"-\";\n    \n    if(div2.empty())\n        div2 = \"-\";\n\n    return s[i] + div + s[i] + div2;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"kkxkxxfck\")) == (f));\n}\n\n\n",
        "answer": "(f)"
    },
    {
        "id": 127,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    std::stringstream ss(text);\n    std::string line;\n    int count = 0;\n    while (std::getline(ss, line, '\\n')) {\n        count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"145\\n\\n12fjkjg\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 128,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp5qt7reap.cpp:3:\n/tmp/tmp5qt7reap.cpp: In function ‘int main()’:\n/tmp/tmp5qt7reap.cpp:19:39: error: ‘mammoth’ was not declared in this scope\n   19 |     assert(candidate((\"Mammoth\")) == (mammoth));\n      |                                       ^~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string odd = \"\";\n    std::string even = \"\";\n    for (int i = 0; i < text.size(); i++) {\n        if (i % 2 == 0) {\n            even += text[i];\n        } else {\n            odd += text[i];\n        }\n    }\n    std::transform(odd.begin(), odd.end(), odd.begin(), ::tolower);\n    return even + odd;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Mammoth\")) == (mammoth));\n}\n\n\n",
        "answer": "(mammoth)"
    },
    {
        "id": 129,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpckju_9co.cpp:3:\n/tmp/tmpckju_9co.cpp: In function ‘int main()’:\n/tmp/tmpckju_9co.cpp:14:64: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   14 |     assert(candidate((\"ONBPICJOHRHDJOSNCPNJ9ONTHBQCJ\"), (\"J\")) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                              |\n      |                     std::vector<long int>                          int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpckju_9co.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpckju_9co.cpp:3:\n/tmp/tmpckju_9co.cpp:14:69: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((\"ONBPICJOHRHDJOSNCPNJ9ONTHBQCJ\"), (\"J\")) == (0));\n      |                                                                     ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::string text, std::string search_string) {\n    std::vector<long> indexes;\n    while (text.find(search_string) != std::string::npos) {\n        indexes.push_back(text.rfind(search_string));\n        text = text.substr(0, text.rfind(search_string));\n    }\n    return indexes;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ONBPICJOHRHDJOSNCPNJ9ONTHBQCJ\"), (\"J\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 130,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpdatyj4xs.cpp:4:\n/tmp/tmpdatyj4xs.cpp: In function ‘int main()’:\n/tmp/tmpdatyj4xs.cpp:23:88: error: ‘l’ was not declared in this scope\n   23 |     assert(candidate((std::map<std::string,long>({{\"l\", 4}, {\"h\", 6}, {\"o\", 9}}))) == (l=9, h=6, o=4));\n      |                                                                                        ^\n/tmp/tmpdatyj4xs.cpp:23:93: error: ‘h’ was not declared in this scope\n   23 |     assert(candidate((std::map<std::string,long>({{\"l\", 4}, {\"h\", 6}, {\"o\", 9}}))) == (l=9, h=6, o=4));\n      |                                                                                             ^\n/tmp/tmpdatyj4xs.cpp:23:98: error: ‘o’ was not declared in this scope\n   23 |     assert(candidate((std::map<std::string,long>({{\"l\", 4}, {\"h\", 6}, {\"o\", 9}}))) == (l=9, h=6, o=4));\n      |                                                                                                  ^\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\n\nstd::string f(std::map<std::string,long> m) {\n    std::vector<std::pair<std::string, long>> items(m.begin(), m.end());\n    for (int i = items.size() - 2; i >= 0; --i) {\n        auto tmp = items[i];\n        items[i] = items[i+1];\n        items[i+1] = tmp;\n    }\n    std::stringstream ss;\n    if (items.size() % 2 == 0) {\n        ss << items[items.size() - 1].first << \"=\" << items[items.size() - 2].first;\n    } else {\n        ss << items[items.size() - 2].first << \"=\" << items[items.size() - 1].first;\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>({{\"l\", 4}, {\"h\", 6}, {\"o\", 9}}))) == (l=9, h=6, o=4));\n}\n\n\n",
        "answer": "(l=9, h=6, o=4)"
    },
    {
        "id": 131,
        "res": false,
        "error": "Exception",
        "error_message": "tmpcw9vpfvr: /tmp/tmpcw9vpfvr.cpp:19: int main(): Assertion `candidate((\"a\\nkgf\\nasd\\n\")) == (3)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    int a = text.length();\n    int count = 0;\n    while (!text.empty()) {\n        if (text.substr(0, 1) == \"a\") {\n            count += text.find(' ');\n        } else {\n            count += text.find('\\n');\n        }\n        text = text.substr(text.find('\\n')+1, a+1);\n    }\n    return count;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"a\\nkgf\\nasd\\n\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 132,
        "res": 0
    },
    {
        "id": 133,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpeh_6pgj4.cpp:3:\n/tmp/tmpeh_6pgj4.cpp: In function ‘int main()’:\n/tmp/tmpeh_6pgj4.cpp:14:155: error: expected ‘)’ before numeric constant\n   14 |     assert(candidate((std::vector<long>({(long)7, (long)1, (long)2, (long)6, (long)0, (long)2})), (std::vector<long>({(long)9, (long)0, (long)3}))) == (7 6 0 2 9 2));\n      |                                                                                                                                                        ~  ^\n/tmp/tmpeh_6pgj4.cpp:14:149: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   14 |     assert(candidate((std::vector<long>({(long)7, (long)1, (long)2, (long)6, (long)0, (long)2})), (std::vector<long>({(long)9, (long)0, (long)3}))) == (7 6 0 2 9 2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                                                                   |\n      |                     std::vector<long int>                                                                                                               int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpeh_6pgj4.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums, std::vector<long> elements) {\n    std::vector<long> result;\n    for (int i = 0; i < elements.size(); i++) {\n        result.push_back(nums.back());\n        nums.pop_back();\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)7, (long)1, (long)2, (long)6, (long)0, (long)2})), (std::vector<long>({(long)9, (long)0, (long)3}))) == (7 6 0 2 9 2));\n}\n\n\n",
        "answer": "(7 6 0 2 9 2)"
    },
    {
        "id": 134,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp7sz997sx.cpp:3:\n/tmp/tmp7sz997sx.cpp: In function ‘int main()’:\n/tmp/tmp7sz997sx.cpp:30:32: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   30 |     assert(candidate((372359)) == (372359));\n      |            ~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~\n      |                     |              |\n      |                     |              int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp7sz997sx.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp7sz997sx.cpp:3:\n/tmp/tmp7sz997sx.cpp:30:42: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   30 |     assert(candidate((372359)) == (372359));\n      |                                          ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n          ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(long n) {\n    int t = 0;\n    std::string b = \"\";\n    std::vector<int> digits;\n    std::string n_str = std::to_string(n);\n    for (char c : n_str) {\n        digits.push_back(c - '0');\n    }\n\n    for (int d : digits) {\n        if (d == 0) {\n            t++;\n        } else {\n            break;\n        }\n    }\n\n    for (int i = 0; i < t; i++) {\n        b += \"104\";\n    }\n\n    b += std::to_string(n);\n    return b;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((372359)) == (372359));\n}\n\n\n",
        "answer": "(372359)"
    },
    {
        "id": 135,
        "res": 0
    },
    {
        "id": 136,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp8zaw8wvb.cpp:4:\n/tmp/tmp8zaw8wvb.cpp: In function ‘int main()’:\n/tmp/tmp8zaw8wvb.cpp:22:47: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   22 |     assert(candidate((\"a\\nbc\\n\\nd\\nef\"), (5)) == (5));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                             |\n      |                     |                             int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp8zaw8wvb.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp8zaw8wvb.cpp:4:\n/tmp/tmp8zaw8wvb.cpp:22:52: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   22 |     assert(candidate((\"a\\nbc\\n\\nd\\nef\"), (5)) == (5));\n      |                                                    ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long width) {\n    std::istringstream iss(text);\n    std::vector<std::string> lines;\n    for (std::string line; std::getline(iss, line); ) {\n        std::string centered_line = std::string(width, ' ');\n        centered_line.replace(width/2, line.length(), line);\n        lines.push_back(centered_line);\n    }\n    std::string result;\n    for (const auto& line : lines) {\n        result += line + '\\n';\n    }\n    result.pop_back();  // remove the last newline\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"a\\nbc\\n\\nd\\nef\"), (5)) == (5));\n}\n\n\n",
        "answer": "(5)"
    },
    {
        "id": 137,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpteo0b9mf.cpp:4:\n/tmp/tmpteo0b9mf.cpp: In function ‘int main()’:\n/tmp/tmpteo0b9mf.cpp:19:99: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   19 |     assert(candidate((std::vector<long>({(long)3, (long)2, (long)0, (long)0, (long)2, (long)3}))) == (3, 2, 0, 0, 2, 3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~\n      |                     |                                                                                              |\n      |                     std::vector<long int>                                                                          int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpteo0b9mf.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpteo0b9mf.cpp:4:\n/tmp/tmpteo0b9mf.cpp:19:119: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   19 |     assert(candidate((std::vector<long>({(long)3, (long",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    int count = 0;\n    while(!nums.empty()) {\n        if(count % 2 == 0) {\n            nums.pop_back();\n        } else {\n            nums.erase(nums.begin());\n        }\n        count++;\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)0, (long)0, (long)2, (long)3}))) == (3, 2, 0, 0, 2, 3));\n}\n\n\n",
        "answer": "(3, 2, 0, 0, 2, 3)"
    },
    {
        "id": 138,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp5rmwv8xw.cpp:3:\n/tmp/tmp5rmwv8xw.cpp: In function ‘int main()’:\n/tmp/tmp5rmwv8xw.cpp:15:51: error: ‘omn’ was not declared in this scope\n   15 |     assert(candidate((\"tflb omn rtt\"), (\"m\")) == (omn));\n      |                                                   ^~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string chars) {\n    std::vector<char> listchars(chars.begin(), chars.end());\n    char first = listchars.back();\n    listchars.pop_back();\n    for (char i : listchars) {\n        text = text.substr(0, text.find(i)) + i + text.substr(text.find(i) + 1);\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"tflb omn rtt\"), (\"m\")) == (omn));\n}\n\n\n",
        "answer": "(omn)"
    },
    {
        "id": 139,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpt04pzau3.cpp:3:\n/tmp/tmpt04pzau3.cpp: In function ‘int main()’:\n/tmp/tmpt04pzau3.cpp:29:122: error: no match for ‘operator==’ (operand types are ‘Union_std_string_std_vector_long_’ and ‘int’)\n   29 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)1})), (std::vector<long>({(long)1, (long)1, (long)2}))) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                        |\n      |                     Union_std_string_std_vector_long_                                                                        int\n/tmp/tmpt04pzau3.cpp:9:10: note: candidate: ‘bool Union_std_string_std_vector_long_::operator==(std::string)’\n    9 |     bool operator==(std::string f) {\n      |          ^~~~~~~~\n/tmp/tmpt04pzau3.cpp:9:33: note:   no known conversion for argument 1 from ‘int’ to ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’}\n    9 |     bool operator==(std::string f) {\n      |                     ~~~~~~~~~~~~^\n/tmp/tmpt04pzau3.cpp:11:15: note: candidate: ‘bool Union_std_string_std_vector_long_::operator==(std::vector<long int>)’\n   11 |     }    bool operator==(std::vector<long> f) {\n      |               ^~~~~~~~\n/tmp/tmpt04pzau3.cpp:11:44: note:   no known conversion for argument 1 from ‘int’ to ‘std::vector<long int>’\n   11 |     }    bool operator==(std::vector<long> f) {\n      |                          ~~~~~~~~~~~~~~~~~~^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_std_vector_long_{\n    std::string f0;\n    std::vector<long> f1;    Union_std_string_std_vector_long_(std::string _f0) : f0(_f0) {}\n    Union_std_string_std_vector_long_(std::vector<long> _f1) : f1(_f1) {}\n    ~Union_std_string_std_vector_long_() {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }    bool operator==(std::vector<long> f) {\n        return f1 == f ;\n    }\n};\nUnion_std_string_std_vector_long_ f(std::vector<long> first, std::vector<long> second) {\n    if(first.size() < 10 || second.size() < 10) {\n        return Union_std_string_std_vector_long_(\"no\");\n    }\n    for(int i = 0; i < 5; i++) {\n        if(first[i] != second[i]) {\n            return Union_std_string_std_vector_long_(\"no\");\n        }\n    }\n    first.insert(first.end(), second.begin(), second.end());\n    return Union_std_string_std_vector_long_(first);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1})), (std::vector<long>({(long)1, (long)1, (long)2}))) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 140,
        "res": false,
        "error": "Exception",
        "error_message": "tmp_3iudgaz: /tmp/tmp_3iudgaz.cpp:13: int main(): Assertion `candidate((\"Hi there\")) == (\"Hi there\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string st) {\n    if (st.substr(0, st.find_last_of('h') + 1) >= st.substr(0, st.find_last_of('i') + 1)) {\n        return \"Hey\";\n    } else {\n        return \"Hi\";\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Hi there\")) == (\"Hi there\"));\n}\n\n\n",
        "answer": "(\"Hi there\")"
    },
    {
        "id": 141,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpmfd6xcvq.cpp:3:\n/tmp/tmpmfd6xcvq.cpp: In function ‘int main()’:\n/tmp/tmpmfd6xcvq.cpp:13:250: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   13 |     assert(candidate((std::vector<std::string>({(std::string)\"k\", (std::string)\"x\", (std::string)\"c\", (std::string)\"x\", (std::string)\"x\", (std::string)\"b\", (std::string)\"l\", (std::string)\"f\", (std::string)\"r\", (std::string)\"n\", (std::string)\"g\"}))) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                                                                                                                                                        |\n      |                     std::vector<long int>                                                                                                                                                                                                                    int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpmfd6xcvq.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<std::string> li) {\n    std::vector<long> result;\n    for (const auto& i : li) {\n        result.push_back(std::count(li.begin(), li.end(), i));\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"k\", (std::string)\"x\", (std::string)\"c\", (std::string)\"x\", (std::string)\"x\", (std::string)\"b\", (std::string)\"l\", (std::string)\"f\", (std::string)\"r\", (std::string)\"n\", (std::string)\"g\"}))) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 142,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string x) {\n    if(std::all_of(x.begin(), x.end(), ::islower)) {\n        return x;\n    } else {\n        std::reverse(x.begin(), x.end());\n        return x;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ykdfhp\")) == (\"ykdfhp\"));\n}\n\n\n",
        "answer": "(\"ykdfhp\")"
    },
    {
        "id": 143,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpom5dc6mq.cpp:3:\n/usr/include/c++/11/bits/stl_algobase.h: In instantiation of ‘static bool std::__equal<_BoolType>::equal(_II1, _II1, _II2) [with _II1 = const char*; _II2 = int; bool _BoolType = false]’:\n/usr/include/c++/11/bits/stl_algobase.h:1211:43:   required from ‘bool std::__equal_aux1(_II1, _II1, _II2) [with _II1 = const char*; _II2 = int]’\n/usr/include/c++/11/bits/stl_algobase.h:1219:31:   required from ‘bool std::__equal_aux(_II1, _II1, _II2) [with _II1 = const char*; _II2 = int]’\n/usr/include/c++/11/bits/stl_algobase.h:1556:30:   required from ‘bool std::equal(_II1, _II1, _II2) [with _II1 = const char*; _II2 = int]’\n/tmp/tmpom5dc6mq.cpp:11:5:   required from here\n/usr/include/c++/11/bits/stl_algobase.h:1162:32: error: invalid type argument of unary ‘*’ (have ‘int’)\n 1162 |             if (!(*__first1 == *__first2))\n      |                                ^~~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string s, std::string n) {\n    return std::equal(s.begin(), s.end(), n.begin(), n.end(), [](char a, char b) {\n        return std::tolower(a) == std::tolower(b);\n    });\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"daaX\"), (\"daaX\")) == (std::equal(\"daaX\", \"daaX\", 8)));\n}\n\n\n",
        "answer": "(std::equal(\"daaX\", \"daaX\", 8))"
    },
    {
        "id": 144,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpakcz8d_x.cpp:3:\n/tmp/tmpakcz8d_x.cpp: In function ‘int main()’:\n/tmp/tmpakcz8d_x.cpp:14:62: error: expected primary-expression before ‘)’ token\n   14 |     assert(candidate((std::vector<std::vector<long>>())) == ());\n      |                                                              ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::vector<long>> f(std::vector<std::vector<long>> vectors) {\n    std::vector<std::vector<long>> sorted_vecs;\n    for(auto& vec : vectors) {\n        std::sort(vec.begin(), vec.end());\n        sorted_vecs.push_back(vec);\n    }\n    return sorted_vecs;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::vector<long>>())) == ());\n}\n\n\n",
        "answer": "()"
    },
    {
        "id": 145,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nfloat f(float price, std::string product) {\n    std::vector<std::string> inventory = {\"olives\", \"key\", \"orange\"};\n    if (std::find(inventory.begin(), inventory.end(), product) == inventory.end()) {\n        return price;\n    } else {\n        price *= 0.85;\n        inventory.erase(std::remove(inventory.begin(), inventory.end(), product), inventory.end());\n    }\n    return price;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((8.5f), (\"grapes\")) == (8.5));\n}\n\n\n",
        "answer": "(8.5)"
    },
    {
        "id": 146,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp92mcix76.cpp:3:\n/tmp/tmp92mcix76.cpp: In function ‘int main()’:\n/tmp/tmp92mcix76.cpp:15:27: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   15 |     assert(candidate((5)) == (1, 2, 3, 4, 5, 6, 7, 8, 9, 10));\n      |            ~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                  |\n      |                     std::vector<long int>              int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp92mcix76.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp92mcix76.cpp:3:\n/tmp/tmp92mcix76.cpp:15:60: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   15 |     assert(candidate((5)) == (1, 2, 3, 4, 5, 6, 7, 8, 9, 10));\n      |                                                            ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(long single_digit) {\n    std::vector<long> result;\n    for (int c = 1; c < 11; c++) {\n        if (c != single_digit) {\n            result.push_back(c);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((5)) == (1, 2, 3, 4, 5, 6, 7, 8, 9, 10));\n}\n\n\n",
        "answer": "(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)"
    },
    {
        "id": 147,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpwlfpd42h.cpp:3:\n/tmp/tmpwlfpd42h.cpp: In function ‘int main()’:\n/tmp/tmpwlfpd42h.cpp:12:78: error: expected ‘)’ before numeric constant\n   12 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)1}))) == (1 1 1));\n      |                                                                           ~  ^\n/tmp/tmpwlfpd42h.cpp:12:72: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   12 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)1}))) == (1 1 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                      |\n      |                     std::vector<long int>                                  int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpwlfpd42h.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpwlfpd42h.cpp:3:\n/tmp/tmpwlfpd42h.cpp:12:5: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_itera",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    size_t middle = nums.size() / 2;\n    std::vector<long> result(nums.begin() + middle, nums.end());\n    result.insert(result.end(), nums.begin(), nums.begin() + middle);\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)1}))) == (1 1 1));\n}\n\n\n",
        "answer": "(1 1 1)"
    },
    {
        "id": 148,
        "res": false,
        "error": "Exception",
        "error_message": "tmp_rph_vdh: /tmp/tmp_rph_vdh.cpp:18: int main(): Assertion `candidate((\"2imo 12 tfiqr.\"), (\"m\")) == (\"2im12tfiqr.\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string forest, std::string animal) {\n    size_t index = forest.find(animal);\n    std::string result = forest;\n    while (index < forest.size() - 1) {\n        result[index] = forest[index + 1];\n        index++;\n    }\n    if (index == forest.size() - 1) {\n        result[index] = '-';\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"2imo 12 tfiqr.\"), (\"m\")) == (\"2im12tfiqr.\"));\n}\n\n\n",
        "answer": "(\"2im12tfiqr.\")"
    },
    {
        "id": 149,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpqe9a59jk.cpp:4:\n/tmp/tmpqe9a59jk.cpp: In function ‘int main()’:\n/tmp/tmpqe9a59jk.cpp:20:77: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   20 |     assert(candidate((std::make_tuple(32332, 23543, 132323, 33300)), (\",\")) == (3, 2, 1, 3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~\n      |                     |                                                                  |\n      |                     std::__cxx11::basic_string<char>                                   int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpqe9a59jk.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpqe9a59jk.cpp:4:\n/tmp/tmpqe9a59jk.cpp:20:91: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   20 |     assert(candidate((std::make_tuple(32332, 23543, 132323, 33300)), (\",\")) == (3, 2, 1, 3));\n      |                                             ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\n\nstd::string f(std::tuple<long, long, long, long> tuple_list, std::string joint) {\n    std::string string = \"\";\n    auto append_to_string = [&](auto num) {\n        std::unordered_map<char, int> dict;\n        for (char c : std::to_string(num)) {\n            dict[c] = 1;\n        }\n        string += dict.begin()->first + joint;\n    };\n    std::apply([&](auto... nums) { (append_to_string(nums), ...); }, tuple_list);\n    return string;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::make_tuple(32332, 23543, 132323, 33300)), (\",\")) == (3, 2, 1, 3));\n}\n\n\n",
        "answer": "(3, 2, 1, 3)"
    },
    {
        "id": 150,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpq42y2rbd.cpp:4:\n/tmp/tmpq42y2rbd.cpp: In function ‘int main()’:\n/tmp/tmpq42y2rbd.cpp:14:79: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   14 |     assert(candidate((std::vector<long>({(long)-2, (long)4, (long)-4})), (0)) == (-2, 4, -4));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~\n      |                     |                                                                  |\n      |                     std::vector<long int>                                              int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpq42y2rbd.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpq42y2rbd.cpp:4:\n/tmp/tmpq42y2rbd.cpp:14:92: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((std::vector<long>({(long)-2, (long)4, (long)-4})), (0)) == (-2, 4, -4));\n      |                                                                ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> numbers, long index) {\n    for (long n : std::vector<long>(numbers.begin() + index, numbers.end())) {\n        numbers.insert(numbers.begin() + index, n);\n        index += 1;\n    }\n    return std::vector<long>(numbers.begin(), numbers.begin() + index);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)-2, (long)4, (long)-4})), (0)) == (-2, 4, -4));\n}\n\n\n",
        "answer": "(-2, 4, -4)"
    },
    {
        "id": 151,
        "res": 0
    },
    {
        "id": 152,
        "res": false,
        "error": "Exception",
        "error_message": "tmp8i2umduu: /tmp/tmp8i2umduu.cpp:16: int main(): Assertion `candidate((\"AAAAAAAAAAAAAAAAAAAA\")) == (10)' failed.\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    long n = 0;\n    for (char i : text) {\n        if (std::isupper(i)) {\n            n += 1;\n        }\n    }\n    return n;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"AAAAAAAAAAAAAAAAAAAA\")) == (10));\n}\n\n\n",
        "answer": "(10)"
    },
    {
        "id": 153,
        "res": false,
        "error": "Exception",
        "error_message": "tmp794uajkw: /tmp/tmp794uajkw.cpp:10: int main(): Assertion `candidate((\"friends and love\"), (\"and\"), (3)) == (3)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text, std::string suffix, long num) {\n    std::string str_num = std::to_string(num);\n    return text.substr(text.length() - suffix.length() - str_num.length()) == suffix + str_num;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"friends and love\"), (\"and\"), (3)) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 154,
        "res": false,
        "error": "Exception",
        "error_message": "tmpkdilxbec: /tmp/tmpkdilxbec.cpp:25: int main(): Assertion `candidate((\"Hello There\"), (\"*\")) == (\"Hello There\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s, std::string c) {\n    std::istringstream iss(s);\n    std::vector<std::string> tokens;\n    std::string token;\n    while (std::getline(iss, token, ' ')) {\n        tokens.push_back(token);\n    }\n    std::reverse(tokens.begin(), tokens.end());\n    \n    std::string result = c + \"  \";\n    for (size_t i = 0; i < tokens.size(); ++i) {\n        if (i != 0) {\n            result += \"  \";\n        }\n        result += tokens[i];\n    }\n\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Hello There\"), (\"*\")) == (\"Hello There\"));\n}\n\n\n",
        "answer": "(\"Hello There\")"
    },
    {
        "id": 155,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp7yx9fmpo.cpp:3:\n/tmp/tmp7yx9fmpo.cpp: In function ‘int main()’:\n/tmp/tmp7yx9fmpo.cpp:19:52: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   19 |     assert(candidate((\"dskjs hjcdjnxhjicnn\"), (4)) == (4));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                  |\n      |                     std::__cxx11::basic_string<char>   int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp7yx9fmpo.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp7yx9fmpo.cpp:3:\n/tmp/tmp7yx9fmpo.cpp:19:57: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   19 |     assert(candidate((\"dskjs hjcdjnxhjicnn\"), (4)) == (4));\n      |                                                         ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /us",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string ip, long n) {\n    int i = 0;\n    std::string out = \"\";\n    for (char c : ip) {\n        if (i == n) {\n            out += '\\n';\n            i = 0;\n        }\n        i++;\n        out += c;\n    }\n    return out;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"dskjs hjcdjnxhjicnn\"), (4)) == (4));\n}\n\n\n",
        "answer": "(4)"
    },
    {
        "id": 156,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp2n_vrk72.cpp:4:\n/tmp/tmp2n_vrk72.cpp: In function ‘int main()’:\n/tmp/tmp2n_vrk72.cpp:16:45: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   16 |     assert(candidate((\"tqzym\"), (5), (\"c\")) == (5));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                           |\n      |                     |                           int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp2n_vrk72.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp2n_vrk72.cpp:4:\n/tmp/tmp2n_vrk72.cpp:16:50: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   16 |     assert(candidate((\"tqzym\"), (5), (\"c\")) == (5));\n      |                                                  ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n      ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long limit, std::string char_str) {\n    if (limit < text.length()) {\n        return text.substr(0, limit);\n    } else {\n        size_t padding_size = limit - text.length();\n        std::string padding(padding_size, char_str[0]);\n        return text + padding;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"tqzym\"), (5), (\"c\")) == (5));\n}\n\n\n",
        "answer": "(5)"
    },
    {
        "id": 157,
        "res": false,
        "error": "Exception",
        "error_message": "tmp2sv4yfrn: /tmp/tmp2sv4yfrn.cpp:15: int main(): Assertion `candidate((\"aboba 212 has 0 digits\")) == (2)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string phrase) {\n    int ans = 0;\n    for (char& ch : phrase) {\n        if (ch == '0') {\n            ans++;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"aboba 212 has 0 digits\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 158,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpuebm2_ak.cpp:3:\n/tmp/tmpuebm2_ak.cpp: In function ‘int main()’:\n/tmp/tmpuebm2_ak.cpp:28:91: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   28 |     assert(candidate((std::vector<long>({(long)3, (long)6, (long)4, (long)-2, (long)5}))) == (6, 4, -2, 5));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                                                                                 |\n      |                     std::vector<long int>                                                             int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpuebm2_ak.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpuebm2_ak.cpp:3:\n/tmp/tmpuebm2_ak.cpp:28:106: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   28 |     assert(candidate((std::vector<long>({(long)3, (long)6, (long)4, (long)-2, (long)5}))) == (6, 4, -2, 5))",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> arr) {\n    std::vector<long> n;\n    for (long item : arr) {\n        if (item % 2 == 0) {\n            n.push_back(item);\n        }\n    }\n\n    std::vector<long> m;\n    m.insert(m.end(), n.begin(), n.end());\n    m.insert(m.end(), arr.begin(), arr.end());\n\n    for (auto it = m.begin(); it != m.end();) {\n        if (std::find(n.begin(), n.end(), *it) == n.end()) {\n            it = m.erase(it);\n        } else {\n            ++it;\n        }\n    }\n\n    return m;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)3, (long)6, (long)4, (long)-2, (long)5}))) == (6, 4, -2, 5));\n}\n\n\n",
        "answer": "(6, 4, -2, 5)"
    },
    {
        "id": 159,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp33j52te4.cpp:4:\n/tmp/tmp33j52te4.cpp: In function ‘int main()’:\n/tmp/tmp33j52te4.cpp:17:49: error: no matching function for call to ‘reverse(const char [8])’\n   17 |     assert(candidate((\"RTiGM\")) == (std::reverse(\"racecar\")));\n      |                                     ~~~~~~~~~~~~^~~~~~~~~~~\nIn file included from /usr/include/c++/11/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:65,\n                 from /tmp/tmp33j52te4.cpp:4:\n/usr/include/c++/11/bits/stl_algo.h:1145:5: note: candidate: ‘template<class _BIter> void std::reverse(_BIter, _BIter)’\n 1145 |     reverse(_BidirectionalIterator __first, _BidirectionalIterator __last)\n      |     ^~~~~~~\n/usr/include/c++/11/bits/stl_algo.h:1145:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp33j52te4.cpp:4:\n/tmp/tmp33j52te4.cpp:17:49: note:   candidate expects 2 arguments, 1 provided\n   17 |     assert(candidate((\"RTiGM\")) == (std::reverse(\"racecar\")));\n      |                                     ~~~~~~~~~~~~^~~~~~~~~~~\nIn file included from /usr/include/c++/11/algorithm:74,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:65,\n                 from /tmp/tmp33j52te4.cpp:4:\n/usr/include/c++/11/pstl/glue_algorithm_defs.h:249:1: note: candidate: ‘template<class _ExecutionPolicy, class _BidirectionalIterator> __pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> std::reverse(_ExecutionPolicy&&, _BidirectionalIterator, _BidirectionalIterator)’\n  249 | reverse(_ExecutionPolicy&& __exec, _BidirectionalIterator __first, _BidirectionalIterator __last);\n      | ^~~~~~~\n/usr/include/c++/11/pstl/glue_algorithm_defs.h:249:1: note:   template argument deduc",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string st) {\n    std::reverse(st.begin(), st.end());\n    for (int i = 0; i < st.length(); i++) {\n        if (islower(st[i]))\n            st[i] = toupper(st[i]);\n        else if (isupper(st[i]))\n            st[i] = tolower(st[i]);\n    }\n    return st;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"RTiGM\")) == (std::reverse(\"racecar\")));\n}\n\n\n",
        "answer": "(std::reverse(\"racecar\"))"
    },
    {
        "id": 160,
        "res": 0
    },
    {
        "id": 161,
        "res": false,
        "error": "Exception",
        "error_message": "tmpvizfeqem: /tmp/tmpvizfeqem.cpp:12: int main(): Assertion `candidate((\"difkj rinpx\"), (\"k\")) == (std::string(\"rinpxdifkj\"))' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string value) {\n    size_t pos = text.find(value);\n    std::string left = text.substr(0, pos);\n    std::string right = text.substr(pos + value.length());\n    return right + left;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"difkj rinpx\"), (\"k\")) == (std::string(\"rinpxdifkj\")));\n}\n\n\n",
        "answer": "(std::string(\"rinpxdifkj\"))"
    },
    {
        "id": 162,
        "res": 0
    },
    {
        "id": 163,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpel__gzkr.cpp:4:\n/tmp/tmpel__gzkr.cpp: In function ‘int main()’:\n/tmp/tmpel__gzkr.cpp:13:42: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   13 |     assert(candidate((\"w\"), (\"))\"), (7)) == (7));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                        |\n      |                     |                        int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpel__gzkr.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpel__gzkr.cpp:4:\n/tmp/tmpel__gzkr.cpp:13:47: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   13 |     assert(candidate((\"w\"), (\"))\"), (7)) == (7));\n      |                                               ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /u",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string space_symbol, long size) {\n    std::string spaces = \"\";\n    for (long i = 0; i < size - text.length(); i++)\n        spaces += space_symbol;\n    return text + spaces;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"w\"), (\"))\"), (7)) == (7));\n}\n\n\n",
        "answer": "(7)"
    },
    {
        "id": 164,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp_3ri66q3.cpp:3:\n/tmp/tmp_3ri66q3.cpp: In function ‘int main()’:\n/tmp/tmp_3ri66q3.cpp:11:90: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   11 |     assert(candidate((std::vector<long>({(long)5, (long)8, (long)1, (long)3, (long)0}))) == (0, 3, 5));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~\n      |                     |                                                                            |\n      |                     std::vector<long int>                                                        int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp_3ri66q3.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp_3ri66q3.cpp:3:\n/tmp/tmp_3ri66q3.cpp:11:101: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   11 |     assert(candidate((std::vector<long>({(long)5, (long)8, (long)1, (long)3, (long)0}))) == (0, 3, 5));\n      |                ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> lst) {\n    std::sort(lst.begin(), lst.end());\n    std::vector<long> result(lst.begin(), lst.begin() + 3);\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)5, (long)8, (long)1, (long)3, (long)0}))) == (0, 3, 5));\n}\n\n\n",
        "answer": "(0, 3, 5)"
    },
    {
        "id": 165,
        "res": false,
        "error": "Exception",
        "error_message": "tmpiu_pxqum: /tmp/tmpiu_pxqum.cpp:9: int main(): Assertion `candidate((\"=xtanp|sugv?z\"), (3), (6)) == (3)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text, long lower, long upper) {\n    return std::all_of(text.begin() + lower, text.begin() + upper, [](unsigned char c) { return isascii(c); });\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"=xtanp|sugv?z\"), (3), (6)) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 166,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmprs3paqzi.cpp:3:\n/tmp/tmprs3paqzi.cpp: In function ‘int main()’:\n/tmp/tmprs3paqzi.cpp:16:87: error: expected primary-expression before ‘)’ token\n   16 |     assert(candidate((std::map<std::string,std::map<std::string,std::string>>())) == ());\n      |                                                                                       ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,std::map<std::string,std::string>> f(std::map<std::string,std::map<std::string,std::string>> graph) {\n    std::map<std::string,std::map<std::string,std::string>> new_graph;\n    for (auto const& [key, value] : graph) {\n        new_graph[key] = {};\n        for (auto const& subkey : value) {\n            new_graph[key][subkey.first] = \"\";\n        }\n    }\n    return new_graph;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,std::map<std::string,std::string>>())) == ());\n}\n\n\n",
        "answer": "()"
    },
    {
        "id": 167,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmppojvb6ug.cpp:4:\n/tmp/tmppojvb6ug.cpp: In function ‘int main()’:\n/tmp/tmppojvb6ug.cpp:29:56: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   29 |     assert(candidate((\"aaXXXXbbXXXXccXXXXde\"), (\"QW\")) == (4));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                      |\n      |                     std::__cxx11::basic_string<char>       int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmppojvb6ug.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmppojvb6ug.cpp:4:\n/tmp/tmppojvb6ug.cpp:29:61: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   29 |     assert(candidate((\"aaXXXXbbXXXXccXXXXde\"), (\"QW\")) == (4));\n      |                                                             ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\n\nstd::string f(std::string XAAXX, std::string s) {\n    int count = 0;\n    size_t idx = -1;\n    while ((idx = XAAXX.find(\"XXXX\", idx+1)) != std::string::npos) {\n        count++;\n    }\n    std::string compound = s;\n    std::transform(compound.begin(), compound.end(), compound.begin(), ::tolower);\n    compound[0] = toupper(compound[0]);\n    for (int i = 1; i < count; ++i) {\n        compound += s;\n        std::transform(compound.end() - s.size(), compound.end(), compound.end() - s.size(), ::tolower);\n        compound[compound.size() - s.size()] = toupper(compound[compound.size() - s.size()]);\n    }\n    size_t start_pos = XAAXX.find(\"XXXX\");\n    while(start_pos != std::string::npos) {\n        XAAXX.replace(start_pos, 4, compound);\n        start_pos = XAAXX.find(\"XXXX\", start_pos + compound.size());\n    }\n    return XAAXX;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"aaXXXXbbXXXXccXXXXde\"), (\"QW\")) == (4));\n}\n\n\n",
        "answer": "(4)"
    },
    {
        "id": 168,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp4wyve00a.cpp:4:\n/tmp/tmp4wyve00a.cpp: In function ‘int main()’:\n/tmp/tmp4wyve00a.cpp:14:49: error: ‘spain’ was not declared in this scope\n   14 |     assert(candidate((\"spain\"), (\"b\"), (4)) == (spain));\n      |                                                 ^~~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string new_value, long index) {\n    std::string new_text = text;\n    if(index < text.length()){\n        std::replace(new_text.begin(), new_text.end(), text[index], new_value[0]);\n    }\n    return new_text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"spain\"), (\"b\"), (4)) == (spain));\n}\n\n\n",
        "answer": "(spain)"
    },
    {
        "id": 169,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp5alhbx44.cpp:4:\n/tmp/tmp5alhbx44.cpp: In function ‘int main()’:\n/tmp/tmp5alhbx44.cpp:19:33: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   19 |     assert(candidate((\"taole\")) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |               |\n      |                     |               int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp5alhbx44.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp5alhbx44.cpp:4:\n/tmp/tmp5alhbx44.cpp:19:38: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   19 |     assert(candidate((\"taole\")) == (2));\n      |                                      ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /u",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string ls = text;\n    int total = (ls.length() - 1) * 2;\n    for (int i = 1; i <= total; i++) {\n        if (i % 2) {\n            ls.push_back('+');\n        } else {\n            ls.insert(0, 1, '+');\n        }\n    }\n    return ls;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"taole\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 170,
        "res": false,
        "error": "Exception",
        "error_message": "tmpkpggorst: /tmp/tmpkpggorst.cpp:9: int main(): Assertion `candidate((std::vector<long>({(long)12, (long)0, (long)13, (long)4, (long)12})), (12)) == (1)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> nums, long number) {\n    return std::count(nums.begin(), nums.end(), number);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)12, (long)0, (long)13, (long)4, (long)12})), (12)) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 171,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp5v5yvapg.cpp:3:\n/tmp/tmp5v5yvapg.cpp: In function ‘int main()’:\n/tmp/tmp5v5yvapg.cpp:13:90: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   13 |     assert(candidate((std::vector<long>({(long)3, (long)4, (long)1, (long)2, (long)3}))) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                        |\n      |                     std::vector<long int>                                                    int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp5v5yvapg.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp5v5yvapg.cpp:3:\n/tmp/tmp5v5yvapg.cpp:13:95: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   13 |     assert(candidate((std::vector<long>({(long)3, (long)4, (long)1, (long)2, (long)3}))) == (3));\n      |                                           ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    int count = nums.size() / 2;\n    for (int i = 0; i < count; i++) {\n        nums.erase(nums.begin());\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)3, (long)4, (long)1, (long)2, (long)3}))) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 172,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmps_2ysbak.cpp:3:\n/tmp/tmps_2ysbak.cpp: In function ‘int main()’:\n/tmp/tmps_2ysbak.cpp:15:49: error: expected primary-expression before ‘)’ token\n   15 |     assert(candidate((std::vector<long>())) == ());\n      |                                                 ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> array) {\n    for (int i = 0; i < array.size(); i++) {\n        if (array[i] < 0) {\n            array.erase(array.begin() + i);\n            i--; // decrement i to stay at the same index after erasing\n        }\n    }\n    return array;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>())) == ());\n}\n\n\n",
        "answer": "()"
    },
    {
        "id": 173,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp8kg_ae3m.cpp:3:\n/tmp/tmp8kg_ae3m.cpp: In function ‘int main()’:\n/tmp/tmp8kg_ae3m.cpp:15:90: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   15 |     assert(candidate((std::vector<long>({(long)5, (long)8, (long)6, (long)8, (long)4}))) == (5, 8, 6, 8, 4));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~\n      |                     |                                                                                  |\n      |                     std::vector<long int>                                                              int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp8kg_ae3m.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp8kg_ae3m.cpp:3:\n/tmp/tmp8kg_ae3m.cpp:15:107: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   15 |     assert(candidate((std::vector<long>({(long)5, (long)8, (long)6, (long)8, (long)4}))) == (5, 8, 6, 8",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> list_x) {\n    int item_count = list_x.size();\n    std::vector<long> new_list;\n    for (int i = 0; i < item_count; i++) {\n        new_list.push_back(list_x.back());\n        list_x.pop_back();\n    }\n    return new_list;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)5, (long)8, (long)6, (long)8, (long)4}))) == (5, 8, 6, 8, 4));\n}\n\n\n",
        "answer": "(5, 8, 6, 8, 4)"
    },
    {
        "id": 174,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpywvkzdt8.cpp:3:\n/tmp/tmpywvkzdt8.cpp: In function ‘int main()’:\n/tmp/tmpywvkzdt8.cpp:14:72: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   14 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                      |\n      |                     std::vector<long int>                                  int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpywvkzdt8.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpywvkzdt8.cpp:3:\n/tmp/tmpywvkzdt8.cpp:14:77: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n      |                                                                             ^\nIn file included from /usr/include/c++/11/bits/stl_alg",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> lst) {\n    if (lst.size() > 1) {\n        size_t start = 1;\n        size_t end = std::min(lst.size(), (size_t)4);\n        std::reverse(lst.begin() + start, lst.begin() + end);\n    }\n    return lst;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 175,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmplafph54n.cpp:4:\n/tmp/tmplafph54n.cpp: In function ‘int main()’:\n/tmp/tmplafph54n.cpp:24:35: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   24 |     assert(candidate((\"\\n\"), (2)) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                 |\n      |                     |                 int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmplafph54n.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmplafph54n.cpp:4:\n/tmp/tmplafph54n.cpp:24:40: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   24 |     assert(candidate((\"\\n\"), (2)) == (2));\n      |                                        ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n            ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s, long amount) {\n    std::stringstream ss(s);\n    std::string line, result;\n    std::vector<std::string> lines;\n    size_t max_space = 0;\n\n    while (std::getline(ss, line, '\\n')) {\n        max_space = std::max(max_space, line.rfind(' '));\n        lines.push_back(line);\n    }\n    for (auto& line : lines) {\n        line += std::string(max_space + 1 - line.rfind(' '), ' ');\n        result += line + '\\n';\n    }\n    result.pop_back(); // remove the last newline\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"\\n\"), (2)) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 176,
        "res": false,
        "error": "Exception",
        "error_message": "tmpb4n5hsbq: /tmp/tmpb4n5hsbq.cpp:12: int main(): Assertion `candidate((\"some text\"), (\"some\")) == (\"text\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string to_place) {\n    std::size_t pos = text.find(to_place);\n    std::string after_place = text.substr(0, pos + 1);\n    std::string before_place = text.substr(pos + 1);\n    return after_place + before_place;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"some text\"), (\"some\")) == (\"text\"));\n}\n\n\n",
        "answer": "(\"text\")"
    },
    {
        "id": 177,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpqwoy3e9g.cpp:4:\n/tmp/tmpqwoy3e9g.cpp: In function ‘int main()’:\n/tmp/tmpqwoy3e9g.cpp:19:56: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   19 |     assert(candidate((\"Hey DUdE THis $nd^ &*&this@#\")) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                      |\n      |                     std::__cxx11::basic_string<char>       int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpqwoy3e9g.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpqwoy3e9g.cpp:4:\n/tmp/tmpqwoy3e9g.cpp:19:61: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   19 |     assert(candidate((\"Hey DUdE THis $nd^ &*&this@#\")) == (3));\n      |                                                             ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n ",
        "code": "\n\n#include <assert.h>\n#include <bits/stdc++.h>\nstd::string f(std::string text) {\n    for (int i = 0; i < text.length(); i++) {\n        if (i % 2 == 1) {\n            if (islower(text[i])) {\n                text[i] = toupper(text[i]);\n            } else {\n                text[i] = tolower(text[i]);\n            }\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Hey DUdE THis $nd^ &*&this@#\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 178,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpm0yj21ey.cpp:3:\n/tmp/tmpm0yj21ey.cpp: In function ‘int main()’:\n/tmp/tmpm0yj21ey.cpp:9:113: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n    9 |     assert(candidate((std::vector<long>({(long)0, (long)0, (long)1, (long)2, (long)2, (long)2, (long)2})), (4)) == (2, 2, 2, 2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~\n      |                     |                                                                                                      |\n      |                     std::vector<long int>                                                                                  int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpm0yj21ey.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpm0yj21ey.cpp:3:\n/tmp/tmpm0yj21ey.cpp:9:127: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n    9 |     assert(candidate((st",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> array, long n) {\n    return std::vector<long>(array.begin() + n, array.end());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)0, (long)0, (long)1, (long)2, (long)2, (long)2, (long)2})), (4)) == (2, 2, 2, 2));\n}\n\n\n",
        "answer": "(2, 2, 2, 2)"
    },
    {
        "id": 179,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpzs4eyp2n.cpp:4:\n/tmp/tmpzs4eyp2n.cpp: In function ‘int main()’:\n/tmp/tmpzs4eyp2n.cpp:15:105: error: expected ‘)’ before numeric constant\n   15 |     assert(candidate((std::vector<long>({(long)7, (long)1, (long)2, (long)6, (long)0, (long)2}))) == (7 6 0 2 2));\n      |                                                                                                      ~  ^\n/tmp/tmpzs4eyp2n.cpp:15:99: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   15 |     assert(candidate((std::vector<long>({(long)7, (long)1, (long)2, (long)6, (long)0, (long)2}))) == (7 6 0 2 2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                 |\n      |                     std::vector<long int>                                                             int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpzs4eyp2n.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc+",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    std::vector<long> nums_copy = nums;\n    int count = nums_copy.size();\n    for (int i = -count+1; i < 0; i++) {\n        nums_copy.insert(nums_copy.begin(), nums_copy[nums_copy.size() + i]);\n    }\n    return nums_copy;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)7, (long)1, (long)2, (long)6, (long)0, (long)2}))) == (7 6 0 2 2));\n}\n\n\n",
        "answer": "(7 6 0 2 2)"
    },
    {
        "id": 180,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpnylji089.cpp:3:\n/tmp/tmpnylji089.cpp: In function ‘int main()’:\n/tmp/tmpnylji089.cpp:16:111: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   16 |     assert(candidate((std::vector<long>({(long)-1, (long)5, (long)3, (long)-2, (long)-6, (long)8, (long)8}))) == (5));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                             |\n      |                     std::vector<long int>                                                                         int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpnylji089.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpnylji089.cpp:3:\n/tmp/tmpnylji089.cpp:16:116: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   16 |     assert(candidate((std::vector<long>({(long)-1, (long)5, (l",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    long a = -1;\n    std::vector<long> b(nums.begin() + 1, nums.end());\n    while (a <= b[0]) {\n        nums.erase(std::remove(nums.begin(), nums.end(), b[0]), nums.end());\n        a = 0;\n        b.erase(b.begin());\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)-1, (long)5, (long)3, (long)-2, (long)-6, (long)8, (long)8}))) == (5));\n}\n\n\n",
        "answer": "(5)"
    },
    {
        "id": 181,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp6kq_p0le.cpp:4:\n/tmp/tmp6kq_p0le.cpp: In function ‘int main()’:\n/tmp/tmp6kq_p0le.cpp:18:47: error: no match for ‘operator==’ (operand types are ‘std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long int>’ and ‘int’)\n   18 |     assert(candidate((\"qwfasgahh329kn12a23\")) == (\"qwfasgahh329kn12a23\", 3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                                  |\n      |                     |                                                  int\n      |                     std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long int>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp6kq_p0le.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp6kq_p0le.cpp:4:\n/tmp/tmp6kq_p0le.cpp:18:75: note:   ‘std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long int>’ is not derived from ‘const __gnu_",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::tuple<std::string, long> f(std::string s) {\n    long count = 0;\n    std::string digits = \"\";\n    for (char c : s) {\n        if (isdigit(c)) {\n            count += 1;\n            digits += c;\n        }\n    }\n    return std::make_tuple(digits, count);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"qwfasgahh329kn12a23\")) == (\"qwfasgahh329kn12a23\", 3));\n}\n\n\n",
        "answer": "(\"qwfasgahh329kn12a23\", 3)"
    },
    {
        "id": 182,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpgzissv7h.cpp:3:\n/tmp/tmpgzissv7h.cpp: In function ‘int main()’:\n/tmp/tmpgzissv7h.cpp:19:74: error: no match for ‘operator==’ (operand types are ‘std::vector<std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long int> >’ and ‘int’)\n   19 |     assert(candidate((std::map<std::string,long>({{\"b\", 1}, {\"a\", 2}}))) == (1, 2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~\n      |                     |                                                         |\n      |                     |                                                         int\n      |                     std::vector<std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long int> >\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpgzissv7h.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long int> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n     ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::tuple<std::string, long>> f(std::map<std::string,long> dic) {\n    std::vector<std::tuple<std::string, long>> result;\n    std::vector<std::pair<std::string, long>> temp(dic.begin(), dic.end());\n    std::sort(temp.begin(), temp.end(), [](const auto& x, const auto& y) {\n        return x.first < y.first;\n    });\n    \n    for (const auto& pair : temp) {\n        result.push_back(std::make_tuple(pair.first, pair.second));\n    }\n    \n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>({{\"b\", 1}, {\"a\", 2}}))) == (1, 2));\n}\n\n\n",
        "answer": "(1, 2)"
    },
    {
        "id": 183,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpejwrhwy9.cpp:3:\n/tmp/tmpejwrhwy9.cpp: In function ‘int main()’:\n/tmp/tmpejwrhwy9.cpp:37:51: error: ‘hello’ was not declared in this scope; did you mean ‘ftello’?\n   37 |     assert(candidate((\"echo hello!!! nice!\")) == (hello!!! nice!));\n      |                                                   ^~~~~\n/tmp/tmpejwrhwy9.cpp:37:56: error: expected ‘)’ before ‘!’ token\n   37 |     assert(candidate((\"echo hello!!! nice!\")) == (hello!!! nice!));\n      |                                                  ~     ^\n/tmp/tmpejwrhwy9.cpp:37:67: error: expected ‘)’ before ‘;’ token\n   37 |     assert(candidate((\"echo hello!!! nice!\")) == (hello!!! nice!));\n      |                                                                   ^\n/tmp/tmpejwrhwy9.cpp:37:67: error: expected ‘)’ before ‘;’ token\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpejwrhwy9.cpp:3:\n/tmp/tmpejwrhwy9.cpp:37:5: note: to match this ‘(’\n   37 |     assert(candidate((\"echo hello!!! nice!\")) == (hello!!! nice!));\n      |     ^~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::string text) {\n    std::vector<std::string> ls;\n    std::stringstream ss(text);\n    std::string word;\n    while (ss >> word) {\n        ls.push_back(word);\n    }\n\n    std::vector<std::string> lines;\n    std::vector<std::string> res;\n    for (size_t i = 0; i < ls.size(); i += 3) {\n        lines.push_back(ls[i]);\n    }\n\n    for (int i = 0; i < 2; ++i) {\n        std::vector<std::string> ln;\n        for (size_t j = 1; j < ls.size(); j += 3) {\n            ln.push_back(ls[j]);\n        }\n        if (3 * i + 1 < ln.size()) {\n            std::string temp;\n            for (size_t k = 3 * i; k < 3 * (i + 1); ++k) {\n                temp += ln[k] + \" \";\n            }\n            res.push_back(temp);\n        }\n    }\n\n    lines.insert(lines.end(), res.begin(), res.end());\n    return lines;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"echo hello!!! nice!\")) == (hello!!! nice!));\n}\n\n\n",
        "answer": "(hello!!! nice!)"
    },
    {
        "id": 184,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmprhu8lmb3.cpp:3:\n/tmp/tmprhu8lmb3.cpp: In function ‘int main()’:\n/tmp/tmprhu8lmb3.cpp:18:63: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   18 |     assert(candidate((std::vector<long>({(long)1, (long)2}))) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                             |\n      |                     std::vector<long int>                         int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmprhu8lmb3.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmprhu8lmb3.cpp:3:\n/tmp/tmprhu8lmb3.cpp:18:68: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   18 |     assert(candidate((std::vector<long>({(long)1, (long)2}))) == (2));\n      |                                                                    ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> digits) {\n    std::reverse(digits.begin(), digits.end());\n    if (digits.size() < 2) {\n        return digits;\n    }\n    for (size_t i = 0; i < digits.size(); i += 2) {\n        if (i + 1 < digits.size()) {\n            std::swap(digits[i], digits[i + 1]);\n        }\n    }\n    return digits;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2}))) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 185,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp48ynponc.cpp:3:\n/tmp/tmp48ynponc.cpp: In function ‘int main()’:\n/tmp/tmp48ynponc.cpp:19:103: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   19 |     assert(candidate((std::vector<long>({(long)16, (long)14, (long)12, (long)7, (long)9, (long)11}))) == (7));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                     |\n      |                     std::vector<long int>                                                                 int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp48ynponc.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp48ynponc.cpp:3:\n/tmp/tmp48ynponc.cpp:19:108: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   19 |     assert(candidate((std::vector<long>({(long)16, (long)14, (long)12, (long)7, (long)9, (long",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> L) {\n    int N = L.size();\n    for (int k = 1; k <= N/2; ++k) {\n        int i = k - 1;\n        int j = N - k;\n        while (i < j) {\n            std::swap(L[i], L[j]);\n            i++;\n            j--;\n        }\n    }\n    return L;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)16, (long)14, (long)12, (long)7, (long)9, (long)11}))) == (7));\n}\n\n\n",
        "answer": "(7)"
    },
    {
        "id": 186,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp1p50yrld.cpp:3:\n/tmp/tmp1p50yrld.cpp: In function ‘int main()’:\n/tmp/tmp1p50yrld.cpp:22:37: error: ‘pvtso’ was not declared in this scope\n   22 |     assert(candidate((\"pvtso\")) == (pvtso));\n      |                                     ^~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::istringstream iss(text);\n    std::vector<std::string> words;\n    std::string word;\n    while (iss >> word) {\n        words.push_back(word);\n    }\n    \n    std::string result;\n    for (const std::string& w : words) {\n        result += w + \" \";\n    }\n    \n    result.pop_back(); // Remove the extra space at the end\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"pvtso\")) == (pvtso));\n}\n\n\n",
        "answer": "(pvtso)"
    },
    {
        "id": 187,
        "res": true,
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::map<long,long> d, long index) {\n    long length = d.size();\n    long idx = index % length;\n    long v = d.rbegin()->second;\n    for (long i = 0; i < idx; ++i) {\n        d.erase(--d.end());\n    }\n    return v;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,long>({{27, 39}})), (1)) == (39));\n}\n\n\n",
        "answer": "(39)"
    },
    {
        "id": 188,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp4_vum_vx.cpp:3:\n/tmp/tmp4_vum_vx.cpp: In function ‘int main()’:\n/tmp/tmp4_vum_vx.cpp:17:130: error: ‘a’ was not declared in this scope\n   17 |     assert(candidate((std::vector<std::string>({(std::string)\"a\", (std::string)\"b\", (std::string)\"car\", (std::string)\"d\"}))) == (a, car));\n      |                                                                                                                                  ^\n/tmp/tmp4_vum_vx.cpp:17:133: error: ‘car’ was not declared in this scope; did you mean ‘char’?\n   17 |     assert(candidate((std::vector<std::string>({(std::string)\"a\", (std::string)\"b\", (std::string)\"car\", (std::string)\"d\"}))) == (a, car));\n      |                                                                                                                                     ^~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::vector<std::string> strings) {\n    std::vector<std::string> new_strings;\n    for (const std::string& string : strings) {\n        std::string first_two = string.substr(0, 2);\n        if (first_two[0] == 'a' || first_two[0] == 'p') {\n            new_strings.push_back(first_two);\n        }\n    }\n\n    return new_strings;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"a\", (std::string)\"b\", (std::string)\"car\", (std::string)\"d\"}))) == (a, car));\n}\n\n\n",
        "answer": "(a, car)"
    },
    {
        "id": 189,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp_70aq__w.cpp:4:\n/tmp/tmp_70aq__w.cpp: In function ‘int main()’:\n/tmp/tmp_70aq__w.cpp:20:93: error: expected primary-expression before ‘)’ token\n   20 |     assert(candidate((\"{{{{}}}}\"), (std::map<std::string,std::vector<std::string>>())) == (()));\n      |                                                                                             ^\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string out, std::map<std::string,std::vector<std::string>> mapping) {\n    for (auto& [key, value] : mapping) {\n        for (auto& el : value) {\n            std::string placeholder = \"{\" + key + \"}\";\n            size_t pos = out.find(placeholder);\n            if (pos != std::string::npos) {\n                out.replace(pos, placeholder.length(), value[0]);\n                std::reverse(value[0].begin(), value[0].end());\n            }\n        }\n    }\n    return out;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"{{{{}}}}\"), (std::map<std::string,std::vector<std::string>>())) == (()));\n}\n\n\n",
        "answer": "(())"
    },
    {
        "id": 190,
        "res": false,
        "error": "Exception",
        "error_message": "tmpsiol20je: /tmp/tmpsiol20je.cpp:15: int main(): Assertion `candidate((\"980jio80jic kld094398IIl \")) == (\"jio80l\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string short_str = \"\";\n    for (char c : text) {\n        if (std::islower(c)) {\n            short_str += c;\n        }\n    }\n    return short_str;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"980jio80jic kld094398IIl \")) == (\"jio80l\"));\n}\n\n\n",
        "answer": "(\"jio80l\")"
    },
    {
        "id": 191,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string string) {\n    if(std::all_of(string.begin(), string.end(), ::isupper)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Ohno\")) == (false));\n}\n\n\n",
        "answer": "(false)"
    },
    {
        "id": 192,
        "res": false,
        "error": "Exception",
        "error_message": "tmpx3s_qcpo: /tmp/tmpx3s_qcpo.cpp:14: int main(): Assertion `candidate((\"!klcd!ma:ri\"), (\"!\")) == (std::string(\"ma:ri\"))' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string suffix) {\n    std::string output = text;\n    while (text.size() >= suffix.size() && text.substr(text.size() - suffix.size()) == suffix) {\n        output = text.substr(0, text.size() - suffix.size());\n        text = output;\n    }\n    return output;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"!klcd!ma:ri\"), (\"!\")) == (std::string(\"ma:ri\")));\n}\n\n\n",
        "answer": "(std::string(\"ma:ri\"))"
    },
    {
        "id": 193,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp1y9y3uw3.cpp:3:\n/tmp/tmp1y9y3uw3.cpp: In function ‘int main()’:\n/tmp/tmp1y9y3uw3.cpp:11:32: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   11 |     assert(candidate((\"1::1\")) == (1));\n      |            ~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |              |\n      |                     |              int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp1y9y3uw3.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp1y9y3uw3.cpp:3:\n/tmp/tmp1y9y3uw3.cpp:11:37: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   11 |     assert(candidate((\"1::1\")) == (1));\n      |                                     ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/inc",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string string) {\n    size_t count = std::count(string.begin(), string.end(), ':');\n    size_t pos = string.find_last_of(':');\n    return string.erase(pos, count - 1);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"1::1\")) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 194,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpqhqrv9f5.cpp:3:\n/tmp/tmpqhqrv9f5.cpp: In function ‘int main()’:\n/tmp/tmpqhqrv9f5.cpp:10:221: error: expected ‘)’ before numeric constant\n   10 |     assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)5, (long)6, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)1, (long)9, (long)5, (long)6})})), (0)) == (5 6 2 3));\n      |                                                                                                                                                                                                                          ~  ^\n/tmp/tmpqhqrv9f5.cpp:10:215: error: no match for ‘operator==’ (operand types are ‘std::vector<std::vector<long int> >’ and ‘int’)\n   10 |     assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)5, (long)6, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)1, (long)9, (long)5, (long)6})})), (0)) == (5 6 2 3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                                                                                                                                     |\n      |                     std::vector<std::vector<long int> >                                                                                                                                                                   int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n         ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::vector<long>> f(std::vector<std::vector<long>> matr, long insert_loc) {\n    matr.insert(matr.begin() + insert_loc, std::vector<long>{});\n    return matr;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)5, (long)6, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)1, (long)9, (long)5, (long)6})})), (0)) == (5 6 2 3));\n}\n\n\n",
        "answer": "(5 6 2 3)"
    },
    {
        "id": 195,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpkjxvdkxe.cpp:4:\n/tmp/tmpkjxvdkxe.cpp: In function ‘int main()’:\n/tmp/tmpkjxvdkxe.cpp:21:46: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   21 |     assert(candidate((\"ilfdoirwirmtoibsac\")) == (5));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                            |\n      |                     |                            int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpkjxvdkxe.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpkjxvdkxe.cpp:4:\n/tmp/tmpkjxvdkxe.cpp:21:51: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   21 |     assert(candidate((\"ilfdoirwirmtoibsac\")) == (5));\n      |                                                   ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n",
        "code": "\n\n#include <assert.h>\n#include <bits/stdc++.h>\n\nstd::string remove_prefix(std::string &str, const std::string &prefix) {\n    if (str.substr(0, prefix.size()) == prefix) {\n        return str.substr(prefix.size());\n    }\n    return str;\n}\n\nstd::string f(std::string text) {\n    for (std::string p : {\"acs\", \"asp\", \"scn\"}) {\n        text = remove_prefix(text, p) + ' ';\n    }\n    return text.substr(0, text.size() - 1);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ilfdoirwirmtoibsac\")) == (5));\n}\n\n\n",
        "answer": "(5)"
    },
    {
        "id": 196,
        "res": true,
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::replace(text.begin(), text.end(), ' ', '.');\n    if (std::any_of(text.begin(), text.end(), ::isupper))\n        return \"correct\";\n    std::replace(text.begin(), text.end(), '.', ' ');\n    return \"mixed\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"398 Is A Poor Year To Sow\")) == (\"correct\"));\n}\n\n\n",
        "answer": "(\"correct\")"
    },
    {
        "id": 197,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp6kixsegm.cpp:3:\n/tmp/tmp6kixsegm.cpp: In function ‘int main()’:\n/tmp/tmp6kixsegm.cpp:11:41: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   11 |     assert(candidate((1), (1234567890)) == (1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                       |\n      |                     |                       int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp6kixsegm.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp6kixsegm.cpp:3:\n/tmp/tmp6kixsegm.cpp:11:46: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   11 |     assert(candidate((1), (1234567890)) == (1));\n      |                                              ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/inc",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(long temp, long timeLimit) {\n    long s = timeLimit / temp;\n    long e = timeLimit % temp;\n    return (s > 1) ? std::to_string(s) + \" \" + std::to_string(e) : std::to_string(e) + \" oC\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((1), (1234567890)) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 198,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpnepmwa8y.cpp:4:\n/tmp/tmpnepmwa8y.cpp: In function ‘int main()’:\n/tmp/tmpnepmwa8y.cpp:18:60: error: no matching function for call to ‘reverse(const char [8])’\n   18 |     assert(candidate((\"tcmfsmj\"), (\"cfj\")) == (std::reverse(\"tcmfsmj\")));\n      |                                                ~~~~~~~~~~~~^~~~~~~~~~~\nIn file included from /usr/include/c++/11/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:65,\n                 from /tmp/tmpnepmwa8y.cpp:4:\n/usr/include/c++/11/bits/stl_algo.h:1145:5: note: candidate: ‘template<class _BIter> void std::reverse(_BIter, _BIter)’\n 1145 |     reverse(_BidirectionalIterator __first, _BidirectionalIterator __last)\n      |     ^~~~~~~\n/usr/include/c++/11/bits/stl_algo.h:1145:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpnepmwa8y.cpp:4:\n/tmp/tmpnepmwa8y.cpp:18:60: note:   candidate expects 2 arguments, 1 provided\n   18 |     assert(candidate((\"tcmfsmj\"), (\"cfj\")) == (std::reverse(\"tcmfsmj\")));\n      |                                                ~~~~~~~~~~~~^~~~~~~~~~~\nIn file included from /usr/include/c++/11/algorithm:74,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:65,\n                 from /tmp/tmpnepmwa8y.cpp:4:\n/usr/include/c++/11/pstl/glue_algorithm_defs.h:249:1: note: candidate: ‘template<class _ExecutionPolicy, class _BidirectionalIterator> __pstl::__internal::__enable_if_execution_policy<_ExecutionPolicy, void> std::reverse(_ExecutionPolicy&&, _BidirectionalIterator, _BidirectionalIterator)’\n  249 | reverse(_ExecutionPolicy&& __exec, _BidirectionalIterator __first, _BidirectionalIterator __last);\n      | ^~~~~~~\n/usr/include/c++/11/pstl/glue_algorithm_d",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string strip_chars) {\n    std::reverse(text.begin(), text.end());\n    size_t pos = text.find_last_not_of(strip_chars);\n    if(pos != std::string::npos)\n        text.erase(pos + 1);\n    pos = text.find_first_not_of(strip_chars);\n    if(pos != std::string::npos)\n        text.erase(0, pos);\n    std::reverse(text.begin(), text.end());\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"tcmfsmj\"), (\"cfj\")) == (std::reverse(\"tcmfsmj\")));\n}\n\n\n",
        "answer": "(std::reverse(\"tcmfsmj\"))"
    },
    {
        "id": 199,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpiskwf4b6.cpp:4:\n/tmp/tmpiskwf4b6.cpp: In function ‘int main()’:\n/tmp/tmpiskwf4b6.cpp:15:62: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   15 |     assert(candidate((\"mnmnj krupa...##!@#!@#$$@##\"), (\"@\")) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                            |\n      |                     std::__cxx11::basic_string<char>             int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpiskwf4b6.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpiskwf4b6.cpp:4:\n/tmp/tmpiskwf4b6.cpp:15:67: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   15 |     assert(candidate((\"mnmnj krupa...##!@#!@#$$@##\"), (\"@\")) == (2));\n      |                                                                   ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s, std::string c) {\n    int count = std::count(s.begin(), s.end(), c[0]);\n    std::string base = std::string(count + 1, c[0]);\n    if (s.size() >= base.size() && s.substr(s.size() - base.size()) == base) {\n        s.erase(s.size() - base.size());\n    }\n    return s;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"mnmnj krupa...##!@#!@#$$@##\"), (\"@\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 200,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp7bxgbl9q.cpp:3:\n/tmp/tmp7bxgbl9q.cpp: In function ‘int main()’:\n/tmp/tmp7bxgbl9q.cpp:16:45: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   16 |     assert(candidate((\"jao mt\"), (\"house\")) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                           |\n      |                     |                           int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp7bxgbl9q.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp7bxgbl9q.cpp:3:\n/tmp/tmp7bxgbl9q.cpp:16:50: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   16 |     assert(candidate((\"jao mt\"), (\"house\")) == (3));\n      |                                                  ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n      ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string value) {\n    int length = text.length();\n    int index = 0;\n    while (length > 0) {\n        value = text[index] + value;\n        length--;\n        index++;\n    }\n    return value;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"jao mt\"), (\"house\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 201,
        "res": false,
        "error": "Exception",
        "error_message": "tmptzw3f8ll: /tmp/tmptzw3f8ll.cpp:16: int main(): Assertion `candidate((\"--4yrw 251-//4 6p\")) == (\"251-//4\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string result;\n    for (char c : text) {\n        if (std::isdigit(c)) {\n            result.push_back(c);\n        }\n    }\n    std::reverse(result.begin(), result.end());\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"--4yrw 251-//4 6p\")) == (\"251-//4\"));\n}\n\n\n",
        "answer": "(\"251-//4\")"
    },
    {
        "id": 202,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpcct9adsl.cpp:3:\n/tmp/tmpcct9adsl.cpp: In function ‘int main()’:\n/tmp/tmpcct9adsl.cpp:25:106: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   25 |     assert(candidate((std::vector<long>({(long)2, (long)15})), (std::vector<long>({(long)15, (long)1}))) == (15));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                        |\n      |                     std::vector<long int>                                                                    int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpcct9adsl.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpcct9adsl.cpp:3:\n/tmp/tmpcct9adsl.cpp:25:112: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   25 |     assert(candidate((std::vector<long>({(long)2, (long)15})), (std::vector<long",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> array, std::vector<long> lst) {\n    array.insert(array.end(), lst.begin(), lst.end());\n    \n    std::vector<long> result;\n    for (long e : array) {\n        if (e % 2 == 0) {\n            result.push_back(e);\n        }\n    }\n\n    std::vector<long> finalResult;\n    for (long e : array) {\n        if (e >= 10) {\n            finalResult.push_back(e);\n        }\n    }\n    \n    return finalResult;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)2, (long)15})), (std::vector<long>({(long)15, (long)1}))) == (15));\n}\n\n\n",
        "answer": "(15)"
    },
    {
        "id": 203,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp2fedv6v3.cpp:4:\n/tmp/tmp2fedv6v3.cpp: In function ‘int main()’:\n/tmp/tmp2fedv6v3.cpp:11:100: error: no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘const char [2]’)\n   11 |     assert(candidate((std::map<std::string,std::string>({{\"a\", \"3\"}, {\"b\", \"-1\"}, {\"c\", \"Dum\"}}))) == (\"a\", \"3\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~\n      |                     |                                                                                     |\n      |                     std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >         const char [2]\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmp2fedv6v3.cpp:4:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,std::string> f(std::map<std::string,std::string> d) {\n    d.clear();\n    return d;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,std::string>({{\"a\", \"3\"}, {\"b\", \"-1\"}, {\"c\", \"Dum\"}}))) == (\"a\", \"3\"));\n}\n\n\n",
        "answer": "(\"a\", \"3\")"
    },
    {
        "id": 204,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpg87l8nmx.cpp:3:\n/tmp/tmpg87l8nmx.cpp: In function ‘int main()’:\n/tmp/tmpg87l8nmx.cpp:9:36: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [7]’)\n    9 |     assert(candidate((\"master. \")) == (\"master\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~\n      |                     |                  |\n      |                     |                  const char [7]\n      |                     std::vector<std::__cxx11::basic_string<char> >\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpg87l8nmx.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::__cxx11::basic_string<char> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpg87l8nmx.cpp:3:\n/tmp/tmpg87l8nmx.cpp:9:48: note",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::string name) {\n    return {std::string(1, name[0]), std::string(1, name[1])};\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"master. \")) == (\"master\"));\n}\n\n\n",
        "answer": "(\"master\")"
    },
    {
        "id": 205,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpl1pmye50.cpp:3:\n/tmp/tmpl1pmye50.cpp: In function ‘int main()’:\n/tmp/tmpl1pmye50.cpp:25:50: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   25 |     assert(candidate((\"##fiu##nk#he###wumun##\")) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                |\n      |                     std::__cxx11::basic_string<char> int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpl1pmye50.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpl1pmye50.cpp:3:\n/tmp/tmpl1pmye50.cpp:25:55: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   25 |     assert(candidate((\"##fiu##nk#he###wumun##\")) == (3));\n      |                                                       ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c+",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string a) {\n    for (int i = 0; i < 10; i++) {\n        for (int j = 0; j < a.length(); j++) {\n            if (a[j] != '#') {\n                a = a.substr(j);\n                break;\n            } else if (j == a.length() - 1) {\n                a = \"\";\n                break;\n            }\n        }\n    }\n    \n    while (a.back() == '#') {\n        a.pop_back();\n    }\n    \n    return a;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"##fiu##nk#he###wumun##\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 206,
        "res": false,
        "error": "Exception",
        "error_message": "tmpp_y_ct6f: /tmp/tmpp_y_ct6f.cpp:17: int main(): Assertion `candidate((\" h e l l o   w o r l d! \")) == (\"hello world\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string a) {\n    std::stringstream ss(a);\n    std::string word, result;\n\n    while (ss >> word) {\n        result += word + \" \";\n    }\n\n    result.pop_back(); // Remove the extra space at the end\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\" h e l l o   w o r l d! \")) == (\"hello world\"));\n}\n\n\n",
        "answer": "(\"hello world\")"
    },
    {
        "id": 207,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmprf3p79ds.cpp:3:\n/tmp/tmprf3p79ds.cpp: In function ‘int main()’:\n/tmp/tmprf3p79ds.cpp:15:283: error: no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, long int>’ and ‘int’)\n   15 |     assert(candidate((std::vector<std::map<std::string,long>>({(std::map<std::string,long>)std::map<std::string,long>({{\"brown\", 2}}), (std::map<std::string,long>)std::map<std::string,long>({{\"blue\", 5}}), (std::map<std::string,long>)std::map<std::string,long>({{\"bright\", 4}})}))) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                                                                                                                                                                                         |\n      |                     std::map<std::__cxx11::basic_string<char>, long int>                                                                                                                                                                                                                      int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c+",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,long> f(std::vector<std::map<std::string,long>> commands) {\n    std::map<std::string, long> d;\n    for(auto c : commands) {\n        for(auto it = c.begin(); it != c.end(); ++it) {\n            d[it->first] = it->second;\n        }\n    }\n    return d;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::map<std::string,long>>({(std::map<std::string,long>)std::map<std::string,long>({{\"brown\", 2}}), (std::map<std::string,long>)std::map<std::string,long>({{\"blue\", 5}}), (std::map<std::string,long>)std::map<std::string,long>({{\"bright\", 4}})}))) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 208,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpr4efit8l.cpp:3:\n/tmp/tmpr4efit8l.cpp: In function ‘int main()’:\n/tmp/tmpr4efit8l.cpp:17:114: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)\n   17 |     assert(candidate((std::vector<std::string>({(std::string)\"123\", (std::string)\"cat\", (std::string)\"d dee\"}))) == (\"1\", \"1\", \"1\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~\n      |                     |                                                                                                        |\n      |                     std::vector<std::__cxx11::basic_string<char> >                                                           const char [2]\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpr4efit8l.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::__cxx11::basic_string<char> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::vector<std::string> items) {\n    std::vector<std::string> result;\n    for (const std::string& item : items) {\n        for (char d : item) {\n            if (!isdigit(d)) {\n                result.push_back(std::string(1, d));\n            }\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"123\", (std::string)\"cat\", (std::string)\"d dee\"}))) == (\"1\", \"1\", \"1\"));\n}\n\n\n",
        "answer": "(\"1\", \"1\", \"1\")"
    },
    {
        "id": 209,
        "res": 0
    },
    {
        "id": 210,
        "res": false,
        "error": "Exception",
        "error_message": "tmprzz_p847: /tmp/tmprzz_p847.cpp:20: int main(): Assertion `candidate((46), (48), (21)) == (21)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(long n, long m, long num) {\n    std::vector<long> x_list;\n    for (long i = n; i <= m; i++) {\n        x_list.push_back(i);\n    }\n    \n    long j = 0;\n    while (true) {\n        j = (j + num) % x_list.size();\n        if (x_list[j] % 2 == 0) {\n            return x_list[j];\n        }\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((46), (48), (21)) == (21));\n}\n\n\n",
        "answer": "(21)"
    },
    {
        "id": 211,
        "res": false,
        "error": "Exception",
        "error_message": "tmppjtpt8be: /tmp/tmppjtpt8be.cpp:15: int main(): Assertion `candidate((\"abca dea ead\")) == (2)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string s) {\n    int count = 0;\n    for (char c : s) {\n        if (s.find_last_of(c) != s.find_first_of(c)) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"abca dea ead\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 212,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpb6nbx7_6.cpp:3:\n/tmp/tmpb6nbx7_6.cpp: In function ‘int main()’:\n/tmp/tmpb6nbx7_6.cpp:12:110: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   12 |     assert(candidate((std::vector<long>({(long)1, (long)-9, (long)7, (long)2, (long)6, (long)-3, (long)3}))) == (1, -9, 7, 2, 6, -3, 3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                                                                                              |\n      |                     std::vector<long int>                                                                                          int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpb6nbx7_6.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpb6nbx7_6.cpp:3:\n/tmp/tmpb6nbx7_6.cpp:12:135: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    for(int i = 0; i < nums.size() - 1; i++){\n        std::reverse(nums.begin(), nums.end());\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)-9, (long)7, (long)2, (long)6, (long)-3, (long)3}))) == (1, -9, 7, 2, 6, -3, 3));\n}\n\n\n",
        "answer": "(1, -9, 7, 2, 6, -3, 3)"
    },
    {
        "id": 213,
        "res": false,
        "error": "Exception",
        "error_message": "tmpfk541b4_: /tmp/tmpfk541b4_.cpp:11: int main(): Assertion `candidate((\"(ac)\")) == (\"ac\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s) {\n    std::replace(s.begin(), s.end(), '(', '[');\n    std::replace(s.begin(), s.end(), ')', ']');\n    return s;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"(ac)\")) == (\"ac\"));\n}\n\n\n",
        "answer": "(\"ac\")"
    },
    {
        "id": 214,
        "res": false,
        "error": "Exception",
        "error_message": "tmpz8z0csoe: /tmp/tmpz8z0csoe.cpp:20: int main(): Assertion `candidate((\"present/here/car%2Fwe\")) == (2)' failed.\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string sample) {\n    long i = -1;\n    while (sample.find('/', i+1) != std::string::npos) {\n        i = sample.find('/', i+1);\n    }\n    std::string sub_str = sample.substr(0, i);\n    for (long j = sub_str.size() - 1; j >= 0; --j) {\n        if (sample[j] == '/') {\n            return j;\n        }\n    }\n    return -1;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"present/here/car%2Fwe\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 215,
        "res": false,
        "error": "Exception",
        "error_message": "tmpe3nways6: /tmp/tmpe3nways6.cpp:13: int main(): Assertion `candidate((\")\")) == (\"\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string new_text = text;\n    while (text.length() > 1 && text[0] == text[text.length() - 1]) {\n        new_text = text = text.substr(1, text.length() - 2);\n    }\n    return new_text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\")\")) == (\"\"));\n}\n\n\n",
        "answer": "(\"\")"
    },
    {
        "id": 216,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string letters) {\n    int count = 0;\n    for(char l : letters) {\n        if (std::isdigit(l)) {\n            count += 1;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"dp ef1 gh2\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 217,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string string) {\n    if(std::all_of(string.begin(), string.end(), ::isalnum)) {\n        return \"ascii encoded is allowed for this language\";\n    }\n    return \"more than ASCII\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Str zahrnuje anglo-ameriæske vasi piscina and kuca!\")) == (\"more than ASCII\"));\n}\n\n\n",
        "answer": "(\"more than ASCII\")"
    },
    {
        "id": 218,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp9bws0snn.cpp:4:\n/tmp/tmp9bws0snn.cpp: In function ‘int main()’:\n/tmp/tmp9bws0snn.cpp:21:47: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   21 |     assert(candidate((\"caabcfcabfc\"), (\"ab\")) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                             |\n      |                     |                             int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp9bws0snn.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp9bws0snn.cpp:4:\n/tmp/tmp9bws0snn.cpp:21:52: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   21 |     assert(candidate((\"caabcfcabfc\"), (\"ab\")) == (3));\n      |                                                    ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string string, std::string sep) {\n    int cnt = 0;\n    for (size_t offset = string.find(sep); offset != std::string::npos;\n         offset = string.find(sep, offset + sep.length()))\n    {\n        ++cnt;\n    }\n    std::string new_string = string + sep;\n    for(int i=1; i<cnt; i++) {\n        new_string += new_string;\n    }\n    std::reverse(new_string.begin(), new_string.end());\n    return new_string;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"caabcfcabfc\"), (\"ab\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 219,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp6nfc3czl.cpp:4:\n/tmp/tmp6nfc3czl.cpp: In function ‘int main()’:\n/tmp/tmp6nfc3czl.cpp:17:40: error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   17 |     assert(candidate((\"Hello\"), (\")\")) == (\")\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string s1, std::string s2) {\n    std::string new_s1 = s1;\n    for (int k = 0; k < s2.size() + s1.size(); k++) {\n        new_s1 += s1[0];\n        if (new_s1.find(s2) != std::string::npos) {\n            return true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Hello\"), (\")\")) == (\")\"));\n}\n\n\n",
        "answer": "(\")\")"
    },
    {
        "id": 220,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpwqhwz7rj.cpp:3:\n/tmp/tmpwqhwz7rj.cpp: In function ‘int main()’:\n/tmp/tmpwqhwz7rj.cpp:14:52: error: ‘abcdefgabc’ was not declared in this scope\n   14 |     assert(candidate((\"abcdefgabc\"), (1), (2)) == (abcdefgabc));\n      |                                                    ^~~~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long m, long n) {\n    text = text + text.substr(0, m) + text.substr(n);\n    std::string result = \"\";\n    for (long i = n; i < text.length() - m; i++) {\n        result = text[i] + result;\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"abcdefgabc\"), (1), (2)) == (abcdefgabc));\n}\n\n\n",
        "answer": "(abcdefgabc)"
    },
    {
        "id": 221,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpkm78_gmt.cpp:3:\n/tmp/tmpkm78_gmt.cpp: In function ‘int main()’:\n/tmp/tmpkm78_gmt.cpp:12:45: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   12 |     assert(candidate((\"bpxa24fc5.\"), (\".\")) == (24));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                           |\n      |                     |                           int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpkm78_gmt.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpkm78_gmt.cpp:3:\n/tmp/tmpkm78_gmt.cpp:12:51: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   12 |     assert(candidate((\"bpxa24fc5.\"), (\".\")) == (24));\n      |                                                   ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n  ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string delim) {\n    size_t pos = text.find(delim);\n    std::string first = text.substr(0, pos);\n    std::string second = text.substr(pos + delim.length());\n    return second + delim + first;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"bpxa24fc5.\"), (\".\")) == (24));\n}\n\n\n",
        "answer": "(24)"
    },
    {
        "id": 222,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpxrmusa6a.cpp:4:\n/tmp/tmpxrmusa6a.cpp: In function ‘int main()’:\n/tmp/tmpxrmusa6a.cpp:14:44: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   14 |     assert(candidate((\"0aabbaa0b\"), (\"a\")) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                          |\n      |                     |                          int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpxrmusa6a.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpxrmusa6a.cpp:4:\n/tmp/tmpxrmusa6a.cpp:14:49: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((\"0aabbaa0b\"), (\"a\")) == (0));\n      |                                                 ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n            ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string mess, std::string char_) {\n    std::string::size_type pos = 0;\n    while ((pos = mess.rfind(char_, pos)) != std::string::npos) {\n        mess = mess.substr(0, pos + 1) + mess.substr(pos + char_.length());\n    }\n    return mess;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"0aabbaa0b\"), (\"a\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 223,
        "res": false,
        "error": "Exception",
        "error_message": "tmppkpgqe3_: /tmp/tmppkpgqe3_.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1, (long)2, (long)-1, (long)4})), (2)) == (2)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> array, long target) {\n    long count = 0;\n    long i = 1;\n    for (int j = 1; j < array.size(); j++) {\n        if ((array[j] > array[j-1]) && (array[j] <= target)) {\n            count += i;\n        } else if (array[j] <= array[j-1]) {\n            i = 1;\n        } else {\n            i += 1;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)-1, (long)4})), (2)) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 224,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp4h7nltsf.cpp:3:\n/tmp/tmp4h7nltsf.cpp: In function ‘int main()’:\n/tmp/tmp4h7nltsf.cpp:25:78: error: no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, long int>’ and ‘int’)\n   25 |     assert(candidate((std::vector<std::string>({(std::string)\"23\"})), (123)) == (123));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~\n      |                     |                                                            |\n      |                     std::map<std::__cxx11::basic_string<char>, long int>         int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmp4h7nltsf.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::pair<const std::__cxx11::basic_string<char>, long int> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,long> f(std::vector<std::string> array, long value) {\n    std::reverse(array.begin(), array.end());\n    array.pop_back();\n    std::vector<std::map<std::string, long>> odd;\n    while (!array.empty()) {\n        std::map<std::string, long> tmp;\n        tmp[array.back()] = value;\n        odd.push_back(tmp);\n        array.pop_back();\n    }\n    std::map<std::string, long> result;\n    while (!odd.empty()) {\n        for (auto& elem : odd.back()) {\n            result[elem.first] = elem.second;\n        }\n        odd.pop_back();\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"23\"})), (123)) == (123));\n}\n\n\n",
        "answer": "(123)"
    },
    {
        "id": 225,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmppxby16hn.cpp:3:\n/tmp/tmppxby16hn.cpp: In function ‘int main()’:\n/tmp/tmppxby16hn.cpp:12:33: error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   12 |     assert(candidate((\"54882\")) == (\"negate\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text) {\n    if(std::all_of(text.begin(), text.end(), ::islower)) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"54882\")) == (\"negate\"));\n}\n\n\n",
        "answer": "(\"negate\")"
    },
    {
        "id": 226,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmplywfjio_.cpp:3:\n/tmp/tmplywfjio_.cpp: In function ‘int main()’:\n/tmp/tmplywfjio_.cpp:15:63: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)3}))) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                             |\n      |                     std::vector<long int>                         int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmplywfjio_.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmplywfjio_.cpp:3:\n/tmp/tmplywfjio_.cpp:15:68: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)3}))) == (3));\n      |                                                                    ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    int n = nums.size();\n    for (int i = 0; i < n; ++i) {\n        if (nums[i] % 3 == 0) {\n            nums.push_back(nums[i]);\n        }\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)3}))) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 227,
        "res": false,
        "error": "Exception",
        "error_message": "tmpuckqx1j3: /tmp/tmpuckqx1j3.cpp:13: int main(): Assertion `candidate((\"Manolo\")) == (\"MANOLO\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::transform(text.begin(), text.end(), text.begin(), ::tolower);\n    char head = text[0];\n    std::string tail = text.substr(1);\n    std::string result = std::string(1, std::toupper(head)) + tail;\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Manolo\")) == (\"MANOLO\"));\n}\n\n\n",
        "answer": "(\"MANOLO\")"
    },
    {
        "id": 228,
        "res": false,
        "error": "Exception",
        "error_message": "tmpt4vd65po: /tmp/tmpt4vd65po.cpp:18: int main(): Assertion `candidate((\"LlTHH sAfLAPkPhtsWP\"), (\"#\")) == (\"hello world\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string splitter) {\n    std::transform(text.begin(), text.end(), text.begin(), ::tolower);\n    std::stringstream ss(text);\n    std::vector<std::string> words;\n    std::string word;\n    while (ss >> word) {\n        words.push_back(word);\n    }\n    return std::accumulate(words.begin(), words.end(), std::string(\"\"), [&splitter](const std::string& result, const std::string& word) {\n        return result.empty() ? word : result + splitter + word;\n    });\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"LlTHH sAfLAPkPhtsWP\"), (\"#\")) == (\"hello world\"));\n}\n\n\n",
        "answer": "(\"hello world\")"
    },
    {
        "id": 229,
        "res": 0
    },
    {
        "id": 230,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpwp32suci.cpp:3:\n/tmp/tmpwp32suci.cpp: In function ‘int main()’:\n/tmp/tmpwp32suci.cpp:18:40: error: ‘q’ was not declared in this scope\n   18 |     assert(candidate((\"102x0zoq\")) == (q));\n      |                                        ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string result = \"\";\n    int i = text.length() - 1;\n    while (i >= 0) {\n        char c = text[i];\n        if (isalpha(c)) {\n            result += c;\n        }\n        i--;\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"102x0zoq\")) == (q));\n}\n\n\n",
        "answer": "(q)"
    },
    {
        "id": 231,
        "res": false,
        "error": "Exception",
        "error_message": "tmpso9c_c4s: /tmp/tmpso9c_c4s.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)1872, (long)1995, (long)1945}))) == (3)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> years) {\n    int a10 = std::count_if(years.begin(), years.end(), [](int x){return x <= 1900;});\n    int a90 = std::count_if(years.begin(), years.end(), [](int x){return x > 1910;});\n\n    if (a10 > 3) {\n        return 3;\n    } else if (a90 > 3) {\n        return 1;\n    } else {\n        return 2;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1872, (long)1995, (long)1945}))) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 232,
        "res": false,
        "error": "Exception",
        "error_message": "tmp_c_hph3g: /tmp/tmp_c_hph3g.cpp:16: int main(): Assertion `candidate((\"fssnvd\"), (\"yes\")) == (\"fssnvd\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string changes) {\n    std::string result = \"\";\n    int count = 0;\n    std::vector<char> changesVec(changes.begin(), changes.end());\n    for (char& c : text) {\n        result += (c == 'e' ? c : changesVec[count % changesVec.size()]);\n        count += (c != 'e' ? 1 : 0);\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"fssnvd\"), (\"yes\")) == (\"fssnvd\"));\n}\n\n\n",
        "answer": "(\"fssnvd\")"
    },
    {
        "id": 233,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp1flvr1j_.cpp:3:\n/tmp/tmp1flvr1j_.cpp: In function ‘int main()’:\n/tmp/tmp1flvr1j_.cpp:13:72: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   13 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                      |\n      |                     std::vector<long int>                                  int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp1flvr1j_.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp1flvr1j_.cpp:3:\n/tmp/tmp1flvr1j_.cpp:13:77: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   13 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n      |                                                                             ^\nIn file included from /usr/include/c++/11/bits/stl_alg",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> xs) {\n    for (int idx = xs.size() - 2; idx >= 0; idx--) {\n        xs.insert(xs.begin() + idx, xs[0]);\n        xs.erase(xs.begin());\n    }\n    return xs;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 234,
        "res": true,
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text, std::string char_str) {\n    long position = text.length();\n    char char_c = char_str[0];\n    if (text.find(char_c) != std::string::npos) {\n        position = text.find(char_c);\n        if (position > 0) {\n            position = (position + 1) % text.length();\n        }\n    }\n    return position;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"wduhzxlfk\"), (\"w\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 235,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpfgykg5ng.cpp:3:\n/tmp/tmpfgykg5ng.cpp: In function ‘int main()’:\n/tmp/tmpfgykg5ng.cpp:20:86: error: expected primary-expression before ‘)’ token\n   20 |     assert(candidate((std::vector<std::string>()), (std::vector<std::string>())) == ());\n      |                                                                                      ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::vector<std::string> array, std::vector<std::string> arr) {\n    std::vector<std::string> result;\n    for (std::string s : arr) {\n        std::string delimiter = arr[std::distance(array.begin(), std::find(array.begin(), array.end(), s))];\n        std::istringstream ss(s);\n        std::string token;\n        while (std::getline(ss, token, delimiter.c_str()[0])) {\n            if (token != \"\") {\n                result.push_back(token);\n            }\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>()), (std::vector<std::string>())) == ());\n}\n\n\n",
        "answer": "()"
    },
    {
        "id": 236,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpu5zukqv0.cpp:3:\n/tmp/tmpu5zukqv0.cpp: In function ‘int main()’:\n/tmp/tmpu5zukqv0.cpp:20:116: error: ‘ac8qk69wg’ was not declared in this scope\n   20 |     assert(candidate((std::vector<std::string>({(std::string)\"ac8\", (std::string)\"qk6\", (std::string)\"9wg\"}))) == (ac8qk69wg));\n      |                                                                                                                    ^~~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::vector<std::string> array) {\n    if (array.size() == 1) {\n        return array[0];\n    }\n    std::vector<std::string> result(array.begin(), array.end());\n    int i = 0;\n    while (i < array.size() - 1) {\n        for (int j = 0; j < 2; ++j) {\n            result[i * 2] = array[i];\n            i++;\n        }\n    }\n    return std::accumulate(result.begin(), result.end(), std::string(\"\"));\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"ac8\", (std::string)\"qk6\", (std::string)\"9wg\"}))) == (ac8qk69wg));\n}\n\n\n",
        "answer": "(ac8qk69wg)"
    },
    {
        "id": 237,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpbuj5juva.cpp:4:\n/tmp/tmpbuj5juva.cpp: In function ‘int main()’:\n/tmp/tmpbuj5juva.cpp:18:48: error: ‘u’ was not declared in this scope\n   18 |     assert(candidate((\"uzlwaqiaj\"), (\"u\")) == (u));\n      |                                                ^\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string character) {\n    if (text.find(character) != std::string::npos) {\n        std::string suff, pref;\n        int pos = text.find(character);\n        suff = text.substr(0, pos);\n        pref = text.substr(pos + character.size());\n        std::string tempPref = suff.substr(0, suff.size() - character.size()) + suff.substr(suff.size() - character.size() + 1);\n        return suff + character + character + tempPref + pref;\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"uzlwaqiaj\"), (\"u\")) == (u));\n}\n\n\n",
        "answer": "(u)"
    },
    {
        "id": 238,
        "res": false,
        "error": "Exception",
        "error_message": "tmp66qrxzmv: /tmp/tmp66qrxzmv.cpp:29: int main(): Assertion `candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1, (long)9, (long)4}), (std::vector<long>)std::vector<long>({(long)83, (long)0, (long)5}), (std::vector<long>)std::vector<long>({(long)9, (long)6, (long)100})})), (1)) == (1)' failed.\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_vector_long__long{\n    std::vector<long> f0;\n    long f1;\n    Union_std_vector_long__long(std::vector<long> _f0) : f0(_f0) {}\n    Union_std_vector_long__long(long _f1) : f1(_f1) {}\n    ~Union_std_vector_long__long() {}\n    bool operator==(const std::vector<long>& f) const {\n        return f0 == f;\n    }\n    bool operator==(const long& f) const {\n        return f1 == f;\n    }\n};\nUnion_std_vector_long__long f(std::vector<std::vector<long>> ls, long n) {\n    std::vector<long> answer;\n    for (const auto& i : ls) {\n        if (i[0] == n) {\n            answer = i;\n        }\n    }\n    return Union_std_vector_long__long(answer);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1, (long)9, (long)4}), (std::vector<long>)std::vector<long>({(long)83, (long)0, (long)5}), (std::vector<long>)std::vector<long>({(long)9, (long)6, (long)100})})), (1)) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 239,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmps4wytzmn.cpp:4:\n/tmp/tmps4wytzmn.cpp: In function ‘int main()’:\n/tmp/tmps4wytzmn.cpp:12:57: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   12 |     assert(candidate((\"0 t 1cos \"), (\"st 0      \\n  \")) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                       |\n      |                     std::__cxx11::basic_string<char>        int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmps4wytzmn.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmps4wytzmn.cpp:4:\n/tmp/tmps4wytzmn.cpp:12:62: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   12 |     assert(candidate((\"0 t 1cos \"), (\"st 0      \\n  \")) == (0));\n      |                                                              ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string froms) {\n    text.erase(0, text.find_first_not_of(froms));\n    text.erase(text.find_last_not_of(froms) + 1);\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"0 t 1cos \"), (\"st 0\t\\n  \")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 240,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp3_x7d2nd.cpp:4:\n/tmp/tmp3_x7d2nd.cpp: In function ‘int main()’:\n/tmp/tmp3_x7d2nd.cpp:20:32: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘double’)\n   20 |     assert(candidate((3.121f)) == (3.121));\n      |            ~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~\n      |                     |              |\n      |                     |              double\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp3_x7d2nd.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp3_x7d2nd.cpp:4:\n/tmp/tmp3_x7d2nd.cpp:20:41: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   20 |     assert(candidate((3.121f)) == (3.121));\n      |                                         ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n        ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(float float_number) {\n    std::stringstream ss;\n    ss << float_number;\n    std::string number = ss.str();\n    int dot = number.find('.');\n    if (dot != std::string::npos) {\n        if (number.size() - dot < 3) {\n            number.append((3 - (number.size() - dot)), '0');\n        }\n        return number;\n    }\n    return number + \".00\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((3.121f)) == (3.121));\n}\n\n\n",
        "answer": "(3.121)"
    },
    {
        "id": 241,
        "res": false,
        "error": "Exception",
        "error_message": "tmp6pc6px0i: /tmp/tmp6pc6px0i.cpp:10: int main(): Assertion `candidate((\"ED20 CW\")) == (\"20CW\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string postcode) {\n    size_t pos = postcode.find('C');\n    return postcode.substr(pos);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ED20 CW\")) == (\"20CW\"));\n}\n\n\n",
        "answer": "(\"20CW\")"
    },
    {
        "id": 242,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp38n68586.cpp:3:\n/tmp/tmp38n68586.cpp: In function ‘int main()’:\n/tmp/tmp38n68586.cpp:27:63: error: ‘udhv’ was not declared in this scope\n   27 |     assert(candidate((\"udhv zcvi nhtnfyd :erwuyawa pun\")) == (udhv zcvi nhtnfyd :erwuyawa pun));\n      |                                                               ^~~~\n/tmp/tmp38n68586.cpp:27:68: error: expected ‘)’ before ‘zcvi’\n   27 |     assert(candidate((\"udhv zcvi nhtnfyd :erwuyawa pun\")) == (udhv zcvi nhtnfyd :erwuyawa pun));\n      |                                                              ~     ^~~~\n/tmp/tmp38n68586.cpp:27:96: error: expected ‘)’ before ‘;’ token\n   27 |     assert(candidate((\"udhv zcvi nhtnfyd :erwuyawa pun\")) == (udhv zcvi nhtnfyd :erwuyawa pun));\n      |                                                                                                ^\n/tmp/tmp38n68586.cpp:27:96: error: expected ‘)’ before ‘;’ token\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp38n68586.cpp:3:\n/tmp/tmp38n68586.cpp:27:5: note: to match this ‘(’\n   27 |     assert(candidate((\"udhv zcvi nhtnfyd :erwuyawa pun\")) == (udhv zcvi nhtnfyd :erwuyawa pun));\n      |     ^~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string book) {\n    size_t pos = book.rfind(':');\n    if (pos != std::string::npos) {\n        std::string first = book.substr(0, pos);\n        std::string second = book.substr(pos + 1);\n\n        std::istringstream iss1(first);\n        std::istringstream iss2(second);\n\n        std::string lastWordFirst, firstWordSecond;\n\n        iss1 >> std::noskipws >> lastWordFirst;\n        iss2 >> firstWordSecond;\n\n        if (lastWordFirst == firstWordSecond) {\n            return f(first.substr(0, first.find_last_of(' ')) + ' ' + second);\n        }\n    }\n\n    return book;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"udhv zcvi nhtnfyd :erwuyawa pun\")) == (udhv zcvi nhtnfyd :erwuyawa pun));\n}\n\n\n",
        "answer": "(udhv zcvi nhtnfyd :erwuyawa pun)"
    },
    {
        "id": 243,
        "res": false,
        "error": "Exception",
        "error_message": "tmp_sg7t4dx: /tmp/tmp_sg7t4dx.cpp:10: int main(): Assertion `candidate((\"abc\"), (\"e\")) == (false)' failed.\n",
        "code": "\n#include <assert.h>\n#include <bits/stdc++.h>\n\nbool f(std::string text, std::string character) {\n    return std::islower(character[0]) && std::all_of(text.begin(), text.end(), [](char c) { return std::islower(c); });\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"abc\"), (\"e\")) == (false));\n}\n\n\n",
        "answer": "(false)"
    },
    {
        "id": 244,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpxmyetqan.cpp:3:\n/tmp/tmpxmyetqan.cpp: In function ‘int main()’:\n/tmp/tmpxmyetqan.cpp:16:39: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   16 |     assert(candidate((\"\"), (\"BC1ty\")) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                     |\n      |                     |                     int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpxmyetqan.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpxmyetqan.cpp:3:\n/tmp/tmpxmyetqan.cpp:16:44: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   16 |     assert(candidate((\"\"), (\"BC1ty\")) == (0));\n      |                                            ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string symbols) {\n    int count = 0;\n    if (!symbols.empty()) {\n        for (char c : symbols) {\n            count++;\n        }\n        text = std::string(text).append(text).append(text); // Equivalent to multiplying text by count\n    }\n    return text.insert(0, count*2, ' ').substr(2);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"\"), (\"BC1ty\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 245,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpko09i1ut.cpp:4:\n/tmp/tmpko09i1ut.cpp: In function ‘int main()’:\n/tmp/tmpko09i1ut.cpp:19:84: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘int’)\n   19 |     assert(candidate((\"abcdefghijklmnopqrstuvwxyz\"), (\"uppercased # % ^ @ ! vz.\")) == (1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                  |\n      |                     std::vector<std::__cxx11::basic_string<char> >                     int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpko09i1ut.cpp:4:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::__cxx11::basic_string<char> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::string alphabet, std::string s) {\n    std::vector<std::string> a;\n    for (char c : alphabet) {\n        if (std::toupper(c) != c && s.find(std::toupper(c)) != std::string::npos) {\n            a.push_back(std::string(1, c));\n        }\n    }\n    if (std::all_of(s.begin(), s.end(), ::isupper)) {\n        a.push_back(\"all_uppercased\");\n    }\n    return a;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"abcdefghijklmnopqrstuvwxyz\"), (\"uppercased # % ^ @ ! vz.\")) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 246,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string haystack, std::string needle) {\n    for (int i = static_cast<int>(haystack.find(needle)); i >= 0; --i) {\n        if (haystack.substr(i) == needle) {\n            return i;\n        }\n    }\n    return -1;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"345gerghjehg\"), (\"345\")) == (-1));\n}\n\n\n",
        "answer": "(-1)"
    },
    {
        "id": 247,
        "res": false,
        "error": "Exception",
        "error_message": "tmpmfcoioaz: /tmp/tmpmfcoioaz.cpp:15: int main(): Assertion `candidate((\"Boolean\")) == (\"Boolean\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s) {\n    if(std::all_of(s.begin(), s.end(), ::isalpha)) {\n        return \"yes\";\n    }\n    if(s.empty()) {\n        return \"str is empty\";\n    }\n    return \"no\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Boolean\")) == (\"Boolean\"));\n}\n\n\n",
        "answer": "(\"Boolean\")"
    },
    {
        "id": 248,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpflenbact.cpp:4:\n/tmp/tmpflenbact.cpp: In function ‘int main()’:\n/tmp/tmpflenbact.cpp:13:79: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   13 |     assert(candidate((std::vector<long>({(long)666})), (std::vector<long>())) == (666));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~\n      |                     |                                                             |\n      |                     std::vector<long int>                                         int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpflenbact.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpflenbact.cpp:4:\n/tmp/tmpflenbact.cpp:13:86: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   13 |     assert(candidate((std::vector<long>({(long)666})), (std::vector<long>())) == (666));\n      |                                                                                      ^\nIn f",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> a, std::vector<long> b) {\n    std::sort(a.begin(), a.end());\n    std::sort(b.begin(), b.end(), std::greater<>());\n    a.insert(a.end(), b.begin(), b.end());\n    return a;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)666})), (std::vector<long>())) == (666));\n}\n\n\n",
        "answer": "(666)"
    },
    {
        "id": 249,
        "res": false,
        "error": "Exception",
        "error_message": "tmplutfecxt: /tmp/tmplutfecxt.cpp:17: int main(): Assertion `candidate((\"FSA\")) == (std::map<std::string,long>({{\"a\", 3}, {\"b\", 2}, {\"A\", 1}}))' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,long> f(std::string s) {\n    std::map<std::string, long> count;\n    for (char i : s) {\n        if (std::islower(i)) {\n            count[std::string(1, std::tolower(i))] = std::count(s.begin(), s.end(), std::tolower(i)) + count[std::string(1, std::tolower(i))];\n        } else {\n            count[std::string(1, std::tolower(i))] = std::count(s.begin(), s.end(), std::toupper(i)) + count[std::string(1, std::tolower(i))];\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"FSA\")) == (std::map<std::string,long>({{\"a\", 3}, {\"b\", 2}, {\"A\", 1}})));\n}\n\n\n",
        "answer": "(std::map<std::string,long>({{\"a\", 3}, {\"b\", 2}, {\"A\", 1}}))"
    },
    {
        "id": 250,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp7i64t8th.cpp:4:\n/tmp/tmp7i64t8th.cpp: In function ‘int main()’:\n/tmp/tmp7i64t8th.cpp:14:35: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   14 |     assert(candidate((\"wlace A\")) == (7));\n      |            ~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                 |\n      |                     |                 int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp7i64t8th.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp7i64t8th.cpp:4:\n/tmp/tmp7i64t8th.cpp:14:40: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((\"wlace A\")) == (7));\n      |                                        ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n            ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    int count = text.length();\n    for (int i = -count + 1; i < 0; i++) {\n        text += text[text.length() + i];\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"wlace A\")) == (7));\n}\n\n\n",
        "answer": "(7)"
    },
    {
        "id": 251,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpkmh1m0gn.cpp:4:\n/tmp/tmpkmh1m0gn.cpp: In function ‘int main()’:\n/tmp/tmpkmh1m0gn.cpp:25:186: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   25 |     assert(candidate((std::vector<std::vector<std::string>>({(std::vector<std::string>)std::vector<std::string>({(std::string)\"Marie\", (std::string)\"Nelson\", (std::string)\"Oscar\"})}))) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                                                                                        |\n      |                     std::__cxx11::basic_string<char>                                                                                                                                         int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpkmh1m0gn.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/inclu",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::vector<std::vector<std::string>> messages) {\n    std::string phone_code = \"+353\";\n    std::vector<std::string> result;\n    for (auto& message : messages) {\n        for (auto& ch : phone_code) {\n            message.push_back(std::string(1, ch));\n        }\n        result.push_back(message[0]);\n        for (size_t i = 1; i < message.size(); ++i) {\n            result.back() += \";\" + message[i];\n        }\n    }\n    std::string final_result = result[0];\n    for (size_t i = 1; i < result.size(); ++i) {\n        final_result += \". \" + result[i];\n    }\n    return final_result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::vector<std::string>>({(std::vector<std::string>)std::vector<std::string>({(std::string)\"Marie\", (std::string)\"Nelson\", (std::string)\"Oscar\"})}))) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 252,
        "res": 0
    },
    {
        "id": 253,
        "res": false,
        "error": "Exception",
        "error_message": "tmprnnuad0b: /tmp/tmprnnuad0b.cpp:13: int main(): Assertion `candidate((\"kumwwfv\"), (\"k\")) == (\"kumwfv\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string pref) {\n    size_t length = pref.length();\n    if (pref == text.substr(0, length)) {\n        return text.substr(length);\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"kumwwfv\"), (\"k\")) == (\"kumwfv\"));\n}\n\n\n",
        "answer": "(\"kumwfv\")"
    },
    {
        "id": 254,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpilvyaiua.cpp:4:\n/tmp/tmpilvyaiua.cpp: In function ‘int main()’:\n/tmp/tmpilvyaiua.cpp:22:58: error: ‘lower’ was not declared in this scope; did you mean ‘tolower’?\n   22 |     assert(candidate((\"upper case\"), (\"lower case\")) == (lower case));\n      |                                                          ^~~~~\n/tmp/tmpilvyaiua.cpp:22:64: error: expected ‘)’ before ‘case’\n   22 |     assert(candidate((\"upper case\"), (\"lower case\")) == (lower case));\n      |                                                         ~      ^~~~\n/tmp/tmpilvyaiua.cpp:22:70: error: expected ‘)’ before ‘;’ token\n   22 |     assert(candidate((\"upper case\"), (\"lower case\")) == (lower case));\n      |                                                                      ^\n/tmp/tmpilvyaiua.cpp:22:70: error: expected ‘)’ before ‘;’ token\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpilvyaiua.cpp:4:\n/tmp/tmpilvyaiua.cpp:22:5: note: to match this ‘(’\n   22 |     assert(candidate((\"upper case\"), (\"lower case\")) == (lower case));\n      |     ^~~~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string repl) {\n    std::transform(text.begin(), text.end(), text.begin(), ::tolower);\n    std::transform(repl.begin(), repl.end(), repl.begin(), ::tolower);\n\n    std::map<char, char> trans;\n    for (size_t i = 0; i < text.size(); ++i) {\n        trans[text[i]] = repl[i % repl.size()];\n    }\n\n    for (size_t i = 0; i < text.size(); ++i) {\n        text[i] = trans[text[i]];\n    }\n\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"upper case\"), (\"lower case\")) == (lower case));\n}\n\n\n",
        "answer": "(lower case)"
    },
    {
        "id": 255,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpwb2mjehz.cpp:3:\n/tmp/tmpwb2mjehz.cpp: In function ‘int main()’:\n/tmp/tmpwb2mjehz.cpp:15:46: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   15 |     assert(candidate((\"no asw\"), (\"j\"), (1)) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                            |\n      |                     |                            int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpwb2mjehz.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpwb2mjehz.cpp:3:\n/tmp/tmpwb2mjehz.cpp:15:51: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   15 |     assert(candidate((\"no asw\"), (\"j\"), (1)) == (0));\n      |                                                   ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string fill, long size) {\n    if (size < 0) {\n        size = -size;\n    }\n    if (text.length() > size) {\n        return text.substr(text.length() - size);\n    }\n    return text.insert(0, size - text.length(), fill[0]);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"no asw\"), (\"j\"), (1)) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 256,
        "res": true,
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text, std::string sub) {\n    long a = 0;\n    long b = text.length() - 1;\n\n    while (a <= b) {\n        long c = (a + b) / 2;\n        if (text.rfind(sub, c) != std::string::npos && text.rfind(sub, c) >= c) {\n            a = c + 1;\n        } else {\n            b = c - 1;\n        }\n    }\n\n    return a;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"dorfunctions\"), (\"2\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 257,
        "res": 0
    },
    {
        "id": 258,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp0aw4vf0b.cpp:4:\n/tmp/tmp0aw4vf0b.cpp: In function ‘int main()’:\n/tmp/tmp0aw4vf0b.cpp:20:96: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   20 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)7, (long)9})), (3), (3), (2)) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                              |\n      |                     std::vector<long int>                                                          int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp0aw4vf0b.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp0aw4vf0b.cpp:4:\n/tmp/tmp0aw4vf0b.cpp:20:101: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   20 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)7, (long)9})), (3), (3), (2)) == (3));\n      |            ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> L, long m, long start, long step) {\n    L.insert(L.begin() + start, m);\n    for (long x = start - 1; x > 0; x -= step) {\n        start -= 1;\n        auto it = std::find(L.begin(), L.end(), m);\n        if (it != L.end()) {\n            auto index = std::distance(L.begin(), it);\n            L.insert(L.begin() + start, *(it - 1));\n            L.erase(it - 1);\n        }\n    }\n    return L;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)7, (long)9})), (3), (3), (2)) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 259,
        "res": false,
        "error": "Exception",
        "error_message": "tmp03y0vkgg: /tmp/tmp03y0vkgg.cpp:18: int main(): Assertion `candidate((\"String matching is a big part of RexEx library.\")) == (\"String-matching\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::vector<char> new_text;\n    for (char character : text) {\n        if (isupper(character)) {\n            new_text.insert(new_text.begin() + new_text.size() / 2, character);\n        }\n    }\n    if (new_text.empty()) {\n        new_text = {'-'};\n    }\n    return std::string(new_text.begin(), new_text.end());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"String matching is a big part of RexEx library.\")) == (\"String-matching\"));\n}\n\n\n",
        "answer": "(\"String-matching\")"
    },
    {
        "id": 260,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp7ua597o1.cpp:3:\n/tmp/tmp7ua597o1.cpp: In function ‘int main()’:\n/tmp/tmp7ua597o1.cpp:10:115: error: expected ‘)’ before numeric constant\n   10 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6})), (4), (2)) == (2 3));\n      |                                                                                                                ~  ^\n/tmp/tmp7ua597o1.cpp:10:109: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   10 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6})), (4), (2)) == (2 3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                           |\n      |                     std::vector<long int>                                                                       int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp7ua597o1.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 fro",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums, long start, long k) {\n    std::reverse(nums.begin() + start, nums.begin() + start + k);\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6})), (4), (2)) == (2 3));\n}\n\n\n",
        "answer": "(2 3)"
    },
    {
        "id": 261,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpidm8glqj.cpp:3:\n/tmp/tmpidm8glqj.cpp: In function ‘int main()’:\n/tmp/tmpidm8glqj.cpp:18:119: error: no match for ‘operator==’ (operand types are ‘std::tuple<std::vector<long int, std::allocator<long int> >, std::vector<long int, std::allocator<long int> > >’ and ‘std::vector<long int>’)\n   18 |     assert(candidate((std::vector<long>({(long)12, (long)516, (long)5, (long)2, (long)3, (long)214, (long)51})), (5)) == (std::vector<long>({(long)5, (long)516, (long)5, (long)2, (long)3, (long)214, (long)51})));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                                                                                          |\n      |                     |                                                                                                          std::vector<long int>\n      |                     std::tuple<std::vector<long int, std::allocator<long int> >, std::vector<long int, std::allocator<long int> > >\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpidm8glqj.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bi",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::tuple<std::vector<long>, std::vector<long>> f(std::vector<long> nums, long target) {\n    std::vector<long> lows, higgs;\n    for (long i : nums) {\n        if (i < target) {\n            lows.push_back(i);\n        } else {\n            higgs.push_back(i);\n        }\n    }\n    lows.clear();\n    return std::make_tuple(lows, higgs);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)12, (long)516, (long)5, (long)2, (long)3, (long)214, (long)51})), (5)) == (std::vector<long>({(long)5, (long)516, (long)5, (long)2, (long)3, (long)214, (long)51})));\n}\n\n\n",
        "answer": "(std::vector<long>({(long)5, (long)516, (long)5, (long)2, (long)3, (long)214, (long)51}))"
    },
    {
        "id": 262,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpej_crs19.cpp:3:\n/tmp/tmpej_crs19.cpp: In function ‘int main()’:\n/tmp/tmpej_crs19.cpp:15:63: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   15 |     assert(candidate((std::vector<long>({(long)4, (long)5}))) == (5));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                             |\n      |                     std::__cxx11::basic_string<char>              int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpej_crs19.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpej_crs19.cpp:3:\n/tmp/tmpej_crs19.cpp:15:68: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   15 |     assert(candidate((std::vector<long>({(long)4, (long)5}))) == (5));\n      |                                                                    ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 fro",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::vector<long> nums) {\n    int count = nums.size();\n    std::unordered_map<int, std::string> score = {{0, \"F\"}, {1, \"E\"}, {2, \"D\"}, {3, \"C\"}, {4, \"B\"}, {5, \"A\"}, {6, \"\"}};\n    std::vector<std::string> result;\n    for (int i = 0; i < count; i++) {\n        result.push_back(score[nums[i]]);\n    }\n    return std::accumulate(result.begin(), result.end(), std::string(\"\"));\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)4, (long)5}))) == (5));\n}\n\n\n",
        "answer": "(5)"
    },
    {
        "id": 263,
        "res": 0
    },
    {
        "id": 264,
        "res": false,
        "error": "Exception",
        "error_message": "tmp4c3gi14j: /tmp/tmp4c3gi14j.cpp:12: int main(): Assertion `candidate((\"papera\")) == (\"PAttA\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string test_str) {\n    std::string s = test_str;\n    std::replace(s.begin(), s.end(), 'a', 'A');\n    std::replace(s.begin(), s.end(), 'e', 'A');\n    return s;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"papera\")) == (\"PAttA\"));\n}\n\n\n",
        "answer": "(\"PAttA\")"
    },
    {
        "id": 265,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmppjvjr0qd.cpp:3:\n/tmp/tmppjvjr0qd.cpp: In function ‘int main()’:\n/tmp/tmppjvjr0qd.cpp:15:76: error: no match for ‘operator==’ (operand types are ‘std::map<long int, long int>’ and ‘int’)\n   15 |     assert(candidate((std::map<long,long>({{1, 2}, {2, 4}, {3, 3}})), (3)) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                          |\n      |                     std::map<long int, long int>                               int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmppjvjr0qd.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmppjvjr0qd.cpp:3:\n/tmp/tmppjvjr0qd.cpp:15:81: note:   ‘std::map<long int, long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   15 |     assert(candidate((std::map<long,long>({{1, 2}, {2, 4}, {3, 3}})), (3)) == (3));\n      |                                                                                 ^\nIn file included",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<long,long> f(std::map<long,long> d, long k) {\n    std::map<long, long> new_d;\n    for(auto pair : d) {\n        if (pair.first < k) {\n            new_d[pair.first] = pair.second;\n        }\n    }\n    return new_d;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,long>({{1, 2}, {2, 4}, {3, 3}})), (3)) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 266,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpslxm9785.cpp:3:\n/tmp/tmpslxm9785.cpp: In function ‘int main()’:\n/tmp/tmpslxm9785.cpp:14:91: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   14 |     assert(candidate((std::vector<long>({(long)2, (long)3, (long)4, (long)6, (long)-2}))) == (6, 4, 2, 3, 6, -2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~\n      |                     |                                                                                      |\n      |                     std::vector<long int>                                                                  int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpslxm9785.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpslxm9785.cpp:3:\n/tmp/tmpslxm9785.cpp:14:112: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((std::vector<long>({(long)2, (long)3, (long)4, (long)6, (long)-2",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    for (int i = nums.size()-1; i >= 0; i--) {\n        if (nums[i] % 2 == 1) {\n            nums.insert(nums.begin() + i + 1, nums[i]);\n        }\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)2, (long)3, (long)4, (long)6, (long)-2}))) == (6, 4, 2, 3, 6, -2));\n}\n\n\n",
        "answer": "(6, 4, 2, 3, 6, -2)"
    },
    {
        "id": 267,
        "res": false,
        "error": "Exception",
        "error_message": "tmpg0puyxc_: /tmp/tmpg0puyxc_.cpp:12: int main(): Assertion `candidate((\"sowpf\"), (-7)) == (\"sowpf \")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long space) {\n    if (space < 0) {\n        return text;\n    }\n    return text.append(space, ' ');\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"sowpf\"), (-7)) == (\"sowpf \"));\n}\n\n\n",
        "answer": "(\"sowpf \")"
    },
    {
        "id": 268,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpxvb4k50t.cpp:4:\n/tmp/tmpxvb4k50t.cpp: In function ‘int main()’:\n/tmp/tmpxvb4k50t.cpp:23:51: error: ‘h’ was not declared in this scope\n   23 |     assert(candidate((\"h grateful k\"), (\" \")) == (h/a/k));\n      |                                                   ^\n/tmp/tmpxvb4k50t.cpp:23:53: error: ‘a’ was not declared in this scope\n   23 |     assert(candidate((\"h grateful k\"), (\" \")) == (h/a/k));\n      |                                                     ^\n/tmp/tmpxvb4k50t.cpp:23:55: error: ‘k’ was not declared in this scope\n   23 |     assert(candidate((\"h grateful k\"), (\" \")) == (h/a/k));\n      |                                                       ^\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s, std::string separator) {\n    for (size_t i = 0; i < s.length(); i++) {\n        if (s[i] == separator[0]) {\n            std::string new_s = s;\n            new_s[i] = '/';\n            std::string result = \"\";\n            for (char& c : new_s) {\n                result += c;\n                result += ' ';\n            }\n            result.pop_back(); // remove the trailing space\n            return result;\n        }\n    }\n    return NULL;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"h grateful k\"), (\" \")) == (h/a/k));\n}\n\n\n",
        "answer": "(h/a/k)"
    },
    {
        "id": 269,
        "res": 0
    },
    {
        "id": 270,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp7exawf_b.cpp:4:\n/tmp/tmp7exawf_b.cpp: In function ‘int main()’:\n/tmp/tmp7exawf_b.cpp:15:51: error: expected primary-expression before ‘)’ token\n   15 |     assert(candidate((std::map<long,long>())) == ());\n      |                                                   ^\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<long,long> f(std::map<long,long> dic) {\n    std::map<long,long> d;\n    while (!dic.empty()) {\n        d[dic.begin()->first] = dic.begin()->second;\n        dic.erase(dic.begin());\n    }\n    return d;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,long>())) == ());\n}\n\n\n",
        "answer": "()"
    },
    {
        "id": 271,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpey09rnco.cpp:3:\n/tmp/tmpey09rnco.cpp: In function ‘int main()’:\n/tmp/tmpey09rnco.cpp:14:44: error: ‘uufhl’ was not declared in this scope\n   14 |     assert(candidate((\"uufhl\"), (\"l\")) == (uufhl));\n      |                                            ^~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string c) {\n    std::vector<char> ls(text.begin(), text.end());\n    if (text.find(c) == std::string::npos) {\n        throw std::invalid_argument(\"Text has no \" + c);\n    }\n    ls.erase(ls.begin() + text.rfind(c));\n    return std::string(ls.begin(), ls.end());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"uufhl\"), (\"l\")) == (uufhl));\n}\n\n\n",
        "answer": "(uufhl)"
    },
    {
        "id": 272,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpzpoe7chg.cpp:4:\n/tmp/tmpzpoe7chg.cpp: In function ‘int main()’:\n/tmp/tmpzpoe7chg.cpp:15:164: error: expected ‘)’ before numeric constant\n   15 |     assert(candidate((std::vector<long>({(long)9, (long)7, (long)5, (long)3, (long)1})), (std::vector<long>({(long)2, (long)4, (long)6, (long)8, (long)0}))) == (9 7 5 3 1 2 4 6 8 0));\n      |                                                                                                                                                                 ~  ^\n/tmp/tmpzpoe7chg.cpp:15:158: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   15 |     assert(candidate((std::vector<long>({(long)9, (long)7, (long)5, (long)3, (long)1})), (std::vector<long>({(long)2, (long)4, (long)6, (long)8, (long)0}))) == (9 7 5 3 1 2 4 6 8 0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                                                                            |\n      |                     std::vector<long int>                                                                                                                        int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpzpoe7chg.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> base_list, std::vector<long> nums) {\n    base_list.insert(base_list.end(), nums.begin(), nums.end());\n    std::vector<long> res = base_list;\n    for (int i = -nums.size(); i < 0; i++) {\n        res.push_back(res[i + res.size()]);\n    }\n    return res;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)9, (long)7, (long)5, (long)3, (long)1})), (std::vector<long>({(long)2, (long)4, (long)6, (long)8, (long)0}))) == (9 7 5 3 1 2 4 6 8 0));\n}\n\n\n",
        "answer": "(9 7 5 3 1 2 4 6 8 0)"
    },
    {
        "id": 273,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpt18p1t2_.cpp:3:\n/tmp/tmpt18p1t2_.cpp: In function ‘int main()’:\n/tmp/tmpt18p1t2_.cpp:19:72: error: ‘net’ was not declared in this scope\n   19 |     assert(candidate((\".NET\")) == (std::nth_element(\"net\", 2, std::end(net))));\n      |                                                                        ^~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string name) {\n    std::string new_name = \"\";\n    std::reverse(name.begin(), name.end());\n    for (int i = 0; i < name.size(); i++) {\n        char n = name[i];\n        if (n != '.' && std::count(new_name.begin(), new_name.end(), '.') < 2) {\n            new_name = n + new_name;\n        } else {\n            break;\n        }\n    }\n    return new_name;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\".NET\")) == (std::nth_element(\"net\", 2, std::end(net))));\n}\n\n\n",
        "answer": "(std::nth_element(\"net\", 2, std::end(net)))"
    },
    {
        "id": 274,
        "res": false,
        "error": "Exception",
        "error_message": "tmpfn38qt23: /tmp/tmpfn38qt23.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)1, (long)2, (long)3})), (4)) == (1)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> nums, long target) {\n    long count = 0;\n    for (long n1 : nums) {\n        for (long n2 : nums) {\n            count += (n1 + n2 == target);\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})), (4)) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 275,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpvhrk0od5.cpp:3:\n/tmp/tmpvhrk0od5.cpp: In function ‘int main()’:\n/tmp/tmpvhrk0od5.cpp:13:85: error: no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, long int>’ and ‘const char [2]’)\n   13 |     assert(candidate((std::map<long,std::string>({{-1, \"a\"}, {0, \"b\"}, {1, \"c\"}}))) == (-1, \"a\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~\n      |                     |                                                                     |\n      |                     std::map<std::__cxx11::basic_string<char>, long int>                  const char [2]\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpvhrk0od5.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::pair<const std::__cxx11::basic_string<char>, long int> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:4",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,long> f(std::map<long,std::string> dic) {\n    std::map<std::string, long> dic2;\n    for(auto const& pair : dic) {\n        dic2[pair.second] = pair.first;\n    }\n    return dic2;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,std::string>({{-1, \"a\"}, {0, \"b\"}, {1, \"c\"}}))) == (-1, \"a\"));\n}\n\n\n",
        "answer": "(-1, \"a\")"
    },
    {
        "id": 276,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp6v812i66.cpp:3:\n/tmp/tmp6v812i66.cpp: In function ‘int main()’:\n/tmp/tmp6v812i66.cpp:14:49: error: expected primary-expression before ‘)’ token\n   14 |     assert(candidate((std::vector<long>())) == ());\n      |                                                 ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> a) {\n    if (a.size() >= 2 && a[0] > 0 && a[1] > 0) {\n        std::reverse(a.begin(), a.end());\n        return a;\n    }\n    a.push_back(0);\n    return a;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>())) == ());\n}\n\n\n",
        "answer": "()"
    },
    {
        "id": 277,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp4pr6ptgk.cpp:3:\n/tmp/tmp4pr6ptgk.cpp: In function ‘int main()’:\n/tmp/tmp4pr6ptgk.cpp:13:86: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   13 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})), (1)) == (1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                    |\n      |                     std::vector<long int>                                                int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp4pr6ptgk.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp4pr6ptgk.cpp:3:\n/tmp/tmp4pr6ptgk.cpp:13:91: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   13 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})), (1)) == (1));\n      |                                                               ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> lst, long mode) {\n    std::vector<long> result(lst.begin(), lst.end());\n    if (mode) {\n        std::reverse(result.begin(), result.end());\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})), (1)) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 278,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpypta0cnw.cpp:3:\n/tmp/tmpypta0cnw.cpp: In function ‘int main()’:\n/tmp/tmpypta0cnw.cpp:19:129: error: no match for ‘operator==’ (operand types are ‘std::map<long int, std::vector<long int> >’ and ‘int’)\n   19 |     assert(candidate((std::vector<long>({(long)0, (long)132})), (std::vector<long>({(long)5, (long)991, (long)32, (long)997}))) == (132, 5, 991, 797));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~\n      |                     |                                                                                                                          |\n      |                     std::map<long int, std::vector<long int> >                                                                                 int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpypta0cnw.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::pair<const long int, std::vector<long int> > >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |  ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<long,std::vector<long>> f(std::vector<long> array1, std::vector<long> array2) {\n    std::map<long, std::vector<long>> result;\n    for (long key : array1) {\n        std::vector<long> values;\n        for (long el : array2) {\n            if (key * 2 > el) {\n                values.push_back(el);\n            }\n        }\n        result[key] = values;\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)0, (long)132})), (std::vector<long>({(long)5, (long)991, (long)32, (long)997}))) == (132, 5, 991, 797));\n}\n\n\n",
        "answer": "(132, 5, 991, 797)"
    },
    {
        "id": 279,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpb9q5eye6.cpp:3:\n/tmp/tmpb9q5eye6.cpp: In function ‘int main()’:\n/tmp/tmpb9q5eye6.cpp:18:32: error: expected primary-expression before ‘)’ token\n   18 |     assert(candidate((\"\")) == ());\n      |                                ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string ans = \"\";\n    while (text != \"\") {\n        size_t pos = text.find_first_of('(');\n        std::string x = text.substr(0, pos);\n        text = text.substr(pos);\n        ans = x + text[0] + ans;\n        ans = ans + '|' + text[0] + ans;\n        text = text.substr(1);\n    }\n    return ans;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"\")) == ());\n}\n\n\n",
        "answer": "()"
    },
    {
        "id": 280,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpc7pxlp9u.cpp:3:\n/tmp/tmpc7pxlp9u.cpp: In function ‘int main()’:\n/tmp/tmpc7pxlp9u.cpp:15:76: error: ‘i’ was not declared in this scope\n   15 |     assert(candidate((\"00000000 00000000 01101100 01100101 01101110\")) == (i));\n      |                                                                            ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string field = text;\n    std::string g = text;\n    field.erase(std::remove(field.begin(), field.end(), ' '), field.end());\n    std::replace(g.begin(), g.end(), '0', ' ');\n    std::replace(text.begin(), text.end(), '1', 'i');\n\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"00000000 00000000 01101100 01100101 01101110\")) == (i));\n}\n\n\n",
        "answer": "(i)"
    },
    {
        "id": 281,
        "res": 0
    },
    {
        "id": 282,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string s1, std::string s2) {\n    int position = 1;\n    int count = 0;\n    while (position > 0) {\n        position = s1.find(s2, position);\n        count += 1;\n        position += 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"xinyyexyxx\"), (\"xx\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 283,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpab2ah12c.cpp:3:\n/tmp/tmpab2ah12c.cpp: In function ‘int main()’:\n/tmp/tmpab2ah12c.cpp:13:160: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   13 |     assert(candidate((std::map<std::string,long>({{\"Iron Man\", 4}, {\"Captain America\", 3}, {\"Black Panther\", 0}, {\"Thor\", 1}, {\"Ant-Man\", 6}})), (\"Iron Man\")) == (4));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                                                              |\n      |                     std::__cxx11::basic_string<char>                                                                                                               int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpab2ah12c.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpab2ah12c.cpp:3:\n/tmp/tmpab2ah",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::map<std::string,long> dictionary, std::string key) {\n    dictionary.erase(key);\n    if (std::min_element(dictionary.begin(), dictionary.end())->first == key) {\n        key = dictionary.begin()->first;\n    }\n    return key;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>({{\"Iron Man\", 4}, {\"Captain America\", 3}, {\"Black Panther\", 0}, {\"Thor\", 1}, {\"Ant-Man\", 6}})), (\"Iron Man\")) == (4));\n}\n\n\n",
        "answer": "(4)"
    },
    {
        "id": 284,
        "res": false,
        "error": "Exception",
        "error_message": "tmpshi8wtvu: /tmp/tmpshi8wtvu.cpp:16: int main(): Assertion `candidate((\"bestest\"), (\"bestest\")) == (\"bestest\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string prefix) {\n    int idx = 0;\n    for (char letter : prefix) {\n        if (text[idx] != letter) {\n            return \"\";\n        }\n        idx++;\n    }\n    return text.substr(idx);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"bestest\"), (\"bestest\")) == (\"bestest\"));\n}\n\n\n",
        "answer": "(\"bestest\")"
    },
    {
        "id": 285,
        "res": false,
        "error": "Exception",
        "error_message": "tmpttbqnkqq: /tmp/tmpttbqnkqq.cpp:9: int main(): Assertion `candidate((\"This be Pirate's Speak for 'help'!\"), (\" \")) == (1)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text, std::string ch) {\n    return std::count(text.begin(), text.end(), ch[0]);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"This be Pirate's Speak for 'help'!\"), (\" \")) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 286,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp9v07m5r_.cpp:4:\n/tmp/tmp9v07m5r_.cpp: In function ‘int main()’:\n/tmp/tmp9v07m5r_.cpp:27:147: error: no match for ‘operator==’ (operand types are ‘Union_std_string_std_vector_long_’ and ‘int’)\n   27 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8, (long)9, (long)10})), (11), (4)) == (11));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                                                                 |\n      |                     Union_std_string_std_vector_long_                                                                                                 int\n/tmp/tmp9v07m5r_.cpp:11:10: note: candidate: ‘bool Union_std_string_std_vector_long_::operator==(std::string)’\n   11 |     bool operator==(std::string f) {\n      |          ^~~~~~~~\n/tmp/tmp9v07m5r_.cpp:11:33: note:   no known conversion for argument 1 from ‘int’ to ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’}\n   11 |     bool operator==(std::string f) {\n      |                     ~~~~~~~~~~~~^\n/tmp/tmp9v07m5r_.cpp:14:10: note: candidate: ‘bool Union_std_string_std_vector_long_::operator==(std::vector<long int>)’\n   14 |     bool operator==(std::vector<long> f) {\n      |          ^~~~~~~~\n/tmp/tmp9v07m5r_.cpp:14:39: note:   no known conversion for argument 1 from ‘int’ to ‘std::vector<long int>’\n   14 |     bool operator==(std::vector<long> f) {\n      |                     ~~~~~~~~~~~~~~~~~~^\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_std_vector_long_{\n    std::string f0;\n    std::vector<long> f1;\n    Union_std_string_std_vector_long_(std::string _f0) : f0(_f0) {}\n    Union_std_string_std_vector_long_(std::vector<long> _f1) : f1(_f1) {}\n    ~Union_std_string_std_vector_long_() {}\n    bool operator==(std::string f) {\n        return f0 == f;\n    }\n    bool operator==(std::vector<long> f) {\n        return f1 == f;\n    }\n};\nUnion_std_string_std_vector_long_ f(std::vector<long> array, long x, long i) {\n    if (i < -(int)array.size() || i > (int)array.size() - 1) {\n        return std::string(\"no\");\n    }\n    array[i] = x;\n    return array;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8, (long)9, (long)10})), (11), (4)) == (11));\n}\n\n\n",
        "answer": "(11)"
    },
    {
        "id": 287,
        "res": false,
        "error": "Exception",
        "error_message": "tmpcgoy6bwo: /tmp/tmpcgoy6bwo.cpp:14: int main(): Assertion `candidate((\"Pinneaple\")) == (\"pinneapLE\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string name) {\n    if(std::all_of(name.begin(), name.end(), ::islower)) {\n        std::transform(name.begin(), name.end(), name.begin(), ::toupper);\n    } else {\n        std::transform(name.begin(), name.end(), name.begin(), ::tolower);\n    }\n    return name;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Pinneaple\")) == (\"pinneapLE\"));\n}\n\n\n",
        "answer": "(\"pinneapLE\")"
    },
    {
        "id": 288,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpotzi3w3p.cpp:3:\n/tmp/tmpotzi3w3p.cpp: In function ‘int main()’:\n/tmp/tmpotzi3w3p.cpp:21:112: error: no match for ‘operator==’ (operand types are ‘std::vector<std::tuple<long int, long int> >’ and ‘int’)\n   21 |     assert(candidate((std::map<long,long>({{55, 4}, {4, 555}, {1, 3}, {99, 21}, {499, 4}, {71, 7}, {12, 6}}))) == (55, 4));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~\n      |                     |                                                                                                |\n      |                     std::vector<std::tuple<long int, long int> >                                                     int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpotzi3w3p.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpotzi3w3p.cpp:3:\n/tmp/tmpotzi3w3p.cpp:21:121: note:   ‘std::vector<std::tuple<long int, long int> >’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   21 | ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::tuple<long, long>> f(std::map<long,long> d) {\n    std::vector<std::tuple<long, long>> sorted_pairs(d.begin(), d.end());\n    std::sort(sorted_pairs.begin(), sorted_pairs.end(), [](const std::tuple<long, long>& x, const std::tuple<long, long>& y) {\n        return std::to_string(std::get<0>(x) + std::get<1>(x)).length() < std::to_string(std::get<0>(y) + std::get<1>(y)).length();\n    });\n\n    std::vector<std::tuple<long, long>> result;\n    for (const auto& pair : sorted_pairs) {\n        if (std::get<0>(pair) < std::get<1>(pair)) {\n            result.push_back(pair);\n        }\n    }\n\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,long>({{55, 4}, {4, 555}, {1, 3}, {99, 21}, {499, 4}, {71, 7}, {12, 6}}))) == (55, 4));\n}\n\n\n",
        "answer": "(55, 4)"
    },
    {
        "id": 289,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpgt5_8obw.cpp:4:\n/tmp/tmpgt5_8obw.cpp: In function ‘int main()’:\n/tmp/tmpgt5_8obw.cpp:11:31: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   11 |     assert(candidate((\"148\")) == (3));\n      |            ~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |             |\n      |                     |             int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpgt5_8obw.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpgt5_8obw.cpp:4:\n/tmp/tmpgt5_8obw.cpp:11:36: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   11 |     assert(candidate((\"148\")) == (3));\n      |                                    ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string code) {\n    std::string encoded = \"b'\" + code + \"'\";\n    return code + \": \" + encoded;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"148\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 290,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpj4mpqvod.cpp:3:\n/tmp/tmpj4mpqvod.cpp: In function ‘int main()’:\n/tmp/tmpj4mpqvod.cpp:17:50: error: ‘ABIXAAAY’ was not declared in this scope\n   17 |     assert(candidate((\"abixaaaily\"), (\"al\")) == (ABIXAAAY));\n      |                                                  ^~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string prefix) {\n    if (text.find(prefix) == 0) {\n        return text.substr(prefix.length());\n    } else if (text.find(prefix) != std::string::npos) {\n        size_t pos = text.find(prefix);\n        return text.erase(pos, prefix.length()).c_str();\n    } else {\n        std::transform(text.begin(), text.end(), text.begin(), ::toupper);\n        return text;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"abixaaaily\"), (\"al\")) == (ABIXAAAY));\n}\n\n\n",
        "answer": "(ABIXAAAY)"
    },
    {
        "id": 291,
        "res": 0
    },
    {
        "id": 292,
        "res": false,
        "error": "Exception",
        "error_message": "tmpm02lir7h: /tmp/tmpm02lir7h.cpp:13: int main(): Assertion `candidate((\"5f83u23saa\")) == (\"*****\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string new_text;\n    for (char c : text) {\n        new_text += (std::isdigit(c) ? c : '*');\n    }\n    return new_text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"5f83u23saa\")) == (\"*****\"));\n}\n\n\n",
        "answer": "(\"*****\")"
    },
    {
        "id": 293,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpf_5v3u9t.cpp:3:\n/tmp/tmpf_5v3u9t.cpp: In function ‘int main()’:\n/tmp/tmpf_5v3u9t.cpp:18:32: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   18 |     assert(candidate((\"dEXE\")) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |              |\n      |                     |              int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpf_5v3u9t.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpf_5v3u9t.cpp:3:\n/tmp/tmpf_5v3u9t.cpp:18:37: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   18 |     assert(candidate((\"dEXE\")) == (0));\n      |                                     ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/inc",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string s = text;\n    std::transform(s.begin(), s.end(), s.begin(), ::tolower);\n\n    for (size_t i = 0; i < s.length(); ++i) {\n        if (s[i] == 'x') {\n            return \"no\";\n        }\n    }\n\n    return std::all_of(text.begin(), text.end(), ::isupper) ? \"1\" : \"0\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"dEXE\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 294,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpiywmzf04.cpp:4:\n/tmp/tmpiywmzf04.cpp: In function ‘int main()’:\n/tmp/tmpiywmzf04.cpp:36:61: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   36 |     assert(candidate((\"x\"), (\"$\"), (\"2xz&5H3*1a@#a*1hris\")) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                           |\n      |                     std::__cxx11::basic_string<char>            int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpiywmzf04.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpiywmzf04.cpp:4:\n/tmp/tmpiywmzf04.cpp:36:66: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   36 |     assert(candidate((\"x\"), (\"$\"), (\"2xz&5H3*1a@#a*1hris\")) == (2));\n      |                                                                  ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/inclu",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string n, std::string m, std::string text) {\n    if (text.empty() || (text.find_first_not_of(' ') == text.npos)) {\n        return text;\n    }\n    std::string head = text.substr(0, 1), mid = text.substr(1, text.length() - 2), tail = text.substr(text.length() - 1);\n    std::string joined = \"\";\n    for (char c : head) {\n        if (c == n[0]) {\n            joined += m;\n        } else {\n            joined += c;\n        }\n    }\n    for (char c : mid) {\n        if (c == n[0]) {\n            joined += m;\n        } else {\n            joined += c;\n        }\n    }\n    for (char c : tail) {\n        if (c == n[0]) {\n            joined += m;\n        } else {\n            joined += c;\n        }\n    }\n    return joined;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"x\"), (\"$\"), (\"2xz&5H3*1a@#a*1hris\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 295,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp2ggx2p2s.cpp:3:\n/tmp/tmp2ggx2p2s.cpp: In function ‘int main()’:\n/tmp/tmp2ggx2p2s.cpp:19:207: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘int’)\n   19 |     assert(candidate((std::vector<std::string>({(std::string)\"apple\", (std::string)\"apple\", (std::string)\"pear\", (std::string)\"banana\", (std::string)\"pear\", (std::string)\"orange\", (std::string)\"orange\"}))) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                                                                                                             |\n      |                     std::vector<std::__cxx11::basic_string<char> >                                                                                                                                                int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmp2ggx2p2s.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidat",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::vector<std::string> fruits) {\n    if(fruits.back() == fruits.front()) {\n        std::vector<std::string> result;\n        result.push_back(\"no\");\n        return result;\n    } else {\n        fruits.erase(fruits.begin());\n        fruits.pop_back();\n        fruits.erase(fruits.begin());\n        fruits.pop_back();\n        return fruits;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"apple\", (std::string)\"apple\", (std::string)\"pear\", (std::string)\"banana\", (std::string)\"pear\", (std::string)\"orange\", (std::string)\"orange\"}))) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 296,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpl1qnerds.cpp:16:1: error: unterminated argument list invoking macro \"assert\"\n   16 | \n      | ^\n/tmp/tmpl1qnerds.cpp: In function ‘int main()’:\n/tmp/tmpl1qnerds.cpp:13:5: error: ‘assert’ was not declared in this scope\n   13 |     assert(candidate((\"https://www.www.ekapusta.com/image/url\")) == (https://www.ekapusta.com/image/url));\n      |     ^~~~~~\n/tmp/tmpl1qnerds.cpp:4:1: note: ‘assert’ is defined in header ‘<cassert>’; did you forget to ‘#include <cassert>’?\n    3 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    4 | std::string f(std::string url) {\n/tmp/tmpl1qnerds.cpp:13:11: error: expected ‘}’ at end of input\n   13 |     assert(candidate((\"https://www.www.ekapusta.com/image/url\")) == (https://www.ekapusta.com/image/url));\n      |           ^\n/tmp/tmpl1qnerds.cpp:11:12: note: to match this ‘{’\n   11 | int main() {\n      |            ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string url) {\n    size_t pos = url.find(\"http://www.\");\n    if (pos != std::string::npos) {\n        return url.substr(pos + 11);\n    }\n    return url;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"https://www.www.ekapusta.com/image/url\")) == (https://www.ekapusta.com/image/url));\n}\n\n\n",
        "answer": "(https://www.ekapusta.com/image/url)"
    },
    {
        "id": 297,
        "res": false,
        "error": "Exception",
        "error_message": "tmph59jkgok: /tmp/tmph59jkgok.cpp:12: int main(): Assertion `candidate((6173)) == (\"Half Life\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(long num) {\n    if (0 < num && num < 1000 && num != 6174) {\n        return \"Half Life\";\n    }\n    return \"Not found\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((6173)) == (\"Half Life\"));\n}\n\n\n",
        "answer": "(\"Half Life\")"
    },
    {
        "id": 298,
        "res": false,
        "error": "Exception",
        "error_message": "tmp9nlzo7n8: /tmp/tmp9nlzo7n8.cpp:15: int main(): Assertion `candidate((\"dst vavf n dmv dfvm gamcu dgcvb.\")) == (\"destvavfngamcu\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string new_text = text;\n    for (int i = 0; i < new_text.length(); i++) {\n        char character = new_text[i];\n        char new_character = std::islower(character) ? std::toupper(character) : std::tolower(character);\n        new_text[i] = new_character;\n    }\n    return new_text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"dst vavf n dmv dfvm gamcu dgcvb.\")) == (\"destvavfngamcu\"));\n}\n\n\n",
        "answer": "(\"destvavfngamcu\")"
    },
    {
        "id": 299,
        "res": true,
        "code": "\n#include <bits/stdc++.h>\nstd::string f(std::string text, std::string character) {\n    if (text.empty() || text.back() != character.back()) {\n        return f(character + text, character);\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"staovk\"), (\"k\")) == (\"staovk\"));\n}\n\n\n",
        "answer": "(\"staovk\")"
    },
    {
        "id": 300,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpjnlln08g.cpp:3:\n/tmp/tmpjnlln08g.cpp: In function ‘int main()’:\n/tmp/tmpjnlln08g.cpp:14:72: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   14 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                      |\n      |                     std::vector<long int>                                  int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpjnlln08g.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpjnlln08g.cpp:3:\n/tmp/tmpjnlln08g.cpp:14:77: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n      |                                                                             ^\nIn file included from /usr/include/c++/11/bits/stl_alg",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    int count = 1;\n    for (int i = count; i < nums.size() - 1; i += 2) {\n        nums[i] = std::max(nums[i], nums[count-1]);\n        count++;\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 301,
        "res": 0
    },
    {
        "id": 302,
        "res": false,
        "error": "Exception",
        "error_message": "tmpl6jwryyy: /tmp/tmpl6jwryyy.cpp:17: int main(): Assertion `candidate((\"wdeejjjzsjsjjsxjjneddaddddddefsfd\")) == (std::string(\"haystacksdefsfd\"))' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string string) {\n    std::string result = string;\n    std::string toReplace = \"needles\";\n    std::string replacement = \"haystacks\";\n    size_t pos = result.find(toReplace);\n    while (pos != std::string::npos) {\n        result.replace(pos, toReplace.length(), replacement);\n        pos = result.find(toReplace, pos + replacement.length());\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"wdeejjjzsjsjjsxjjneddaddddddefsfd\")) == (std::string(\"haystacksdefsfd\")));\n}\n\n\n",
        "answer": "(std::string(\"haystacksdefsfd\"))"
    },
    {
        "id": 303,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpr4xocx7_.cpp:3:\n/tmp/tmpr4xocx7_.cpp: In function ‘int main()’:\n/tmp/tmpr4xocx7_.cpp:20:38: error: ‘mjkn’ was not declared in this scope\n   20 |     assert(candidate((\"mJkLbn\")) == (mjkn));\n      |                                      ^~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    int i = (text.length() + 1) / 2;\n    std::vector<char> result(text.begin(), text.end());\n    while (i < text.length()) {\n        char t = std::tolower(result[i]);\n        if (t == result[i]) {\n            i += 1;\n        } else {\n            result[i] = t;\n        }\n        i += 2;\n    }\n    return std::string(result.begin(), result.end());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"mJkLbn\")) == (mjkn));\n}\n\n\n",
        "answer": "(mjkn)"
    },
    {
        "id": 304,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpntf1r3u2.cpp:3:\n/tmp/tmpntf1r3u2.cpp: In function ‘int main()’:\n/tmp/tmpntf1r3u2.cpp:24:91: error: no match for ‘operator==’ (operand types are ‘std::map<long int, long int>’ and ‘int’)\n   24 |     assert(candidate((std::map<long,long>({{2, 3}, {17, 3}, {16, 6}, {18, 6}, {87, 7}}))) == (18));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                         |\n      |                     std::map<long int, long int>                                              int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpntf1r3u2.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpntf1r3u2.cpp:3:\n/tmp/tmpntf1r3u2.cpp:24:97: note:   ‘std::map<long int, long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   24 |     assert(candidate((std::map<long,long>({{2, 3}, {17, 3}, {16, 6}, {18, 6}, {87, 7}}))) == (18));\n      |                     ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<long,long> f(std::map<long,long> d) {\n    std::map<long, long> result;\n    auto it = std::max_element(d.begin(), d.end(), \n        [](const std::pair<long, long>& p1, const std::pair<long, long>& p2) {\n            return p1.first < p2.first;\n        });\n    result[it->first] = it->second;\n    d.erase(it);\n    \n    it = std::max_element(d.begin(), d.end(), \n        [](const std::pair<long, long>& p1, const std::pair<long, long>& p2) {\n            return p1.first < p2.first;\n        });\n    result[it->first] = it->second;\n    d.erase(it);\n    \n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,long>({{2, 3}, {17, 3}, {16, 6}, {18, 6}, {87, 7}}))) == (18));\n}\n\n\n",
        "answer": "(18)"
    },
    {
        "id": 305,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpx14x40ev.cpp:3:\n/tmp/tmpx14x40ev.cpp: In function ‘int main()’:\n/tmp/tmpx14x40ev.cpp:20:48: error: ‘horseto’ was not declared in this scope\n   20 |     assert(candidate((\"o horseto\"), (\"r\")) == (horseto));\n      |                                                ^~~~~~~\n",
        "code": "\n#include <assert.h>\n#include <bits/stdc++.h>\nstd::string f(std::string text, std::string character) {\n    size_t length = text.length();\n    int index = -1;\n    for (size_t i = 0; i < length; ++i) {\n        if (text[i] == character[0]) {\n            index = i;\n        }\n    }\n    if (index == -1) {\n        index = length / 2;\n    }\n    text.erase(index, 1);\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"o horseto\"), (\"r\")) == (horseto));\n}\n\n\n",
        "answer": "(horseto)"
    },
    {
        "id": 306,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpl1zrwucm.cpp:4:\n/tmp/tmpl1zrwucm.cpp: In function ‘int main()’:\n/tmp/tmpl1zrwucm.cpp:21:81: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   21 |     assert(candidate((std::vector<Union_std_string_long>({0, 6, \"1\", \"2\", 0}))) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                               |\n      |                     std::vector<long int>                                           int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpl1zrwucm.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpl1zrwucm.cpp:4:\n/tmp/tmpl1zrwucm.cpp:21:86: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   21 |     assert(candidate((std::vector<Union_std_string_long>({0, 6, \"1\", \"2\", 0}))) == (0));\n      |                                                                                      ^\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\ntypedef std::variant<std::string, long> Union_std_string_long;\n\nstd::vector<long> f(std::vector<Union_std_string_long> nums) {\n    std::vector<long> digits;\n    for (auto& num : nums) {\n        if (std::holds_alternative<std::string>(num) && std::all_of(std::get<std::string>(num).begin(), std::get<std::string>(num).end(), ::isdigit)) {\n            digits.push_back(std::stol(std::get<std::string>(num)));\n        }\n        else if (std::holds_alternative<long>(num)) {\n            digits.push_back(std::get<long>(num));\n        }\n    }\n    return digits;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<Union_std_string_long>({0, 6, \"1\", \"2\", 0}))) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 307,
        "res": 0
    },
    {
        "id": 308,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmplcypog34.cpp:3:\n/tmp/tmplcypog34.cpp: In function ‘int main()’:\n/tmp/tmplcypog34.cpp:15:145: error: no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, long int>’ and ‘int’)\n   15 |     assert(candidate((std::vector<std::string>({(std::string)\"La\", (std::string)\"Q\", (std::string)\"9\", (std::string)\"La\", (std::string)\"La\"}))) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                                               |\n      |                     std::map<std::__cxx11::basic_string<char>, long int>                                                                            int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmplcypog34.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::pair<const std::__cxx11::basic_string<char>, long int> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, cons",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,long> f(std::vector<std::string> strings) {\n    std::map<std::string, long> occurrences;\n    for (const std::string& str : strings) {\n        if (occurrences.find(str) == occurrences.end()) {\n            occurrences[str] = std::count(strings.begin(), strings.end(), str);\n        }\n    }\n    return occurrences;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"La\", (std::string)\"Q\", (std::string)\"9\", (std::string)\"La\", (std::string)\"La\"}))) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 309,
        "res": false,
        "error": "Exception",
        "error_message": "tmpx9vmi_w8: /tmp/tmpx9vmi_w8.cpp:13: int main(): Assertion `candidate((\"faqo osax f\"), (\"f\")) == (std::string(\"faqo osax f\"))' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string suffix) {\n    text += suffix;\n    while(text.substr(text.length() - suffix.length(), suffix.length()) == suffix) {\n        text = text.substr(0, text.length() - 1);\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"faqo osax f\"), (\"f\")) == (std::string(\"faqo osax f\")));\n}\n\n\n",
        "answer": "(std::string(\"faqo osax f\"))"
    },
    {
        "id": 310,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpzht6r9fe.cpp:3:\n/tmp/tmpzht6r9fe.cpp: In function ‘int main()’:\n/tmp/tmpzht6r9fe.cpp:15:242: error: ‘___’ was not declared in this scope\n   15 |     assert(candidate((std::vector<std::string>({(std::string)\"__\", (std::string)\"1\", (std::string)\".\", (std::string)\"0\", (std::string)\"r0\", (std::string)\"__\", (std::string)\"a_j\", (std::string)\"6\", (std::string)\"__\", (std::string)\"6\"}))) == (___));\n      |                                                                                                                                                                                                                                                  ^~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::vector<std::string> strands) {\n    std::vector<std::string> subs = strands;\n    for (int i = 0; i < subs.size(); i++) {\n        for (int k = 0; k < subs[i].length() / 2; k++) {\n            subs[i] = subs[i].back() + subs[i].substr(1, subs[i].length() - 2) + subs[i].front();\n        }\n    }\n    return std::accumulate(subs.begin(), subs.end(), std::string(\"\"));\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"__\", (std::string)\"1\", (std::string)\".\", (std::string)\"0\", (std::string)\"r0\", (std::string)\"__\", (std::string)\"a_j\", (std::string)\"6\", (std::string)\"__\", (std::string)\"6\"}))) == (___));\n}\n\n\n",
        "answer": "(___)"
    },
    {
        "id": 311,
        "res": false,
        "error": "Exception",
        "error_message": "tmp4exbymqk: /tmp/tmp4exbymqk.cpp:11: int main(): Assertion `candidate((\"A\")) == (\"yes\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::replace(text.begin(), text.end(), '#', '1');\n    std::replace(text.begin(), text.end(), '$', '5');\n    return std::all_of(text.begin(), text.end(), ::isdigit) ? \"yes\" : \"no\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"A\")) == (\"yes\"));\n}\n\n\n",
        "answer": "(\"yes\")"
    },
    {
        "id": 312,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s) {\n    if (std::all_of(s.begin(), s.end(), isalnum)) {\n        return \"True\";\n    }\n    return \"False\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"777\")) == (\"True\"));\n}\n\n\n",
        "answer": "(\"True\")"
    },
    {
        "id": 313,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp4ad_a5db.cpp:3:\n/tmp/tmp4ad_a5db.cpp: In function ‘int main()’:\n/tmp/tmp4ad_a5db.cpp:11:44: error: expected primary-expression before ‘=’ token\n   11 |     assert(candidate((\"urecord\"), (8)) == (=));\n      |                                            ^\n/tmp/tmp4ad_a5db.cpp:11:45: error: expected primary-expression before ‘)’ token\n   11 |     assert(candidate((\"urecord\"), (8)) == (=));\n      |                                             ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s, long l) {\n    s.resize(l, '=');\n    size_t pos = s.rfind('=');\n    return s.substr(0, pos);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"urecord\"), (8)) == (=));\n}\n\n\n",
        "answer": "(=)"
    },
    {
        "id": 314,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp_fyyqb2m.cpp:3:\n/tmp/tmp_fyyqb2m.cpp: In function ‘int main()’:\n/tmp/tmp_fyyqb2m.cpp:15:41: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   15 |     assert(candidate((\"244, 105, -90\")) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                       |\n      |                     |                       int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp_fyyqb2m.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp_fyyqb2m.cpp:3:\n/tmp/tmp_fyyqb2m.cpp:15:46: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   15 |     assert(candidate((\"244, 105, -90\")) == (0));\n      |                                              ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/inc",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    if (text.find(',') != std::string::npos) {\n        size_t pos = text.find(',');\n        std::string before = text.substr(0, pos);\n        std::string after = text.substr(pos + 1);\n        return after + ' ' + before;\n    }\n    return std::string(\",\") + text.substr(text.find(' ') + 1) + \" 0\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"244, 105, -90\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 315,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpx5gvdy_4.cpp:3:\n/tmp/tmpx5gvdy_4.cpp: In function ‘int main()’:\n/tmp/tmpx5gvdy_4.cpp:11:37: error: ‘z’ was not declared in this scope\n   11 |     assert(candidate((\"czywZ\")) == (z,y,w));\n      |                                     ^\n/tmp/tmpx5gvdy_4.cpp:11:39: error: ‘y’ was not declared in this scope; did you mean ‘yn’?\n   11 |     assert(candidate((\"czywZ\")) == (z,y,w));\n      |                                       ^\n/tmp/tmpx5gvdy_4.cpp:11:41: error: ‘w’ was not declared in this scope\n   11 |     assert(candidate((\"czywZ\")) == (z,y,w));\n      |                                         ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string challenge) {\n    std::transform(challenge.begin(), challenge.end(), challenge.begin(), ::tolower);\n    std::replace(challenge.begin(), challenge.end(), 'l', ',');\n    return challenge;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"czywZ\")) == (z,y,w));\n}\n\n\n",
        "answer": "(z,y,w)"
    },
    {
        "id": 316,
        "res": false,
        "error": "Exception",
        "error_message": "tmppzxnrvg8: /tmp/tmppzxnrvg8.cpp:17: int main(): Assertion `candidate((\"i am your father\")) == (\"am your father\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string name) {\n    std::stringstream ss;\n    ss << \"| \";\n    std::istringstream iss(name);\n    std::string word;\n    while (iss >> word) {\n        ss << word << \" \";\n    }\n    ss << \"|\";\n    return ss.str();\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"i am your father\")) == (\"am your father\"));\n}\n\n\n",
        "answer": "(\"am your father\")"
    },
    {
        "id": 317,
        "res": false,
        "error": "Exception",
        "error_message": "tmpoofhpacx: /tmp/tmpoofhpacx.cpp:10: int main(): Assertion `candidate((\" vup a zwwo oihee amuwuuw! \"), (\"a\"), (\"u\")) == (\"vup\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string a, std::string b) {\n    text = std::regex_replace(text, std::regex(a), b);\n    return std::regex_replace(text, std::regex(b), a);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\" vup a zwwo oihee amuwuuw! \"), (\"a\"), (\"u\")) == (\"vup\"));\n}\n\n\n",
        "answer": "(\"vup\")"
    },
    {
        "id": 318,
        "res": false,
        "error": "Exception",
        "error_message": "tmpz6yf6jda: /tmp/tmpz6yf6jda.cpp:15: int main(): Assertion `candidate((\"234rtccde\"), (\"e\")) == (2)' failed.\n",
        "code": "\n#include <assert.h>\n#include <bits/stdc++.h>\nlong f(std::string value, std::string character) {\n    int total = 0;\n    for (char c : value) {\n        if (c == character[0] || c == std::tolower(character[0])) {\n            total++;\n        }\n    }\n    return total;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"234rtccde\"), (\"e\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 319,
        "res": false,
        "error": "Exception",
        "error_message": "tmpojcwdlub: /tmp/tmpojcwdlub.cpp:14: int main(): Assertion `candidate((\"a\"), (\"xxxaaxaaxx\")) == (2)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string needle, std::string haystack) {\n    int count = 0;\n    while (haystack.find(needle) != std::string::npos) {\n        haystack.replace(haystack.find(needle), needle.length(), \"\");\n        count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"a\"), (\"xxxaaxaaxx\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 320,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpgpn2nuna.cpp:4:\n/tmp/tmpgpn2nuna.cpp: In function ‘int main()’:\n/tmp/tmpgpn2nuna.cpp:32:36: error: ‘USaR’ was not declared in this scope\n   32 |     assert(candidate((\"USaR\")) == (USaR));\n      |                                    ^~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    int index = 1;\n    while (index < text.length()) {\n        if (text[index] != text[index - 1]) {\n            index += 1;\n        } else {\n            std::string text1 = text.substr(0, index);\n            std::string text2 = text.substr(index);\n            for (int i = 0; i < text2.length(); i++) {\n                if (std::islower(text2[i]))\n                    text2[i] = std::toupper(text2[i]);\n                else\n                    text2[i] = std::tolower(text2[i]);\n            }\n            return text1 + text2;\n        }\n    }\n    for (int i = 0; i < text.length(); i++) {\n        if (std::islower(text[i]))\n            text[i] = std::toupper(text[i]);\n        else\n            text[i] = std::tolower(text[i]);\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"USaR\")) == (USaR));\n}\n\n\n",
        "answer": "(USaR)"
    },
    {
        "id": 321,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp8kxtavw8.cpp:3:\n/tmp/tmp8kxtavw8.cpp: In function ‘int main()’:\n/tmp/tmp8kxtavw8.cpp:17:105: error: no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, long int>’ and ‘int’)\n   17 |     assert(candidate((std::map<std::string,long>()), (std::map<std::string,long>({{\"desciduous\", 2}}))) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                       |\n      |                     std::map<std::__cxx11::basic_string<char>, long int>                                    int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmp8kxtavw8.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::pair<const std::__cxx11::basic_string<char>, long int> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,long> f(std::map<std::string,long> update, std::map<std::string,long> starting) {\n    std::map<std::string, long> d = starting;\n    for (const auto& pair : update) {\n        if (d.find(pair.first) != d.end()) {\n            d[pair.first] += pair.second;\n        } else {\n            d[pair.first] = pair.second;\n        }\n    }\n    return d;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>()), (std::map<std::string,long>({{\"desciduous\", 2}}))) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 322,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp86mq04fn.cpp:3:\n/tmp/tmp86mq04fn.cpp: In function ‘int main()’:\n/tmp/tmp86mq04fn.cpp:16:149: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘int’)\n   16 |     assert(candidate((std::vector<std::string>({(std::string)\"lsi\", (std::string)\"s\", (std::string)\"t\", (std::string)\"t\", (std::string)\"d\"})), (0)) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                                                   |\n      |                     std::vector<std::__cxx11::basic_string<char> >                                                                                      int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmp86mq04fn.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::__cxx11::basic_string<char> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::vector<std::string> chemicals, long num) {\n    std::vector<std::string> fish(chemicals.begin() + 1, chemicals.end());\n    std::reverse(chemicals.begin(), chemicals.end());\n    for (long i = 0; i < num; i++) {\n        fish.push_back(chemicals[1]);\n        chemicals.erase(chemicals.begin() + 1);\n    }\n    std::reverse(chemicals.begin(), chemicals.end());\n    return chemicals;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"lsi\", (std::string)\"s\", (std::string)\"t\", (std::string)\"t\", (std::string)\"d\"})), (0)) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 323,
        "res": false,
        "error": "Exception",
        "error_message": "tmpoudzl65_: /tmp/tmpoudzl65_.cpp:15: int main(): Assertion `candidate((\"ncdsdfdaaa0a1cdscsk*XFd\")) == (10)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    std::stringstream ss(text);\n    std::string line;\n    int count = 0;\n    while (std::getline(ss, line)) {\n        count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ncdsdfdaaa0a1cdscsk*XFd\")) == (10));\n}\n\n\n",
        "answer": "(10)"
    },
    {
        "id": 324,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpdxxyy5y5.cpp:3:\n/tmp/tmpdxxyy5y5.cpp: In function ‘int main()’:\n/tmp/tmpdxxyy5y5.cpp:15:49: error: expected primary-expression before ‘)’ token\n   15 |     assert(candidate((std::vector<long>())) == ());\n      |                                                 ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    std::vector<long> asc = nums;\n    std::vector<long> desc;\n    std::reverse(asc.begin(), asc.end());\n    desc = std::vector<long>(asc.begin(), asc.begin() + asc.size()/2);\n    desc.insert(desc.end(), asc.begin(), asc.end());\n    desc.insert(desc.end(), desc.begin(), desc.end());\n    return desc;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>())) == ());\n}\n\n\n",
        "answer": "()"
    },
    {
        "id": 325,
        "res": false,
        "error": "Exception",
        "error_message": "tmpz124bkcs: /tmp/tmpz124bkcs.cpp:16: int main(): Assertion `candidate((\"\")) == (0)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string s) {\n    std::vector<char> l(s.begin(), s.end());\n    for (int i = 0; i < l.size(); i++) {\n        l[i] = tolower(l[i]);\n        if (!isdigit(l[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 326,
        "res": false,
        "error": "Exception",
        "error_message": "tmpem6tv3kb: /tmp/tmpem6tv3kb.cpp:15: int main(): Assertion `candidate((\"Thisisastring\")) == (3)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    int number = 0;\n    for (char t : text) {\n        if (std::isdigit(t)) {\n            number += 1;\n        }\n    }\n    return number;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Thisisastring\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 327,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp_7xxmmba.cpp:3:\n/tmp/tmp_7xxmmba.cpp: In function ‘int main()’:\n/tmp/tmp_7xxmmba.cpp:19:83: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   19 |     assert(candidate((std::vector<long>({(long)1, (long)7, (long)-1, (long)-3}))) == (-1, -3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~\n      |                     |                                                                   |\n      |                     std::vector<long int>                                               int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp_7xxmmba.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp_7xxmmba.cpp:3:\n/tmp/tmp_7xxmmba.cpp:19:93: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   19 |     assert(candidate((std::vector<long>({(long)1, (long)7, (long)-1, (long)-3}))) == (-1, -3));\n      |                                                           ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> lst) {\n    std::vector<long> new_lst;\n    long i = lst.size() - 1;\n    for (int j = 0; j < lst.size(); j++) {\n        if (i % 2 == 0) {\n            new_lst.push_back(-lst[i]);\n        } else {\n            new_lst.push_back(lst[i]);\n        }\n        i--;\n    }\n    return new_lst;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)7, (long)-1, (long)-3}))) == (-1, -3));\n}\n\n\n",
        "answer": "(-1, -3)"
    },
    {
        "id": 328,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp_gvrm9yv.cpp:4:\n/tmp/tmp_gvrm9yv.cpp: In function ‘int main()’:\n/tmp/tmp_gvrm9yv.cpp:17:83: error: expected ‘)’ before numeric constant\n   17 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})), (4)) == (1 2 3));\n      |                                                                                ~  ^\n/tmp/tmp_gvrm9yv.cpp:17:77: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   17 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})), (4)) == (1 2 3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                           |\n      |                     std::vector<long int>                                       int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp_gvrm9yv.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp_gvrm9yv.cpp:4:\n/tmp/tmp_gvrm9yv.cpp:17:5: note:   ‘std::vector<long int>’ is not derived from ‘c",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> array, long L) {\n    if (L <= 0) {\n        return array;\n    }\n    if (array.size() < L) {\n        std::vector<long> temp(array.end() - std::min((long)array.size(), L), array.end());\n        array.insert(array.end(), temp.begin(), temp.end());\n    }\n    return array;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})), (4)) == (1 2 3));\n}\n\n\n",
        "answer": "(1 2 3)"
    },
    {
        "id": 329,
        "res": false,
        "error": "Exception",
        "error_message": "tmpeqgl1dpt: /tmp/tmpeqgl1dpt.cpp:14: int main(): Assertion `candidate((\"jh54kkk6\")) == (false)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text) {\n    for (int i = 1; i < text.length(); i++) {\n        if (text[i] == toupper(text[i]) && islower(text[i-1])) {\n            return true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"jh54kkk6\")) == (false));\n}\n\n\n",
        "answer": "(false)"
    },
    {
        "id": 330,
        "res": false,
        "error": "Exception",
        "error_message": "tmpn_gtiewq: /tmp/tmpn_gtiewq.cpp:17: int main(): Assertion `candidate((\"m4n2o\")) == (\"m4n2o\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string ans;\n    for (char& c: text) {\n        if (std::isdigit(c)) {\n            ans += c;\n        } else {\n            ans += ' ';\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"m4n2o\")) == (\"m4n2o\"));\n}\n\n\n",
        "answer": "(\"m4n2o\")"
    },
    {
        "id": 331,
        "res": false,
        "error": "Exception",
        "error_message": "tmp718qcaf1: /tmp/tmp718qcaf1.cpp:14: int main(): Assertion `candidate((\"\"), (\"abc\")) == (0)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string strand, std::string zmnc) {\n    size_t poz = strand.find(zmnc);\n    while (poz != std::string::npos) {\n        strand = strand.substr(poz + 1);\n        poz = strand.find(zmnc);\n    }\n    return strand.rfind(zmnc);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"\"), (\"abc\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 332,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp4t76wlj1.cpp:3:\n/tmp/tmp4t76wlj1.cpp: In function ‘int main()’:\n/tmp/tmp4t76wlj1.cpp:18:102: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   18 |     assert(candidate((std::vector<long>({(long)-6, (long)-2, (long)1, (long)-3, (long)0, (long)1}))) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                    |\n      |                     std::vector<long int>                                                                int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp4t76wlj1.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp4t76wlj1.cpp:3:\n/tmp/tmp4t76wlj1.cpp:18:107: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   18 |     assert(candidate((std::vector<long>({(long)-6, (long)-2, (long)1, (long)-3, (long)0, (long)1})",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    int count = nums.size();\n    if (count == 0) {\n        int value = nums.back();\n        nums = std::vector<long>(value, 0);\n    } else if (count % 2 == 0) {\n        nums.clear();\n    } else {\n        nums.erase(nums.begin(), nums.begin() + count/2);\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)-6, (long)-2, (long)1, (long)-3, (long)0, (long)1}))) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 333,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> places, std::vector<long> lazy) {\n    std::sort(places.begin(), places.end());\n    for (int l : lazy) {\n        places.erase(std::remove(places.begin(), places.end(), l), places.end());\n    }\n    if (places.size() == 1) {\n        return 1;\n    }\n    for (int i = 0; i < places.size(); ++i) {\n        if (std::count(places.begin(), places.end(), places[i] + 1) == 0) {\n            return i + 1;\n        }\n    }\n    return places.size();\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)375, (long)564, (long)857, (long)90, (long)728, (long)92})), (std::vector<long>({(long)728}))) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 334,
        "res": false,
        "error": "Exception",
        "error_message": "tmpl6t1ts0e: /tmp/tmpl6t1ts0e.cpp:11: int main(): Assertion `candidate((\"00\"), (std::vector<std::string>({(std::string)\"nU\", (std::string)\" 9 rCSAz\", (std::string)\"w\", (std::string)\" lpA5BO\", (std::string)\"sizL\", (std::string)\"i7rlVr\"}))) == (\"nU9RcaSazwLlpA5BO\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string a, std::vector<std::string> b) {\n    return std::accumulate(std::next(b.begin()), b.end(), b.front(), [&](std::string result, const std::string &element) {\n        return result + a + element;\n    });\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"00\"), (std::vector<std::string>({(std::string)\"nU\", (std::string)\" 9 rCSAz\", (std::string)\"w\", (std::string)\" lpA5BO\", (std::string)\"sizL\", (std::string)\"i7rlVr\"}))) == (\"nU9RcaSazwLlpA5BO\"));\n}\n\n\n",
        "answer": "(\"nU9RcaSazwLlpA5BO\")"
    },
    {
        "id": 335,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpmn6l6sta.cpp:3:\n/tmp/tmpmn6l6sta.cpp: In function ‘int main()’:\n/tmp/tmpmn6l6sta.cpp:16:48: error: ‘l’ was not declared in this scope\n   16 |     assert(candidate((\"sjbrlfqmw\"), (\"l\")) == (l));\n      |                                                ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string to_remove) {\n    std::vector<char> new_text(text.begin(), text.end());\n    if (std::find(new_text.begin(), new_text.end(), to_remove[0]) != new_text.end()) {\n        auto index = std::find(new_text.begin(), new_text.end(), to_remove[0]) - new_text.begin();\n        new_text.erase(new_text.begin() + index);\n        new_text.insert(new_text.begin() + index, '?');\n        new_text.erase(std::remove(new_text.begin(), new_text.end(), '?'), new_text.end());\n    }\n    return std::string(new_text.begin(), new_text.end());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"sjbrlfqmw\"), (\"l\")) == (l));\n}\n\n\n",
        "answer": "(l)"
    },
    {
        "id": 336,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s, std::string sep) {\n    s += sep;\n    return s.substr(0, s.rfind(sep));\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"234dsfssdfs333324314\"), (\"s\")) == (\"234dsfssdfs333324314\"));\n}\n\n\n",
        "answer": "(\"234dsfssdfs333324314\")"
    },
    {
        "id": 337,
        "res": false,
        "error": "Exception",
        "error_message": "tmpwpmpb29p: /tmp/tmpwpmpb29p.cpp:20: int main(): Assertion `candidate((\"5ll6\")) == (\"5LL6\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string txt) {\n    std::string result = \"\";\n    for (char c : txt) {\n        if (isdigit(c)) {\n            continue;\n        }\n        if (islower(c)) {\n            result += toupper(c);\n        } else if (isupper(c)) {\n            result += tolower(c);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"5ll6\")) == (\"5LL6\"));\n}\n\n\n",
        "answer": "(\"5LL6\")"
    },
    {
        "id": 338,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpn46nu8dg.cpp:3:\n/tmp/tmpn46nu8dg.cpp: In function ‘int main()’:\n/tmp/tmpn46nu8dg.cpp:13:94: error: no match for ‘operator==’ (operand types are ‘std::map<long int, std::__cxx11::basic_string<char> >’ and ‘int’)\n   13 |     assert(candidate((std::map<std::string,long>({{\"a\", 1}, {\"b\", 2}, {\"c\", 3}, {\"d\", 2}}))) == (1, 2, 3, 2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~\n      |                     |                                                                                   |\n      |                     std::map<long int, std::__cxx11::basic_string<char> >                               int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpn46nu8dg.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::pair<const long int, std::__cxx11::basic_string<char> > >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included fr",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<long,std::string> f(std::map<std::string,long> my_dict) {\n    std::map<long, std::string> result;\n    for(const auto& pair : my_dict) {\n        result[pair.second] = pair.first;\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>({{\"a\", 1}, {\"b\", 2}, {\"c\", 3}, {\"d\", 2}}))) == (1, 2, 3, 2));\n}\n\n\n",
        "answer": "(1, 2, 3, 2)"
    },
    {
        "id": 339,
        "res": false,
        "error": "Exception",
        "error_message": "tmpqea9azs7: /tmp/tmpqea9azs7.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)-1, (long)2, (long)1, (long)-8, (long)-8, (long)2})), (2)) == (1)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> array, long elem) {\n    int d = 0;\n    std::string elem_str = std::to_string(elem);\n    for (int i : array) {\n        if (std::to_string(i) == elem_str) {\n            d++;\n        }\n    }\n    return d;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)-1, (long)2, (long)1, (long)-8, (long)-8, (long)2})), (2)) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 340,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpmuwy5o1e.cpp:3:\n/tmp/tmpmuwy5o1e.cpp: In function ‘int main()’:\n/tmp/tmpmuwy5o1e.cpp:15:46: error: ‘EjIkxHtDpVG’ was not declared in this scope\n   15 |     assert(candidate((\"E jIkx HtDpV G\")) == (EjIkxHtDpVG));\n      |                                              ^~~~~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    size_t uppercase_index = text.find('A');\n    if (uppercase_index != std::string::npos) {\n        return text.substr(0, uppercase_index) + text.substr(text.find('a') + 1);\n    } else {\n        std::sort(text.begin(), text.end());\n        return text;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"E jIkx HtDpV G\")) == (EjIkxHtDpVG));\n}\n\n\n",
        "answer": "(EjIkxHtDpVG)"
    },
    {
        "id": 341,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpg1d21hd_.cpp:4:\n/tmp/tmpg1d21hd_.cpp: In function ‘int main()’:\n/tmp/tmpg1d21hd_.cpp:13:51: error: expected primary-expression before ‘)’ token\n   13 |     assert(candidate((std::map<long,long>())) == ());\n      |                                                   ^\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<long,long> f(std::map<long,long> cart) {\n    while(cart.size() > 5){\n        cart.erase(std::prev(cart.end()));\n    }\n    return cart;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,long>())) == ());\n}\n\n\n",
        "answer": "()"
    },
    {
        "id": 342,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpva4204nv.cpp:3:\n/tmp/tmpva4204nv.cpp: In function ‘int main()’:\n/tmp/tmpva4204nv.cpp:9:36: error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n    9 |     assert(candidate((\"---123-4\")) == (\"123-4\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text) {\n    return std::count(text.begin(), text.end(), '-') == text.length();\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"---123-4\")) == (\"123-4\"));\n}\n\n\n",
        "answer": "(\"123-4\")"
    },
    {
        "id": 343,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpz4ofqdac.cpp:4:\n/tmp/tmpz4ofqdac.cpp: In function ‘int main()’:\n/tmp/tmpz4ofqdac.cpp:14:408: error: no match for ‘operator==’ (operand types are ‘std::vector<std::variant<std::vector<long int, std::allocator<long int> >, long int> >’ and ‘std::vector<long int>’)\n   14 |     assert(candidate((std::vector<Union_std_vector_long__long>({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)1, (long)2}), (std::vector<long>)1})), (std::vector<Union_std_vector_long__long>({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)3, (std::vector<long>)std::vector<long>({(long)2, (long)1})}))) == (std::vector<long>({(long)1, (long)2, (long)3})));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                                                                                                                                                                                                                                                                                                                                                                                           |\n      |                     vector<std::variant<std::vector<long int, std::allocator<long int> >, long int>>                                                                                                                                          ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\n\ntypedef std::variant<std::vector<long>, long> Union_std_vector_long__long;\n\nstd::vector<Union_std_vector_long__long> f(std::vector<Union_std_vector_long__long> array, std::vector<Union_std_vector_long__long> elem) {\n    array.insert(array.end(), elem.begin(), elem.end());\n    return array;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<Union_std_vector_long__long>({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)1, (long)2}), (std::vector<long>)1})), (std::vector<Union_std_vector_long__long>({(std::vector<long>)std::vector<long>({(long)1, (long)2, (long)3}), (std::vector<long>)3, (std::vector<long>)std::vector<long>({(long)2, (long)1})}))) == (std::vector<long>({(long)1, (long)2, (long)3})));\n}\n\n\n",
        "answer": "(std::vector<long>({(long)1, (long)2, (long)3}))"
    },
    {
        "id": 344,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpbh46knkb.cpp:4:\n/tmp/tmpbh46knkb.cpp: In function ‘int main()’:\n/tmp/tmpbh46knkb.cpp:14:91: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   14 |     assert(candidate((std::vector<long>({(long)6, (long)4, (long)2, (long)8, (long)15}))) == (15));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                         |\n      |                     std::vector<long int>                                                     int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpbh46knkb.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpbh46knkb.cpp:4:\n/tmp/tmpbh46knkb.cpp:14:97: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((std::vector<long>({(long)6, (long)4, (long)2, (long)8, (long)15}))) == (15));\n      |                                   ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> lst) {\n    auto operation = [](std::vector<long>& v) { std::reverse(v.begin(), v.end()); };\n    std::vector<long> new_list = lst;\n    std::sort(new_list.begin(), new_list.end());\n    operation(new_list);\n    return lst;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)6, (long)4, (long)2, (long)8, (long)15}))) == (15));\n}\n\n\n",
        "answer": "(15)"
    },
    {
        "id": 345,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp6dk9mmqo.cpp:4:\n/tmp/tmp6dk9mmqo.cpp: In function ‘int main()’:\n/tmp/tmp6dk9mmqo.cpp:13:38: error: no match for ‘operator==’ (operand types are ‘std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >’ and ‘const char [3]’)\n   13 |     assert(candidate((\"ml\"), (\"mv\")) == (\"ml\", \"mv\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~\n      |                     |                        |\n      |                     |                        const char [3]\n      |                     std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp6dk9mmqo.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp6dk9mmqo.cpp:4:\n/tmp/tmp6dk9mmqo.cpp:13:52: note:   ‘std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std:",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::tuple<std::string, std::string> f(std::string a, std::string b) {\n    if (a < b) {\n        return std::make_tuple(b, a);\n    }\n    return std::make_tuple(a, b);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ml\"), (\"mv\")) == (\"ml\", \"mv\"));\n}\n\n\n",
        "answer": "(\"ml\", \"mv\")"
    },
    {
        "id": 346,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmph2mzrnii.cpp:3:\n/tmp/tmph2mzrnii.cpp: In function ‘int main()’:\n/tmp/tmph2mzrnii.cpp:11:40: error: ‘docs’ was not declared in this scope\n   11 |     assert(candidate((\"docs.doc\")) == (docs.doc));\n      |                                        ^~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string filename) {\n    std::string suffix = filename.substr(filename.find_last_of('.') + 1);\n    std::string f2 = filename + std::string(suffix.rbegin(), suffix.rend());\n    return f2.substr(f2.size() - suffix.size()) == suffix;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"docs.doc\")) == (docs.doc));\n}\n\n\n",
        "answer": "(docs.doc)"
    },
    {
        "id": 347,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpf0o8xz88.cpp:3:\n/tmp/tmpf0o8xz88.cpp: In function ‘int main()’:\n/tmp/tmpf0o8xz88.cpp:14:32: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   14 |     assert(candidate((\"hzcw\")) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |              |\n      |                     |              int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpf0o8xz88.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpf0o8xz88.cpp:3:\n/tmp/tmpf0o8xz88.cpp:14:37: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((\"hzcw\")) == (3));\n      |                                     ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/inc",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::vector<char> ls(text.begin(), text.end());\n    int length = ls.size();\n    for (int i = 0; i < length; i++) {\n        ls.insert(ls.begin() + i, ls[i]);\n    }\n    return std::string(ls.begin(), ls.end()).append(length * 2 - ls.size(), ' ');\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"hzcw\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 348,
        "res": 0
    },
    {
        "id": 349,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpvmuwr7a6.cpp:4:\n/tmp/tmpvmuwr7a6.cpp: In function ‘int main()’:\n/tmp/tmpvmuwr7a6.cpp:14:73: error: no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, long int>’ and ‘int’)\n   14 |     assert(candidate((std::map<std::string,long>({{\"noeohqhk\", 623}}))) == (55));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                       |\n      |                     std::map<std::__cxx11::basic_string<char>, long int>    int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpvmuwr7a6.cpp:4:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::pair<const std::__cxx11::basic_string<char>, long int> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n    ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,long> f(std::map<std::string,long> dictionary) {\n    dictionary[\"1049\"] = 55;\n    auto last_item = *dictionary.rbegin();\n    dictionary.erase(last_item.first);\n    dictionary[last_item.first] = last_item.second;\n    return dictionary;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>({{\"noeohqhk\", 623}}))) == (55));\n}\n\n\n",
        "answer": "(55)"
    },
    {
        "id": 350,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpvluv_7_p.cpp:3:\n/tmp/tmpvluv_7_p.cpp: In function ‘int main()’:\n/tmp/tmpvluv_7_p.cpp:20:84: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   20 |     assert(candidate((std::map<std::string,long>({{\"a\", 1}, {\"b\", 2}, {\"c\", 3}}))) == (0, 0, 0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~\n      |                     |                                                                      |\n      |                     std::vector<long int>                                                  int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpvluv_7_p.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpvluv_7_p.cpp:3:\n/tmp/tmpvluv_7_p.cpp:20:95: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   20 |     assert(candidate((std::map<std::string,long>({{\"a\", 1}, {\"b\", 2}, {\"c\", 3}}))) == (0, 0, 0));\n      |                                               ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::map<std::string,long> d) {\n    std::vector<long> v(d.size(), 0);\n    if (d.empty()) {\n        return v;\n    }\n    \n    int i = 0;\n    for (const auto& kv : d) {\n        v[i] = kv.second;\n        i++;\n    }\n\n    return v;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>({{\"a\", 1}, {\"b\", 2}, {\"c\", 3}}))) == (0, 0, 0));\n}\n\n\n",
        "answer": "(0, 0, 0)"
    },
    {
        "id": 351,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpucie1dyb.cpp:3:\n/tmp/tmpucie1dyb.cpp: In function ‘int main()’:\n/tmp/tmpucie1dyb.cpp:16:41: error: ‘a_A_b_B3’ was not declared in this scope\n   16 |     assert(candidate((\"a_A_b_B3 \")) == (a_A_b_B3));\n      |                                         ^~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    try {\n        while (text.find(\"nnet lloP\") != std::string::npos) {\n            text = text.replace(text.find(\"nnet lloP\"), 10, \"nnet loLp\");\n        }\n    } catch (...) {\n        // handle exceptions if needed\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"a_A_b_B3 \")) == (a_A_b_B3));\n}\n\n\n",
        "answer": "(a_A_b_B3)"
    },
    {
        "id": 352,
        "res": false,
        "error": "Exception",
        "error_message": "tmpry80o2g_: /tmp/tmpry80o2g_.cpp:9: int main(): Assertion `candidate((std::vector<long>({(long)-1, (long)-3, (long)-5, (long)-7, (long)0}))) == (3)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> nums) {\n    return nums[nums.size() / 2];\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)-1, (long)-3, (long)-5, (long)-7, (long)0}))) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 353,
        "res": false,
        "error": "Exception",
        "error_message": "tmpwqrgghcb: /tmp/tmpwqrgghcb.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)1, (long)0, (long)2, (long)2, (long)0, (long)0, (long)0, (long)1}))) == (2)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> x) {\n    if (x.size() == 0) {\n        return -1;\n    } else {\n        std::unordered_map<long, int> cache;\n        for (long item : x) {\n            if (cache.find(item) != cache.end()) {\n                cache[item] += 1;\n            } else {\n                cache[item] = 1;\n            }\n        }\n        int max_count = 0;\n        for (const auto& pair : cache) {\n            max_count = std::max(max_count, pair.second);\n        }\n        return max_count;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)0, (long)2, (long)2, (long)0, (long)0, (long)0, (long)1}))) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 354,
        "res": 0
    },
    {
        "id": 355,
        "res": false,
        "error": "Exception",
        "error_message": "tmp7nbhkmh2: /tmp/tmp7nbhkmh2.cpp:9: int main(): Assertion `candidate((\"123x John z\"), (\"z\")) == (\"John\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string prefix) {\n    return text.substr(prefix.length());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"123x John z\"), (\"z\")) == (\"John\"));\n}\n\n\n",
        "answer": "(\"John\")"
    },
    {
        "id": 356,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmppudfh90n.cpp:3:\n/tmp/tmppudfh90n.cpp: In function ‘int main()’:\n/tmp/tmppudfh90n.cpp:20:68: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   20 |     assert(candidate((std::vector<long>({(long)1, (long)2})), (1)) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                  |\n      |                     std::vector<long int>                              int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmppudfh90n.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmppudfh90n.cpp:3:\n/tmp/tmppudfh90n.cpp:20:73: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   20 |     assert(candidate((std::vector<long>({(long)1, (long)2})), (1)) == (2));\n      |                                                                         ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n            ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> array, long num) {\n    bool reverse = false;\n    if (num < 0) {\n        reverse = true;\n        num *= -1;\n    }\n    std::reverse(array.begin(), array.end());\n    array.insert(array.end(), array.begin(), array.end() - array.size() * num);\n\n    if (reverse) {\n        std::reverse(array.begin(), array.end());\n    }\n    return array;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2})), (1)) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 357,
        "res": false,
        "error": "Exception",
        "error_message": "tmpbldfr6cz: /tmp/tmpbldfr6cz.cpp:13: int main(): Assertion `candidate((\"crew\")) == (\"cra\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s) {\n    std::string r;\n    for(int i = s.size() - 1; i >= 0; i--) {\n        r += s[i];\n    }\n    return r;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"crew\")) == (\"cra\"));\n}\n\n\n",
        "answer": "(\"cra\")"
    },
    {
        "id": 358,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp7dof6fxc.cpp:3:\n/tmp/tmp7dof6fxc.cpp: In function ‘int main()’:\n/tmp/tmp7dof6fxc.cpp:20:48: error: ‘btrburger’ was not declared in this scope\n   20 |     assert(candidate((\"btrburger\"), (\"b\")) == (btrburger));\n      |                                                ^~~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string value) {\n    std::vector<int> indexes;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == value[0] && (i == 0 || text[i - 1] != value[0])) {\n            indexes.push_back(i);\n        }\n    }\n\n    if (indexes.size() % 2 == 1) {\n        return text;\n    }\n\n    return text.substr(indexes[0] + 1, indexes.back() - indexes[0] - 1);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"btrburger\"), (\"b\")) == (btrburger));\n}\n\n\n",
        "answer": "(btrburger)"
    },
    {
        "id": 359,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmppvcf_t2t.cpp:3:\n/tmp/tmppvcf_t2t.cpp: In function ‘int main()’:\n/tmp/tmppvcf_t2t.cpp:12:144: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘int’)\n   12 |     assert(candidate((std::vector<std::string>({(std::string)\"dZwbSR\", (std::string)\"wijHeq\", (std::string)\"qluVok\", (std::string)\"dxjxbF\"}))) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                                              |\n      |                     std::vector<std::__cxx11::basic_string<char> >                                                                                 int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmppvcf_t2t.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::__cxx11::basic_string<char> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |       ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::vector<std::string> lines) {\n    for(int i = 0; i < lines.size(); i++) {\n        lines[i] = lines[i].append((lines.back().size() - lines[i].size()) / 2, ' ').insert(0, (lines.back().size() - lines[i].size()) / 2, ' ');\n    }\n    return lines;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"dZwbSR\", (std::string)\"wijHeq\", (std::string)\"qluVok\", (std::string)\"dxjxbF\"}))) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 360,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long n) {\n    if (text.length() <= 2) {\n        return text;\n    }\n    std::string leading_chars(n - text.length() + 1, text[0]);\n    return leading_chars + text.substr(1, text.length() - 2) + text.back();\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"g\"), (15)) == (\"g\"));\n}\n\n\n",
        "answer": "(\"g\")"
    },
    {
        "id": 361,
        "res": false,
        "error": "Exception",
        "error_message": "tmpfto2me3d: /tmp/tmpfto2me3d.cpp:9: int main(): Assertion `candidate((\"#! : #!\")) == (2)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    return std::count(text.begin(), text.begin() + text.find(':'), '#');\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"#! : #!\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 362,
        "res": false,
        "error": "Exception",
        "error_message": "tmpd4jluds9: /tmp/tmpd4jluds9.cpp:14: int main(): Assertion `candidate((\"wrazugizoernmgzu\")) == (\"wrazugizoernmgzu\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    for (int i = 0; i < text.length()-1; i++) {\n        if (std::all_of(text.begin() + i, text.end(), ::islower)) {\n            return text.substr(i + 1);\n        }\n    }\n    return \"\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"wrazugizoernmgzu\")) == (\"wrazugizoernmgzu\"));\n}\n\n\n",
        "answer": "(\"wrazugizoernmgzu\")"
    },
    {
        "id": 363,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpy5be71x2.cpp:3:\n/tmp/tmpy5be71x2.cpp: In function ‘int main()’:\n/tmp/tmpy5be71x2.cpp:24:54: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   24 |     assert(candidate((std::vector<long>({(long)1}))) == (1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                    |\n      |                     std::vector<long int>                int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpy5be71x2.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpy5be71x2.cpp:3:\n/tmp/tmpy5be71x2.cpp:24:59: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   24 |     assert(candidate((std::vector<long>({(long)1}))) == (1));\n      |                                                           ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    std::sort(nums.begin(), nums.end());\n    int n = nums.size();\n    std::vector<long> new_nums;\n    \n    new_nums.push_back(nums[n/2]);\n    \n    if (n % 2 == 0) {\n        new_nums.push_back(nums[n/2 - 1]);\n    }\n    \n    for (int i = 0; i < n/2; i++) {\n        new_nums.insert(new_nums.begin(), nums[n-i-1]);\n        new_nums.push_back(nums[i]);\n    }\n    \n    return new_nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1}))) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 364,
        "res": 0
    },
    {
        "id": 365,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpbs43x5wz.cpp:3:\n/tmp/tmpbs43x5wz.cpp: In function ‘int main()’:\n/tmp/tmpbs43x5wz.cpp:14:53: error: ‘xqc’ was not declared in this scope\n   14 |     assert(candidate((\"xqc\"), (\"mRcwVqXsRDRb\")) == (xqc));\n      |                                                     ^~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string n, std::string s) {\n    if(s.find(n) == 0){\n        size_t pos = s.find(n);\n        std::string pre = s.substr(0, pos);\n        return pre + n + s.substr(pos + n.length());\n    }\n    return s;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"xqc\"), (\"mRcwVqXsRDRb\")) == (xqc));\n}\n\n\n",
        "answer": "(xqc)"
    },
    {
        "id": 366,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmptaygd2ot.cpp:4:\n/tmp/tmptaygd2ot.cpp: In function ‘int main()’:\n/tmp/tmptaygd2ot.cpp:22:57: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   22 |     assert(candidate((\"[ Hello ]+ Hello, World!!_ Hi\")) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                       |\n      |                     std::__cxx11::basic_string<char>        int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmptaygd2ot.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmptaygd2ot.cpp:4:\n/tmp/tmptaygd2ot.cpp:22:62: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   22 |     assert(candidate((\"[ Hello ]+ Hello, World!!_ Hi\")) == (3));\n      |                                                              ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\n\nstd::string f(std::string str) {\n    std::string tmp = str;\n    for (char& c : tmp) {\n        c = std::tolower(c);\n    }\n    for (char& c : str) {\n        c = std::tolower(c);\n        size_t pos = tmp.find(c);\n        if (pos != std::string::npos) {\n            tmp.erase(pos, 1);\n        }\n    }\n    return tmp;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"[ Hello ]+ Hello, World!!_ Hi\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 367,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmplhzf56vr.cpp:3:\n/tmp/tmplhzf56vr.cpp: In function ‘int main()’:\n/tmp/tmplhzf56vr.cpp:17:104: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   17 |     assert(candidate((std::vector<long>({(long)6, (long)2, (long)1, (long)1, (long)4, (long)1})), (5)) == (6));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                      |\n      |                     std::vector<long int>                                                                  int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmplhzf56vr.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmplhzf56vr.cpp:3:\n/tmp/tmplhzf56vr.cpp:17:109: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   17 |     assert(candidate((std::vector<long>({(long)6, (long)2, (long)1, (long)1, (long)4, (lon",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums, long rmvalue) {\n    std::vector<long> res = nums;\n    while(std::find(res.begin(), res.end(), rmvalue) != res.end()) {\n        auto it = std::find(res.begin(), res.end(), rmvalue);\n        res.erase(it);\n        if (*it != rmvalue) {\n            res.push_back(*it);\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)6, (long)2, (long)1, (long)1, (long)4, (long)1})), (5)) == (6));\n}\n\n\n",
        "answer": "(6)"
    },
    {
        "id": 368,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp5b_abgk1.cpp:4:\n/tmp/tmp5b_abgk1.cpp: In function ‘int main()’:\n/tmp/tmp5b_abgk1.cpp:21:109: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   21 |     assert(candidate((\"4327\"), (std::vector<long>({(long)2, (long)8, (long)9, (long)2, (long)7, (long)1}))) == (4327));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~\n      |                     |                                                                                           |\n      |                     std::__cxx11::basic_string<char>                                                            int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp5b_abgk1.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp5b_abgk1.cpp:4:\n/tmp/tmp5b_abgk1.cpp:21:117: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   21 |     assert(candidate((\"4327\"), (std::vecto",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string string, std::vector<long> numbers) {\n    std::vector<std::string> arr;\n    for (long num : numbers) {\n        std::ostringstream ss;\n        ss << std::setw(num) << std::setfill('0') << string;\n        arr.push_back(ss.str());\n    }\n    std::string result;\n    for(const auto &str : arr) {\n        result += str + \" \";\n    }\n    result.pop_back(); // remove the last space\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"4327\"), (std::vector<long>({(long)2, (long)8, (long)9, (long)2, (long)7, (long)1}))) == (4327));\n}\n\n\n",
        "answer": "(4327)"
    },
    {
        "id": 369,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string var) {\n    if(std::all_of(var.begin(), var.end(), ::isdigit)) {\n        return \"int\";\n    } else if(std::count(var.begin(), var.end(), '.') == 1 && std::all_of(var.begin(), var.end(), [](char c) { return ::isdigit(c) || c == '.'; })) {\n        return \"float\";\n    } else if(std::count(var.begin(), var.end(), ' ') == var.length() - 1) {\n        return \"str\";\n    } else if(var.length() == 1) {\n        return \"char\";\n    } else {\n        return \"tuple\";\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\" 99 777\")) == (\"tuple\"));\n}\n\n\n",
        "answer": "(\"tuple\")"
    },
    {
        "id": 370,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpk40jhbwj.cpp:3:\n/tmp/tmpk40jhbwj.cpp: In function ‘int main()’:\n/tmp/tmpk40jhbwj.cpp:14:34: error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   14 |     assert(candidate((\"     i\")) == (\"i\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text) {\n    for(char ch : text) {\n        if(!std::isspace(ch)) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"     i\")) == (\"i\"));\n}\n\n\n",
        "answer": "(\"i\")"
    },
    {
        "id": 371,
        "res": false,
        "error": "Exception",
        "error_message": "tmp9q0vf2la: /tmp/tmp9q0vf2la.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)11, (long)21, (long)0, (long)11}))) == (63)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> nums) {\n    nums.erase(std::remove_if(nums.begin(), nums.end(), [](int x) { return x % 2 != 0; }), nums.end());\n    \n    long sum_ = 0;\n    for (int num : nums) {\n        sum_ += num;\n    }\n    return sum_;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)11, (long)21, (long)0, (long)11}))) == (63));\n}\n\n\n",
        "answer": "(63)"
    },
    {
        "id": 372,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp3mx4s59q.cpp:4:\n/tmp/tmp3mx4s59q.cpp: In function ‘int main()’:\n/tmp/tmp3mx4s59q.cpp:19:79: error: ‘v’ was not declared in this scope\n   19 |     assert(candidate((std::vector<std::string>({(std::string)\"v\"})), (1)) == (v));\n      |                                                                               ^\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::vector<std::string> list_, long num) {\n    std::vector<std::string> temp;\n    for (std::string i : list_) {\n        long repeat = num / 2;\n        std::string repeated_i = \"\";\n        for (long j = 0; j < repeat; j++) {\n            repeated_i += i + \",\";\n        }\n        temp.push_back(repeated_i.substr(0, repeated_i.length() - 1));\n    }\n    return temp;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"v\"})), (1)) == (v));\n}\n\n\n",
        "answer": "(v)"
    },
    {
        "id": 373,
        "res": 0
    },
    {
        "id": 374,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpf6vjfsss.cpp:3:\n/tmp/tmpf6vjfsss.cpp: In function ‘int main()’:\n/tmp/tmpf6vjfsss.cpp:15:213: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘int’)\n   15 |     assert(candidate((std::vector<std::string>({(std::string)\"oH\", (std::string)\"ee\", (std::string)\"mb\", (std::string)\"deft\", (std::string)\"n\", (std::string)\"zz\", (std::string)\"f\", (std::string)\"abA\"})), (\"zz\")) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                                                                                                                   |\n      |                     std::vector<std::__cxx11::basic_string<char> >                                                                                                                                                      int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpf6vjfsss.cpp:3:\n/usr/include/c++/11/ext/new_allocator",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::vector<std::string> seq, std::string v) {\n    std::vector<std::string> a;\n    for (const std::string& i : seq) {\n        if (i.size() >= v.size() && i.substr(i.size() - v.size()) == v) {\n            a.push_back(i + i);\n        }\n    }\n    return a;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"oH\", (std::string)\"ee\", (std::string)\"mb\", (std::string)\"deft\", (std::string)\"n\", (std::string)\"zz\", (std::string)\"f\", (std::string)\"abA\"})), (\"zz\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 375,
        "res": 0
    },
    {
        "id": 376,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpfr43w291.cpp:3:\n/tmp/tmpfr43w291.cpp: In function ‘int main()’:\n/tmp/tmpfr43w291.cpp:14:47: error: ‘no’ was not declared in this scope\n   14 |     assert(candidate((\"2two programmers\")) == no);\n      |                                               ^~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    for (int i = 0; i < text.size(); i++) {\n        if (text.substr(0, i).find(\"two\") == 0) {\n            return text.substr(i);\n        }\n    }\n    return \"no\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"2two programmers\")) == no);\n}\n\n\n",
        "answer": "no"
    },
    {
        "id": 377,
        "res": false,
        "error": "Exception",
        "error_message": "tmpw5ytk182: /tmp/tmpw5ytk182.cpp:21: int main(): Assertion `candidate((\"BYE\\nNO\\nWAY\")) == (\"bye, no, way\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::stringstream ss;\n    ss << text;\n    std::string line;\n    std::string result;\n\n    while (std::getline(ss, line)) {\n        if (!result.empty()) {\n            result += \", \";\n        }\n        result += line;\n    }\n\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"BYE\\nNO\\nWAY\")) == (\"bye, no, way\"));\n}\n\n\n",
        "answer": "(\"bye, no, way\")"
    },
    {
        "id": 378,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpbuzt77rf.cpp:4:\n/tmp/tmpbuzt77rf.cpp: In function ‘int main()’:\n/tmp/tmpbuzt77rf.cpp:14:73: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   14 |     assert(candidate((std::map<std::string,long>({{\"did\", 0}})), (\"u\")) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                       |\n      |                     std::__cxx11::basic_string<char>                        int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpbuzt77rf.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpbuzt77rf.cpp:4:\n/tmp/tmpbuzt77rf.cpp:14:78: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((std::map<std::string,long>({{\"did\", 0}})), (\"u\")) == (0));\n      |                                                                              ^\nIn file included from /usr",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::map<std::string, long> dic, std::string key) {\n    long v = (dic.find(key) != dic.end()) ? dic[key] : 0;\n    if (v == 0)\n        return \"No such key!\";\n    dic.erase(key);\n    return std::to_string(dic.begin()->second);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>({{\"did\", 0}})), (\"u\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 379,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_bool_std_vector_long_{\n    bool f0;\n    std::vector<long> f1;    Union_bool_std_vector_long_(bool _f0) : f0(_f0) {}\n    Union_bool_std_vector_long_(std::vector<long> _f1) : f1(_f1) {}\n    ~Union_bool_std_vector_long_() {}\n    bool operator==(bool f) {\n        return f0 == f ;\n    }    bool operator==(std::vector<long> f) {\n        return f1 == f ;\n    }\n};\nUnion_bool_std_vector_long_ f(std::vector<long> nums) {\n    for (int i = nums.size() - 1; i >= 0; i -= 3) {\n        if (nums[i] == 0) {\n            nums.clear();\n            return Union_bool_std_vector_long_(false);\n        }\n    }\n    return Union_bool_std_vector_long_(nums);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)0, (long)0, (long)1, (long)2, (long)1}))) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 380,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp3kbnac_p.cpp:3:\n/tmp/tmp3kbnac_p.cpp: In function ‘int main()’:\n/tmp/tmp3kbnac_p.cpp:10:47: error: ‘xxjarczx’ was not declared in this scope\n   10 |     assert(candidate((\"xxjarczx\"), (\"x\")) == (xxjarczx));\n      |                                               ^~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string delimiter) {\n    size_t pos = text.rfind(delimiter);\n    return text.substr(0, pos) + text.substr(pos + delimiter.length());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"xxjarczx\"), (\"x\")) == (xxjarczx));\n}\n\n\n",
        "answer": "(xxjarczx)"
    },
    {
        "id": 381,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmps5uvj25g.cpp:3:\n/tmp/tmps5uvj25g.cpp: In function ‘int main()’:\n/tmp/tmps5uvj25g.cpp:10:35: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   10 |     assert(candidate((\"19\"), (5)) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                 |\n      |                     |                 int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmps5uvj25g.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmps5uvj25g.cpp:3:\n/tmp/tmps5uvj25g.cpp:10:40: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   10 |     assert(candidate((\"19\"), (5)) == (0));\n      |                                        ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n            ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long num_digits) {\n    long width = std::max(1L, num_digits);\n    return std::string(width - text.length(), '0') + text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"19\"), (5)) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 382,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp0doayhkm.cpp:19:102: warning: character constant too long for its type\n   19 |     assert(candidate((std::map<long,std::string>({{15, \"Qltuf\"}, {12, \"Rwrepny\"}}))) == (15, 'Qltuf'));\n      |                                                                                                      ^\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp0doayhkm.cpp:4:\n/tmp/tmp0doayhkm.cpp: In function ‘int main()’:\n/tmp/tmp0doayhkm.cpp:19:86: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   19 |     assert(candidate((std::map<long,std::string>({{15, \"Qltuf\"}, {12, \"Rwrepny\"}}))) == (15, 'Qltuf'));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                                                                      |\n      |                     std::__cxx11::basic_string<char>                                       int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp0doayhkm.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp0doayhkm.cpp:4:\n/tmp",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::map<long,std::string> a) {\n    std::stringstream ss;\n    std::map<long, std::string> s(a.rbegin(), a.rend());\n    for (auto& kv : s) {\n        ss << \"(\" << kv.first << \", '\" << kv.second << \"') \";\n    }\n    std::string result = ss.str();\n    if (!result.empty()) {\n        result.pop_back();\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,std::string>({{15, \"Qltuf\"}, {12, \"Rwrepny\"}}))) == (15, 'Qltuf'));\n}\n\n\n",
        "answer": "(15, 'Qltuf')"
    },
    {
        "id": 383,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpw5a8_32u.cpp:3:\n/tmp/tmpw5a8_32u.cpp: In function ‘int main()’:\n/tmp/tmpw5a8_32u.cpp:16:74: error: ‘ellod’ was not declared in this scope\n   16 |     assert(candidate((\"ellod!p.nkyp.exa.bi.y.hain\"), (\".n.in.ha.y\")) == (ellod!p.n.k.y.h.a.i.n.p.y));\n      |                                                                          ^~~~~\n/tmp/tmpw5a8_32u.cpp:16:79: error: expected ‘)’ before ‘!’ token\n   16 |     assert(candidate((\"ellod!p.nkyp.exa.bi.y.hain\"), (\".n.in.ha.y\")) == (ellod!p.n.k.y.h.a.i.n.p.y));\n      |                                                                         ~     ^\n/tmp/tmpw5a8_32u.cpp:16:101: error: expected ‘)’ before ‘;’ token\n   16 |     assert(candidate((\"ellod!p.nkyp.exa.bi.y.hain\"), (\".n.in.ha.y\")) == (ellod!p.n.k.y.h.a.i.n.p.y));\n      |                                                                                                     ^\n/tmp/tmpw5a8_32u.cpp:16:101: error: expected ‘)’ before ‘;’ token\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpw5a8_32u.cpp:3:\n/tmp/tmpw5a8_32u.cpp:16:5: note: to match this ‘(’\n   16 |     assert(candidate((\"ellod!p.nkyp.exa.bi.y.hain\"), (\".n.in.ha.y\")) == (ellod!p.n.k.y.h.a.i.n.p.y));\n      |     ^~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string chars) {\n    std::string result = text;\n    while (result.size() >= 6 && result.find(chars, result.size() - 3) != std::string::npos) {\n        result.erase(result.size() - 3, 2);\n    }\n    while (!result.empty() && result.back() == '.') {\n        result.pop_back();\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ellod!p.nkyp.exa.bi.y.hain\"), (\".n.in.ha.y\")) == (ellod!p.n.k.y.h.a.i.n.p.y));\n}\n\n\n",
        "answer": "(ellod!p.n.k.y.h.a.i.n.p.y)"
    },
    {
        "id": 384,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp9imv8xaf.cpp:3:\n/tmp/tmp9imv8xaf.cpp: In function ‘int main()’:\n/tmp/tmp9imv8xaf.cpp:21:49: error: ‘asfdellos’ was not declared in this scope\n   21 |     assert(candidate((\"asfdellos\"), (\"Ta\")) == (asfdellos));\n      |                                                 ^~~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string chars) {\n    std::vector<char> chars_vec(chars.begin(), chars.end());\n    std::vector<char> text_vec(text.begin(), text.end());\n    std::vector<char> new_text = text_vec;\n    \n    while (new_text.size() > 0 && text_vec.size() > 0) {\n        if (std::find(chars_vec.begin(), chars_vec.end(), new_text[0]) != chars_vec.end()) {\n            new_text.erase(new_text.begin());\n        } else {\n            break;\n        }\n    }\n\n    return std::string(new_text.begin(), new_text.end());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"asfdellos\"), (\"Ta\")) == (asfdellos));\n}\n\n\n",
        "answer": "(asfdellos)"
    },
    {
        "id": 385,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmplfq0evzk.cpp:3:\n/tmp/tmplfq0evzk.cpp: In function ‘int main()’:\n/tmp/tmplfq0evzk.cpp:20:132: error: expected ‘)’ before numeric constant\n   20 |     assert(candidate((std::vector<long>({(long)0, (long)2, (long)1, (long)2, (long)6, (long)2, (long)6, (long)3, (long)0}))) == (0 2 1 2 6 2 6 3 0));\n      |                                                                                                                                 ~  ^\n/tmp/tmplfq0evzk.cpp:20:126: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   20 |     assert(candidate((std::vector<long>({(long)0, (long)2, (long)1, (long)2, (long)6, (long)2, (long)6, (long)3, (long)0}))) == (0 2 1 2 6 2 6 3 0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                                            |\n      |                     std::vector<long int>                                                                                        int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmplfq0evzk.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> lst) {\n    int i = 0;\n    std::vector<long> new_list;\n    while(i < lst.size()) {\n        if(std::find(lst.begin() + i + 1, lst.end(), lst[i]) != lst.end()) {\n            new_list.push_back(lst[i]);\n            if(new_list.size() == 3) {\n                return new_list;\n            }\n        }\n        i++;\n    }\n    return new_list;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)0, (long)2, (long)1, (long)2, (long)6, (long)2, (long)6, (long)3, (long)0}))) == (0 2 1 2 6 2 6 3 0));\n}\n\n\n",
        "answer": "(0 2 1 2 6 2 6 3 0)"
    },
    {
        "id": 386,
        "res": false,
        "error": "Exception",
        "error_message": "tmpdf6ond30: /tmp/tmpdf6ond30.cpp:15: int main(): Assertion `candidate((\"mid\"), (std::map<std::string,std::string>({{\"0\", \"q\"}, {\"1\", \"f\"}, {\"2\", \"w\"}, {\"3\", \"i\"}}))) == (\"mid\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string concat, std::map<std::string,std::string> di) {\n    int count = di.size();\n    for (int i = 0; i < count; i++) {\n        if (di[std::to_string(i)].find(concat) != std::string::npos) {\n            di.erase(std::to_string(i));\n        }\n    }\n    return \"Done!\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"mid\"), (std::map<std::string,std::string>({{\"0\", \"q\"}, {\"1\", \"f\"}, {\"2\", \"w\"}, {\"3\", \"i\"}}))) == (\"mid\"));\n}\n\n\n",
        "answer": "(\"mid\")"
    },
    {
        "id": 387,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpvsny3hli.cpp:3:\n/tmp/tmpvsny3hli.cpp: In function ‘int main()’:\n/tmp/tmpvsny3hli.cpp:10:82: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   10 |     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2})), (2), (0)) == (3, 0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~\n      |                     |                                                                 |\n      |                     std::vector<long int>                                             int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpvsny3hli.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpvsny3hli.cpp:3:\n/tmp/tmpvsny3hli.cpp:10:90: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   10 |     assert(candidate((std::vector<long>({(long)3, (long)1, (long)2})), (2), (0)) == (3, 0));\n      |                                                                        ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums, long pos, long value) {\n    nums.insert(nums.begin() + pos, value);\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2})), (2), (0)) == (3, 0));\n}\n\n\n",
        "answer": "(3, 0)"
    },
    {
        "id": 388,
        "res": false,
        "error": "Exception",
        "error_message": "tmpra9hfffj: /tmp/tmpra9hfffj.cpp:18: int main(): Assertion `candidate((\"2nm_28in\"), (\"nm\")) == (\"_nm\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string characters) {\n    std::vector<char> character_list(characters.begin(), characters.end());\n    character_list.push_back(' ');\n    character_list.push_back('_');\n\n    int i = 0;\n    while (i < text.length() && std::find(character_list.begin(), character_list.end(), text[i]) != character_list.end()) {\n        i++;\n    }\n\n    return text.substr(i);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"2nm_28in\"), (\"nm\")) == (\"_nm\"));\n}\n\n\n",
        "answer": "(\"_nm\")"
    },
    {
        "id": 389,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpo45ed915.cpp:4:\n/tmp/tmpo45ed915.cpp: In function ‘int main()’:\n/tmp/tmpo45ed915.cpp:21:123: error: expected ‘)’ before numeric constant\n   21 |     assert(candidate((std::vector<std::string>({(std::string)\"1\", (std::string)\"2\", (std::string)\"3\"})), (\"nammo\")) == (1 2 3));\n      |                                                                                                                        ~  ^\n/tmp/tmpo45ed915.cpp:21:117: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘int’)\n   21 |     assert(candidate((std::vector<std::string>({(std::string)\"1\", (std::string)\"2\", (std::string)\"3\"})), (\"nammo\")) == (1 2 3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                                   |\n      |                     std::vector<std::__cxx11::basic_string<char> >                                                      int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpo45ed915.cpp:4:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘tem",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::vector<std::string> total, std::string arg) {\n    if (arg.find('[') != std::string::npos) {\n        for (char c : arg) {\n            if (isalpha(c)) {\n                total.push_back(std::string(1, c));\n            }\n        }\n    } else {\n        for (char c : arg) {\n            total.push_back(std::string(1, c));\n        }\n    }\n    return total;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"1\", (std::string)\"2\", (std::string)\"3\"})), (\"nammo\")) == (1 2 3));\n}\n\n\n",
        "answer": "(1 2 3)"
    },
    {
        "id": 390,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    if (text.find_first_not_of(' ') == std::string::npos) {\n        return text.size();\n    }\n    return 0;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\" \t \")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 391,
        "res": 0
    },
    {
        "id": 392,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    if (std::all_of(text.begin(), text.end(), ::isupper)) {\n        return \"ALL UPPERCASE\";\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Hello Is It MyClass\")) == (\"Hello Is It MyClass\"));\n}\n\n\n",
        "answer": "(\"Hello Is It MyClass\")"
    },
    {
        "id": 393,
        "res": 0
    },
    {
        "id": 394,
        "res": false,
        "error": "Exception",
        "error_message": "tmp0t39gd__: /tmp/tmp0t39gd__.cpp:18: int main(): Assertion `candidate((\"2 m2 \\n\\nbike\")) == (2)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    std::stringstream ss(text);\n    std::string line;\n    int i = 0;\n    while (std::getline(ss, line)) {\n        if (line.empty()) {\n            return i;\n        }\n        i++;\n    }\n    return -1;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"2 m2 \\n\\nbike\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 395,
        "res": false,
        "error": "Exception",
        "error_message": "tmpl9583ems: /tmp/tmpl9583ems.cpp:16: int main(): Assertion `candidate((\"11\")) == (-1)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string s) {\n    for (int i = 0; i < s.size(); i++) {\n        if (std::isdigit(s[i])) {\n            return i + (s[i] == '0');\n        } else if (s[i] == '0') {\n            return -1;\n        }\n    }\n    return -1;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"11\")) == (-1));\n}\n\n\n",
        "answer": "(-1)"
    },
    {
        "id": 396,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpt2xvoswz.cpp:4:\n/tmp/tmpt2xvoswz.cpp: In function ‘int main()’:\n/tmp/tmpt2xvoswz.cpp:17:47: error: no match for ‘operator==’ (operand types are ‘std::map<long int, long int>’ and ‘int’)\n   17 |     assert(candidate((std::map<long,long>())) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                             |\n      |                     std::map<long int, long int>  int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpt2xvoswz.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpt2xvoswz.cpp:4:\n/tmp/tmpt2xvoswz.cpp:17:52: note:   ‘std::map<long int, long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   17 |     assert(candidate((std::map<long,long>())) == (0));\n      |                                                    ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n         ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<long,long> f(std::map<long,long> ets) {\n    while (!ets.empty()) {\n        auto kv = ets.rbegin();\n        long k = kv->first;\n        long v = kv->second;\n        ets.erase(k);\n        ets[k] = v * v;\n    }\n    return ets;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,long>())) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 397,
        "res": 0
    },
    {
        "id": 398,
        "res": 0
    },
    {
        "id": 399,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpcexa9gnu.cpp:4:\n/tmp/tmpcexa9gnu.cpp: In function ‘int main()’:\n/tmp/tmpcexa9gnu.cpp:29:54: error: ‘avacado’ was not declared in this scope\n   29 |     assert(candidate((\"avacado\"), (\"va\"), (\"-\")) == (avacado));\n      |                                                      ^~~~~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string old, std::string neww) {\n    if (old.length() > 3) {\n        return text;\n    }\n    if (text.find(old) != std::string::npos && text.find(' ') == std::string::npos) {\n        std::string to_replace = \"\";\n        for (int i = 0; i < old.length(); i++) {\n            to_replace += neww;\n        }\n        size_t start_pos = text.find(old);\n        if (start_pos != std::string::npos) {\n            text.replace(start_pos, old.length(), to_replace);\n        }\n        return text;\n    }\n    size_t start_pos = 0;\n    while ((start_pos = text.find(old, start_pos)) != std::string::npos) {\n        text.replace(start_pos, old.length(), neww);\n        start_pos += neww.length();\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"avacado\"), (\"va\"), (\"-\")) == (avacado));\n}\n\n\n",
        "answer": "(avacado)"
    },
    {
        "id": 400,
        "res": false,
        "error": "Exception",
        "error_message": "tmp_4am0_c6: /tmp/tmp_4am0_c6.cpp:31: int main(): Assertion `candidate((\"I am hungry! eat food.\")) == (\"I am, hungry! eat food.\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string multi_string) {\n    std::vector<std::string> words;\n    std::stringstream ss(multi_string);\n    std::string word;\n    \n    while (ss >> word) {\n        bool is_ascii = true;\n        for (char c : word) {\n            if (c > 127) {\n                is_ascii = false;\n                break;\n            }\n        }\n        if (is_ascii) {\n            words.push_back(word);\n        }\n    }\n\n    if (!words.empty()) {\n        return std::accumulate(std::begin(words), std::end(words), std::string(),\n            [](const std::string &a, const std::string &b) -> std::string { return a + (a.length() > 0 ? \", \" : \"\") + b; });\n    } else {\n        return \"\";\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"I am hungry! eat food.\")) == (\"I am, hungry! eat food.\"));\n}\n\n\n",
        "answer": "(\"I am, hungry! eat food.\")"
    },
    {
        "id": 401,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string suffix) {\n    if (!suffix.empty() && text.substr(text.length() - suffix.length()) == suffix) {\n        return text.substr(0, text.length() - suffix.length());\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"mathematics\"), (\"example\")) == (\"mathematics\"));\n}\n\n\n",
        "answer": "(\"mathematics\")"
    },
    {
        "id": 402,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpj1vh7pgp.cpp:3:\n/tmp/tmpj1vh7pgp.cpp: In function ‘int main()’:\n/tmp/tmpj1vh7pgp.cpp:16:97: error: no match for ‘operator==’ (operand types are ‘std::map<long int, long int>’ and ‘int’)\n   16 |     assert(candidate((0), (std::vector<std::string>({(std::string)\"aaa\", (std::string)\"bbb\"}))) == (0, 0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~\n      |                     |                                                                                |\n      |                     std::map<long int, long int>                                                     int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpj1vh7pgp.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpj1vh7pgp.cpp:3:\n/tmp/tmpj1vh7pgp.cpp:16:105: note:   ‘std::map<long int, long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   16 |     assert(candidate((0), (std::vector<std::string>({(std::string)\"aaa\", (std::string)\"bbb\"}))) =",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<long,long> f(long n, std::vector<std::string> l) {\n    std::map<long,long> archive;\n    for (int i = 0; i < n; ++i) {\n        archive.clear();\n        for (const std::string& x : l) {\n            archive[x.size() + 10] = x.size() * 10;\n        }\n    }\n    return archive;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((0), (std::vector<std::string>({(std::string)\"aaa\", (std::string)\"bbb\"}))) == (0, 0));\n}\n\n\n",
        "answer": "(0, 0)"
    },
    {
        "id": 403,
        "res": false,
        "error": "Exception",
        "error_message": "tmpxujqk6u1: /tmp/tmpxujqk6u1.cpp:17: int main(): Assertion `candidate((\"hrsiajiajieihruejfhbrisvlmmy\"), (\"hr\")) == (3)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string full, std::string part) {\n    size_t length = part.length();\n    size_t index = full.find(part);\n    int count = 0;\n    while (index != std::string::npos) {\n        full = full.substr(index + length);\n        index = full.find(part);\n        count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"hrsiajiajieihruejfhbrisvlmmy\"), (\"hr\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 404,
        "res": false,
        "error": "Exception",
        "error_message": "tmp9wxutoxe: /tmp/tmp9wxutoxe.cpp:13: int main(): Assertion `candidate((std::vector<std::string>({(std::string)\"l\", (std::string)\"f\", (std::string)\"h\", (std::string)\"g\", (std::string)\"s\", (std::string)\"b\"}))) == (5)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<std::string> no) {\n    std::unordered_map<std::string, bool> d;\n    for(const std::string& str : no) {\n        d[str] = false;\n    }\n    return d.size();\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"l\", (std::string)\"f\", (std::string)\"h\", (std::string)\"g\", (std::string)\"s\", (std::string)\"b\"}))) == (5));\n}\n\n\n",
        "answer": "(5)"
    },
    {
        "id": 405,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp8yukb6e2.cpp:3:\n/tmp/tmp8yukb6e2.cpp: In function ‘int main()’:\n/tmp/tmp8yukb6e2.cpp:16:108: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   16 |     assert(candidate((std::vector<long>({(long)6, (long)3, (long)4, (long)1, (long)2, (long)3, (long)5}))) == (5));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                          |\n      |                     std::vector<long int>                                                                      int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp8yukb6e2.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp8yukb6e2.cpp:3:\n/tmp/tmp8yukb6e2.cpp:16:113: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   16 |     assert(candidate((std::vector<long>({(long)6, (long)3, (long)4, (long)",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> xs) {\n    long new_x = xs[0] - 1;\n    xs.erase(xs.begin());\n    while (new_x <= xs[0]) {\n        xs.erase(xs.begin());\n        new_x--;\n    }\n    xs.insert(xs.begin(), new_x);\n    return xs;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)6, (long)3, (long)4, (long)1, (long)2, (long)3, (long)5}))) == (5));\n}\n\n\n",
        "answer": "(5)"
    },
    {
        "id": 406,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp_6r5ya9h.cpp:4:\n/tmp/tmp_6r5ya9h.cpp: In function ‘int main()’:\n/tmp/tmp_6r5ya9h.cpp:13:36: error: ‘J’ was not declared in this scope\n   13 |     assert(candidate((\"Josh\")) == (J));\n      |                                    ^\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text) {\n    std::transform(text.begin(), text.end(), text.begin(), ::tolower);\n    text[0] = std::toupper(text[0]);\n    text[text.size() - 1] = std::toupper(text[text.size() - 1]);\n    return std::all_of(text.begin(), text.end(), ::isupper);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Josh\")) == (J));\n}\n\n\n",
        "answer": "(J)"
    },
    {
        "id": 407,
        "res": false,
        "error": "Exception",
        "error_message": "tmp3ncdcfpm: /tmp/tmp3ncdcfpm.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)6, (long)1, (long)2, (long)3}))) == (6)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> s) {\n    while (s.size() > 1) {\n        s.clear();\n        s.push_back(s.size());\n    }\n    int result = s.back();\n    s.pop_back();\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)6, (long)1, (long)2, (long)3}))) == (6));\n}\n\n\n",
        "answer": "(6)"
    },
    {
        "id": 408,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpxyjh7lql.cpp:3:\n/tmp/tmpxyjh7lql.cpp: In function ‘int main()’:\n/tmp/tmpxyjh7lql.cpp:10:111: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   10 |     assert(candidate((std::vector<long>({(long)-4, (long)6, (long)0, (long)4, (long)-7, (long)2, (long)-1}))) == (0, 0, 0, 0, 0, 0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~\n      |                     |                                                                                                          |\n      |                     std::vector<long int>                                                                                      int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpxyjh7lql.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpxyjh7lql.cpp:3:\n/tmp/tmpxyjh7lql.cpp:10:131: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   10 |     as",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> m) {\n    std::reverse(m.begin(), m.end());\n    return m;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)-4, (long)6, (long)0, (long)4, (long)-7, (long)2, (long)-1}))) == (0, 0, 0, 0, 0, 0));\n}\n\n\n",
        "answer": "(0, 0, 0, 0, 0, 0)"
    },
    {
        "id": 409,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp1sy3x5d8.cpp:4:\n/tmp/tmp1sy3x5d8.cpp: In function ‘int main()’:\n/tmp/tmp1sy3x5d8.cpp:18:46: error: ‘QUERIST’ was not declared in this scope\n   18 |     assert(candidate((\"querist\"), (\"u\")) == (QUERIST));\n      |                                              ^~~~~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string prefix) {\n    if (!text.empty()) {\n        size_t pos = text.find(prefix);\n        if (pos == 0) {\n            text = text.substr(prefix.length());\n        }\n        std::transform(text.begin(), text.begin() + 1, text.begin(), ::tolower);\n        std::transform(text.end() - 1, text.end(), text.end() - 1, ::toupper);\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"querist\"), (\"u\")) == (QUERIST));\n}\n\n\n",
        "answer": "(QUERIST)"
    },
    {
        "id": 410,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpxjwgm3ti.cpp:4:\n/tmp/tmpxjwgm3ti.cpp: In function ‘int main()’:\n/tmp/tmpxjwgm3ti.cpp:14:101: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   14 |     assert(candidate((std::vector<long>({(long)1, (long)3, (long)-1, (long)1, (long)-2, (long)6}))) == (1, 3, -1, 1, -2, 6));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~\n      |                     |                                                                                                  |\n      |                     std::vector<long int>                                                                              int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpxjwgm3ti.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpxjwgm3ti.cpp:4:\n/tmp/tmpxjwgm3ti.cpp:14:123: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((std::vector<long",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    size_t original_size = nums.size();\n    for (size_t i = 0; i < original_size; ++i) {\n        nums.insert(nums.begin() + i, nums[i]);\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-1, (long)1, (long)-2, (long)6}))) == (1, 3, -1, 1, -2, 6));\n}\n\n\n",
        "answer": "(1, 3, -1, 1, -2, 6)"
    },
    {
        "id": 411,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text, std::string pref) {\n    if (pref[0] == '[') {\n        std::vector<std::string> prefixes;\n        size_t pos = 0;\n        size_t next_pos = 0;\n        while ((next_pos = pref.find(',', pos)) != std::string::npos) {\n            prefixes.push_back(pref.substr(pos, next_pos - pos));\n            pos = next_pos + 2;\n        }\n        prefixes.push_back(pref.substr(pos));\n\n        for (const auto& x : prefixes) {\n            if (text.find(x) == 0) {\n                return true;\n            }\n        }\n        return false;\n    } else {\n        return text.find(pref) == 0;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Hello World\"), (\"W\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 412,
        "res": false,
        "error": "Exception",
        "error_message": "tmp7440yqwl: /tmp/tmp7440yqwl.cpp:16: int main(): Assertion `candidate((3), (10), (1)) == (3)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(long start, long end, long interval) {\n    std::vector<long> steps;\n    for (long i = start; i <= end; i += interval) {\n        steps.push_back(i);\n    }\n    if (std::find(steps.begin(), steps.end(), 1) != steps.end()) {\n        steps.back() = end + 1;\n    }\n    return steps.size();\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((3), (10), (1)) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 413,
        "res": false,
        "error": "Exception",
        "error_message": "tmpj15atb8r: /tmp/tmpj15atb8r.cpp:9: int main(): Assertion `candidate((\"jbucwc\")) == (\"jbucwc\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s) {\n    return s.substr(3) + s[2] + s.substr(5, 3);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"jbucwc\")) == (\"jbucwc\"));\n}\n\n\n",
        "answer": "(\"jbucwc\")"
    },
    {
        "id": 414,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpqr9ybm5i.cpp:3:\n/tmp/tmpqr9ybm5i.cpp: In function ‘int main()’:\n/tmp/tmpqr9ybm5i.cpp:15:149: error: ‘X’ was not declared in this scope\n   15 |     assert(candidate((std::map<std::string,std::vector<std::string>>({{\"X\", std::vector<std::string>({(std::string)\"x\", (std::string)\"y\"})}}))) == (X));\n      |                                                                                                                                                     ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,std::vector<std::string>> f(std::map<std::string,std::vector<std::string>> d) {\n    std::map<std::string, std::vector<std::string>> dCopy = d;\n    for(auto& pair : dCopy) {\n        for(auto& str : pair.second) {\n            std::transform(str.begin(), str.end(), str.begin(), ::toupper);\n        }\n    }\n    return dCopy;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,std::vector<std::string>>({{\"X\", std::vector<std::string>({(std::string)\"x\", (std::string)\"y\"})}}))) == (X));\n}\n\n\n",
        "answer": "(X)"
    },
    {
        "id": 415,
        "res": 0
    },
    {
        "id": 416,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp87ir1aa6.cpp:4:\n/tmp/tmp87ir1aa6.cpp: In function ‘int main()’:\n/tmp/tmp87ir1aa6.cpp:16:79: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   16 |     assert(candidate((\"jysrhfm ojwesf xgwwdyr dlrul ymba bpq\"), (\"j\"), (\"1\")) == (5));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                             |\n      |                     std::__cxx11::basic_string<char>                              int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp87ir1aa6.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp87ir1aa6.cpp:4:\n/tmp/tmp87ir1aa6.cpp:16:84: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   16 |     assert(candidate((\"jysrhfm ojwesf xgwwdyr dlrul ymba bpq\"), (\"j\"), (\"1\")) == (5));\n      |                                                                            ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string old, std::string new_string) {\n    std::string result = text;\n    size_t index = result.rfind(old);\n    while (index > 0 && index < result.find(old)) {\n        result.replace(index, old.length(), new_string);\n        index = result.rfind(old, index);\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"jysrhfm ojwesf xgwwdyr dlrul ymba bpq\"), (\"j\"), (\"1\")) == (5));\n}\n\n\n",
        "answer": "(5)"
    },
    {
        "id": 417,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp95i6_mrr.cpp:3:\n/tmp/tmp95i6_mrr.cpp: In function ‘int main()’:\n/tmp/tmp95i6_mrr.cpp:12:81: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   12 |     assert(candidate((std::vector<long>({(long)7, (long)8, (long)2, (long)8}))) == (2, 8, 2, 8));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~\n      |                     |                                                                      |\n      |                     std::vector<long int>                                                  int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp95i6_mrr.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp95i6_mrr.cpp:3:\n/tmp/tmp95i6_mrr.cpp:12:95: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   12 |     assert(candidate((std::vector<long>({(long)7, (long)8, (long)2, (long)8}))) == (2, 8, 2, 8));\n      |                                               ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> lst) {\n    std::reverse(lst.begin(), lst.end());\n    lst.pop_back();\n    std::reverse(lst.begin(), lst.end());\n    return lst;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)7, (long)8, (long)2, (long)8}))) == (2, 8, 2, 8));\n}\n\n\n",
        "answer": "(2, 8, 2, 8)"
    },
    {
        "id": 418,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpswo60_3_.cpp:3:\n/tmp/tmpswo60_3_.cpp: In function ‘int main()’:\n/tmp/tmpswo60_3_.cpp:24:42: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   24 |     assert(candidate((\"qqqqq\"), (\"qqq\")) == (5));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                        |\n      |                     |                        int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpswo60_3_.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpswo60_3_.cpp:3:\n/tmp/tmpswo60_3_.cpp:24:47: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   24 |     assert(candidate((\"qqqqq\"), (\"qqq\")) == (5));\n      |                                               ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /u",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s, std::string p) {\n    std::string result;\n    auto arr = s.find(p);\n    if (arr != std::string::npos) {\n        int part_one = arr;\n        int part_two = p.length();\n        int part_three = s.length() - arr - p.length();\n\n        if (part_one >= 2 && part_two <= 2 && part_three >= 2) {\n            result = s.substr(0, part_one) + p + s.substr(part_one + part_two, part_three) + '#';\n        } else {\n            result = s;\n        }\n    } else {\n        result = s;\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"qqqqq\"), (\"qqq\")) == (5));\n}\n\n\n",
        "answer": "(5)"
    },
    {
        "id": 419,
        "res": false,
        "error": "Exception",
        "error_message": "tmpevove0z1: /tmp/tmpevove0z1.cpp:13: int main(): Assertion `candidate((\"mmfbifen\"), (\"i\")) == (\"\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string value) {\n    size_t found = text.find(value);\n    if (found == std::string::npos) {\n        return \"\";\n    }\n    return text.substr(0, found);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"mmfbifen\"), (\"i\")) == (\"\"));\n}\n\n\n",
        "answer": "(\"\")"
    },
    {
        "id": 420,
        "res": false,
        "error": "Exception",
        "error_message": "tmpf1ggbqp_: /tmp/tmpf1ggbqp_.cpp:13: int main(): Assertion `candidate((\"x\")) == (false)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text) {\n    try {\n        return std::all_of(text.begin(), text.end(), isalpha);\n    } catch(...) {\n        return false;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"x\")) == (false));\n}\n\n\n",
        "answer": "(false)"
    },
    {
        "id": 421,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp_z7zakrp.cpp:3:\n/tmp/tmp_z7zakrp.cpp: In function ‘int main()’:\n/tmp/tmp_z7zakrp.cpp:13:37: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   13 |     assert(candidate((\"try.\"), (5)) == (5));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                   |\n      |                     |                   int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp_z7zakrp.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp_z7zakrp.cpp:3:\n/tmp/tmp_z7zakrp.cpp:13:42: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   13 |     assert(candidate((\"try.\"), (5)) == (5));\n      |                                          ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s, long n) {\n    if (s.length() < n) {\n        return s;\n    } else {\n        return s.substr(n);\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"try.\"), (5)) == (5));\n}\n\n\n",
        "answer": "(5)"
    },
    {
        "id": 422,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpx7n4f0sb.cpp:3:\n/tmp/tmpx7n4f0sb.cpp: In function ‘int main()’:\n/tmp/tmpx7n4f0sb.cpp:15:72: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)1}))) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                      |\n      |                     std::vector<long int>                                  int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpx7n4f0sb.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpx7n4f0sb.cpp:3:\n/tmp/tmpx7n4f0sb.cpp:15:77: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)1}))) == (2));\n      |                                                                             ^\nIn file included from /usr/include/c++/11/bits/stl_alg",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> array) {\n    std::vector<long> new_array = array;\n    std::reverse(new_array.begin(), new_array.end());\n    std::vector<long> result;\n    for (auto x : new_array) {\n        result.push_back(x * x);\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1}))) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 423,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpb05s7hq4.cpp:3:\n/tmp/tmpb05s7hq4.cpp: In function ‘int main()’:\n/tmp/tmpb05s7hq4.cpp:15:114: error: expected ‘)’ before numeric constant\n   15 |     assert(candidate((std::vector<long>({(long)4, (long)2, (long)5, (long)1, (long)3, (long)2, (long)6}))) == (5 6 1 3 2));\n      |                                                                                                               ~  ^\n/tmp/tmpb05s7hq4.cpp:15:108: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   15 |     assert(candidate((std::vector<long>({(long)4, (long)2, (long)5, (long)1, (long)3, (long)2, (long)6}))) == (5 6 1 3 2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                          |\n      |                     std::vector<long int>                                                                      int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpb05s7hq4.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n              ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> selfie) {\n    int lo = selfie.size();\n    for(int i = lo-1; i >= 0; i--) {\n        if(selfie[i] == selfie[0]) {\n            selfie.erase(selfie.begin() + lo - 1);\n        }\n    }\n    return selfie;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)4, (long)2, (long)5, (long)1, (long)3, (long)2, (long)6}))) == (5 6 1 3 2));\n}\n\n\n",
        "answer": "(5 6 1 3 2)"
    },
    {
        "id": 424,
        "res": 0
    },
    {
        "id": 425,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp8syqvmez.cpp:3:\n/tmp/tmp8syqvmez.cpp: In function ‘int main()’:\n/tmp/tmp8syqvmez.cpp:12:42: error: ‘CL44’ was not declared in this scope\n   12 |     assert(candidate((\"/CL44     \")) == (CL44));\n      |                                          ^~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::string a) {\n    a = std::regex_replace(a, std::regex(\"/\"), \":\");\n    std::string x, y, z;\n    std::tie(x, y, z) = std::make_tuple(a.substr(0, a.find_last_of(\":\")), \":\", a.substr(a.find_last_of(\":\") + 1));\n    return {x, y, z};\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"/CL44     \")) == (CL44));\n}\n\n\n",
        "answer": "(CL44)"
    },
    {
        "id": 426,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpqgicsvmq.cpp:4:\n/tmp/tmpqgicsvmq.cpp: In function ‘int main()’:\n/tmp/tmpqgicsvmq.cpp:15:82: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})), (8), (5)) == (1, 2, 3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~\n      |                     |                                                                    |\n      |                     std::vector<long int>                                                int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpqgicsvmq.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpqgicsvmq.cpp:4:\n/tmp/tmpqgicsvmq.cpp:15:93: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   15 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})), (8), (5)) == (1, 2, 3));\n      |                                                         ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\n\nstd::vector<long> f(std::vector<long> numbers, long elem, long idx) {\n    if(idx < numbers.size())\n        numbers.insert(numbers.begin() + idx, elem);\n    else\n        numbers.push_back(elem);\n    return numbers;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})), (8), (5)) == (1, 2, 3));\n}\n\n\n",
        "answer": "(1, 2, 3)"
    },
    {
        "id": 427,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpcafq3nkx.cpp:3:\n/tmp/tmpcafq3nkx.cpp: In function ‘int main()’:\n/tmp/tmpcafq3nkx.cpp:16:51: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   16 |     assert(candidate((\"s a a b s d s a a s a a\")) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                 |\n      |                     std::__cxx11::basic_string<char>  int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpcafq3nkx.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpcafq3nkx.cpp:3:\n/tmp/tmpcafq3nkx.cpp:16:56: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   16 |     assert(candidate((\"s a a b s d s a a s a a\")) == (3));\n      |                                                        ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/incl",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s) {\n    int count = s.length() - 1;\n    std::string reverse_s = s;\n    std::reverse(reverse_s.begin(), reverse_s.end());\n    while (count > 0 && reverse_s.substr(0, count).find(\"sea\") == std::string::npos) {\n        count--;\n        reverse_s = reverse_s.substr(0, count);\n    }\n    return reverse_s.substr(count);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"s a a b s d s a a s a a\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 428,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpz67cr0v6.cpp:3:\n/tmp/tmpz67cr0v6.cpp: In function ‘int main()’:\n/tmp/tmpz67cr0v6.cpp:14:49: error: expected primary-expression before ‘)’ token\n   14 |     assert(candidate((std::vector<long>())) == ());\n      |                                                 ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    for(int i = 0; i < nums.size(); i++) {\n        if (!(i % 2)) {\n            nums.push_back(nums[i] * nums[i + 1]);\n        }\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>())) == ());\n}\n\n\n",
        "answer": "()"
    },
    {
        "id": 429,
        "res": 0
    },
    {
        "id": 430,
        "res": 0
    },
    {
        "id": 431,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpw9uereo9.cpp:3:\n/tmp/tmpw9uereo9.cpp: In function ‘int main()’:\n/tmp/tmpw9uereo9.cpp:16:32: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   16 |     assert(candidate((1), (3)) == (1));\n      |            ~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |              |\n      |                     |              int\n      |                     std::vector<long int>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpw9uereo9.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpw9uereo9.cpp:3:\n/tmp/tmpw9uereo9.cpp:16:37: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   16 |     assert(candidate((1), (3)) == (1));\n      |                                     ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(long n, long m) {\n    std::vector<long> arr;\n    for(long i = 1; i <= n; i++) {\n        arr.push_back(i);\n    }\n    for(long i = 0; i < m; i++) {\n        arr.clear();\n    }\n    return arr;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((1), (3)) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 432,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_bool{\n    std::string f0;\n    bool f1;    Union_std_string_bool(std::string _f0) : f0(_f0) {}\n    Union_std_string_bool(bool _f1) : f1(_f1) {}\n    ~Union_std_string_bool() {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }    bool operator==(bool f) {\n        return f1 == f ;\n    }\n};\nUnion_std_string_bool f(long length, std::string text) {\n    if (text.length() == length) {\n        std::string reversed_text = text;\n        std::reverse(reversed_text.begin(), reversed_text.end());\n        return Union_std_string_bool(reversed_text);\n    }\n    return Union_std_string_bool(false);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((-5), (\"G5ogb6f,c7e.EMm\")) == (false));\n}\n\n\n",
        "answer": "(false)"
    },
    {
        "id": 433,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpssue43pe.cpp:3:\n/tmp/tmpssue43pe.cpp: In function ‘int main()’:\n/tmp/tmpssue43pe.cpp:27:59: error: ‘T’ was not declared in this scope\n   27 |     assert(candidate((\"Dmreh,Sspp,T,G ,.tB,Vxk,Cct\")) == (T,G ,.tB,Vxk,Cct));\n      |                                                           ^\n/tmp/tmpssue43pe.cpp:27:61: error: ‘G’ was not declared in this scope\n   27 |     assert(candidate((\"Dmreh,Sspp,T,G ,.tB,Vxk,Cct\")) == (T,G ,.tB,Vxk,Cct));\n      |                                                             ^\n/tmp/tmpssue43pe.cpp:27:64: error: expected primary-expression before ‘.’ token\n   27 |     assert(candidate((\"Dmreh,Sspp,T,G ,.tB,Vxk,Cct\")) == (T,G ,.tB,Vxk,Cct));\n      |                                                                ^\n/tmp/tmpssue43pe.cpp:27:68: error: ‘Vxk’ was not declared in this scope\n   27 |     assert(candidate((\"Dmreh,Sspp,T,G ,.tB,Vxk,Cct\")) == (T,G ,.tB,Vxk,Cct));\n      |                                                                    ^~~\n/tmp/tmpssue43pe.cpp:27:72: error: ‘Cct’ was not declared in this scope\n   27 |     assert(candidate((\"Dmreh,Sspp,T,G ,.tB,Vxk,Cct\")) == (T,G ,.tB,Vxk,Cct));\n      |                                                                        ^~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::vector<std::string> tokens;\n    std::istringstream iss(text);\n    std::string token;\n\n    while (std::getline(iss, token, ',')) {\n        tokens.push_back(token);\n    }\n\n    tokens.erase(tokens.begin());\n    auto it = std::find(tokens.begin(), tokens.end(), \"T\");\n    std::iter_swap(tokens.begin(), it);\n\n    std::string result = \"T,\";\n    for (const std::string& t : tokens) {\n        result += t + \",\";\n    }\n\n    result.pop_back(); // Remove the extra comma\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Dmreh,Sspp,T,G ,.tB,Vxk,Cct\")) == (T,G ,.tB,Vxk,Cct));\n}\n\n\n",
        "answer": "(T,G ,.tB,Vxk,Cct)"
    },
    {
        "id": 434,
        "res": false,
        "error": "Exception",
        "error_message": "tmpe5ii_2cf: /tmp/tmpe5ii_2cf.cpp:13: int main(): Assertion `candidate((\"eeuseeeoehasa\")) == (-1)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string string) {\n    try {\n        return string.rfind('e');\n    } catch (const std::exception& e) {\n        return -1; // Assuming \"Nuk\" is meant to represent an error condition\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"eeuseeeoehasa\")) == (-1));\n}\n\n\n",
        "answer": "(-1)"
    },
    {
        "id": 435,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpf00swqp5.cpp:4:\n/tmp/tmpf00swqp5.cpp: In function ‘int main()’:\n/tmp/tmpf00swqp5.cpp:20:62: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   20 |     assert(candidate((std::vector<std::string>()), (0), (1)) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                            |\n      |                     std::__cxx11::basic_string<char>             int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpf00swqp5.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpf00swqp5.cpp:4:\n/tmp/tmpf00swqp5.cpp:20:67: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   20 |     assert(candidate((std::vector<std::string>()), (0), (1)) == (0));\n      |                                                                   ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::vector<std::string> numbers, long num, long val) {\n    while (numbers.size() < static_cast<size_t>(num)) {\n        numbers.insert(numbers.begin() + numbers.size() / 2, std::to_string(val));\n    }\n    for (long i = 0; i < static_cast<long>(numbers.size() / (num - 1) - 4); ++i) {\n        numbers.insert(numbers.begin() + numbers.size() / 2, std::to_string(val));\n    }\n    std::string result;\n    for (const auto &number : numbers) {\n        result += number + \" \";\n    }\n    return result.substr(0, result.size() - 1);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>()), (0), (1)) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 436,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpgymu6c0h.cpp:3:\n/tmp/tmpgymu6c0h.cpp: In function ‘int main()’:\n/tmp/tmpgymu6c0h.cpp:13:105: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘std::vector<long int>’)\n   13 |     assert(candidate((\"s7 6s 1ss\"), (std::vector<long>({(long)1, (long)3, (long)6, (long)1, (long)2}))) == (std::vector<long>({1, 3, 6, 1, 2})));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                                                                            |\n      |                     vector<std::__cxx11::basic_string<char>>                                                     vector<long int>\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpgymu6c0h.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::__cxx11::basic_string<char> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::string s, std::vector<long> characters) {\n    std::vector<std::string> result;\n    for (long i : characters) {\n        result.push_back(s.substr(i, 1));\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"s7 6s 1ss\"), (std::vector<long>({(long)1, (long)3, (long)6, (long)1, (long)2}))) == (std::vector<long>({1, 3, 6, 1, 2})));\n}\n\n\n",
        "answer": "(std::vector<long>({1, 3, 6, 1, 2}))"
    },
    {
        "id": 437,
        "res": 0
    },
    {
        "id": 438,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp4gnz6hmt.cpp:4:\n/tmp/tmp4gnz6hmt.cpp: In function ‘int main()’:\n/tmp/tmp4gnz6hmt.cpp:35:54: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   35 |     assert(candidate((\"1                        3\")) == (1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                    |\n      |                     std::__cxx11::basic_string<char>     int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp4gnz6hmt.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp4gnz6hmt.cpp:4:\n/tmp/tmp4gnz6hmt.cpp:35:59: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   35 |     assert(candidate((\"1                        3\")) == (1));\n      |                                                           ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n             ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\n\nstd::string expandTabs(const std::string& str, int tabSize) {\n    std::string result;\n    int col = 0;\n    for (char ch : str) {\n        if (ch == '\\t') {\n            int spaces = tabSize - (col % tabSize);\n            result.append(spaces, ' ');\n            col += spaces;\n        } else {\n            result.push_back(ch);\n            ++col;\n        }\n    }\n    return result;\n}\n\nstd::string f(std::string string) {\n    int bigTab = 100;\n    for (int i = 10; i < 30; ++i) {\n        int tabCount = std::count(string.begin(), string.end(), '\\t');\n        if (0 < tabCount && tabCount < 20) {\n            bigTab = i;\n            break;\n        }\n    }\n    return expandTabs(string, bigTab);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"1  \t\t\t3\")) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 439,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp_7negxoi.cpp:3:\n/tmp/tmp_7negxoi.cpp: In function ‘int main()’:\n/tmp/tmp_7negxoi.cpp:23:41: error: ‘coscifysu’ was not declared in this scope\n   23 |     assert(candidate((\"coscifysu\")) == (coscifysu));\n      |                                         ^~~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string value) {\n    std::vector<std::string> parts;\n    size_t pos = 0;\n    while (pos < value.length()) {\n        size_t spacePos = value.find(' ', pos);\n        parts.push_back(value.substr(pos, spacePos - pos));\n        if (spacePos == std::string::npos) break;\n        pos = spacePos + 1;\n    }\n\n    std::string result;\n    for (const std::string& part : parts) {\n        result += part;\n    }\n\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"coscifysu\")) == (coscifysu));\n}\n\n\n",
        "answer": "(coscifysu)"
    },
    {
        "id": 440,
        "res": false,
        "error": "Exception",
        "error_message": "tmp7m21otn1: /tmp/tmp7m21otn1.cpp:13: int main(): Assertion `candidate((\"abc\")) == (\"yes\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    if(std::all_of(text.begin(), text.end(), ::isdigit)) {\n        return \"yes\";\n    } else {\n        return \"no\";\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"abc\")) == (\"yes\"));\n}\n\n\n",
        "answer": "(\"yes\")"
    },
    {
        "id": 441,
        "res": 0
    },
    {
        "id": 442,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpg2fj4nwo.cpp:3:\n/tmp/tmpg2fj4nwo.cpp: In function ‘int main()’:\n/tmp/tmpg2fj4nwo.cpp:16:87: error: expected ‘)’ before numeric constant\n   16 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4}))) == (2 3));\n      |                                                                                    ~  ^\n/tmp/tmpg2fj4nwo.cpp:16:81: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   16 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4}))) == (2 3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                               |\n      |                     std::vector<long int>                                           int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpg2fj4nwo.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpg2fj4nwo.cpp:3:\n/tmp/tmpg2fj4nwo.cpp:16:5: note:   ‘std::vector<long int>’ is n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> lst) {\n    std::vector<long> res;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] % 2 == 0) {\n            res.push_back(lst[i]);\n        }\n    }\n    \n    return lst;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4}))) == (2 3));\n}\n\n\n",
        "answer": "(2 3)"
    },
    {
        "id": 443,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp_nouha70.cpp:3:\n/tmp/tmp_nouha70.cpp: In function ‘int main()’:\n/tmp/tmp_nouha70.cpp:16:43: error: ‘lorem’ was not declared in this scope\n   16 |     assert(candidate((\"lorem ipsum\")) == (lorem));\n      |                                           ^~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    for (char& space : text) {\n        if (space == ' ') {\n            text = text.erase(0, text.find_first_not_of(' '));\n        } else {\n            text = std::regex_replace(text, std::regex(\"cd\"), std::string(1, space));\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"lorem ipsum\")) == (lorem));\n}\n\n\n",
        "answer": "(lorem)"
    },
    {
        "id": 444,
        "res": 0
    },
    {
        "id": 445,
        "res": 0
    },
    {
        "id": 446,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpswu4ti1y.cpp:3:\n/tmp/tmpswu4ti1y.cpp: In function ‘int main()’:\n/tmp/tmpswu4ti1y.cpp:15:49: error: expected primary-expression before ‘)’ token\n   15 |     assert(candidate((std::vector<long>())) == ());\n      |                                                 ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> array) {\n    int l = array.size();\n    if (l % 2 == 0) {\n        array.clear();\n    } else {\n        std::reverse(array.begin(), array.end());\n    }\n    return array;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>())) == ());\n}\n\n\n",
        "answer": "()"
    },
    {
        "id": 447,
        "res": false,
        "error": "Exception",
        "error_message": "tmpi7r7lmkw: /tmp/tmpi7r7lmkw.cpp:19: int main(): Assertion `candidate((\"\ta\"), (3)) == (\"a\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long tab_size) {\n    std::string res = \"\";\n    text = std::regex_replace(text, std::regex(\"\\t\"), std::string(tab_size-1, ' '));\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            res += '|';\n        }\n        else {\n            res += text[i];\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"\ta\"), (3)) == (\"a\"));\n}\n\n\n",
        "answer": "(\"a\")"
    },
    {
        "id": 448,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp5_e1kk9s.cpp:3:\n/tmp/tmp5_e1kk9s.cpp: In function ‘int main()’:\n/tmp/tmp5_e1kk9s.cpp:12:45: error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n   12 |     assert(candidate((\"uMeGndkGh\"), (\"kG\")) == (\"Hello World\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text, std::string suffix) {\n    if(suffix == \"\") {\n        suffix = \"\";\n    }\n    return text.rfind(suffix) == (text.length() - suffix.length());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"uMeGndkGh\"), (\"kG\")) == (\"Hello World\"));\n}\n\n\n",
        "answer": "(\"Hello World\")"
    },
    {
        "id": 449,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string x) {\n    int n = x.size();\n    int i = 0;\n    while (i < n && isdigit(x[i])) {\n        i++;\n    }\n    return i == n;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"1\")) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 450,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpac93umdq.cpp:4:\n/tmp/tmpac93umdq.cpp: In function ‘int main()’:\n/tmp/tmpac93umdq.cpp:24:33: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   24 |     assert(candidate((\"K zBK\")) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |               |\n      |                     |               int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpac93umdq.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpac93umdq.cpp:4:\n/tmp/tmpac93umdq.cpp:24:38: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   24 |     assert(candidate((\"K zBK\")) == (3));\n      |                                      ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /u",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string strs) {\n    std::vector<std::string> words;\n    std::stringstream ss(strs);\n    std::string word;\n    while (ss >> word) {\n        words.push_back(word);\n    }\n    for (size_t i = 1; i < words.size(); i += 2) {\n        std::reverse(words[i].begin(), words[i].end());\n    }\n    std::string result;\n    for (const auto &word : words) {\n        result += word + \" \";\n    }\n    result.pop_back();  // Remove the trailing space\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"K zBK\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 451,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp1661lfec.cpp:4:\n/tmp/tmp1661lfec.cpp: In function ‘int main()’:\n/tmp/tmp1661lfec.cpp:16:41: error: ‘p’ was not declared in this scope\n   16 |     assert(candidate((\"pn\"), (\"p\")) == (p));\n      |                                         ^\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string character) {\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == character[0]) {\n            text.erase(i, 1);\n            return text;\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"pn\"), (\"p\")) == (p));\n}\n\n\n",
        "answer": "(p)"
    },
    {
        "id": 452,
        "res": false,
        "error": "Exception",
        "error_message": "tmpes2lh4rs: /tmp/tmpes2lh4rs.cpp:15: int main(): Assertion `candidate((\"l000*\")) == (0)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    int counter = 0;\n    for(char c : text) {\n        if(std::isalpha(c)) {\n            counter++;\n        }\n    }\n    return counter;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"l000*\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 453,
        "res": false,
        "error": "Exception",
        "error_message": "tmp689hj2ji: /tmp/tmp689hj2ji.cpp:9: int main(): Assertion `candidate((\"wrsch)xjmb8\"), (\"c\")) == (3)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string string, std::string c) {\n    return string.substr(string.size() - c.size()) == c;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"wrsch)xjmb8\"), (\"c\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 454,
        "res": 0
    },
    {
        "id": 455,
        "res": false,
        "error": "Exception",
        "error_message": "tmpb6uzv1j8: /tmp/tmpb6uzv1j8.cpp:15: int main(): Assertion `candidate((\"?XyZ\")) == (\"XyZ\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    int uppers = 0;\n    for (char c : text) {\n        if (std::isupper(c)) {\n            uppers++;\n        }\n    }\n    return (uppers >= 10) ? std::string(text.begin(), text.end()) : text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"?XyZ\")) == (\"XyZ\"));\n}\n\n\n",
        "answer": "(\"XyZ\")"
    },
    {
        "id": 456,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s, long tab) {\n    std::string result = s;\n    std::string tabStr(tab, ' ');\n    size_t pos = 0;\n    while ((pos = result.find(\"\\t\", pos)) != std::string::npos) {\n        result.replace(pos, 1, tabStr);\n        pos += tab;\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Join us in Hungary\"), (4)) == (\"Join us in Hungary\"));\n}\n\n\n",
        "answer": "(\"Join us in Hungary\")"
    },
    {
        "id": 457,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpt0q0pql0.cpp:4:\n/tmp/tmpt0q0pql0.cpp: In function ‘int main()’:\n/tmp/tmpt0q0pql0.cpp:12:96: error: expected ‘)’ before numeric constant\n   12 |     assert(candidate((std::vector<long>({(long)3, (long)1, (long)7, (long)5, (long)6}))) == (3 1 7 5 6));\n      |                                                                                             ~  ^\n/tmp/tmpt0q0pql0.cpp:12:90: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   12 |     assert(candidate((std::vector<long>({(long)3, (long)1, (long)7, (long)5, (long)6}))) == (3 1 7 5 6));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                        |\n      |                     std::vector<long int>                                                    int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpt0q0pql0.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpt0q0pql0.cpp:4:\n/",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    while (nums.size()>0) \n        nums.pop_back();\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)7, (long)5, (long)6}))) == (3 1 7 5 6));\n}\n\n\n",
        "answer": "(3 1 7 5 6)"
    },
    {
        "id": 458,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp435buu6b.cpp:4:\n/tmp/tmp435buu6b.cpp: In function ‘int main()’:\n/tmp/tmp435buu6b.cpp:22:54: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   22 |     assert(candidate((\"mmm34mIm\"), (\"mm3\"), (\",po\")) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                    |\n      |                     std::__cxx11::basic_string<char>     int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp435buu6b.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp435buu6b.cpp:4:\n/tmp/tmp435buu6b.cpp:22:59: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   22 |     assert(candidate((\"mmm34mIm\"), (\"mm3\"), (\",po\")) == (3));\n      |                                                           ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n             ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string search_chars, std::string replace_chars) {\n    std::map<char, char> trans_table;\n    for(size_t i = 0; i < search_chars.size(); ++i) {\n        trans_table[search_chars[i]] = replace_chars[i];\n    }\n    std::string result;\n    for(char c : text) {\n        if(trans_table.find(c) != trans_table.end()) {\n            result += trans_table[c];\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"mmm34mIm\"), (\"mm3\"), (\",po\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 459,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpf16o0l4t.cpp:4:\n/tmp/tmpf16o0l4t.cpp: In function ‘int main()’:\n/tmp/tmpf16o0l4t.cpp:13:198: error: missing template arguments before ‘(’ token\n   13 |     assert(candidate((std::vector<std::string>({(std::string)\"b\", (std::string)\"vzjmc\", (std::string)\"f\", (std::string)\"ae\", (std::string)\"0\"})), (std::map<std::string,std::string>())) == (std::map({\"b\": \"v\", \"v\": \"z\", \"z\": \"j\", \"j\": \"m\", \"m\": \"c\", \"c\": \"a\", \"a\": \"0\"})));\n      |                                                                                                                                                                                                      ^\n/tmp/tmpf16o0l4t.cpp:13:203: error: expected ‘}’ before ‘:’ token\n   13 |     assert(candidate((std::vector<std::string>({(std::string)\"b\", (std::string)\"vzjmc\", (std::string)\"f\", (std::string)\"ae\", (std::string)\"0\"})), (std::map<std::string,std::string>())) == (std::map({\"b\": \"v\", \"v\": \"z\", \"z\": \"j\", \"j\": \"m\", \"m\": \"c\", \"c\": \"a\", \"a\": \"0\"})));\n      |                                                                                                                                                                                                       ~   ^\n/tmp/tmpf16o0l4t.cpp:13:203: error: expected ‘)’ before ‘:’ token\n   13 |     assert(candidate((std::vector<std::string>({(std::string)\"b\", (std::string)\"vzjmc\", (std::string)\"f\", (std::string)\"ae\", (std::string)\"0\"})), (std::map<std::string,std::string>())) == (std::map({\"b\": \"v\", \"v\": \"z\", \"z\": \"j\", \"j\": \"m\", \"m\": \"c\", \"c\": \"a\", \"a\": \"0\"})));\n      |                                                                                                                                                                                                      ~    ^\n/tmp/tmpf16o0l4t.cpp:13:213: error: expected ‘)’ before ‘:’ token\n   13 |     assert(candidate((std::vect",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,std::string> f(std::vector<std::string> arr, std::map<std::string,std::string> d) {\n    for (size_t i = 1; i < arr.size(); i += 2) {\n        d[arr[i]] = arr[i-1];\n    }\n    return d;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"b\", (std::string)\"vzjmc\", (std::string)\"f\", (std::string)\"ae\", (std::string)\"0\"})), (std::map<std::string,std::string>())) == (std::map({\"b\": \"v\", \"v\": \"z\", \"z\": \"j\", \"j\": \"m\", \"m\": \"c\", \"c\": \"a\", \"a\": \"0\"})));\n}\n\n\n",
        "answer": "(std::map({\"b\": \"v\", \"v\": \"z\", \"z\": \"j\", \"j\": \"m\", \"m\": \"c\", \"c\": \"a\", \"a\": \"0\"}))"
    },
    {
        "id": 460,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long amount) {\n    size_t length = text.length();\n    std::string pre_text = \"|\";\n    if (amount >= length) {\n        int extra_space = amount - length;\n        pre_text += std::string(extra_space / 2, ' ');\n        return pre_text + text + pre_text;\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"GENERAL NAGOOR\"), (5)) == (\"GENERAL NAGOOR\"));\n}\n\n\n",
        "answer": "(\"GENERAL NAGOOR\")"
    },
    {
        "id": 461,
        "res": false,
        "error": "Exception",
        "error_message": "tmpy730gent: /tmp/tmpy730gent.cpp:9: int main(): Assertion `candidate((\"123\"), (\"123eenhas0\")) == (0)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text, std::string search) {\n    return search.rfind(text, 0) == 0;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"123\"), (\"123eenhas0\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 462,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpdeho1owd.cpp:4:\n/tmp/tmpdeho1owd.cpp: In function ‘int main()’:\n/tmp/tmpdeho1owd.cpp:15:43: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   15 |     assert(candidate((\"ldebgp o\"), (\"o\")) == (5));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                         |\n      |                     |                         int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpdeho1owd.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpdeho1owd.cpp:4:\n/tmp/tmpdeho1owd.cpp:15:48: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   15 |     assert(candidate((\"ldebgp o\"), (\"o\")) == (5));\n      |                                                ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 f",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string value) {\n    int length = text.length();\n    std::vector<char> letters(text.begin(), text.end());\n    if (std::find(letters.begin(), letters.end(), value[0]) == letters.end()) {\n        value = std::string(1, letters[0]);\n    }\n    return std::string(length, value[0]);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ldebgp o\"), (\"o\")) == (5));\n}\n\n\n",
        "answer": "(5)"
    },
    {
        "id": 463,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpppsev59r.cpp:3:\n/tmp/tmpppsev59r.cpp: In function ‘int main()’:\n/tmp/tmpppsev59r.cpp:19:83: error: no match for ‘operator==’ (operand types are ‘std::map<long int, long int>’ and ‘int’)\n   19 |     assert(candidate((std::map<long,long>({{-1, -1}, {5, 5}, {3, 6}, {-4, -4}}))) == (5, 6));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~\n      |                     |                                                                  |\n      |                     std::map<long int, long int>                                       int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpppsev59r.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpppsev59r.cpp:3:\n/tmp/tmpppsev59r.cpp:19:91: note:   ‘std::map<long int, long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   19 |     assert(candidate((std::map<long,long>({{-1, -1}, {5, 5}, {3, 6}, {-4, -4}}))) == (5, 6));\n      |                                                     ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<long,long> f(std::map<long,long> dict) {\n    std::map<long, long> result = dict;\n    std::vector<long> remove_keys;\n    for (auto& pair : dict) {\n        if (dict.find(pair.second) != dict.end()) {\n            remove_keys.push_back(pair.first);\n        }\n    }\n    for (auto key : remove_keys) {\n        result.erase(key);\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,long>({{-1, -1}, {5, 5}, {3, 6}, {-4, -4}}))) == (5, 6));\n}\n\n\n",
        "answer": "(5, 6)"
    },
    {
        "id": 464,
        "res": false,
        "error": "Exception",
        "error_message": "tmpz81tbfyq: /tmp/tmpz81tbfyq.cpp:25: int main(): Assertion `candidate((\"0\")) == (0)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_std_string{\n    long f0;\n    std::string f1;    Union_long_std_string(long _f0) : f0(_f0) {}\n    Union_long_std_string(std::string _f1) : f1(_f1) {}\n    ~Union_long_std_string() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(std::string f) {\n        return f1 == f ;\n    }\n};\nUnion_long_std_string f(std::string ans) {\n    if (std::all_of(ans.begin(), ans.end(), ::isdigit)) {\n        int total = std::stoi(ans) * 4 - 50;\n        total -= std::count_if(ans.begin(), ans.end(), [](char c) { return c != '0' && c != '2' && c != '4' && c != '6' && c != '8'; }) * 100;\n        return total;\n    }\n    return Union_long_std_string(\"NAN\");\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"0\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 465,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,std::string> f(std::vector<std::string> seq, std::string value) {\n    std::map<std::string, std::string> roles;\n    for (const auto& s : seq) {\n        roles[s] = \"north\";\n    }\n    if (!value.empty()) {\n        std::istringstream iss(value);\n        std::string token;\n        while (std::getline(iss, token, ',')) {\n            roles[std::string(token)] = \"north\";\n        }\n    }\n    return roles;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"wise king\", (std::string)\"young king\"})), (\"\")) == (std::map<std::string,std::string>({{\"wise king\", \"north\"}, {\"young king\", \"north\"}})));\n}\n\n\n",
        "answer": "(std::map<std::string,std::string>({{\"wise king\", \"north\"}, {\"young king\", \"north\"}}))"
    },
    {
        "id": 466,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    size_t length = text.length();\n    size_t index = 0;\n    while (index < length && isspace(text[index])) {\n        index++;\n    }\n    return text.substr(index, 5);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"-----\t\\n\tth\\n-----\")) == (\"-----\"));\n}\n\n\n",
        "answer": "(\"-----\")"
    },
    {
        "id": 467,
        "res": 0
    },
    {
        "id": 468,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpsoqc8ze6.cpp:3:\n/tmp/tmpsoqc8ze6.cpp: In function ‘int main()’:\n/tmp/tmpsoqc8ze6.cpp:27:49: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   27 |     assert(candidate((\"unrndqafi\"), (\"c\"), (2)) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                               |\n      |                     |                               int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpsoqc8ze6.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpsoqc8ze6.cpp:3:\n/tmp/tmpsoqc8ze6.cpp:27:54: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   27 |     assert(candidate((\"unrndqafi\"), (\"c\"), (2)) == (2));\n      |                                                      ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/b",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string a, std::string b, long n) {\n    std::string result = b;\n    std::string m = b;\n    for (int i = 0; i < n; i++) {\n        if (!m.empty()) {\n            size_t pos = a.find(m);\n            if (pos != std::string::npos) {\n                a.erase(pos, m.length());\n                m.clear();\n            }\n            result = m = b;\n        }\n    }\n    std::stringstream ss(a);\n    std::string token;\n    std::string res;\n    while (std::getline(ss, token, b[0])) {\n        res += token;\n    }\n    return res;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"unrndqafi\"), (\"c\"), (2)) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 469,
        "res": false,
        "error": "Exception",
        "error_message": "tmpvh6x2y10: /tmp/tmpvh6x2y10.cpp:16: int main(): Assertion `candidate((\"sduyai\"), (1), (\"y\")) == (\"sduyay\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long position, std::string value) {\n    int length = text.length();\n    int index = position % length;\n    if (position < 0) {\n        index = length / 2;\n    }\n    text.insert(index, value);\n    text.erase(length - 1, 1);\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"sduyai\"), (1), (\"y\")) == (\"sduyay\"));\n}\n\n\n",
        "answer": "(\"sduyay\")"
    },
    {
        "id": 470,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp22oz8oqq.cpp:3:\n/tmp/tmp22oz8oqq.cpp: In function ‘int main()’:\n/tmp/tmp22oz8oqq.cpp:18:27: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘int’)\n   18 |     assert(candidate((2)) == (2));\n      |            ~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |         |\n      |                     |         int\n      |                     std::vector<std::__cxx11::basic_string<char> >\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmp22oz8oqq.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::__cxx11::basic_string<char> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp22oz8oqq.cpp:3:\n/tmp/tmp22oz8oqq.cpp:18:32: note:   mismatched types ‘const __gnu_cxx::new_allocator<_Tp>’ and ‘",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(long number) {\n    std::vector<std::string> result;\n    std::map<char, int> transl = {{'A', 1}, {'B', 2}, {'C', 3}, {'D', 4}, {'E', 5}};\n    \n    for (auto const& pair : transl) {\n        if (pair.second % number == 0) {\n            result.push_back(std::string(1, pair.first));\n        }\n    }\n    \n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((2)) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 471,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string val, std::string text) {\n    std::vector<int> indices;\n    for (int index = 0; index < text.length(); ++index) {\n        if (text[index] == val[0]) {\n            indices.push_back(index);\n        }\n    }\n    if (indices.size() == 0) {\n        return -1;\n    } else {\n        return indices[0];\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"o\"), (\"fnmart\")) == (-1));\n}\n\n\n",
        "answer": "(-1)"
    },
    {
        "id": 472,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp5lgw0pii.cpp:4:\n/tmp/tmp5lgw0pii.cpp: In function ‘int main()’:\n/tmp/tmp5lgw0pii.cpp:26:38: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   26 |     assert(candidate((\"x--y-z-5-C\")) == (5));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                    |\n      |                     |                    int\n      |                     std::vector<long int>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp5lgw0pii.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp5lgw0pii.cpp:4:\n/tmp/tmp5lgw0pii.cpp:26:43: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   26 |     assert(candidate((\"x--y-z-5-C\")) == (5));\n      |                                           ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::string text) {\n    std::map<char, long> d;\n    for (char& c : text) {\n        if (c == '-') continue;\n        c = std::tolower(c);\n        if (d.find(c) != d.end()) {\n            d[c] += 1;\n        } else {\n            d[c] = 1;\n        }\n    }\n    std::vector<std::pair<char, long>> items(d.begin(), d.end());\n    std::sort(items.begin(), items.end(), [](auto& a, auto& b) { return a.second < b.second; });\n    std::vector<long> result;\n    for (auto& item : items) {\n        result.push_back(item.second);\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"x--y-z-5-C\")) == (5));\n}\n\n\n",
        "answer": "(5)"
    },
    {
        "id": 473,
        "res": false,
        "error": "Exception",
        "error_message": "tmpzle5no4q: /tmp/tmpzle5no4q.cpp:21: int main(): Assertion `candidate((\"scedvtvotkwqfoqn\"), (\"o\")) == (std::string(\"scedvotkwqfoqn\"))' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string value) {\n    std::vector<int> indexes;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == value[0]) {\n            indexes.push_back(i);\n        }\n    }\n    \n    std::string new_text = text;\n    for (int i = indexes.size() - 1; i >= 0; i--) {\n        new_text.erase(indexes[i], 1);\n    }\n    \n    return new_text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"scedvtvotkwqfoqn\"), (\"o\")) == (std::string(\"scedvotkwqfoqn\")));\n}\n\n\n",
        "answer": "(std::string(\"scedvotkwqfoqn\"))"
    },
    {
        "id": 474,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp7e47nlbi.cpp:4:\n/tmp/tmp7e47nlbi.cpp: In function ‘int main()’:\n/tmp/tmp7e47nlbi.cpp:36:48: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   36 |     assert(candidate((\"#[)[]>[^e>\\n 8\"), (-5)) == (8));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                              |\n      |                     |                              int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp7e47nlbi.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp7e47nlbi.cpp:4:\n/tmp/tmp7e47nlbi.cpp:36:53: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   36 |     assert(candidate((\"#[)[]>[^e>\\n 8\"), (-5)) == (8));\n      |                                                     ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/sp",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\n\nstd::string f(std::string txt, int marker) {\n    std::istringstream iss(txt);\n    std::vector<std::string> lines;\n    std::string line;\n    while (std::getline(iss, line)) {\n        lines.push_back(line);\n    }\n\n    std::vector<std::string> a;\n    for (std::string line : lines) {\n        std::string new_line = line;\n        int spaces = marker - line.size();\n        if (spaces > 0) {\n            int left_spaces = spaces / 2;\n            int right_spaces = spaces - left_spaces;\n            new_line = std::string(left_spaces, ' ') + line + std::string(right_spaces, ' ');\n        }\n        a.push_back(new_line);\n    }\n\n    std::string result;\n    for (std::string line : a) {\n        result += line + '\\n';\n    }\n    result.pop_back(); // remove the trailing '\\n'\n\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"#[)[]>[^e>\\n 8\"), (-5)) == (8));\n}\n\n\n",
        "answer": "(8)"
    },
    {
        "id": 475,
        "res": true,
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> array, long index) {\n    if (index < 0) {\n        index = array.size() + index;\n    }\n    return array[index];\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1})), (0)) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 476,
        "res": false,
        "error": "Exception",
        "error_message": "tmplh50opcf: /tmp/tmplh50opcf.cpp:23: int main(): Assertion `candidate((\"booty boot-boot bootclass\"), (\"k\")) == (1)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string a, std::string split_on) {\n    std::vector<char> t;\n    for (char c : a) {\n        t.push_back(c);\n    }\n    std::vector<char> result;\n    for (char c : t) {\n        if (c != ' ') {\n            result.push_back(c);\n        }\n    }\n    if (std::find(result.begin(), result.end(), split_on[0]) != result.end()) {\n        return true;\n    } else {\n        return false;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"booty boot-boot bootclass\"), (\"k\")) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 477,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpydw3s0_t.cpp:4:\n/tmp/tmpydw3s0_t.cpp: In function ‘int main()’:\n/tmp/tmpydw3s0_t.cpp:22:36: error: no match for ‘operator==’ (operand types are ‘std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >’ and ‘const char [8]’)\n   22 |     assert(candidate((\"|xduaisf\")) == (\"xduaisf\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~\n      |                     |                  |\n      |                     |                  const char [8]\n      |                     std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpydw3s0_t.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpydw3s0_t.cpp:4:\n/tmp/tmpydw3s0_t.cpp:22:49: note:   ‘std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::tuple<std::string, std::string> f(std::string text) {\n    std::string topic, problem;\n    size_t pos = text.rfind('|');\n    if (pos != std::string::npos) {\n        topic = text.substr(0, pos);\n        problem = text.substr(pos + 1, std::string::npos);\n    } else {\n        topic = \"\";\n        problem = text;\n    }\n    if (problem == \"r\") {\n        std::replace(problem.begin(), problem.end(), 'u', 'p');\n    }\n    return std::make_tuple(topic, problem);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"|xduaisf\")) == (\"xduaisf\"));\n}\n\n\n",
        "answer": "(\"xduaisf\")"
    },
    {
        "id": 478,
        "res": false,
        "error": "Exception",
        "error_message": "tmpqa1wzksv: /tmp/tmpqa1wzksv.cpp:13: int main(): Assertion `candidate((\"meow meow\")) == (std::map<std::string,long>({{\"m\", 1}, {\"e\", 2}, {\"w\", 1}, {\"o\", 1}}))' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,long> f(std::string sb) {\n    std::map<std::string, long> d;\n    for (char s : sb) {\n        d[std::string(1, s)] = d[std::string(1, s)] + 1;\n    }\n    return d;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"meow meow\")) == (std::map<std::string,long>({{\"m\", 1}, {\"e\", 2}, {\"w\", 1}, {\"o\", 1}})));\n}\n\n\n",
        "answer": "(std::map<std::string,long>({{\"m\", 1}, {\"e\", 2}, {\"w\", 1}, {\"o\", 1}}))"
    },
    {
        "id": 479,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpnr5io31o.cpp:3:\n/tmp/tmpnr5io31o.cpp: In function ‘int main()’:\n/tmp/tmpnr5io31o.cpp:11:100: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   11 |     assert(candidate((std::vector<long>({(long)1, (long)5, (long)2, (long)3, (long)6})), (2), (4)) == (2, 4));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~\n      |                     |                                                                                   |\n      |                     std::vector<long int>                                                               int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpnr5io31o.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpnr5io31o.cpp:3:\n/tmp/tmpnr5io31o.cpp:11:108: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   11 |     assert(candidate((std::vector<long>({(long)1, (long)5, (long)2, (long)3, (long)6})), (2), (4))",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums, long pop1, long pop2) {\n    nums.erase(nums.begin() + pop1 - 1);\n    nums.erase(nums.begin() + pop2 - 1);\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)5, (long)2, (long)3, (long)6})), (2), (4)) == (2, 4));\n}\n\n\n",
        "answer": "(2, 4)"
    },
    {
        "id": 480,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpyavd0d2f.cpp:3:\n/tmp/tmpyavd0d2f.cpp: In function ‘int main()’:\n/tmp/tmpyavd0d2f.cpp:23:51: error: ‘mi’ was not declared in this scope\n   23 |     assert(candidate((\"\"), (\"mi\"), (\"siast\")) == (mi));\n      |                                                   ^~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s, std::string c1, std::string c2) {\n    if (s == \"\") {\n        return s;\n    }\n    std::vector<std::string> ls;\n    std::istringstream iss(s);\n    std::string item;\n    while (std::getline(iss, item, c1[0])) {\n        if (item.find(c1) != std::string::npos) {\n            item.replace(item.find(c1), c1.length(), c2);\n        }\n        ls.push_back(item);\n    }\n    return c1 + std::accumulate(std::next(ls.begin()), ls.end(), ls[0], [&](const std::string &a, const std::string &b) {\n        return a + c1 + b;\n    });\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"\"), (\"mi\"), (\"siast\")) == (mi));\n}\n\n\n",
        "answer": "(mi)"
    },
    {
        "id": 481,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmppgwbog1u.cpp:3:\n/tmp/tmppgwbog1u.cpp: In function ‘int main()’:\n/tmp/tmppgwbog1u.cpp:18:73: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   18 |     assert(candidate((std::vector<long>({(long)1, (long)1})), (2), (3)) == (2, 3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~\n      |                     |                                                        |\n      |                     std::vector<long int>                                    int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmppgwbog1u.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmppgwbog1u.cpp:3:\n/tmp/tmppgwbog1u.cpp:18:81: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   18 |     assert(candidate((std::vector<long>({(long)1, (long)1})), (2), (3)) == (2, 3));\n      |                                                                                 ^\nIn file included from /usr/include",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> values, long item1, long item2) {\n    if (values.back() == item2) {\n        if (std::find(values.begin() + 1, values.end(), values[0]) == values.end()) {\n            values.push_back(values[0]);\n        }\n    } else if (values.back() == item1) {\n        if (values[0] == item2) {\n            values.push_back(values[0]);\n        }\n    }\n    return values;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)1})), (2), (3)) == (2, 3));\n}\n\n\n",
        "answer": "(2, 3)"
    },
    {
        "id": 482,
        "res": false,
        "error": "Exception",
        "error_message": "tmpjcvqfk4k: /tmp/tmpjcvqfk4k.cpp:15: int main(): Assertion `candidate((\"Because it intrigues them\")) == (\"Because it ninters them\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string result = text;\n    size_t pos = result.find(\"\\\\\\\"\");\n    while (pos != std::string::npos) {\n        result.replace(pos, 2, \"\\\"\");\n        pos = result.find(\"\\\\\\\"\", pos + 1);\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Because it intrigues them\")) == (\"Because it ninters them\"));\n}\n\n\n",
        "answer": "(\"Because it ninters them\")"
    },
    {
        "id": 483,
        "res": false,
        "error": "Exception",
        "error_message": "tmpk7vg6kjq: /tmp/tmpk7vg6kjq.cpp:16: int main(): Assertion `candidate((\"a\"), (\"a\")) == (\"a\")' failed.\n",
        "code": "\n#include <assert.h>\n#include <bits/stdc++.h>\n\nstd::string f(std::string text, std::string delimiter) {\n    std::istringstream iss(text);\n    std::string token;\n    std::string result;\n    while (std::getline(iss, token, delimiter[0])) {\n        result += token + \" \";\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"a\"), (\"a\")) == (\"a\"));\n}\n\n\n",
        "answer": "(\"a\")"
    },
    {
        "id": 484,
        "res": 0
    },
    {
        "id": 485,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpkc26bkqa.cpp:4:\n/tmp/tmpkc26bkqa.cpp: In function ‘int main()’:\n/tmp/tmpkc26bkqa.cpp:22:43: error: ‘gsd’ was not declared in this scope\n   22 |     assert(candidate((\"gsd avdropj\")) == (gsd avdropj));\n      |                                           ^~~\n/tmp/tmpkc26bkqa.cpp:22:47: error: expected ‘)’ before ‘avdropj’\n   22 |     assert(candidate((\"gsd avdropj\")) == (gsd avdropj));\n      |                                          ~    ^~~~~~~\n/tmp/tmpkc26bkqa.cpp:22:56: error: expected ‘)’ before ‘;’ token\n   22 |     assert(candidate((\"gsd avdropj\")) == (gsd avdropj));\n      |                                                        ^\n/tmp/tmpkc26bkqa.cpp:22:56: error: expected ‘)’ before ‘;’ token\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpkc26bkqa.cpp:4:\n/tmp/tmpkc26bkqa.cpp:22:5: note: to match this ‘(’\n   22 |     assert(candidate((\"gsd avdropj\")) == (gsd avdropj));\n      |     ^~~~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string tokens) {\n    std::vector<std::string> tokens_split;\n    std::istringstream iss(tokens);\n    for(std::string tokens; iss >> tokens; )\n        tokens_split.push_back(tokens);\n\n    if(tokens_split.size() == 2)\n        std::reverse(tokens_split.begin(), tokens_split.end());\n\n    std::stringstream ss;\n    ss << std::left << std::setw(5) << tokens_split[0] << \" \";\n    ss << std::left << std::setw(5) << tokens_split[1];\n\n    return ss.str();\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"gsd avdropj\")) == (gsd avdropj));\n}\n\n\n",
        "answer": "(gsd avdropj)"
    },
    {
        "id": 486,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp0jphlju2.cpp:3:\n/tmp/tmp0jphlju2.cpp: In function ‘int main()’:\n/tmp/tmp0jphlju2.cpp:13:71: error: no match for ‘operator==’ (operand types are ‘std::map<long int, long int>’ and ‘int’)\n   13 |     assert(candidate((std::map<long,long>({{1, 1}, {2, 2}, {3, 3}}))) == (1, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~\n      |                     |                                                      |\n      |                     std::map<long int, long int>                           int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp0jphlju2.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp0jphlju2.cpp:3:\n/tmp/tmp0jphlju2.cpp:13:79: note:   ‘std::map<long int, long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   13 |     assert(candidate((std::map<long,long>({{1, 1}, {2, 2}, {3, 3}}))) == (1, 1));\n      |                                                                               ^\nIn file included from /usr/inclu",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<long,long> f(std::map<long,long> dic) {\n    std::map<long, long> dic_op = dic;\n    for(auto& kv : dic_op) {\n        dic_op[kv.first] = kv.second * kv.second;\n    }\n    return dic_op;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,long>({{1, 1}, {2, 2}, {3, 3}}))) == (1, 1));\n}\n\n\n",
        "answer": "(1, 1)"
    },
    {
        "id": 487,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpvbhz19ct.cpp:3:\n/tmp/tmpvbhz19ct.cpp: In function ‘int main()’:\n/tmp/tmpvbhz19ct.cpp:15:64: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   15 |     assert(candidate((std::map<long,std::string>({{4, \"a\"}}))) == (4));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                              |\n      |                     std::vector<long int>                          int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpvbhz19ct.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpvbhz19ct.cpp:3:\n/tmp/tmpvbhz19ct.cpp:15:69: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   15 |     assert(candidate((std::map<long,std::string>({{4, \"a\"}}))) == (4));\n      |                                                                     ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::map<long,std::string> dict) {\n    std::vector<long> even_keys;\n    for (auto const& pair : dict) {\n        if (pair.first % 2 == 0) {\n            even_keys.push_back(pair.first);\n        }\n    }\n    return even_keys;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,std::string>({{4, \"a\"}}))) == (4));\n}\n\n\n",
        "answer": "(4)"
    },
    {
        "id": 488,
        "res": 0
    },
    {
        "id": 489,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp2k88c_cz.cpp:3:\n/tmp/tmp2k88c_cz.cpp: In function ‘int main()’:\n/tmp/tmp2k88c_cz.cpp:14:46: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘double(double) noexcept’)\n   14 |     assert(candidate((\"coscifysu\"), (\"cos\")) == (cos));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~\n      |                     |                            |\n      |                     |                            double(double) noexcept\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp2k88c_cz.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp2k88c_cz.cpp:3:\n/tmp/tmp2k88c_cz.cpp:14:53: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((\"coscifysu\"), (\"cos\")) == (cos));\n      |                                                     ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n             ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string value) {\n    int pos = text.find(value);\n    if (pos == 0) {\n        return text.substr(value.length());\n    } else {\n        return text;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"coscifysu\"), (\"cos\")) == (cos));\n}\n\n\n",
        "answer": "(cos)"
    },
    {
        "id": 490,
        "res": 0
    },
    {
        "id": 491,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpzufn9coj.cpp:4:\n/tmp/tmpzufn9coj.cpp: In function ‘int main()’:\n/tmp/tmpzufn9coj.cpp:15:81: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   15 |     assert(candidate((std::vector<long>({(long)4, (long)8, (long)8, (long)5}))) == (5, 5, 5, 5));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~\n      |                     |                                                                      |\n      |                     std::vector<long int>                                                  int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpzufn9coj.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpzufn9coj.cpp:4:\n/tmp/tmpzufn9coj.cpp:15:95: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   15 |     assert(candidate((std::vector<long>({(long)4, (long)8, (long)8, (long)5}))) == (5, 5, 5, 5));\n      |                                               ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> xs) {\n    for (long i=-1, size=xs.size(); i>=-size; --i) {\n        long val = xs[xs.size()+i];\n        xs.push_back(val);\n        xs.push_back(val);\n    }\n    return xs;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)4, (long)8, (long)8, (long)5}))) == (5, 5, 5, 5));\n}\n\n\n",
        "answer": "(5, 5, 5, 5)"
    },
    {
        "id": 492,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp1sptynm2.cpp:4:\n/tmp/tmp1sptynm2.cpp: In function ‘int main()’:\n/tmp/tmp1sptynm2.cpp:18:51: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   18 |     assert(candidate((\"abbkebaniuwurzvr\"), (\"m\")) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                 |\n      |                     std::__cxx11::basic_string<char>  int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp1sptynm2.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp1sptynm2.cpp:4:\n/tmp/tmp1sptynm2.cpp:18:56: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   18 |     assert(candidate((\"abbkebaniuwurzvr\"), (\"m\")) == (3));\n      |                                                        ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/incl",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string value) {\n    std::vector<char> ls(text.begin(), text.end());\n    int count = std::count(ls.begin(), ls.end(), value[0]);\n    if (count % 2 == 0) {\n        ls.erase(std::remove(ls.begin(), ls.end(), value[0]), ls.end());\n    } else {\n        ls.clear();\n    }\n    std::string result(ls.begin(), ls.end());\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"abbkebaniuwurzvr\"), (\"m\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 493,
        "res": 0
    },
    {
        "id": 494,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpuekwdtvo.cpp:3:\n/tmp/tmpuekwdtvo.cpp: In function ‘int main()’:\n/tmp/tmpuekwdtvo.cpp:14:34: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   14 |     assert(candidate((\"1\"), (3)) == (000));\n      |            ~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~\n      |                     |                |\n      |                     |                int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpuekwdtvo.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpuekwdtvo.cpp:3:\n/tmp/tmpuekwdtvo.cpp:14:41: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((\"1\"), (3)) == (000));\n      |                                         ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n          ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string num, long l) {\n    std::string t = \"\";\n    while (l > num.length()) {\n        t += '0';\n        l--;\n    }\n    return t + num;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"1\"), (3)) == (000));\n}\n\n\n",
        "answer": "(000)"
    },
    {
        "id": 495,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpp56a_339.cpp:4:\n/tmp/tmpp56a_339.cpp: In function ‘int main()’:\n/tmp/tmpp56a_339.cpp:23:35: error: no match for ‘operator==’ (operand types are ‘std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >’ and ‘const char [9]’)\n   23 |     assert(candidate((\"a1234år\")) == (\"a1234år\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~\n      |                     |                 |\n      |                     |                 const char [9]\n      |                     std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpp56a_339.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpp56a_339.cpp:4:\n/tmp/tmpp56a_339.cpp:23:48: note:   ‘std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::tuple<std::string, std::string> f(std::string s) {\n    std::string last5 = s.substr(s.length() - 5);\n    std::string first3 = s.substr(0, 3);\n    std::string first5 = s.substr(0, 5);\n    std::string last3 = s.substr(s.length() - 3);\n\n    bool last5Ascii = std::all_of(last5.begin(), last5.end(), ::isascii);\n    bool first5Ascii = std::all_of(first5.begin(), first5.end(), ::isascii);\n    if (last5Ascii) {\n        return std::make_tuple(last5, first3);\n    } else if (first5Ascii) {\n        return std::make_tuple(first5, last3);\n    } else {\n        return std::make_tuple(s, \"\");\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"a1234år\")) == (\"a1234år\"));\n}\n\n\n",
        "answer": "(\"a1234år\")"
    },
    {
        "id": 496,
        "res": 0
    },
    {
        "id": 497,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp3o000wxv.cpp:3:\n/tmp/tmp3o000wxv.cpp: In function ‘int main()’:\n/tmp/tmp3o000wxv.cpp:17:28: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘int’)\n   17 |     assert(candidate((44)) == (1+2+3+4));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~\n      |                     |               |\n      |                     |               int\n      |                     std::vector<std::__cxx11::basic_string<char> >\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmp3o000wxv.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::__cxx11::basic_string<char> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp3o000wxv.cpp:3:\n/tmp/tmp3o000wxv.cpp:17:39: note:   mismatched types ‘const __gnu_cxx::new",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(long n) {\n    std::vector<std::string> b;\n    std::string numStr = std::to_string(n);\n    for (int i = 0; i < numStr.length(); ++i) {\n        b.push_back(std::string(1, numStr[i]));\n    }\n    for (int i = 2; i < b.size(); ++i) {\n        b[i] += '+';\n    }\n    return b;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((44)) == (1+2+3+4));\n}\n\n\n",
        "answer": "(1+2+3+4)"
    },
    {
        "id": 498,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp_grxctea.cpp:3:\n/tmp/tmp_grxctea.cpp: In function ‘int main()’:\n/tmp/tmp_grxctea.cpp:10:100: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   10 |     assert(candidate((std::vector<long>({(long)2, (long)2, (long)2, (long)3, (long)3})), (2), (3)) == (2, 3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~\n      |                     |                                                                                   |\n      |                     std::vector<long int>                                                               int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp_grxctea.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp_grxctea.cpp:3:\n/tmp/tmp_grxctea.cpp:10:108: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   10 |     assert(candidate((std::vector<long>({(long)2, (long)2, (long)2, (long)3, (long)3})), (2), (3))",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums, long idx, long added) {\n    nums.insert(nums.begin() + idx, added);\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)2, (long)2, (long)2, (long)3, (long)3})), (2), (3)) == (2, 3));\n}\n\n\n",
        "answer": "(2, 3)"
    },
    {
        "id": 499,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp4z4j3qpm.cpp:4:\n/tmp/tmp4z4j3qpm.cpp: In function ‘int main()’:\n/tmp/tmp4z4j3qpm.cpp:15:49: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   15 |     assert(candidate((\"magazine\"), (25), (\".\")) == (25));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                               |\n      |                     |                               int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp4z4j3qpm.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp4z4j3qpm.cpp:4:\n/tmp/tmp4z4j3qpm.cpp:15:55: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   15 |     assert(candidate((\"magazine\"), (25), (\".\")) == (25));\n      |                                                       ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long length, std::string fillchar) {\n    if (length <= text.length()) {\n        return text;\n    }\n    long padding = length - text.length();\n    long left_padding = padding / 2 + (padding % 2 != 0);\n    return std::string(left_padding, fillchar[0]) + text + std::string(padding / 2, fillchar[0]);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"magazine\"), (25), (\".\")) == (25));\n}\n\n\n",
        "answer": "(25)"
    },
    {
        "id": 500,
        "res": false,
        "error": "Exception",
        "error_message": "tmp3tqk2fh4: /tmp/tmp3tqk2fh4.cpp:18: int main(): Assertion `candidate((\"dsj osq wi w\"), (\" \")) == (std::string(\"dlrow olleh\"))' failed.\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string delim) {\n    std::string reversed = text;\n    std::reverse(reversed.begin(), reversed.end());\n    size_t pos = reversed.find(delim);\n    if (pos != std::string::npos) {\n        std::string result = reversed.substr(reversed.size() - pos);\n        std::reverse(result.begin(), result.end());\n        return result;\n    }\n    return \"\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"dsj osq wi w\"), (\" \")) == (std::string(\"dlrow olleh\")));\n}\n\n\n",
        "answer": "(std::string(\"dlrow olleh\"))"
    },
    {
        "id": 501,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpg2i2cgpn.cpp:4:\n/tmp/tmpg2i2cgpn.cpp: In function ‘int main()’:\n/tmp/tmpg2i2cgpn.cpp:23:47: error: ‘qpfi’ was not declared in this scope\n   23 |     assert(candidate((\"qpfi jzm\"), (\"j\")) == (qpfi));\n      |                                               ^~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string strchar) {\n    if (strchar.size() != 1) {\n        throw std::invalid_argument(\"Char argument must be a single character string\");\n    }\n    char char_ = strchar[0];\n    std::vector<char> result(text.begin(), text.end());\n    int index = text.rfind(char_);\n    if (index != std::string::npos) {\n        while (index > 0) {\n            result[index] = result[index - 1];\n            result[index - 1] = char_;\n            index -= 2;\n        }\n    }\n    return std::string(result.begin(), result.end());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"qpfi jzm\"), (\"j\")) == (qpfi));\n}\n\n\n",
        "answer": "(qpfi)"
    },
    {
        "id": 502,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpw5lvkelj.cpp:3:\n/tmp/tmpw5lvkelj.cpp: In function ‘int main()’:\n/tmp/tmpw5lvkelj.cpp:25:42: error: ‘Smith’ was not declared in this scope\n   25 |     assert(candidate((\"Fred Smith\")) == (Smith));\n      |                                          ^~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string name) {\n    std::stringstream ss;\n    std::vector<std::string> tokens;\n    std::string token;\n    std::istringstream tokenStream(name);\n\n    while (std::getline(tokenStream, token, ' ')) {\n        tokens.push_back(token);\n    }\n\n    for (int i = 0; i < tokens.size(); i++) {\n        ss << tokens[i];\n        if (i != tokens.size() - 1) {\n            ss << \"*\";\n        }\n    }\n\n    return ss.str();\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Fred Smith\")) == (Smith));\n}\n\n\n",
        "answer": "(Smith)"
    },
    {
        "id": 503,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpqr9et5vi.cpp:4:\n/tmp/tmpqr9et5vi.cpp: In function ‘int main()’:\n/tmp/tmpqr9et5vi.cpp:19:51: error: expected primary-expression before ‘)’ token\n   19 |     assert(candidate((std::map<long,long>())) == ());\n      |                                                   ^\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::map<long,long> d) {\n    std::vector<long> result(d.size());\n    long a = 0, b = 0;\n    while(!d.empty()) {\n        auto it = std::next(d.begin(), a == b);\n        result[a] = it->first;\n        d.erase(it);\n        a = b;\n        b = (b+1) % result.size();\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,long>())) == ());\n}\n\n\n",
        "answer": "()"
    },
    {
        "id": 504,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp6m0xdajq.cpp:3:\n/tmp/tmp6m0xdajq.cpp: In function ‘int main()’:\n/tmp/tmp6m0xdajq.cpp:10:87: error: expected ‘)’ before numeric constant\n   10 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)1, (long)1}))) == (1 1 1 1));\n      |                                                                                    ~  ^\n/tmp/tmp6m0xdajq.cpp:10:81: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   10 |     assert(candidate((std::vector<long>({(long)1, (long)1, (long)1, (long)1}))) == (1 1 1 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                               |\n      |                     std::vector<long int>                                           int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp6m0xdajq.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp6m0xdajq.cpp:3:\n/tmp/tmp6m0xdajq.cpp:10:5: note:   ‘std::vector<long int>",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> values) {\n    std::sort(values.begin(), values.end());\n    return values;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)1, (long)1}))) == (1 1 1 1));\n}\n\n\n",
        "answer": "(1 1 1 1)"
    },
    {
        "id": 505,
        "res": false,
        "error": "Exception",
        "error_message": "tmpgm7_swsg: /tmp/tmpgm7_swsg.cpp:15: int main(): Assertion `candidate((\"--4/0-209\")) == (\"-4/0-209\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string string) {\n    while (!string.empty()) {\n        if (isalpha(string.back())) {\n            return string;\n        }\n        string.pop_back();\n    }\n    return string;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"--4/0-209\")) == (\"-4/0-209\"));\n}\n\n\n",
        "answer": "(\"-4/0-209\")"
    },
    {
        "id": 506,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmprtkzc3u1.cpp:3:\n/tmp/tmprtkzc3u1.cpp: In function ‘int main()’:\n/tmp/tmprtkzc3u1.cpp:22:27: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   22 |     assert(candidate((1)) == (1));\n      |            ~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |         |\n      |                     |         int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmprtkzc3u1.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmprtkzc3u1.cpp:3:\n/tmp/tmprtkzc3u1.cpp:22:32: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   22 |     assert(candidate((1)) == (1));\n      |                                ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/b",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(long n) {\n    std::string p = \"\";\n    if (n % 2 == 1) {\n        p += \"sn\";\n    } else {\n        return std::to_string(n * n);\n    }\n    for (int x = 1; x <= n; x++) {\n        if (x % 2 == 0) {\n            p += \"to\";\n        } else {\n            p += \"ts\";\n        }\n    }\n    return p;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((1)) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 507,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text, std::string search) {\n    std::transform(text.begin(), text.end(), text.begin(), ::tolower);\n    std::transform(search.begin(), search.end(), search.begin(), ::tolower);\n    return text.find(search);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"car hat\"), (\"car\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 508,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp0ps3to4f.cpp:3:\n/tmp/tmp0ps3to4f.cpp: In function ‘int main()’:\n/tmp/tmp0ps3to4f.cpp:26:51: error: ‘ertubwi’ was not declared in this scope\n   26 |     assert(candidate((\"ertubwi\"), (\"p\"), (5)) == (ertubwi));\n      |                                                   ^~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string sep, long maxsplit) {\n    std::vector<std::string> splitted;\n    size_t pos = 0;\n    size_t found;\n    while ((found = text.find(sep, pos)) != std::string::npos && maxsplit > 0) {\n        splitted.push_back(text.substr(pos, found - pos));\n        pos = found + sep.size();\n        maxsplit--;\n    }\n    splitted.push_back(text.substr(pos));\n\n    size_t length = splitted.size();\n    std::vector<std::string> new_splitted(splitted.begin(), splitted.begin() + length / 2);\n    std::reverse(new_splitted.begin(), new_splitted.end());\n    new_splitted.insert(new_splitted.end(), splitted.begin() + length / 2, splitted.end());\n\n    return std::accumulate(new_splitted.begin(), new_splitted.end(), std::string(), [&](const std::string &a, const std::string &b) {\n        return a.empty() ? b : a + sep + b;\n    });\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ertubwi\"), (\"p\"), (5)) == (ertubwi));\n}\n\n\n",
        "answer": "(ertubwi)"
    },
    {
        "id": 509,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp9kl9mdkj.cpp:3:\n/tmp/tmp9kl9mdkj.cpp: In function ‘int main()’:\n/tmp/tmp9kl9mdkj.cpp:16:32: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   16 |     assert(candidate((5), (1)) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |              |\n      |                     |              int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp9kl9mdkj.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp9kl9mdkj.cpp:3:\n/tmp/tmp9kl9mdkj.cpp:16:37: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   16 |     assert(candidate((5), (1)) == (0));\n      |                                     ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/inc",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(long value, long width) {\n    if (value >= 0) {\n        return std::to_string(value).insert(0, width - std::to_string(value).length(), '0');\n    }\n\n    if (value < 0) {\n        return \"-\" + std::to_string(-value).insert(1, width - std::to_string(-value).length(), '0');\n    }\n    return \"\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((5), (1)) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 510,
        "res": false,
        "error": "Exception",
        "error_message": "tmprhltpunv: /tmp/tmprhltpunv.cpp:41: int main(): Assertion `candidate((std::map<long,std::string>({{7, \"ii5p\"}, {1, \"o3Jwus\"}, {3, \"lot9L\"}, {2, \"04g\"}, {9, \"Wjf\"}, {8, \"5b\"}, {0, \"te6\"}, {5, \"flLO\"}, {6, \"jq\"}, {4, \"vfa0tW\"}})), (4), (\"Wy\"), (\"Wy\"), (1.0f)) == (4)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\nunion Union_std_string_long{\n    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) : f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long() {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }    bool operator==(long f) {\n        return f1 == f ;\n    }\n};\nUnion_std_string_long f(std::map<long,std::string> a, long b, std::string c, std::string d, Union_long_float e) {\n    std::string key = d;\n    std::string num;\n    if (a.find(b) != a.end()) {\n        num = a[b];\n        a.erase(b);\n    }\n    if (b > 3) {\n        return Union_std_string_long(c);\n    } else {\n        return Union_std_string_long(std::stol(num));\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,std::string>({{7, \"ii5p\"}, {1, \"o3Jwus\"}, {3, \"lot9L\"}, {2, \"04g\"}, {9, \"Wjf\"}, {8, \"5b\"}, {0, \"te6\"}, {5, \"flLO\"}, {6, \"jq\"}, {4, \"vfa0tW\"}})), (4), (\"Wy\"), (\"Wy\"), (1.0f)) == (4));\n}\n\n\n",
        "answer": "(4)"
    },
    {
        "id": 511,
        "res": 0
    },
    {
        "id": 512,
        "res": false,
        "error": "Exception",
        "error_message": "tmpry1vjmys: /tmp/tmpry1vjmys.cpp:9: int main(): Assertion `candidate((\"102\")) == (2)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string s) {\n    return s.length() == std::count(s.begin(), s.end(), '0') + std::count(s.begin(), s.end(), '1');\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"102\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 513,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpds9pm40q.cpp:3:\n/tmp/tmpds9pm40q.cpp: In function ‘int main()’:\n/tmp/tmpds9pm40q.cpp:18:63: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   18 |     assert(candidate((std::vector<long>({(long)0, (long)2}))) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                             |\n      |                     std::vector<long int>                         int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpds9pm40q.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpds9pm40q.cpp:3:\n/tmp/tmpds9pm40q.cpp:18:68: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   18 |     assert(candidate((std::vector<long>({(long)0, (long)2}))) == (0));\n      |                                                                    ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> array) {\n    while(std::find(array.begin(), array.end(), -1) != array.end()) {\n        array.erase(array.end() - 3);\n    }\n    while(std::find(array.begin(), array.end(), 0) != array.end()) {\n        array.pop_back();\n    }\n    while(std::find(array.begin(), array.end(), 1) != array.end()) {\n        array.erase(array.begin());\n    }\n    return array;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)0, (long)2}))) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 514,
        "res": false,
        "error": "Exception",
        "error_message": "tmp5wxoirwy: /tmp/tmp5wxoirwy.cpp:17: int main(): Assertion `candidate((\"-stew---corn-and-beans-in soup-.-\")) == (\"stew corn and beans in soup\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::istringstream iss(text);\n    std::string word;\n    while (iss >> word) {\n        text = std::regex_replace(text, std::regex(\"-\" + word), \" \");\n        text = std::regex_replace(text, std::regex(word + \"-\"), \" \");\n    }\n    text.erase(0, text.find_first_not_of('-'));\n    text.erase(text.find_last_not_of('-') + 1);\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"-stew---corn-and-beans-in soup-.-\")) == (\"stew corn and beans in soup\"));\n}\n\n\n",
        "answer": "(\"stew corn and beans in soup\")"
    },
    {
        "id": 515,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpslc2z0a_.cpp:3:\n/tmp/tmpslc2z0a_.cpp: In function ‘int main()’:\n/tmp/tmpslc2z0a_.cpp:14:90: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   14 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5}))) == (2, 4, 6, 8, 10));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~\n      |                     |                                                                                  |\n      |                     std::vector<long int>                                                              int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpslc2z0a_.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpslc2z0a_.cpp:3:\n/tmp/tmpslc2z0a_.cpp:14:108: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5}))) == (2, 4, 6,",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> array) {\n    std::vector<long> result = array;\n    std::reverse(result.begin(), result.end());\n    for (long& item : result) {\n        item *= 2;\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5}))) == (2, 4, 6, 8, 10));\n}\n\n\n",
        "answer": "(2, 4, 6, 8, 10)"
    },
    {
        "id": 516,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpdva0m36m.cpp:3:\n/tmp/tmpdva0m36m.cpp: In function ‘int main()’:\n/tmp/tmpdva0m36m.cpp:18:143: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘int’)\n   18 |     assert(candidate((std::vector<std::string>({(std::string)\"condor\", (std::string)\"eyes\", (std::string)\"gay\", (std::string)\"isa\"})), (\"d\")) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                                             |\n      |                     std::vector<std::__cxx11::basic_string<char> >                                                                                int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpdva0m36m.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::__cxx11::basic_string<char> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::vector<std::string> strings, std::string substr) {\n    std::vector<std::string> result;\n    for(const auto &s : strings) {\n        if(s.find(substr) == 0) {\n            result.push_back(s);\n        }\n    }\n    std::sort(result.begin(), result.end(), [](const std::string &a, const std::string &b) {\n        return a.length() < b.length();\n    });\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"condor\", (std::string)\"eyes\", (std::string)\"gay\", (std::string)\"isa\"})), (\"d\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 517,
        "res": false,
        "error": "Exception",
        "error_message": "tmpzzsd5rjy: /tmp/tmpzzsd5rjy.cpp:14: int main(): Assertion `candidate((\"SzHjifnzog\")) == (\"\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    for (int i = text.size()-1; i > 0; --i) {\n        if (!isupper(text[i])) {\n            return text.substr(0, i);\n        }\n    }\n    return \"\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"SzHjifnzog\")) == (\"\"));\n}\n\n\n",
        "answer": "(\"\")"
    },
    {
        "id": 518,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpfhh5j0cn.cpp:3:\n/tmp/tmpfhh5j0cn.cpp: In function ‘int main()’:\n/tmp/tmpfhh5j0cn.cpp:9:59: error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n    9 |     assert(candidate((\"the speed is -36 miles per hour\")) == (\"the speed is -36 miles per hour\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text) {\n    return !std::all_of(text.begin(), text.end(), ::isdigit);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"the speed is -36 miles per hour\")) == (\"the speed is -36 miles per hour\"));\n}\n\n\n",
        "answer": "(\"the speed is -36 miles per hour\")"
    },
    {
        "id": 519,
        "res": 0
    },
    {
        "id": 520,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> album_sales) {\n    while(album_sales.size() != 1) {\n        album_sales.push_back(album_sales[0]);\n        album_sales.erase(album_sales.begin());\n    }\n    return album_sales[0];\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)6}))) == (6));\n}\n\n\n",
        "answer": "(6)"
    },
    {
        "id": 521,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpy85lnzni.cpp:3:\n/tmp/tmpy85lnzni.cpp: In function ‘int main()’:\n/tmp/tmpy85lnzni.cpp:13:129: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   13 |     assert(candidate((std::vector<long>({(long)43, (long)0, (long)4, (long)77, (long)5, (long)2, (long)0, (long)9, (long)77}))) == (77777777));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~\n      |                     |                                                                                                               |\n      |                     std::vector<long int>                                                                                           int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpy85lnzni.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpy85lnzni.cpp:3:\n/tmp/tmpy85lnzni.cpp:13:141: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL,",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    long m = *std::max_element(nums.begin(), nums.end());\n    for (int i = 0; i < m; i++) {\n        std::reverse(nums.begin(), nums.end());\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)43, (long)0, (long)4, (long)77, (long)5, (long)2, (long)0, (long)9, (long)77}))) == (77777777));\n}\n\n\n",
        "answer": "(77777777)"
    },
    {
        "id": 522,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp4cbkf631.cpp:4:\n/tmp/tmp4cbkf631.cpp: In function ‘int main()’:\n/tmp/tmp4cbkf631.cpp:18:265: error: no match for ‘operator==’ (operand types are ‘std::vector<float>’ and ‘double’)\n   18 |     assert(candidate((std::vector<long>({(long)100, (long)101, (long)102, (long)103, (long)104, (long)105, (long)106, (long)107, (long)108, (long)109, (long)110, (long)111, (long)112, (long)113, (long)114, (long)115, (long)116, (long)117, (long)118, (long)119}))) == (0.0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~\n      |                     |                                                                                                                                                                                                                                                       |\n      |                     std::vector<float>                                                                                                                                                                                                                                      double\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp4cbkf631.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_Iterato",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<float> f(std::vector<long> numbers) {\n    std::vector<float> floats;\n    for (auto n : numbers) {\n        floats.push_back(n - floor(n));\n    }\n    if (std::find(floats.begin(), floats.end(), 1.0) != floats.end()) {\n        return floats;\n    } else {\n        return std::vector<float>();\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)100, (long)101, (long)102, (long)103, (long)104, (long)105, (long)106, (long)107, (long)108, (long)109, (long)110, (long)111, (long)112, (long)113, (long)114, (long)115, (long)116, (long)117, (long)118, (long)119}))) == (0.0));\n}\n\n\n",
        "answer": "(0.0)"
    },
    {
        "id": 523,
        "res": false,
        "error": "Exception",
        "error_message": "tmpshbebwd5: /tmp/tmpshbebwd5.cpp:14: int main(): Assertion `candidate((\"   \")) == (\"   \")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    for(int i = text.size() - 1; i >= 0; i--) {\n        if(isspace(text[i])) {\n            text.replace(i, 1, \"&nbsp;\");\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"   \")) == (\"   \"));\n}\n\n\n",
        "answer": "(\"   \")"
    },
    {
        "id": 524,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpsmh_zs6t.cpp:4:\n/tmp/tmpsmh_zs6t.cpp: In function ‘int main()’:\n/tmp/tmpsmh_zs6t.cpp:21:87: error: no match for ‘operator==’ (operand types are ‘std::map<long int, long int>’ and ‘int’)\n   21 |     assert(candidate((std::map<long,long>({{2, 5}, {4, 1}, {3, 5}, {1, 3}, {5, 1}}))) == (0, 1, 2, 3, 4));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~\n      |                     |                                                                               |\n      |                     std::map<long int, long int>                                                    int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpsmh_zs6t.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpsmh_zs6t.cpp:4:\n/tmp/tmpsmh_zs6t.cpp:21:104: note:   ‘std::map<long int, long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   21 |     assert(candidate((std::map<long,long>({{2, 5}, {4, 1}, {3, 5}, {1, 3}, {5, 1}}))) == (0, 1, 2, 3,",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<long,long> f(std::map<long,long> dict0) {\n    std::map<long,long> new_dict = dict0;\n    std::vector<long> keys;\n    for (auto const& pair: new_dict)\n    {\n        keys.push_back(pair.first);\n    }\n    sort(keys.begin(), keys.end());\n    for (long i = 0; i < keys.size()-1; i++)\n    {\n        dict0[keys[i]] = i;\n    }\n    return dict0;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,long>({{2, 5}, {4, 1}, {3, 5}, {1, 3}, {5, 1}}))) == (0, 1, 2, 3, 4));\n}\n\n\n",
        "answer": "(0, 1, 2, 3, 4)"
    },
    {
        "id": 525,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpekurtsg5.cpp:3:\n/tmp/tmpekurtsg5.cpp: In function ‘int main()’:\n/tmp/tmpekurtsg5.cpp:21:94: error: ‘TEXT’ was not declared in this scope\n   21 |     assert(candidate((std::map<std::string,long>({{\"TEXT\", 7}, {\"CODE\", 3}})), (7), (3)) == (TEXT));\n      |                                                                                              ^~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::tuple<std::string, std::string> f(std::map<std::string,long> c, long st, long ed) {\n    std::map<long, std::string> d;\n    std::string a, b;\n    for(auto const& pair : c) {\n        d[pair.second] = pair.first;\n        if(pair.second == st) {\n            a = pair.first;\n        }\n        if(pair.second == ed) {\n            b = pair.first;\n        }\n    }\n    std::string w = d[st];\n    return (a > b) ? std::make_tuple(w, b) : std::make_tuple(b, w);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>({{\"TEXT\", 7}, {\"CODE\", 3}})), (7), (3)) == (TEXT));\n}\n\n\n",
        "answer": "(TEXT)"
    },
    {
        "id": 526,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpa651mogm.cpp:4:\n/tmp/tmpa651mogm.cpp: In function ‘int main()’:\n/tmp/tmpa651mogm.cpp:14:59: error: ‘ewiesrpg’ was not declared in this scope\n   14 |     assert(candidate((\"ekwies\"), (\"s\"), (\"rpg\"), (1)) == (ewiesrpg));\n      |                                                           ^~~~~~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string label1, std::string character, std::string label2, long index) {\n    long m = label1.rfind(character);\n    if (m >= index) {\n        return label2.substr(0, m - index + 1);\n    }\n    return label1 + label2.substr(index - m - 1);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ekwies\"), (\"s\"), (\"rpg\"), (1)) == (ewiesrpg));\n}\n\n\n",
        "answer": "(ewiesrpg)"
    },
    {
        "id": 527,
        "res": false,
        "error": "Exception",
        "error_message": "tmpra89plz0: /tmp/tmpra89plz0.cpp:14: int main(): Assertion `candidate((\"!?\"), (\"\")) == (\"?!\")' failed.\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string value) {\n    int padding = value.size() - text.size();\n    if (padding > 0) {\n        text.append(padding, '?');\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"!?\"), (\"\")) == (\"?!\"));\n}\n\n\n",
        "answer": "(\"?!\")"
    },
    {
        "id": 528,
        "res": false,
        "error": "Exception",
        "error_message": "tmpj3w1tr3h: /tmp/tmpj3w1tr3h.cpp:17: int main(): Assertion `candidate((\"papeluchis\")) == (0)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string s) {\n    std::string b = \"\";\n    std::string c = \"\";\n    for (char i : s) {\n        c = c + i;\n        if (s.rfind(c) != std::string::npos) {\n            return s.rfind(c);\n        }\n    }\n    return 0;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"papeluchis\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 529,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpn43s3e2_.cpp:3:\n/tmp/tmpn43s3e2_.cpp: In function ‘int main()’:\n/tmp/tmpn43s3e2_.cpp:20:72: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   20 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                      |\n      |                     std::vector<long int>                                  int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpn43s3e2_.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpn43s3e2_.cpp:3:\n/tmp/tmpn43s3e2_.cpp:20:77: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   20 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n      |                                                                             ^\nIn file included from /usr/include/c++/11/bits/stl_alg",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> array) {\n    long prev = array[0];\n    std::vector<long> newArray = array;\n    for (int i = 1; i < array.size(); i++) {\n        if (prev != array[i]) {\n            newArray[i] = array[i];\n        } else {\n            newArray.erase(newArray.begin() + i);\n            i--;\n        }\n        prev = array[i];\n    }\n    return newArray;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 530,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpdvfcovf0.cpp:3:\n/tmp/tmpdvfcovf0.cpp: In function ‘int main()’:\n/tmp/tmpdvfcovf0.cpp:18:44: error: ‘no’ was not declared in this scope\n   18 |     assert(candidate((\"@@@ff\"), (\"@\")) == (no));\n      |                                            ^~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s, std::string ch) {\n    std::string sl = s;\n    if (s.find(ch) != std::string::npos) {\n        sl.erase(0, s.find_first_not_of(ch));\n        if (sl.empty()) {\n            sl += \"!?\";\n        }\n    } else {\n        return \"no\";\n    }\n    return sl;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"@@@ff\"), (\"@\")) == (no));\n}\n\n\n",
        "answer": "(no)"
    },
    {
        "id": 531,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpd086omng.cpp:4:\n/tmp/tmpd086omng.cpp: In function ‘int main()’:\n/tmp/tmpd086omng.cpp:14:61: error: ‘asdl’ was not declared in this scope\n   14 |     assert(candidate((\"Ibaskdjgblw asdl \"), (\"djgblw\")) == (asdl));\n      |                                                             ^~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string x) {\n    if (text.find(x) != 0) {\n        return f(text.substr(1), x);\n    } else {\n        return text;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Ibaskdjgblw asdl \"), (\"djgblw\")) == (asdl));\n}\n\n\n",
        "answer": "(asdl)"
    },
    {
        "id": 532,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpcjas8msj.cpp:3:\n/tmp/tmpcjas8msj.cpp: In function ‘int main()’:\n/tmp/tmpcjas8msj.cpp:16:77: error: no match for ‘operator==’ (operand types are ‘std::vector<std::vector<long int> >’ and ‘int’)\n   16 |     assert(candidate((1), (std::vector<long>({(long)1, (long)2, (long)3}))) == (1, 2, 3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~\n      |                     |                                                               |\n      |                     std::vector<std::vector<long int> >                             int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpcjas8msj.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::vector<long int> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tm",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::vector<long>> f(long n, std::vector<long> array) {\n    std::vector<std::vector<long>> final;\n    final.push_back(array);\n    for (int i = 0; i < n; i++) {\n        std::vector<long> arr = array;\n        arr.insert(arr.end(), final.back().begin(), final.back().end());\n        final.push_back(arr);\n    }\n    return final;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((1), (std::vector<long>({(long)1, (long)2, (long)3}))) == (1, 2, 3));\n}\n\n\n",
        "answer": "(1, 2, 3)"
    },
    {
        "id": 533,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string query, std::map<std::string,long> base) {\n    long net_sum = 0;\n    for (auto const& pair : base) {\n        std::string key = pair.first;\n        long val = pair.second;\n        if (key[0] == query[0] && key.size() == 3) {\n            net_sum -= val;\n        } else if (key[key.size() - 1] == query[0] && key.size() == 3) {\n            net_sum += val;\n        }\n    }\n    return net_sum;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"a\"), (std::map<std::string,long>())) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 534,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpmpzekold.cpp:4:\n/tmp/tmpmpzekold.cpp: In function ‘int main()’:\n/tmp/tmpmpzekold.cpp:19:43: error: ‘hosu’ was not declared in this scope\n   19 |     assert(candidate((\"hosu\"), (\"o\")) == (hosu));\n      |                                           ^~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string sequence, std::string value) {\n    int i = std::max((int)(sequence.find(value) - sequence.size() / 3), 0);\n    std::string result = \"\";\n    for (int j = i; j < sequence.size(); ++j) {\n        if (sequence[j] == '+') {\n            result += value;\n        } else {\n            result += sequence[j];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"hosu\"), (\"o\")) == (hosu));\n}\n\n\n",
        "answer": "(hosu)"
    },
    {
        "id": 535,
        "res": false,
        "error": "Exception",
        "error_message": "tmp79553rv4: /tmp/tmp79553rv4.cpp:15: int main(): Assertion `candidate((1341240312)) == (1)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(long n) {\n    std::string str_n = std::to_string(n);\n    for (char c : str_n) {\n        if (c < '0' || (c > '2' && c < '5') || c > '9') {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((1341240312)) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 536,
        "res": false,
        "error": "Exception",
        "error_message": "tmpmimngrnz: /tmp/tmpmimngrnz.cpp:15: int main(): Assertion `candidate((\"C24Bxxx982ab\")) == (3)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string cat) {\n    int digits = 0;\n    for (char ch : cat) {\n        if (isdigit(ch)) {\n            digits++;\n        }\n    }\n    return digits;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"C24Bxxx982ab\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 537,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp7mpm8ea9.cpp:4:\n/tmp/tmp7mpm8ea9.cpp: In function ‘int main()’:\n/tmp/tmp7mpm8ea9.cpp:17:38: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   17 |     assert(candidate((\"abv\"), (\"a\")) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                    |\n      |                     |                    int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp7mpm8ea9.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp7mpm8ea9.cpp:4:\n/tmp/tmp7mpm8ea9.cpp:17:43: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   17 |     assert(candidate((\"abv\"), (\"a\")) == (3));\n      |                                           ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string value) {\n    std::string new_text = text;\n    try {\n        new_text.append(value);\n        int length = new_text.length();\n        return \"[\" + std::to_string(length) + \"]\";\n    } catch (...) {\n        return \"[0]\";\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"abv\"), (\"a\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 538,
        "res": false,
        "error": "Exception",
        "error_message": "tmpxpd7_ku6: /tmp/tmpxpd7_ku6.cpp:15: int main(): Assertion `candidate((\"0574\"), (9)) == (\"5\")' failed.\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long width) {\n    std::string output = text.substr(0, width);\n    while(output.size() < width) {\n        output.insert(0, \"z\");\n        if(output.size() < width) output.push_back('z');\n    }\n    return output;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"0574\"), (9)) == (\"5\"));\n}\n\n\n",
        "answer": "(\"5\")"
    },
    {
        "id": 539,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpbx93bckv.cpp:4:\n/tmp/tmpbx93bckv.cpp: In function ‘int main()’:\n/tmp/tmpbx93bckv.cpp:12:56: error: expected primary-expression before ‘)’ token\n   12 |     assert(candidate((std::vector<std::string>())) == ());\n      |                                                        ^\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::vector<std::string> array) {\n    std::vector<std::string> array_copy = array;\n    array_copy.push_back(\"\");\n    return array_copy;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>())) == ());\n}\n\n\n",
        "answer": "()"
    },
    {
        "id": 540,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpu411n9nw.cpp:3:\n/tmp/tmpu411n9nw.cpp: In function ‘int main()’:\n/tmp/tmpu411n9nw.cpp:14:105: error: expected ‘)’ before numeric constant\n   14 |     assert(candidate((std::vector<long>({(long)5, (long)5, (long)5, (long)6, (long)4, (long)9}))) == (5 5 5 6 4 9));\n      |                                                                                                      ~  ^\n/tmp/tmpu411n9nw.cpp:14:99: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   14 |     assert(candidate((std::vector<long>({(long)5, (long)5, (long)5, (long)6, (long)4, (long)9}))) == (5 5 5 6 4 9));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                 |\n      |                     std::vector<long int>                                                             int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpu411n9nw.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/s",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> a) {\n    std::vector<long> b = a;\n    for(int k = 0; k < a.size() - 1; k += 2) {\n        b.insert(b.begin() + k + 1, b[k]);\n    }\n    b.push_back(b[0]);\n    return b;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)5, (long)5, (long)5, (long)6, (long)4, (long)9}))) == (5 5 5 6 4 9));\n}\n\n\n",
        "answer": "(5 5 5 6 4 9)"
    },
    {
        "id": 541,
        "res": false,
        "error": "Exception",
        "error_message": "tmpqkwn3yir: /tmp/tmpqkwn3yir.cpp:18: int main(): Assertion `candidate((\" \t  　\")) == (3)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\n#include<locale>\n#include<codecvt>\n\nbool is_unicode_whitespace(char32_t c) {\n    return std::isspace(c) || c == 0x3000;\n}\n\nbool f(std::string text) {\n    std::wstring_convert<std::codecvt_utf8<char32_t>, char32_t> converter;\n    std::u32string u32text = converter.from_bytes(text);\n    return std::all_of(u32text.begin(), u32text.end(), is_unicode_whitespace);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\" \t  　\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 542,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp8q_fnwlv.cpp:3:\n/tmp/tmp8q_fnwlv.cpp: In function ‘int main()’:\n/tmp/tmp8q_fnwlv.cpp:32:49: error: ‘ab’ was not declared in this scope; did you mean ‘abs’?\n   32 |     assert(candidate((\"ab cd\"), (\"x\"), (2)) == (ab cd));\n      |                                                 ^~\n/tmp/tmp8q_fnwlv.cpp:32:52: error: expected ‘)’ before ‘cd’\n   32 |     assert(candidate((\"ab cd\"), (\"x\"), (2)) == (ab cd));\n      |                                                ~   ^~\n/tmp/tmp8q_fnwlv.cpp:32:56: error: expected ‘)’ before ‘;’ token\n   32 |     assert(candidate((\"ab cd\"), (\"x\"), (2)) == (ab cd));\n      |                                                        ^\n/tmp/tmp8q_fnwlv.cpp:32:56: error: expected ‘)’ before ‘;’ token\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp8q_fnwlv.cpp:3:\n/tmp/tmp8q_fnwlv.cpp:32:5: note: to match this ‘(’\n   32 |     assert(candidate((\"ab cd\"), (\"x\"), (2)) == (ab cd));\n      |     ^~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::string test, std::string sep, long maxsplit) {\n    try {\n        std::vector<std::string> result;\n        size_t pos = 0;\n        size_t found;\n        while ((found = test.find_first_of(sep, pos)) != std::string::npos) {\n            result.push_back(test.substr(pos, found - pos));\n            pos = found + sep.size();\n            if (result.size() == maxsplit) {\n                break;\n            }\n        }\n        result.push_back(test.substr(pos));\n        return result;\n    } catch (...) {\n        std::vector<std::string> result;\n        size_t pos = 0;\n        size_t found;\n        while ((found = test.find_first_of(' ', pos)) != std::string::npos) {\n            result.push_back(test.substr(pos, found - pos));\n            pos = found + 1;\n        }\n        result.push_back(test.substr(pos));\n        return result;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ab cd\"), (\"x\"), (2)) == (ab cd));\n}\n\n\n",
        "answer": "(ab cd)"
    },
    {
        "id": 543,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpswsnijyi.cpp:3:\n/tmp/tmpswsnijyi.cpp: In function ‘int main()’:\n/tmp/tmpswsnijyi.cpp:31:44: error: expected primary-expression before ‘.’ token\n   31 |     assert(candidate((\".,,,,,. منبت\")) == (.));\n      |                                            ^\n/tmp/tmpswsnijyi.cpp:31:45: error: expected unqualified-id before ‘)’ token\n   31 |     assert(candidate((\".,,,,,. منبت\")) == (.));\n      |                                             ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string item) {\n    std::string modified = item;\n    size_t pos = modified.find(\". \");\n    while (pos != std::string::npos) {\n        modified.replace(pos, 2, \" , \");\n        pos = modified.find(\". \", pos + 1);\n    }\n    pos = modified.find(\"&#33; \");\n    while (pos != std::string::npos) {\n        modified.replace(pos, 5, \"! \");\n        pos = modified.find(\"&#33; \", pos + 1);\n    }\n    pos = modified.find(\". \");\n    while (pos != std::string::npos) {\n        modified.replace(pos, 2, \"? \");\n        pos = modified.find(\". \", pos + 1);\n    }\n    pos = modified.find(\". \");\n    while (pos != std::string::npos) {\n        modified.replace(pos, 2, \". \");\n        pos = modified.find(\". \", pos + 1);\n    }\n    modified[0] = std::toupper(modified[0]);\n    return modified;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\".,,,,,. منبت\")) == (.));\n}\n\n\n",
        "answer": "(.)"
    },
    {
        "id": 544,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp90g6eyd6.cpp:3:\n/tmp/tmp90g6eyd6.cpp: In function ‘int main()’:\n/tmp/tmp90g6eyd6.cpp:29:66: error: ‘tab’ was not declared in this scope; did you mean ‘tan’?\n   29 |     assert(candidate((\"                 tab tab tabulates\")) == (tab tab tabulates));\n      |                                                                  ^~~\n/tmp/tmp90g6eyd6.cpp:29:70: error: expected ‘)’ before ‘tab’\n   29 |     assert(candidate((\"                 tab tab tabulates\")) == (tab tab tabulates));\n      |                                                                 ~    ^~~\n/tmp/tmp90g6eyd6.cpp:29:85: error: expected ‘)’ before ‘;’ token\n   29 |     assert(candidate((\"                 tab tab tabulates\")) == (tab tab tabulates));\n      |                                                                                     ^\n/tmp/tmp90g6eyd6.cpp:29:85: error: expected ‘)’ before ‘;’ token\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp90g6eyd6.cpp:3:\n/tmp/tmp90g6eyd6.cpp:29:5: note: to match this ‘(’\n   29 |     assert(candidate((\"                 tab tab tabulates\")) == (tab tab tabulates));\n      |     ^~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::vector<std::string> a;\n    std::stringstream ss(text);\n    std::string line;\n    while (std::getline(ss, line, '\\n')) {\n        a.push_back(line);\n    }\n    \n    std::vector<std::string> b;\n    for (size_t i = 0; i < a.size(); ++i) {\n        std::string c = a[i];\n        size_t pos = c.find('\\t');\n        while (pos != std::string::npos) {\n            c.replace(pos, 1, \"    \");\n            pos = c.find('\\t', pos + 4);  // Move past the replaced \"    \"\n        }\n        b.push_back(c);\n    }\n    \n    return std::accumulate(b.begin(), b.end(), std::string{}, [](std::string result, std::string next) {\n        return result.empty() ? next : result + \"\\n\" + next;\n    });\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"\t\t\ttab tab tabulates\")) == (tab tab tabulates));\n}\n\n\n",
        "answer": "(tab tab tabulates)"
    },
    {
        "id": 545,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp9ar1kfcq.cpp:3:\n/tmp/tmp9ar1kfcq.cpp: In function ‘int main()’:\n/tmp/tmp9ar1kfcq.cpp:16:120: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   16 |     assert(candidate((std::vector<long>({(long)8, (long)8, (long)-4, (long)-9, (long)2, (long)8, (long)-1, (long)8}))) == (8, 8, -4, -9, 2, 8, -1, 8));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                                                                                                            |\n      |                     std::vector<long int>                                                                                                        int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp9ar1kfcq.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp9ar1kfcq.cpp:3:\n/tmp/tmp9ar1kfcq.cpp:16:149: note:   ‘std::vector<long int>’ is not derived from ‘cons",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> array) {\n    std::vector<long> result;\n    int index = 0;\n    while (index < array.size()) {\n        result.push_back(array.back());\n        array.pop_back();\n        index += 2;\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)8, (long)8, (long)-4, (long)-9, (long)2, (long)8, (long)-1, (long)8}))) == (8, 8, -4, -9, 2, 8, -1, 8));\n}\n\n\n",
        "answer": "(8, 8, -4, -9, 2, 8, -1, 8)"
    },
    {
        "id": 546,
        "res": false,
        "error": "Exception",
        "error_message": "tmp7jir2xrf: /tmp/tmp7jir2xrf.cpp:12: int main(): Assertion `candidate((\"[CHARRUNNERS]Do you know who the other was? [NEGMENDS]\"), (\"[CHARRUNNERS]\")) == (\"who\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string speaker) {\n    while(text.find(speaker) == 0) {\n        text = text.substr(speaker.length());\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"[CHARRUNNERS]Do you know who the other was? [NEGMENDS]\"), (\"[CHARRUNNERS]\")) == (\"who\"));\n}\n\n\n",
        "answer": "(\"who\")"
    },
    {
        "id": 547,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpcdke3tu5.cpp:29:78: warning: trigraph ??) ignored, use -trigraphs to enable [-Wtrigraphs]\n   29 |     assert(candidate((\"h,e,l,l,o,wo,r,ld,\")) == (h, e, l, l, o, wo, r, ld, ????));\n      |                                                                               \nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpcdke3tu5.cpp:4:\n/tmp/tmpcdke3tu5.cpp: In function ‘int main()’:\n/tmp/tmpcdke3tu5.cpp:29:50: error: ‘h’ was not declared in this scope\n   29 |     assert(candidate((\"h,e,l,l,o,wo,r,ld,\")) == (h, e, l, l, o, wo, r, ld, ????));\n      |                                                  ^\n/tmp/tmpcdke3tu5.cpp:29:53: error: ‘e’ was not declared in this scope\n   29 |     assert(candidate((\"h,e,l,l,o,wo,r,ld,\")) == (h, e, l, l, o, wo, r, ld, ????));\n      |                                                     ^\n/tmp/tmpcdke3tu5.cpp:29:56: error: ‘l’ was not declared in this scope\n   29 |     assert(candidate((\"h,e,l,l,o,wo,r,ld,\")) == (h, e, l, l, o, wo, r, ld, ????));\n      |                                                        ^\n/tmp/tmpcdke3tu5.cpp:29:62: error: ‘o’ was not declared in this scope\n   29 |     assert(candidate((\"h,e,l,l,o,wo,r,ld,\")) == (h, e, l, l, o, wo, r, ld, ????));\n      |                                                              ^\n/tmp/tmpcdke3tu5.cpp:29:65: error: ‘wo’ was not declared in this scope\n   29 |     assert(candidate((\"h,e,l,l,o,wo,r,ld,\")) == (h, e, l, l, o, wo, r, ld, ????));\n      |                                                                 ^~\n/tmp/tmpcdke3tu5.cpp:29:69: error: ‘r’ was not declared in this scope\n   29 |     assert(candidate((\"h,e,l,l,o,wo,r,ld,\")) == (h, e, l, l, o, wo, r, ld, ????));\n      |                                                                     ^\n/tmp/tmpcdke3tu5.cpp:29:72: error: ‘ld’ was not declared in this scope\n   29 |     assert(candidate((\"h,e,l,l,o,wo,r,ld,\")) == (h, e, l, l, o, wo, r, ld, ????));\n      | ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string letters) {\n    int start = 0;\n    int end = letters.length()-1;\n    while(start <= end) {\n        if(letters[start] == '.' || letters[start] == ',' || letters[start] == '!' || letters[start] == '?' || letters[start] == '*' || letters[start] == ' ') {\n            start++;\n        } else if(letters[end] == '.' || letters[end] == ',' || letters[end] == '!' || letters[end] == '?' || letters[end] == '*' || letters[end] == ' ') {\n            end--;\n        } else {\n            break;\n        }\n    }\n    letters = letters.substr(start, end-start+1);\n    \n    for(int i=0; i<letters.length(); i++) {\n        if(letters[i] == ' ') {\n            letters.replace(i, 1, \"....\");\n            i += 3;\n        }\n    }\n    return letters;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"h,e,l,l,o,wo,r,ld,\")) == (h, e, l, l, o, wo, r, ld, ????));\n}\n\n\n",
        "answer": "(h, e, l, l, o, wo, r, ld, ????)"
    },
    {
        "id": 548,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpazrkml3l.cpp:3:\n/tmp/tmpazrkml3l.cpp: In function ‘int main()’:\n/tmp/tmpazrkml3l.cpp:13:46: error: ‘spider’ was not declared in this scope\n   13 |     assert(candidate((\"spider\"), (\"ed\")) == (spider));\n      |                                              ^~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string suffix) {\n    if(!suffix.empty() && !text.empty() && text.substr(text.length() - suffix.length()) == suffix) {\n        return text.substr(0, text.length() - suffix.length());\n    } else {\n        return text;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"spider\"), (\"ed\")) == (spider));\n}\n\n\n",
        "answer": "(spider)"
    },
    {
        "id": 549,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp1tbglg73.cpp:3:\n/tmp/tmp1tbglg73.cpp: In function ‘int main()’:\n/tmp/tmp1tbglg73.cpp:15:140: error: expected ‘)’ before numeric constant\n   15 |     assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1, (long)1, (long)1, (long)1})}))) == (1 1 1 1));\n      |                                                                                                                                         ~  ^\n/tmp/tmp1tbglg73.cpp:15:134: error: no match for ‘operator==’ (operand types are ‘std::vector<std::vector<long int> >’ and ‘int’)\n   15 |     assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1, (long)1, (long)1, (long)1})}))) == (1 1 1 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                                                    |\n      |                     std::vector<std::vector<long int> >                                                                                  int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::vector<long>> f(std::vector<std::vector<long>> matrix) {\n    std::reverse(matrix.begin(), matrix.end());\n    std::vector<std::vector<long>> result;\n    for (auto& primary : matrix) {\n        std::sort(primary.rbegin(), primary.rend());\n        result.push_back(primary);\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1, (long)1, (long)1, (long)1})}))) == (1 1 1 1));\n}\n\n\n",
        "answer": "(1 1 1 1)"
    },
    {
        "id": 550,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp8agl6pc1.cpp:4:\n/tmp/tmp8agl6pc1.cpp: In function ‘int main()’:\n/tmp/tmp8agl6pc1.cpp:14:72: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   14 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (1, 2, 4));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~\n      |                     |                                                          |\n      |                     std::vector<long int>                                      int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp8agl6pc1.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp8agl6pc1.cpp:4:\n/tmp/tmp8agl6pc1.cpp:14:83: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (1, 2, 4));\n      |                                                                                   ^\nIn file included from ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    int size = nums.size();\n    for (int i = 0; i < size; i++) {\n        nums.insert(nums.begin() + i, nums[i]);\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4}))) == (1, 2, 4));\n}\n\n\n",
        "answer": "(1, 2, 4)"
    },
    {
        "id": 551,
        "res": false,
        "error": "Exception",
        "error_message": "tmplxc7e00m: /tmp/tmplxc7e00m.cpp:18: int main(): Assertion `candidate((std::map<std::string,std::vector<std::string>>({{\"inf\", std::vector<std::string>({(std::string)\"a\", (std::string)\"b\"})}, {\"a\", std::vector<std::string>({(std::string)\"inf\", (std::string)\"c\"})}, {\"d\", std::vector<std::string>({(std::string)\"inf\"})}}))) == (std::vector<std::string> {\"a\", \"b\", \"c\", \"d\"})' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::map<std::string,std::vector<std::string>> data) {\n    std::vector<std::string> members;\n    for (auto item : data) {\n        for (auto member : item.second) {\n            if (std::find(members.begin(), members.end(), member) == members.end()) {\n                members.push_back(member);\n            }\n        }\n    }\n    std::sort(members.begin(), members.end());\n    return members;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,std::vector<std::string>>({{\"inf\", std::vector<std::string>({(std::string)\"a\", (std::string)\"b\"})}, {\"a\", std::vector<std::string>({(std::string)\"inf\", (std::string)\"c\"})}, {\"d\", std::vector<std::string>({(std::string)\"inf\"})}}))) == (std::vector<std::string> {\"a\", \"b\", \"c\", \"d\"}));\n}\n\n\n",
        "answer": "(std::vector<std::string> {\"a\", \"b\", \"c\", \"d\"})"
    },
    {
        "id": 552,
        "res": 0
    },
    {
        "id": 553,
        "res": false,
        "error": "Exception",
        "error_message": "tmp2zm37wk2: /tmp/tmp2zm37wk2.cpp:12: int main(): Assertion `candidate((\"439m2670hlsw\"), (3)) == (\"hllsw\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long count) {\n    for (int i = 0; i < count; i++) {\n        std::reverse(text.begin(), text.end());\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"439m2670hlsw\"), (3)) == (\"hllsw\"));\n}\n\n\n",
        "answer": "(\"hllsw\")"
    },
    {
        "id": 554,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpiyquo0gq.cpp:3:\n/tmp/tmpiyquo0gq.cpp: In function ‘int main()’:\n/tmp/tmpiyquo0gq.cpp:10:103: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   10 |     assert(candidate((std::vector<long>({(long)2, (long)0, (long)1, (long)9999, (long)3, (long)-5}))) == (9999, 3, -5));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                                                                                            |\n      |                     std::vector<long int>                                                                        int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpiyquo0gq.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpiyquo0gq.cpp:3:\n/tmp/tmpiyquo0gq.cpp:10:118: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   10 |     assert(candidate((std::vector<long>({(long)2, (long)0, (",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> arr) {\n    std::reverse(arr.begin(), arr.end());\n    return arr;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)2, (long)0, (long)1, (long)9999, (long)3, (long)-5}))) == (9999, 3, -5));\n}\n\n\n",
        "answer": "(9999, 3, -5)"
    },
    {
        "id": 555,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpqhp68jjw.cpp:3:\n/tmp/tmpqhp68jjw.cpp: In function ‘int main()’:\n/tmp/tmpqhp68jjw.cpp:12:54: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   12 |     assert(candidate((\"odes     code    well\"), (2)) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                    |\n      |                     std::__cxx11::basic_string<char>     int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpqhp68jjw.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpqhp68jjw.cpp:3:\n/tmp/tmpqhp68jjw.cpp:12:59: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   12 |     assert(candidate((\"odes     code    well\"), (2)) == (2));\n      |                                                           ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n             ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long tabstop) {\n    text = std::regex_replace(text, std::regex(\"\\n\"), \"_____\");\n    text = std::regex_replace(text, std::regex(\"\\t\"), std::string(tabstop, ' '));\n    text = std::regex_replace(text, std::regex(\"_____\"), \"\\n\");\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"odes\tcode\twell\"), (2)) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 556,
        "res": 0
    },
    {
        "id": 557,
        "res": false,
        "error": "Exception",
        "error_message": "tmpog5f1y1c: /tmp/tmpog5f1y1c.cpp:10: int main(): Assertion `candidate((\"xxxarmmarxx\")) == (\"xxxarmmarxx\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s) {\n    std::string d = s.substr(0, s.rfind(\"ar\"));\n    return d + \" ar \" + s.substr(d.length() + 2);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"xxxarmmarxx\")) == (\"xxxarmmarxx\"));\n}\n\n\n",
        "answer": "(\"xxxarmmarxx\")"
    },
    {
        "id": 558,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::vector<long> nums, std::vector<long> mos) {\n    for (int num : mos) {\n        nums.erase(std::remove(nums.begin(), nums.end(), num), nums.end());\n    }\n    std::sort(nums.begin(), nums.end());\n    for (int num : mos) {\n        nums.push_back(num);\n    }\n    for (int i = 0; i < nums.size() - 1; i++) {\n        if (nums[i] > nums[i+1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)1, (long)4, (long)1})), (std::vector<long>({(long)1}))) == (false));\n}\n\n\n",
        "answer": "(false)"
    },
    {
        "id": 559,
        "res": false,
        "error": "Exception",
        "error_message": "tmpbfm7xkcl: /tmp/tmpbfm7xkcl.cpp:11: int main(): Assertion `candidate((\"first-second-third\")) == (\"f_s\")' failed.\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string n) {\n    std::replace(n.begin()+1, n.end(), '-', '_');\n    return n.substr(0, 1) + '.' + n.substr(1);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"first-second-third\")) == (\"f_s\"));\n}\n\n\n",
        "answer": "(\"f_s\")"
    },
    {
        "id": 560,
        "res": false,
        "error": "Exception",
        "error_message": "tmpyh5lo43n: /tmp/tmpyh5lo43n.cpp:17: int main(): Assertion `candidate((\"591237865\")) == (3)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    long x = 0;\n    if(std::all_of(text.begin(), text.end(), ::islower)) {\n        for(char c : text) {\n            if(std::isdigit(c) && c < '9') {\n                x++;\n            }\n        }\n    }\n    return x;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"591237865\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 561,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text, std::string digit) {\n    int count = std::count(text.begin(), text.end(), digit[0]);\n    return std::stoi(digit) * count;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"7Ljnw4Lj\"), (\"7\")) == (7));\n}\n\n\n",
        "answer": "(7)"
    },
    {
        "id": 562,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpav_kqi6c.cpp:4:\n/tmp/tmpav_kqi6c.cpp: In function ‘int main()’:\n/tmp/tmpav_kqi6c.cpp:15:47: error: ‘True’ was not declared in this scope\n   15 |     assert(candidate((\"VTBAEPJSLGAHINS\")) == (True));\n      |                                               ^~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text) {\n    for (char c : text) {\n        if (islower(c)) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"VTBAEPJSLGAHINS\")) == (True));\n}\n\n\n",
        "answer": "(True)"
    },
    {
        "id": 563,
        "res": false,
        "error": "Exception",
        "error_message": "tmpwsumt7bt: /tmp/tmpwsumt7bt.cpp:13: int main(): Assertion `candidate((\"jivespdcxc\"), (\"sx\")) == (0)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text1, std::string text2) {\n    std::vector<int> nums;\n    for(int i = 0; i < text2.length(); i++) {\n        nums.push_back(std::count(text1.begin(), text1.end(), text2[i]));\n    }\n    return std::accumulate(nums.begin(), nums.end(), 0);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"jivespdcxc\"), (\"sx\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 564,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpvgjmsn55.cpp:3:\n/tmp/tmpvgjmsn55.cpp: In function ‘int main()’:\n/tmp/tmpvgjmsn55.cpp:11:241: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   11 |     assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)395, (long)666, (long)7, (long)4}), (std::vector<long>)std::vector<long>(), (std::vector<long>)std::vector<long>({(long)4223, (long)111})}))) == (395));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~\n      |                     |                                                                                                                                                                                                                               |\n      |                     std::vector<long int>                                                                                                                                                                                                           int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpvgjmsn55.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<std::vector<long>> lists) {\n    lists[1].clear();\n    lists[2].insert(lists[2].end(), lists[1].begin(), lists[1].end());\n    return lists[0];\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)395, (long)666, (long)7, (long)4}), (std::vector<long>)std::vector<long>(), (std::vector<long>)std::vector<long>({(long)4223, (long)111})}))) == (395));\n}\n\n\n",
        "answer": "(395)"
    },
    {
        "id": 565,
        "res": false,
        "error": "Exception",
        "error_message": "tmphw8lzn1t: /tmp/tmphw8lzn1t.cpp:16: int main(): Assertion `candidate((\"qsqgijwmmhbchoj\")) == (7)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    int max_index = -1;\n    for (char ch : {'a', 'e', 'i', 'o', 'u'}) {\n        int index = text.find(ch);\n        if (index > max_index) {\n            max_index = index;\n        }\n    }\n    return max_index;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"qsqgijwmmhbchoj\")) == (7));\n}\n\n\n",
        "answer": "(7)"
    },
    {
        "id": 566,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp6ju6q580.cpp:3:\n/tmp/tmp6ju6q580.cpp: In function ‘int main()’:\n/tmp/tmp6ju6q580.cpp:24:45: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘const char16_t [4]’)\n   24 |     assert(candidate((\"towaru\"), (\"UTF-8\")) == (u\"\\u6c65\\u6c6c\\u6c6f\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                           |\n      |                     |                           const char16_t [4]\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp6ju6q580.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp6ju6q580.cpp:3:\n/tmp/tmp6ju6q580.cpp:24:70: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   24 |     assert(candidate((\"towaru\"), (\"UTF-8\")) == (u\"\\u6c65\\u6c6c\\u6c6f\"));\n      |                                                                      ^\nIn file included from /",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string string, std::string code) {\n    std::string t = \"\";\n    try {\n        t = string.c_str();\n        if (t[t.length() - 1] == '\\n') {\n            t.pop_back();\n        }\n        // Assuming code is the name of the encoding e.g. \"UTF-8\"\n        // Encoding the string\n        std::wstring_convert<std::codecvt_utf8_utf16<char16_t>, char16_t> convert;\n        std::u16string utf16_str = convert.from_bytes(t);\n        // Decoding the string\n        t = convert.to_bytes(utf16_str);\n        return t;\n    } catch(...) {\n        return t;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"towaru\"), (\"UTF-8\")) == (u\"\\u6c65\\u6c6c\\u6c6f\"));\n}\n\n\n",
        "answer": "(u\"\\u6c65\\u6c6c\\u6c6f\")"
    },
    {
        "id": 567,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpdxk3ivbx.cpp:4:\n/tmp/tmpdxk3ivbx.cpp: In function ‘int main()’:\n/tmp/tmpdxk3ivbx.cpp:27:56: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘int’)\n   27 |     assert(candidate((\"one two three four five\"), (3)) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                      |\n      |                     |                                      int\n      |                     std::vector<std::__cxx11::basic_string<char> >\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpdxk3ivbx.cpp:4:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::__cxx11::basic_string<char> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpdx",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::string s, long n) {\n    std::vector<std::string> ls;\n    std::stringstream ss(s);\n    std::string temp;\n    while (ss >> temp)\n        ls.push_back(temp);\n    std::vector<std::string> out;\n    while (ls.size() >= n) {\n        for (auto it = ls.end() - n; it != ls.end(); ++it)\n            out.push_back(*it);\n        ls.erase(ls.end() - n, ls.end());\n    }\n    std::string join_str = \"_\";\n    if (!out.empty()) {\n        for (auto it = out.begin() + 1; it != out.end(); ++it)\n            out[0] += join_str + *it;\n    }\n    ls.push_back(out[0]);\n    return ls;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"one two three four five\"), (3)) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 568,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp6erp_cfn.cpp:4:\n/tmp/tmp6erp_cfn.cpp: In function ‘int main()’:\n/tmp/tmp6erp_cfn.cpp:25:34: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   25 |     assert(candidate((\"bwmm7h\")) == (7));\n      |            ~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                |\n      |                     |                int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp6erp_cfn.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp6erp_cfn.cpp:4:\n/tmp/tmp6erp_cfn.cpp:25:39: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   25 |     assert(candidate((\"bwmm7h\")) == (7));\n      |                                       ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 f",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string num) {\n    int letter = 1;\n    for (char i : \"1234567890\") {\n        size_t pos = num.find(i);\n        if (pos != std::string::npos) {\n            num.erase(pos, 1);\n        }\n        if (num.empty()) {\n            break;\n        }\n        if (letter >= num.size()) {\n            letter = 0;\n        }\n        num = num.substr(letter) + num.substr(0, letter);\n        letter += 1;\n    }\n    return num;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"bwmm7h\")) == (7));\n}\n\n\n",
        "answer": "(7)"
    },
    {
        "id": 569,
        "res": false,
        "error": "Exception",
        "error_message": "tmpv1p9mmhi: /tmp/tmpv1p9mmhi.cpp:23: int main(): Assertion `candidate((\"11 1 1\")) == (3)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string txt) {\n    std::unordered_map<char, int> coincidences;\n    for (char c : txt) {\n        if (coincidences.find(c) != coincidences.end()) {\n            coincidences[c]++;\n        } else {\n            coincidences[c] = 1;\n        }\n    }\n    \n    int sum = 0;\n    for (auto& pair : coincidences) {\n        sum += pair.second;\n    }\n    \n    return sum;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"11 1 1\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 570,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp9xvzx2xa.cpp:3:\n/tmp/tmp9xvzx2xa.cpp: In function ‘int main()’:\n/tmp/tmp9xvzx2xa.cpp:13:64: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   13 |     assert(candidate((std::vector<long>({(long)2})), (0), (2)) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                              |\n      |                     std::vector<long int>                          int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp9xvzx2xa.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp9xvzx2xa.cpp:3:\n/tmp/tmp9xvzx2xa.cpp:13:69: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   13 |     assert(candidate((std::vector<long>({(long)2})), (0), (2)) == (2));\n      |                                                                     ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> array, long index, long value) {\n    array.insert(array.begin(), index + 1);\n    if (value >= 1) {\n        array.insert(array.begin() + index, value);\n    }\n    return array;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)2})), (0), (2)) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 571,
        "res": 0
    },
    {
        "id": 572,
        "res": 0
    },
    {
        "id": 573,
        "res": false,
        "error": "Exception",
        "error_message": "tmp58hal_t6: /tmp/tmp58hal_t6.cpp:12: int main(): Assertion `candidate((\"Vipra\"), (\"via\")) == (\"Vipr\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string string, std::string prefix) {\n    if(string.find(prefix) == 0) {\n        return string.substr(prefix.length());\n    }\n    return string;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Vipra\"), (\"via\")) == (\"Vipr\"));\n}\n\n\n",
        "answer": "(\"Vipr\")"
    },
    {
        "id": 574,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpimirv5wl.cpp:3:\n/tmp/tmpimirv5wl.cpp: In function ‘int main()’:\n/tmp/tmpimirv5wl.cpp:16:150: error: ‘default_value’ was not declared in this scope\n   16 |     assert(candidate((std::vector<std::string>({(std::string)\"George\", (std::string)\"Michael\", (std::string)\"George\", (std::string)\"Costanza\"}))) == default_value);\n      |                                                                                                                                                      ^~~~~~~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::vector<std::string> simpons) {\n    while (!simpons.empty()) {\n        std::string pop = simpons.back();\n        simpons.pop_back();\n        if (pop == pop[0] + std::string(pop.begin() + 1, pop.end())) {\n            return pop;\n        }\n    }\n    return \"default_value\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"George\", (std::string)\"Michael\", (std::string)\"George\", (std::string)\"Costanza\"}))) == default_value);\n}\n\n\n",
        "answer": "default_value"
    },
    {
        "id": 575,
        "res": false,
        "error": "Exception",
        "error_message": "tmpt4ogmbam: /tmp/tmpt4ogmbam.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)10, (long)4})), (3)) == (10)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> nums, long val) {\n    std::vector<long> new_list;\n    for (long i : nums) {\n        for (long j = 0; j < val; j++) {\n            new_list.push_back(i);\n        }\n    }\n    long sum = 0;\n    for (long num : new_list) {\n        sum += num;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)10, (long)4})), (3)) == (10));\n}\n\n\n",
        "answer": "(10)"
    },
    {
        "id": 576,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp3oigxx3u.cpp:4:\n/tmp/tmp3oigxx3u.cpp: In function ‘int main()’:\n/tmp/tmp3oigxx3u.cpp:18:78: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘int’)\n   18 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})), (-1)) == (-1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                            |\n      |                     std::vector<std::__cxx11::basic_string<char> >               int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmp3oigxx3u.cpp:4:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::__cxx11::basic_string<char> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::vector<long> array, long constant) {\n    std::vector<std::string> output = {\"x\"};\n    for (int i = 1; i <= array.size(); i++) {\n        if (i % 2 != 0) {\n            output.push_back(std::to_string(array[i - 1] * -2));\n        } else {\n            output.push_back(std::to_string(constant));\n        }\n    }\n    return output;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})), (-1)) == (-1));\n}\n\n\n",
        "answer": "(-1)"
    },
    {
        "id": 577,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmphxrxf64p.cpp:4:\n/tmp/tmphxrxf64p.cpp: In function ‘int main()’:\n/tmp/tmphxrxf64p.cpp:20:128: error: no match for ‘operator==’ (operand types are ‘std::vector<std::map<long int, long int> >’ and ‘const char [4]’)\n   20 |     assert(candidate((std::vector<std::tuple<long, std::string>>({(std::tuple<long, std::string>)std::make_tuple(1, \"pos\")}))) == (1, \"pos\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~\n      |                     |                                                                                                               |\n      |                     std::vector<std::map<long int, long int> >                                                                      const char [4]\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmphxrxf64p.cpp:4:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::map<long int, long int> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::map<long,long>> f(std::vector<std::tuple<long, std::string>> items) {\n    std::vector<std::map<long,long>> result;\n    for (auto number : items) {\n        std::map<long, long> d;\n        for(auto &i : items) {\n            d[std::get<0>(i)] = std::get<0>(i);\n        }\n        if(!d.empty()) d.erase(std::prev(d.end()));\n        result.push_back(d);\n        items.pop_back();\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::tuple<long, std::string>>({(std::tuple<long, std::string>)std::make_tuple(1, \"pos\")}))) == (1, \"pos\"));\n}\n\n\n",
        "answer": "(1, \"pos\")"
    },
    {
        "id": 578,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpjftsgbbu.cpp:3:\n/tmp/tmpjftsgbbu.cpp: In function ‘int main()’:\n/tmp/tmpjftsgbbu.cpp:14:95: error: no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, long int>’ and ‘int’)\n   14 |     assert(candidate((std::map<std::string,long>({{\"R\", 0}, {\"T\", 3}, {\"F\", -6}, {\"K\", 0}}))) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                             |\n      |                     std::map<std::__cxx11::basic_string<char>, long int>                          int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpjftsgbbu.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::pair<const std::__cxx11::basic_string<char>, long int> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,long> f(std::map<std::string,long> obj) {\n    for(auto& pair : obj) {\n        if(pair.second >= 0) {\n            pair.second = -pair.second;\n        }\n    }\n    return obj;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>({{\"R\", 0}, {\"T\", 3}, {\"F\", -6}, {\"K\", 0}}))) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 579,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp_tezfrnz.cpp:3:\n/tmp/tmp_tezfrnz.cpp: In function ‘int main()’:\n/tmp/tmp_tezfrnz.cpp:20:32: error: expected primary-expression before ‘?’ token\n   20 |     assert(candidate((\"\")) == (?));\n      |                                ^\n/tmp/tmp_tezfrnz.cpp:20:33: error: expected primary-expression before ‘)’ token\n   20 |     assert(candidate((\"\")) == (?));\n      |                                 ^\n/tmp/tmp_tezfrnz.cpp:20:33: error: expected ‘:’ before ‘)’ token\n/tmp/tmp_tezfrnz.cpp:20:33: error: expected primary-expression before ‘)’ token\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    if (std::isupper(text[0])) {\n        if (text.length() > 1 && std::tolower(text[0]) != text[0]) {\n            return std::string(1, std::tolower(text[0])) + text.substr(1);\n        }\n    } else if (std::isalpha(text[0])) {\n        text[0] = std::toupper(text[0]);\n        for (int i = 1; i < text.length(); ++i) {\n            text[i] = std::tolower(text[i]);\n        }\n        return text;\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"\")) == (?));\n}\n\n\n",
        "answer": "(?)"
    },
    {
        "id": 580,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp1lrvdv0b.cpp:4:\n/tmp/tmp1lrvdv0b.cpp: In function ‘int main()’:\n/tmp/tmp1lrvdv0b.cpp:16:38: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   16 |     assert(candidate((\"rvr\"), (\"r\")) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                    |\n      |                     |                    int\n      |                     std::vector<long int>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp1lrvdv0b.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp1lrvdv0b.cpp:4:\n/tmp/tmp1lrvdv0b.cpp:16:43: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   16 |     assert(candidate((\"rvr\"), (\"r\")) == (0));\n      |                                           ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::string text, std::string char_) {\n    std::vector<long> a;\n    std::string new_text = text;\n    while (new_text.find(char_) != std::string::npos) {\n        a.push_back(new_text.find(char_));\n        new_text.replace(new_text.find(char_), 1, \"\");\n    }\n    return a;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"rvr\"), (\"r\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 581,
        "res": 0
    },
    {
        "id": 582,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp7mowaup8.cpp:3:\n/tmp/tmp7mowaup8.cpp: In function ‘int main()’:\n/tmp/tmp7mowaup8.cpp:13:32: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   13 |     assert(candidate((7), (5)) == (5));\n      |            ~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |              |\n      |                     |              int\n      |                     std::vector<long int>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp7mowaup8.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp7mowaup8.cpp:3:\n/tmp/tmp7mowaup8.cpp:13:37: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   13 |     assert(candidate((7), (5)) == (5));\n      |                                     ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(long k, long j) {\n    std::vector<long> arr;\n    for (long i = 0; i < k; i++) {\n        arr.push_back(j);\n    }\n    return arr;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((7), (5)) == (5));\n}\n\n\n",
        "answer": "(5)"
    },
    {
        "id": 583,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp5kez2pug.cpp:3:\n/tmp/tmp5kez2pug.cpp: In function ‘int main()’:\n/tmp/tmp5kez2pug.cpp:25:47: error: ‘t’ was not declared in this scope; did you mean ‘tm’?\n   25 |     assert(candidate((\"t\\nza\\na\"), (\"t\")) == (t));\n      |                                               ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string ch) {\n    std::vector<std::string> result;\n    std::stringstream ss(text);\n    std::string line;\n    while (std::getline(ss, line, '\\n')) {\n        if (!line.empty() && line[0] == ch[0]) {\n            std::transform(line.begin(), line.end(), line.begin(), ::tolower);\n            result.push_back(line);\n        } else {\n            std::transform(line.begin(), line.end(), line.begin(), ::toupper);\n            result.push_back(line);\n        }\n    }\n    \n    return std::accumulate(result.begin(), result.end(), std::string(), \n        [](const std::string& a, const std::string& b) -> std::string { \n            return a + (a.empty() ? \"\" : \"\\n\") + b; \n        });\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"t\\nza\\na\"), (\"t\")) == (t));\n}\n\n\n",
        "answer": "(t)"
    },
    {
        "id": 584,
        "res": false,
        "error": "Exception",
        "error_message": "tmpq_nc0z3y: /tmp/tmpq_nc0z3y.cpp:9: int main(): Assertion `candidate((\"5123807309875480094949830\")) == (\"123807309875480094949830\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string txt) {\n    return txt;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"5123807309875480094949830\")) == (\"123807309875480094949830\"));\n}\n\n\n",
        "answer": "(\"123807309875480094949830\")"
    },
    {
        "id": 585,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp8dc9lodi.cpp:3:\n/tmp/tmp8dc9lodi.cpp: In function ‘int main()’:\n/tmp/tmp8dc9lodi.cpp:14:33: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   14 |     assert(candidate((\";,,,?\")) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |               |\n      |                     |               int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp8dc9lodi.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp8dc9lodi.cpp:3:\n/tmp/tmp8dc9lodi.cpp:14:38: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((\";,,,?\")) == (3));\n      |                                      ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /u",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    int count = std::count(text.begin(), text.end(), text[0]);\n    std::vector<char> ls(text.begin(), text.end());\n    for (int i = 0; i < count; i++) {\n        ls.erase(ls.begin());\n    }\n    return std::string(ls.begin(), ls.end());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\";,,,?\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 586,
        "res": false,
        "error": "Exception",
        "error_message": "tmpaq523oil: /tmp/tmpaq523oil.cpp:10: int main(): Assertion `candidate((\"breakfast\"), (\"e\")) == (3)' failed.\n",
        "code": "\n#include <assert.h>\n#include <bits/stdc++.h>\n\nlong f(std::string text, std::string character) {\n    return text.rfind(character);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"breakfast\"), (\"e\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 587,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpr4l63jkv.cpp:4:\n/tmp/tmpr4l63jkv.cpp: In function ‘int main()’:\n/tmp/tmpr4l63jkv.cpp:14:92: error: no match for ‘operator==’ (operand types are ‘std::map<long int, std::__cxx11::basic_string<char> >’ and ‘int’)\n   14 |     assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (\"abcca\")) == (0, 1, 1, 2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~\n      |                     |                                                                                 |\n      |                     std::map<long int, std::__cxx11::basic_string<char> >                             int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpr4l63jkv.cpp:4:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::pair<const long int, std::__cxx11::basic_string<char> > >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<long,std::string> f(std::vector<long> nums, std::string fill) {\n    std::map<long,std::string> ans;\n    for (long n : nums) {\n        ans[n] = fill;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (\"abcca\")) == (0, 1, 1, 2));\n}\n\n\n",
        "answer": "(0, 1, 1, 2)"
    },
    {
        "id": 588,
        "res": false,
        "error": "Exception",
        "error_message": "tmpuzwribuw: /tmp/tmpuzwribuw.cpp:13: int main(): Assertion `candidate((std::vector<std::string>({(std::string)\"1\", (std::string)\"+\", (std::string)\"-\", (std::string)\"**\", (std::string)\"//\", (std::string)\"*\", (std::string)\"+\"})), (\"**\")) == (-1)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<std::string> items, std::string target) {\n    if (std::find(items.begin(), items.end(), target) != items.end()) {\n        return std::find(items.begin(), items.end(), target) - items.begin();\n    } else {\n        return -1;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"1\", (std::string)\"+\", (std::string)\"-\", (std::string)\"**\", (std::string)\"//\", (std::string)\"*\", (std::string)\"+\"})), (\"**\")) == (-1));\n}\n\n\n",
        "answer": "(-1)"
    },
    {
        "id": 589,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp5fnz9pbi.cpp:3:\n/tmp/tmp5fnz9pbi.cpp: In function ‘int main()’:\n/tmp/tmp5fnz9pbi.cpp:10:84: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   10 |     assert(candidate((std::vector<long>({(long)-70, (long)20, (long)9, (long)1}))) == (70));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                  |\n      |                     std::vector<long int>                                              int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp5fnz9pbi.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp5fnz9pbi.cpp:3:\n/tmp/tmp5fnz9pbi.cpp:10:90: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   10 |     assert(candidate((std::vector<long>({(long)-70, (long)20, (long)9, (long)1}))) == (70));\n      |                                                                      ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> num) {\n    num.push_back(num.back());\n    return num;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)-70, (long)20, (long)9, (long)1}))) == (70));\n}\n\n\n",
        "answer": "(70)"
    },
    {
        "id": 590,
        "res": false,
        "error": "Exception",
        "error_message": "tmpqzw53bda: /tmp/tmpqzw53bda.cpp:14: int main(): Assertion `candidate((\"25000   $\")) == (\"5\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    for(int i = 10; i > 0; i--) {\n        while(text.find(std::to_string(i)) == 0) {\n            text = text.substr(1);\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"25000   $\")) == (\"5\"));\n}\n\n\n",
        "answer": "(\"5\")"
    },
    {
        "id": 591,
        "res": 0
    },
    {
        "id": 592,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpp__y2ah4.cpp:3:\n/tmp/tmpp__y2ah4.cpp: In function ‘int main()’:\n/tmp/tmpp__y2ah4.cpp:13:64: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   13 |     assert(candidate((std::vector<long>({(long)11, (long)3}))) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                              |\n      |                     std::vector<long int>                          int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpp__y2ah4.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpp__y2ah4.cpp:3:\n/tmp/tmpp__y2ah4.cpp:13:69: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   13 |     assert(candidate((std::vector<long>({(long)11, (long)3}))) == (3));\n      |                                                                     ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> numbers) {\n    std::vector<long> new_numbers;\n    for(int i = 0; i < numbers.size(); i++) {\n        new_numbers.push_back(numbers[numbers.size() - 1 - i]);\n    }\n    return new_numbers;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)11, (long)3}))) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 593,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp0vv6z34a.cpp:3:\n/tmp/tmp0vv6z34a.cpp: In function ‘int main()’:\n/tmp/tmp0vv6z34a.cpp:13:51: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   13 |     assert(candidate((std::vector<long>()), (14)) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                 |\n      |                     std::vector<long int>             int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp0vv6z34a.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp0vv6z34a.cpp:3:\n/tmp/tmp0vv6z34a.cpp:13:56: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   13 |     assert(candidate((std::vector<long>()), (14)) == (0));\n      |                                                        ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums, long n) {\n    int pos = nums.size() - 1;\n    for (int i = -nums.size(); i < 0; i++) {\n        nums.insert(nums.begin() + pos, nums[i]);\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>()), (14)) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 594,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp51lydbp4.cpp:3:\n/tmp/tmp51lydbp4.cpp: In function ‘int main()’:\n/tmp/tmp51lydbp4.cpp:9:67: error: unable to find numeric literal operator ‘operator\"\"n’\n    9 |     assert(candidate((\"n wez szize lnson tilebi it 504n.\\n\")) == (504n));\n      |                                                                   ^~~~\n/tmp/tmp51lydbp4.cpp:9:67: note: use ‘-fext-numeric-literals’ to enable more built-in suffixes\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string file) {\n    return file.find('\\n');\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"n wez szize lnson tilebi it 504n.\\n\")) == (504n));\n}\n\n\n",
        "answer": "(504n)"
    },
    {
        "id": 595,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpaezwp_rm.cpp:3:\n/tmp/tmpaezwp_rm.cpp: In function ‘int main()’:\n/tmp/tmpaezwp_rm.cpp:13:64: error: ‘QD’ was not declared in this scope\n   13 |     assert(candidate((\"qdhstudentamxupuihbuztn\"), (\"jdm\")) == (QD));\n      |                                                                ^~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string prefix) {\n    if (text.find(prefix) == 0) {\n        text = text.substr(prefix.length());\n    }\n    text[0] = toupper(text[0]);\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"qdhstudentamxupuihbuztn\"), (\"jdm\")) == (QD));\n}\n\n\n",
        "answer": "(QD)"
    },
    {
        "id": 596,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp83hrj9jy.cpp:3:\n/tmp/tmp83hrj9jy.cpp: In function ‘int main()’:\n/tmp/tmp83hrj9jy.cpp:13:167: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘int’)\n   13 |     assert(candidate((std::vector<std::string>({(std::string)\"8\", (std::string)\"9\", (std::string)\"7\", (std::string)\"4\", (std::string)\"3\", (std::string)\"2\"})), (\"9\")) == (9));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                                                                     |\n      |                     std::vector<std::__cxx11::basic_string<char> >                                                                                                        int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmp83hrj9jy.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::__cxx11::basic_string<char> >&, const __gnu_cxx::new_allocator<_Tp>&)",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::vector<std::string> txt, std::string alpha) {\n    std::sort(txt.begin(), txt.end());\n    if (std::distance(txt.begin(), std::find(txt.begin(), txt.end(), alpha)) % 2 == 0) {\n        std::reverse(txt.begin(), txt.end());\n    }\n    return txt;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"8\", (std::string)\"9\", (std::string)\"7\", (std::string)\"4\", (std::string)\"3\", (std::string)\"2\"})), (\"9\")) == (9));\n}\n\n\n",
        "answer": "(9)"
    },
    {
        "id": 597,
        "res": false,
        "error": "Exception",
        "error_message": "tmpnazgv6kg: /tmp/tmpnazgv6kg.cpp:10: int main(): Assertion `candidate((\"Jaafodsfa SOdofj AoaFjIs  JAFasIdfSa1\")) == (\"JAFASIDFSA1\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s) {\n    std::transform(s.begin(), s.end(), s.begin(), ::toupper);\n    return s;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Jaafodsfa SOdofj AoaFjIs  JAFasIdfSa1\")) == (\"JAFASIDFSA1\"));\n}\n\n\n",
        "answer": "(\"JAFASIDFSA1\")"
    },
    {
        "id": 598,
        "res": false,
        "error": "Exception",
        "error_message": "tmpy0rj5k7d: /tmp/tmpy0rj5k7d.cpp:10: int main(): Assertion `candidate((\"abc\"), (1)) == (\"abc\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long n) {\n    int length = text.length();\n    return text.substr(length*(n%4), length);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"abc\"), (1)) == (\"abc\"));\n}\n\n\n",
        "answer": "(\"abc\")"
    },
    {
        "id": 599,
        "res": 0
    },
    {
        "id": 600,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpmo2i8o0k.cpp:3:\n/tmp/tmpmo2i8o0k.cpp: In function ‘int main()’:\n/tmp/tmpmo2i8o0k.cpp:19:49: error: expected primary-expression before ‘)’ token\n   19 |     assert(candidate((std::vector<long>())) == ());\n      |                                                 ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::vector<long> array) {\n    std::vector<std::string> just_ns;\n    std::transform(array.begin(), array.end(), std::back_inserter(just_ns), [](long num) {\n        return std::string(num, 'n');\n    });\n    \n    std::vector<std::string> final_output;\n    for (const std::string& wipe : just_ns) {\n        final_output.push_back(wipe);\n    }\n    \n    return final_output;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>())) == ());\n}\n\n\n",
        "answer": "()"
    },
    {
        "id": 601,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp511_y0bd.cpp:4:\n/tmp/tmp511_y0bd.cpp: In function ‘int main()’:\n/tmp/tmp511_y0bd.cpp:22:34: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   22 |     assert(candidate((\"csharp\")) == (5));\n      |            ~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                |\n      |                     |                int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp511_y0bd.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp511_y0bd.cpp:4:\n/tmp/tmp511_y0bd.cpp:22:39: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   22 |     assert(candidate((\"csharp\")) == (5));\n      |                                       ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 f",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    int t = 5;\n    std::string tab = \"\";\n    for (char i : text) {\n        if (strchr(\"aeiouyAEIOUY\", i)) {\n            tab += std::string(t, std::toupper(i));\n        } else {\n            tab += std::string(t, i);\n        }\n        tab += \" \";\n    }\n    // remove last space\n    tab.pop_back();\n    return tab;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"csharp\")) == (5));\n}\n\n\n",
        "answer": "(5)"
    },
    {
        "id": 602,
        "res": false,
        "error": "Exception",
        "error_message": "tmp_ilm1ulo: /tmp/tmp_ilm1ulo.cpp:10: int main(): Assertion `candidate((std::vector<long>({(long)1, (long)1})), (1)) == (2)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> nums, long target) {\n    int cnt = std::count(nums.begin(), nums.end(), target);\n    return cnt * 2;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)1})), (1)) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 603,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string sentences) {\n    std::stringstream ss(sentences);\n    std::string sentence;\n    while (std::getline(ss, sentence, '.')) {\n        if (std::all_of(sentence.begin(), sentence.end(), ::isdigit)) {\n            return \"oscillating\";\n        }\n    }\n    return \"not oscillating\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"not numbers\")) == (\"not oscillating\"));\n}\n\n\n",
        "answer": "(\"not oscillating\")"
    },
    {
        "id": 604,
        "res": false,
        "error": "Exception",
        "error_message": "tmpjfve0714: /tmp/tmpjfve0714.cpp:9: int main(): Assertion `candidate((\"Hello world\"), (\"Hello\")) == (0)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text, std::string start) {\n    return text.find(start) == 0;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Hello world\"), (\"Hello\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 605,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpxs7gcoht.cpp:3:\n/tmp/tmpxs7gcoht.cpp: In function ‘int main()’:\n/tmp/tmpxs7gcoht.cpp:10:99: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   10 |     assert(candidate((std::vector<long>({(long)2, (long)5, (long)1, (long)7, (long)9, (long)3}))) == (9));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                 |\n      |                     std::__cxx11::basic_string<char>                                                  int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpxs7gcoht.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpxs7gcoht.cpp:3:\n/tmp/tmpxs7gcoht.cpp:10:104: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   10 |     assert(candidate((std::vector<long>({(long)2, (long)5, (long)1, (long)7, (long)9, (lo",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::vector<long> nums) {\n    nums.clear();\n    return \"quack\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)2, (long)5, (long)1, (long)7, (long)9, (long)3}))) == (9));\n}\n\n\n",
        "answer": "(9)"
    },
    {
        "id": 606,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpesiuwiu1.cpp:3:\n/tmp/tmpesiuwiu1.cpp: In function ‘int main()’:\n/tmp/tmpesiuwiu1.cpp:14:36: error: ‘ruam’ was not declared in this scope\n   14 |     assert(candidate((\"ruam\")) == (ruam));\n      |                                    ^~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string value) {\n    std::vector<char> ls(value.begin(), value.end());\n    ls.push_back('N');\n    ls.push_back('H');\n    ls.push_back('I');\n    ls.push_back('B');\n    return std::string(ls.begin(), ls.end());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ruam\")) == (ruam));\n}\n\n\n",
        "answer": "(ruam)"
    },
    {
        "id": 607,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpf7tc593k.cpp:3:\n/tmp/tmpf7tc593k.cpp: In function ‘int main()’:\n/tmp/tmpf7tc593k.cpp:15:36: error: expected primary-expression before ‘.’ token\n   15 |     assert(candidate((\". C.\")) == (. C.));\n      |                                    ^\n/tmp/tmpf7tc593k.cpp:15:40: error: expected unqualified-id before ‘)’ token\n   15 |     assert(candidate((\". C.\")) == (. C.));\n      |                                        ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text) {\n    std::vector<char> endings = {'.', '!', '?'};\n    for (char i : endings) {\n        if (text.back() == i) {\n            return true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\". C.\")) == (. C.));\n}\n\n\n",
        "answer": "(. C.)"
    },
    {
        "id": 608,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpih1wod34.cpp:4:\n/tmp/tmpih1wod34.cpp: In function ‘int main()’:\n/tmp/tmpih1wod34.cpp:14:71: error: no match for ‘operator==’ (operand types are ‘std::map<long int, long int>’ and ‘int’)\n   14 |     assert(candidate((std::map<long,long>({{1, 1}, {2, 2}, {3, 3}}))) == (1, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~\n      |                     |                                                      |\n      |                     std::map<long int, long int>                           int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpih1wod34.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpih1wod34.cpp:4:\n/tmp/tmpih1wod34.cpp:14:79: note:   ‘std::map<long int, long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((std::map<long,long>({{1, 1}, {2, 2}, {3, 3}}))) == (1, 1));\n      |                                                                               ^\nIn file included from /usr/inclu",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<long,long> f(std::map<long,long> aDict) {\n    std::map<long,long> result;\n    for(auto &it : aDict) {\n        result[it.second] = it.first;\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,long>({{1, 1}, {2, 2}, {3, 3}}))) == (1, 1));\n}\n\n\n",
        "answer": "(1, 1)"
    },
    {
        "id": 609,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpa8v_wsj4.cpp:4:\n/tmp/tmpa8v_wsj4.cpp: In function ‘int main()’:\n/tmp/tmpa8v_wsj4.cpp:19:52: error: no match for ‘operator==’ (operand types are ‘std::map<long int, long int>’ and ‘int’)\n   19 |     assert(candidate((std::map<long,long>()), (1)) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                  |\n      |                     std::map<long int, long int>       int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpa8v_wsj4.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpa8v_wsj4.cpp:4:\n/tmp/tmpa8v_wsj4.cpp:19:57: note:   ‘std::map<long int, long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   19 |     assert(candidate((std::map<long,long>()), (1)) == (0));\n      |                                                         ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/includ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<long,long> f(std::map<long,long> array, long elem) {\n    std::map<long,long> result = array;\n    while (!result.empty()) {\n        auto it = result.end();\n        --it;\n        if (it->first == elem || it->second == elem) {\n            result.insert(array.begin(), array.end());\n        }\n        result.erase(it->first);\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,long>()), (1)) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 610,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpbs9450yc.cpp:4:\n/tmp/tmpbs9450yc.cpp: In function ‘int main()’:\n/tmp/tmpbs9450yc.cpp:20:86: error: no match for ‘operator==’ (operand types are ‘std::map<long int, long int>’ and ‘int’)\n   20 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)1})), (3)) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                    |\n      |                     std::map<long int, long int>                                         int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpbs9450yc.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpbs9450yc.cpp:4:\n/tmp/tmpbs9450yc.cpp:20:91: note:   ‘std::map<long int, long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   20 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)1})), (3)) == (3));\n      |                                                 ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<long,long> f(std::vector<long> keys, long value) {\n    std::map<long,long> d;\n    for (long k : keys) {\n        d[k] = value;\n    }\n    std::map<long,long> d_copy = d;\n    for (long i = 1; i <= d_copy.size(); i++) {\n        if (d.count(i) != 0 && d[i] == d_copy[i]) {\n            d.erase(i);\n        }\n    }\n    return d;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)1})), (3)) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 611,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpsxcdmfiq.cpp:3:\n/tmp/tmpsxcdmfiq.cpp: In function ‘int main()’:\n/tmp/tmpsxcdmfiq.cpp:10:102: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   10 |     assert(candidate((std::vector<long>({(long)-6, (long)-2, (long)1, (long)-3, (long)0, (long)1}))) == (0, 1, 2, 3, 4, 5));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~\n      |                     |                                                                                                 |\n      |                     std::vector<long int>                                                                             int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpsxcdmfiq.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpsxcdmfiq.cpp:3:\n/tmp/tmpsxcdmfiq.cpp:10:122: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   10 |     assert(candidate((std::vector<long>({(",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    std::reverse(nums.begin(), nums.end());\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)-6, (long)-2, (long)1, (long)-3, (long)0, (long)1}))) == (0, 1, 2, 3, 4, 5));\n}\n\n\n",
        "answer": "(0, 1, 2, 3, 4, 5)"
    },
    {
        "id": 612,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpx3us0fwl.cpp:3:\n/tmp/tmpx3us0fwl.cpp: In function ‘int main()’:\n/tmp/tmpx3us0fwl.cpp:9:99: error: no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, long int>’ and ‘int’)\n    9 |     assert(candidate((std::map<std::string,long>({{\"a\", 42}, {\"b\", 1337}, {\"c\", -1}, {\"d\", 5}}))) == (42, 1337));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~\n      |                     |                                                                                   |\n      |                     std::map<std::__cxx11::basic_string<char>, long int>                                int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpx3us0fwl.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::pair<const std::__cxx11::basic_string<char>, long int> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,long> f(std::map<std::string,long> d) {\n    return d;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>({{\"a\", 42}, {\"b\", 1337}, {\"c\", -1}, {\"d\", 5}}))) == (42, 1337));\n}\n\n\n",
        "answer": "(42, 1337)"
    },
    {
        "id": 613,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmppq5r9b75.cpp:3:\n/tmp/tmppq5r9b75.cpp: In function ‘int main()’:\n/tmp/tmppq5r9b75.cpp:17:32: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   17 |     assert(candidate((\"eat!\")) == (5));\n      |            ~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |              |\n      |                     |              int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmppq5r9b75.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmppq5r9b75.cpp:3:\n/tmp/tmppq5r9b75.cpp:17:37: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   17 |     assert(candidate((\"eat!\")) == (5));\n      |                                     ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/inc",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string result = \"\";\n    int mid = (text.length() - 1) / 2;\n    for (int i = 0; i < mid; i++) {\n        result += text[i];\n    }\n    for (int i = mid; i < text.length() - 1; i++) {\n        result += text[mid + text.length() - 1 - i];\n    }\n    return result.append(text.length() - result.length(), text.back());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"eat!\")) == (5));\n}\n\n\n",
        "answer": "(5)"
    },
    {
        "id": 614,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text, std::string substr, long occ) {\n    long n = 0;\n    while (true) {\n        size_t i = text.rfind(substr);\n        if (i == std::string::npos) {\n            break;\n        } else if (n == occ) {\n            return static_cast<long>(i);\n        } else {\n            n++;\n            text = text.substr(0, i);\n        }\n    }\n    return -1;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"zjegiymjc\"), (\"j\"), (2)) == (-1));\n}\n\n\n",
        "answer": "(-1)"
    },
    {
        "id": 615,
        "res": false,
        "error": "Exception",
        "error_message": "tmpdw373bpl: /tmp/tmpdw373bpl.cpp:10: int main(): Assertion `candidate((std::vector<long>({(long)-1, (long)12, (long)-6, (long)-2})), (-1)) == (12)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> in_list, long num) {\n    in_list.push_back(num);\n    return std::distance(in_list.begin(), std::max_element(in_list.begin(), in_list.end() - 1));\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)-1, (long)12, (long)-6, (long)-2})), (-1)) == (12));\n}\n\n\n",
        "answer": "(12)"
    },
    {
        "id": 616,
        "res": 0
    },
    {
        "id": 617,
        "res": false,
        "error": "Exception",
        "error_message": "tmpnej5y2q3: /tmp/tmpnej5y2q3.cpp:13: int main(): Assertion `candidate((\"<<<<\")) == (\"<<<<\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    if (std::all_of(text.begin(), text.end(), isascii)) {\n        return \"ascii\";\n    } else {\n        return \"non ascii\";\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"<<<<\")) == (\"<<<<\"));\n}\n\n\n",
        "answer": "(\"<<<<\")"
    },
    {
        "id": 618,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpq71abd6u.cpp:3:\n/tmp/tmpq71abd6u.cpp: In function ‘int main()’:\n/tmp/tmpq71abd6u.cpp:9:41: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n    9 |     assert(candidate((\"9\"), (\"8\"), (2)) == (9));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                       |\n      |                     |                       int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpq71abd6u.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpq71abd6u.cpp:3:\n/tmp/tmpq71abd6u.cpp:9:46: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n    9 |     assert(candidate((\"9\"), (\"8\"), (2)) == (9));\n      |                                              ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/inclu",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string match, std::string fill, long n) {\n    return fill.substr(0, n) + match;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"9\"), (\"8\"), (2)) == (9));\n}\n\n\n",
        "answer": "(9)"
    },
    {
        "id": 619,
        "res": false,
        "error": "Exception",
        "error_message": "tmpsoqei_kk: /tmp/tmpsoqei_kk.cpp:10: int main(): Assertion `candidate((\"   Rock   Paper   SCISSORS  \")) == (\"rockpaperscissor\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string title) {\n    transform(title.begin(), title.end(), title.begin(), ::tolower);\n    return title;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"   Rock   Paper   SCISSORS  \")) == (\"rockpaperscissor\"));\n}\n\n\n",
        "answer": "(\"rockpaperscissor\")"
    },
    {
        "id": 620,
        "res": false,
        "error": "Exception",
        "error_message": "tmp674_chof: /tmp/tmp674_chof.cpp:16: int main(): Assertion `candidate((\"lert dna ndqmxohi3\")) == (\"lert dna ndqmxohi3\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string x) {\n    std::string result;\n    for (int i = x.size() - 1; i >= 0; --i) {\n        result += x[i];\n        if (i != 0) {\n            result += \" \";\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"lert dna ndqmxohi3\")) == (\"lert dna ndqmxohi3\"));\n}\n\n\n",
        "answer": "(\"lert dna ndqmxohi3\")"
    },
    {
        "id": 621,
        "res": 0
    },
    {
        "id": 622,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp9jb55_ei.cpp:4:\n/tmp/tmp9jb55_ei.cpp: In function ‘int main()’:\n/tmp/tmp9jb55_ei.cpp:29:37: error: ‘galgu’ was not declared in this scope\n   29 |     assert(candidate((\"galgu\")) == (galgu));\n      |                                     ^~~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\n\nstd::string f(std::string s) {\n    std::string sep = \".\";\n    if (s.find(sep) == std::string::npos) {\n        std::string result = \"\";\n        for (char& c : s) {\n            result += \", \" + std::string(1, c);\n        }\n        return result + \", \";\n    }\n    std::string left = s.substr(0, s.find(sep));\n    std::string right = s.substr(s.find(sep) + 1);\n    std::string new_str = right + sep + left;\n    sep = new_str.substr(new_str.find(sep), new_str.find(sep) + 1);\n    \n    size_t start_pos = 0;\n    while((start_pos = new_str.find(sep, start_pos)) != std::string::npos) {\n        new_str.replace(start_pos, sep.length(), \", \");\n        start_pos += sep.length();\n    }\n    return \", \" + new_str + \", \";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"galgu\")) == (galgu));\n}\n\n\n",
        "answer": "(galgu)"
    },
    {
        "id": 623,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpc1ll947i.cpp:3:\n/tmp/tmpc1ll947i.cpp: In function ‘int main()’:\n/tmp/tmpc1ll947i.cpp:18:134: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘bool’)\n   18 |     assert(candidate((\"hi~!\"), (std::vector<std::string>({(std::string)\"~\", (std::string)\"`\", (std::string)\"!\", (std::string)\"&\"}))) == (!\"hi\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~\n      |                     |                                                                                                                    |\n      |                     std::__cxx11::basic_string<char>                                                                                     bool\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpc1ll947i.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpc1ll947i.cpp:3:\n/tmp/tmpc1ll947i.cpp:18:143: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::vector<std::string> rules) {\n    for (std::string rule : rules) {\n        if (rule == \"@\") {\n            std::reverse(text.begin(), text.end());\n        } else if (rule == \"~\") {\n            std::transform(text.begin(), text.end(), text.begin(), ::toupper);\n        } else if (!text.empty() && text.back() == rule[0]) {\n            text.pop_back();\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"hi~!\"), (std::vector<std::string>({(std::string)\"~\", (std::string)\"`\", (std::string)\"!\", (std::string)\"&\"}))) == (!\"hi\"));\n}\n\n\n",
        "answer": "(!\"hi\")"
    },
    {
        "id": 624,
        "res": false,
        "error": "Exception",
        "error_message": "tmpk8vbi2f1: /tmp/tmpk8vbi2f1.cpp:15: int main(): Assertion `candidate((\"llomnrpc\"), (\"x\")) == (\"hello world\")' failed.\n",
        "code": "\n#include <assert.h>\n#include <bits/stdc++.h>\nstd::string f(std::string text, std::string character) {\n    size_t char_index = text.find(character);\n    std::string result;\n    if (char_index != std::string::npos) {\n        result = text.substr(0, char_index);\n    }\n    result += character + text.substr(char_index + character.length());\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"llomnrpc\"), (\"x\")) == (\"hello world\"));\n}\n\n\n",
        "answer": "(\"hello world\")"
    },
    {
        "id": 625,
        "res": false,
        "error": "Exception",
        "error_message": "tmp5fap7rl3: /tmp/tmp5fap7rl3.cpp:15: int main(): Assertion `candidate((\"bwiajegrwjd??djoda,?\")) == (0)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    int count = 0;\n    for(char i : text) {\n        if(i == '.' || i == '?' || i == '!' || i == ',' || i == '.') {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"bwiajegrwjd??djoda,?\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 626,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpa3olr0al.cpp:4:\n/tmp/tmpa3olr0al.cpp: In function ‘int main()’:\n/tmp/tmpa3olr0al.cpp:19:221: error: ‘ab’ was not declared in this scope; did you mean ‘abs’?\n   19 |     assert(candidate((\"abab\"), (std::vector<std::tuple<std::string, std::string>>({(std::tuple<std::string, std::string>)std::make_tuple(\"a\", \"b\"), (std::tuple<std::string, std::string>)std::make_tuple(\"b\", \"a\")}))) == (ab));\n      |                                                                                                                                                                                                                             ^~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string line, std::vector<std::tuple<std::string, std::string>> equalityMap) {\n    std::map<char, char> rs;\n    for (auto& k : equalityMap) {\n        rs[std::get<0>(k)[0]] = std::get<1>(k)[0];\n    }\n    for (auto& c : line) {\n        if (rs.count(c)) {\n            c = rs[c];\n        }\n    }\n    return line;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"abab\"), (std::vector<std::tuple<std::string, std::string>>({(std::tuple<std::string, std::string>)std::make_tuple(\"a\", \"b\"), (std::tuple<std::string, std::string>)std::make_tuple(\"b\", \"a\")}))) == (ab));\n}\n\n\n",
        "answer": "(ab)"
    },
    {
        "id": 627,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpn64lxe62.cpp:3:\n/tmp/tmpn64lxe62.cpp: In function ‘int main()’:\n/tmp/tmpn64lxe62.cpp:21:239: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   21 |     assert(candidate((std::vector<std::tuple<std::string, long>>({(std::tuple<std::string, long>)std::make_tuple(\"u\", 1), (std::tuple<std::string, long>)std::make_tuple(\"s\", 7), (std::tuple<std::string, long>)std::make_tuple(\"u\", -5)}))) == (1, -5));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~\n      |                     |                                                                                                                                                                                                                              |\n      |                     std::vector<long int>                                                                                                                                                                                                          int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpn64lxe62.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\n\nstd::vector<long> f(std::vector<std::tuple<std::string, long>> parts) {\n    std::unordered_map<std::string, long> dict;\n    for (const auto& part : parts) {\n        dict[std::get<0>(part)] = std::get<1>(part);\n    }\n    std::vector<long> values;\n    for (const auto& part : parts) {\n        if (dict.find(std::get<0>(part)) != dict.end()) {\n            values.push_back(dict[std::get<0>(part)]);\n            dict.erase(std::get<0>(part)); // Ensure each key is added only once\n        }\n    }\n    return values;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::tuple<std::string, long>>({(std::tuple<std::string, long>)std::make_tuple(\"u\", 1), (std::tuple<std::string, long>)std::make_tuple(\"s\", 7), (std::tuple<std::string, long>)std::make_tuple(\"u\", -5)}))) == (1, -5));\n}\n\n\n",
        "answer": "(1, -5)"
    },
    {
        "id": 628,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp9vmqedun.cpp:4:\n/tmp/tmp9vmqedun.cpp: In function ‘int main()’:\n/tmp/tmp9vmqedun.cpp:11:95: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   11 |     assert(candidate((std::vector<long>({(long)4, (long)5, (long)3, (long)6, (long)1})), (5)) == (5));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                             |\n      |                     std::vector<long int>                                                         int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp9vmqedun.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp9vmqedun.cpp:4:\n/tmp/tmp9vmqedun.cpp:11:100: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   11 |     assert(candidate((std::vector<long>({(long)4, (long)5, (long)3, (long)6, (long)1})), (5)) == (5));\n      |                 ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums, long delete_element) {\n    nums.erase(std::remove(nums.begin(), nums.end(), delete_element), nums.end());\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)4, (long)5, (long)3, (long)6, (long)1})), (5)) == (5));\n}\n\n\n",
        "answer": "(5)"
    },
    {
        "id": 629,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpkwu15g14.cpp:3:\n/tmp/tmpkwu15g14.cpp: In function ‘int main()’:\n/tmp/tmpkwu15g14.cpp:15:45: error: ‘cat’ was not declared in this scope\n   15 |     assert(candidate((\"catNG\"), (\"NG\")) == (cat));\n      |                                             ^~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string dng) {\n    if(text.find(dng) == std::string::npos){\n        return text;\n    }\n    if(text.substr(text.length()-dng.length()) == dng){\n        return text.substr(0, text.length()-dng.length());\n    }\n    return text.substr(0, text.length()-1) + f(text.substr(0, text.length()-2), dng);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"catNG\"), (\"NG\")) == (cat));\n}\n\n\n",
        "answer": "(cat)"
    },
    {
        "id": 630,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmptbmzj6d8.cpp:3:\n/tmp/tmptbmzj6d8.cpp: In function ‘int main()’:\n/tmp/tmptbmzj6d8.cpp:13:106: error: no match for ‘operator==’ (operand types are ‘std::map<long int, long int>’ and ‘int’)\n   13 |     assert(candidate((std::map<long,long>({{1, -9}, {0, -7}})), (std::map<long,long>({{1, 2}, {0, 3}}))) == (1, -9));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~\n      |                     |                                                                                         |\n      |                     std::map<long int, long int>                                                              int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmptbmzj6d8.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmptbmzj6d8.cpp:3:\n/tmp/tmptbmzj6d8.cpp:13:115: note:   ‘std::map<long int, long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   13 |     assert(candidate((std::map<long,long>({{1, -9}, {0, -7",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<long,long> f(std::map<long,long> original, std::map<long,long> string) {\n    std::map<long, long> temp(original.begin(), original.end());\n    for (auto& elem : string) {\n        temp[elem.second] = elem.first;\n    }\n    return temp;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,long>({{1, -9}, {0, -7}})), (std::map<long,long>({{1, 2}, {0, 3}}))) == (1, -9));\n}\n\n\n",
        "answer": "(1, -9)"
    },
    {
        "id": 631,
        "res": 0
    },
    {
        "id": 632,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpvtln90p6.cpp:3:\n/tmp/tmpvtln90p6.cpp: In function ‘int main()’:\n/tmp/tmpvtln90p6.cpp:16:138: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   16 |     assert(candidate((std::vector<long>({(long)63, (long)0, (long)1, (long)5, (long)9, (long)87, (long)0, (long)7, (long)25, (long)4}))) == (63));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                                                        |\n      |                     std::vector<long int>                                                                                                    int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpvtln90p6.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpvtln90p6.cpp:3:\n/tmp/tmpvtln90p6.cpp:16:144: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__nor",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> lst) {\n    for (int i = lst.size() - 1; i >= 1; i--) {\n        for (int j = 0; j < i; j++) {\n            if (lst[j] > lst[j + 1]) {\n                std::swap(lst[j], lst[j + 1]);\n            }\n        }\n    }\n    return lst;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)63, (long)0, (long)1, (long)5, (long)9, (long)87, (long)0, (long)7, (long)25, (long)4}))) == (63));\n}\n\n\n",
        "answer": "(63)"
    },
    {
        "id": 633,
        "res": false,
        "error": "Exception",
        "error_message": "tmphk_oiqs8: /tmp/tmphk_oiqs8.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)5, (long)-3, (long)3, (long)2})), (2)) == (2)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> array, long elem) {\n    std::reverse(array.begin(), array.end());\n    int found = -1;\n    try {\n        found = std::find(array.begin(), array.end(), elem) - array.begin();\n    } catch (...) {\n        std::reverse(array.begin(), array.end());\n    }\n    std::reverse(array.begin(), array.end());\n    return found;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)5, (long)-3, (long)3, (long)2})), (2)) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 634,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmplgueayvz.cpp:3:\n/tmp/tmplgueayvz.cpp: In function ‘int main()’:\n/tmp/tmplgueayvz.cpp:24:36: error: ‘e’ was not declared in this scope\n   24 |     assert(candidate((\"biec\")) == (e));\n      |                                    ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string input_string) {\n    std::string table = \"aioe\";\n    std::string replace = \"ioua\";\n    std::map<char, char> translation;\n    for (int i = 0; i < table.length(); ++i) {\n        translation[table[i]] = replace[i];\n    }\n\n    while (input_string.find_first_of(\"aA\") != std::string::npos) {\n        for (int i = 0; i < input_string.length(); ++i) {\n            if (translation.find(input_string[i]) != translation.end()) {\n                input_string[i] = translation[input_string[i]];\n            }\n        }\n    }\n    \n    return input_string;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"biec\")) == (e));\n}\n\n\n",
        "answer": "(e)"
    },
    {
        "id": 635,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpus6cituk.cpp:3:\n/tmp/tmpus6cituk.cpp: In function ‘int main()’:\n/tmp/tmpus6cituk.cpp:16:62: error: ‘True’ was not declared in this scope\n   16 |     assert(candidate((\"9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW\")) == (True));\n      |                                                              ^~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text) {\n    std::vector<char> valid_chars = {'-', '_', '+', '.', '/', ' '};\n    std::transform(text.begin(), text.end(), text.begin(), ::toupper);\n    for (char& c : text) {\n        if (!isalnum(c) && std::find(valid_chars.begin(), valid_chars.end(), c) == valid_chars.end()) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW\")) == (True));\n}\n\n\n",
        "answer": "(True)"
    },
    {
        "id": 636,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpo5ghmggd.cpp:3:\n/tmp/tmpo5ghmggd.cpp: In function ‘int main()’:\n/tmp/tmpo5ghmggd.cpp:18:87: error: no match for ‘operator==’ (operand types are ‘std::map<long int, std::__cxx11::basic_string<char> >’ and ‘const char [3]’)\n   18 |     assert(candidate((std::map<long,std::string>({{3, \"A3\"}, {1, \"A1\"}, {2, \"A2\"}}))) == (3, \"A3\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~\n      |                     |                                                                      |\n      |                     std::map<long int, std::__cxx11::basic_string<char> >                  const char [3]\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpo5ghmggd.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::pair<const long int, std::__cxx11::basic_string<char> > >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/c",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<long,std::string> f(std::map<long,std::string> d) {\n    std::map<long,std::string> r;\n    while (!d.empty()) {\n        for (auto const& pair : d) {\n            r[pair.first] = pair.second;\n        }\n        auto it = d.end();\n        --it;\n        d.erase(it);\n    }\n    return r;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,std::string>({{3, \"A3\"}, {1, \"A1\"}, {2, \"A2\"}}))) == (3, \"A3\"));\n}\n\n\n",
        "answer": "(3, \"A3\")"
    },
    {
        "id": 637,
        "res": false,
        "error": "Exception",
        "error_message": "tmpggq_jqup: /tmp/tmpggq_jqup.cpp:16: int main(): Assertion `candidate((\"03625163633 d\")) == (\"yes\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::istringstream iss(text);\n    std::string word;\n    while (iss >> word) {\n        if (!std::all_of(word.begin(), word.end(), ::isdigit)) {\n            return \"no\";\n        }\n    }\n    return \"yes\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"03625163633 d\")) == (\"yes\"));\n}\n\n\n",
        "answer": "(\"yes\")"
    },
    {
        "id": 638,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpzel7zp84.cpp:3:\n/tmp/tmpzel7zp84.cpp: In function ‘int main()’:\n/tmp/tmpzel7zp84.cpp:15:45: error: ‘ababa’ was not declared in this scope\n   15 |     assert(candidate((\"ababa\"), (\"ab\")) == (ababa));\n      |                                             ^~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s, std::string suffix) {\n    if (suffix.empty()) {\n        return s;\n    }\n    while (std::equal(s.rbegin(), s.rbegin() + suffix.size(), suffix.rbegin())) {\n        s.erase(s.size() - suffix.size(), suffix.size());\n    }\n    return s;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ababa\"), (\"ab\")) == (ababa));\n}\n\n\n",
        "answer": "(ababa)"
    },
    {
        "id": 639,
        "res": false,
        "error": "Exception",
        "error_message": "tmpwbsgk0qu: /tmp/tmpwbsgk0qu.cpp:19: int main(): Assertion `candidate((\"xabxfiwoexahxaxbxs\"), (\"xbabcabccb\")) == (\"yes yes yes no no no no no yes yes yes no no no no no no no no\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string perc, std::string full) {\n    std::string reply = \"\";\n    int i = 0;\n    while (i < full.size() && i < perc.size() && perc[i] == full[i]) {\n        if (perc[i] == full[i]) {\n            reply += \"yes \";\n        } else {\n            reply += \"no \";\n        }\n        i++;\n    }\n    return reply;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"xabxfiwoexahxaxbxs\"), (\"xbabcabccb\")) == (\"yes yes yes no no no no no yes yes yes no no no no no no no no\"));\n}\n\n\n",
        "answer": "(\"yes yes yes no no no no no yes yes yes no no no no no no no no\")"
    },
    {
        "id": 640,
        "res": false,
        "error": "Exception",
        "error_message": "tmpjda_y_z1: /tmp/tmpjda_y_z1.cpp:18: int main(): Assertion `candidate((\"3eeeeeeoopppppppw14film3oee3\")) == (3)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    int a = 0;\n    if (text[0] != '\\0' && text.find(text[0], 1) != std::string::npos) {\n        a += 1;\n    }\n    for (size_t i = 0; i < text.length() - 1; i++) {\n        if (text[i] != '\\0' && text.find(text[i], i + 1) != std::string::npos) {\n            a += 1;\n        }\n    }\n    return a;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"3eeeeeeoopppppppw14film3oee3\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 641,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpbq1wzrue.cpp:3:\n/tmp/tmpbq1wzrue.cpp: In function ‘int main()’:\n/tmp/tmpbq1wzrue.cpp:9:37: error: ISO C++ forbids comparison between pointer and integer [-fpermissive]\n    9 |     assert(candidate((\"dummy33;d\")) == (\"dummy33\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string number) {\n    return std::all_of(number.begin(), number.end(), ::isdigit);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"dummy33;d\")) == (\"dummy33\"));\n}\n\n\n",
        "answer": "(\"dummy33\")"
    },
    {
        "id": 642,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp5vrtchs_.cpp:3:\n/tmp/tmp5vrtchs_.cpp: In function ‘int main()’:\n/tmp/tmp5vrtchs_.cpp:16:36: error: ‘space’ was not declared in this scope; did you mean ‘std::filesystem::space’?\n   16 |     assert(candidate((\"     \")) == space);\n      |                                    ^~~~~\nIn file included from /usr/include/c++/11/filesystem:47,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:129,\n                 from /tmp/tmp5vrtchs_.cpp:3:\n/usr/include/c++/11/bits/fs_ops.h:354:14: note: ‘std::filesystem::space’ declared here\n  354 |   space_info space(const path& __p, error_code& __ec) noexcept;\n      |              ^~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    int i = 0;\n    while (i < text.length() && std::isspace(text[i])) {\n        i++;\n    }\n    if (i == text.length()) {\n        return \"space\";\n    }\n    return \"no\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"     \")) == space);\n}\n\n\n",
        "answer": "space"
    },
    {
        "id": 643,
        "res": false,
        "error": "Exception",
        "error_message": "tmpo8pb9p6y: /tmp/tmpo8pb9p6y.cpp:12: int main(): Assertion `candidate((\"damdrodm\"), (\"m\")) == (\"damdrodm\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string suffix) {\n    if (text.substr(text.size() - suffix.size()) == suffix) {\n        text = text.substr(0, text.size() - 1) + std::string(1, std::toupper(text.back()));\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"damdrodm\"), (\"m\")) == (\"damdrodm\"));\n}\n\n\n",
        "answer": "(\"damdrodm\")"
    },
    {
        "id": 644,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpt44ttwkz.cpp:3:\n/tmp/tmpt44ttwkz.cpp: In function ‘int main()’:\n/tmp/tmpt44ttwkz.cpp:15:68: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   15 |     assert(candidate((std::vector<long>({(long)6, (long)1})), (3)) == (6));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                  |\n      |                     std::vector<long int>                              int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpt44ttwkz.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpt44ttwkz.cpp:3:\n/tmp/tmpt44ttwkz.cpp:15:73: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   15 |     assert(candidate((std::vector<long>({(long)6, (long)1})), (3)) == (6));\n      |                                                                         ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n            ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums, long pos) {\n    std::vector<long> result = nums;\n    if (pos % 2 != 0) {\n        std::reverse(result.begin(), result.end() - 1);\n    } else {\n        std::reverse(result.begin(), result.end());\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)6, (long)1})), (3)) == (6));\n}\n\n\n",
        "answer": "(6)"
    },
    {
        "id": 645,
        "res": false,
        "error": "Exception",
        "error_message": "tmpo0xpqmtw: /tmp/tmpo0xpqmtw.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)1, (long)1, (long)1, (long)2})), (3)) == (3)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> nums, long target) {\n    if (std::count(nums.begin(), nums.end(), 0)) {\n        return 0;\n    } else if (std::count(nums.begin(), nums.end(), target) < 3) {\n        return 1;\n    } else {\n        return std::find(nums.begin(), nums.end(), target) - nums.begin();\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)1, (long)2})), (3)) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 646,
        "res": false,
        "error": "Exception",
        "error_message": "tmp1di20uoe: /tmp/tmp1di20uoe.cpp:12: int main(): Assertion `candidate((\"aBc, ,SzY\"), (2)) == (\"cba\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long count) {\n    for (long i = 0; i < count; i++) {\n        std::reverse(text.begin(), text.end());\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"aBc, ,SzY\"), (2)) == (\"cba\"));\n}\n\n\n",
        "answer": "(\"cba\")"
    },
    {
        "id": 647,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp5i8hudye.cpp:3:\n/tmp/tmp5i8hudye.cpp: In function ‘int main()’:\n/tmp/tmp5i8hudye.cpp:17:61: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘int’)\n   17 |     assert(candidate((\"/alcm@ an)t//eprw)/e!/d\\nujv\"), (0)) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                           |\n      |                     |                                           int\n      |                     std::vector<std::__cxx11::basic_string<char> >\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmp5i8hudye.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::__cxx11::basic_string<char> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n            ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::string text, long chunks) {\n    std::vector<std::string> result;\n    std::istringstream iss(text);\n    std::string line;\n    \n    while (std::getline(iss, line)) {\n        result.push_back(line);\n    }\n    \n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"/alcm@ an)t//eprw)/e!/d\\nujv\"), (0)) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 648,
        "res": false,
        "error": "Exception",
        "error_message": "tmpctq5elp3: /tmp/tmpctq5elp3.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)0, (long)4, (long)5, (long)6})), (std::vector<long>({(long)13, (long)23, (long)-5, (long)0}))) == (0)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_std_string{\n    long f0;\n    std::string f1;    Union_long_std_string(long _f0) : f0(_f0) {}\n    Union_long_std_string(std::string _f1) : f1(_f1) {}\n    ~Union_long_std_string() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(std::string f) {\n        return f1 == f ;\n    }\n};\nUnion_long_std_string f(std::vector<long> list1, std::vector<long> list2) {\n    std::vector<long> l = list1;\n    while (l.size() > 0) {\n        if (std::find(list2.begin(), list2.end(), l.back()) != list2.end()) {\n            l.pop_back();\n        } else {\n            return l.back();\n        }\n    }\n    return Union_long_std_string(\"missing\");\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)0, (long)4, (long)5, (long)6})), (std::vector<long>({(long)13, (long)23, (long)-5, (long)0}))) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 649,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpgk3sfbtp.cpp:4:\n/tmp/tmpgk3sfbtp.cpp: In function ‘int main()’:\n/tmp/tmpgk3sfbtp.cpp:25:61: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   25 |     assert(candidate((\" f9\\n    ldf9\\n  adf9!\\n f9?\"), (1)) == (9));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                           |\n      |                     std::__cxx11::basic_string<char>            int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpgk3sfbtp.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpgk3sfbtp.cpp:4:\n/tmp/tmpgk3sfbtp.cpp:25:66: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   25 |     assert(candidate((\" f9\\n    ldf9\\n  adf9!\\n f9?\"), (1)) == (9));\n      |                                                                  ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/inclu",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long tabsize) {\n    std::stringstream ss(text);\n    std::string line, result;\n    \n    while(std::getline(ss, line, '\\n')) {\n        for(char& c : line) {\n            if(c == '\\t') {\n                result += std::string(tabsize, ' ');\n            } else {\n                result += c;\n            }\n        }\n        result += '\\n';\n    }\n    result.pop_back();  // remove the last newline character\n    \n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"\tf9\\n\tldf9\\n\tadf9!\\n\tf9?\"), (1)) == (9));\n}\n\n\n",
        "answer": "(9)"
    },
    {
        "id": 650,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string string, std::string substring) {\n    while (string.find(substring) == 0) {\n        string = string.substr(substring.length());\n    }\n    return string;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"\"), (\"A\")) == (\"\"));\n}\n\n\n",
        "answer": "(\"\")"
    },
    {
        "id": 651,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp8kcjrnem.cpp:4:\n/tmp/tmp8kcjrnem.cpp: In function ‘int main()’:\n/tmp/tmp8kcjrnem.cpp:19:70: error: ‘E’ was not declared in this scope\n   19 |     assert(candidate((\"E wrestled evil until upperfeat\"), (\"e\")) == (E));\n      |                                                                      ^\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string letter) {\n    if(islower(letter[0])) letter[0] = toupper(letter[0]);\n    for(int i=0; i<text.size(); i++)\n    {\n        if(text[i] == letter[0])\n        {\n            text[i] = letter[0];\n        }\n    }\n    text[0] = toupper(text[0]);\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"E wrestled evil until upperfeat\"), (\"e\")) == (E));\n}\n\n\n",
        "answer": "(E)"
    },
    {
        "id": 652,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpu4097g9q.cpp:3:\n/tmp/tmpu4097g9q.cpp: In function ‘int main()’:\n/tmp/tmpu4097g9q.cpp:18:29: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   18 |     assert(candidate((\"3\")) == (3));\n      |            ~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |           |\n      |                     |           int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpu4097g9q.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpu4097g9q.cpp:3:\n/tmp/tmpu4097g9q.cpp:18:34: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   18 |     assert(candidate((\"3\")) == (3));\n      |                                  ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string string) {\n    if (string.empty() || !isdigit(string[0])) {\n        return \"INVALID\";\n    }\n    \n    int cur = 0;\n    for (int i = 0; i < string.length(); i++) {\n        cur = cur * 10 + (string[i] - '0');\n    }\n    \n    return std::to_string(cur);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"3\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 653,
        "res": false,
        "error": "Exception",
        "error_message": "tmpzafu240u: /tmp/tmpzafu240u.cpp:14: int main(): Assertion `candidate((\"c, c, c ,c, c\"), (\"c\")) == (3)' failed.\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text, std::string letter) {\n    std::string t = text;\n    for (char alph : text) {\n        t.erase(std::remove(t.begin(), t.end(), alph), t.end());\n    }\n    return std::count(t.begin(), t.end(), *letter.c_str()) + 1;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"c, c, c ,c, c\"), (\"c\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 654,
        "res": false,
        "error": "Exception",
        "error_message": "tmp8t0v6w_h: /tmp/tmp8t0v6w_h.cpp:13: int main(): Assertion `candidate((\"aphid\"), (\"i\"), (\"?\")) == (\"aphid\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s, std::string from_c, std::string to_c) {\n    std::transform(s.begin(), s.end(), s.begin(), [from_c, to_c](char c) { \n        size_t pos = from_c.find(c);\n        return pos != std::string::npos ? to_c[pos] : c; \n    });\n    return s;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"aphid\"), (\"i\"), (\"?\")) == (\"aphid\"));\n}\n\n\n",
        "answer": "(\"aphid\")"
    },
    {
        "id": 655,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmptzw38_rm.cpp:3:\n/tmp/tmptzw38_rm.cpp: In function ‘int main()’:\n/tmp/tmptzw38_rm.cpp:20:37: error: ‘rp’ was not declared in this scope\n   20 |     assert(candidate((\"rpaar\")) == (rp));\n      |                                     ^~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s) {\n    std::string result = s;\n    size_t pos = result.find('a');\n    while (pos != std::string::npos) {\n        result.erase(pos, 1);\n        pos = result.find('a', pos);\n    }\n    pos = result.find('r');\n    while (pos != std::string::npos) {\n        result.erase(pos, 1);\n        pos = result.find('r', pos);\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"rpaar\")) == (rp));\n}\n\n\n",
        "answer": "(rp)"
    },
    {
        "id": 656,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpdldjfqix.cpp:3:\n/tmp/tmpdldjfqix.cpp: In function ‘int main()’:\n/tmp/tmpdldjfqix.cpp:16:199: error: ‘no’ was not declared in this scope\n   16 |     assert(candidate((std::vector<std::string>({(std::string)\"b\", (std::string)\"i\", (std::string)\"r\", (std::string)\"o\", (std::string)\"s\", (std::string)\"j\", (std::string)\"v\", (std::string)\"p\"}))) == no);\n      |                                                                                                                                                                                                       ^~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::vector<std::string> letters) {\n    std::vector<std::string> a;\n    for (int i = 0; i < letters.size(); i++) {\n        if (std::find(a.begin(), a.end(), letters[i]) != a.end()) {\n            return \"no\";\n        }\n        a.push_back(letters[i]);\n    }\n    return \"yes\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"b\", (std::string)\"i\", (std::string)\"r\", (std::string)\"o\", (std::string)\"s\", (std::string)\"j\", (std::string)\"v\", (std::string)\"p\"}))) == no);\n}\n\n\n",
        "answer": "no"
    },
    {
        "id": 657,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpd41mfs5j.cpp:3:\n/tmp/tmpd41mfs5j.cpp: In function ‘int main()’:\n/tmp/tmpd41mfs5j.cpp:31:45: error: ‘no’ was not declared in this scope\n   31 |     assert(candidate((\"djhasghasgdha\")) == (no));\n      |                                             ^~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string result = \"\";\n    std::string punctuations = \"!.?,:;\";\n    \n    for (char punct : punctuations) {\n        if (std::count(text.begin(), text.end(), punct) > 1) {\n            return \"no\";\n        }\n        if (text.back() == punct) {\n            return \"no\";\n        }\n    }\n    \n    std::string titleText = text;\n    titleText[0] = std::toupper(titleText[0]);\n    for (int i = 1; i < titleText.size(); ++i) {\n        if (std::isspace(titleText[i - 1])) {\n            titleText[i] = std::toupper(titleText[i]);\n        } else {\n            titleText[i] = std::tolower(titleText[i]);\n        }\n    }\n    \n    return titleText;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"djhasghasgdha\")) == (no));\n}\n\n\n",
        "answer": "(no)"
    },
    {
        "id": 658,
        "res": 0
    },
    {
        "id": 659,
        "res": false,
        "error": "Exception",
        "error_message": "tmp0fkp88pc: /tmp/tmp0fkp88pc.cpp:15: int main(): Assertion `candidate((std::vector<std::string>({(std::string)\"yR?TAJhIW?n\", (std::string)\"o11BgEFDfoe\", (std::string)\"KnHdn2vdEd\", (std::string)\"wvwruuqfhXbGis\"}))) == (3)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<std::string> bots) {\n    std::vector<std::string> clean;\n    for (const std::string& username : bots) {\n        if (username.find_first_not_of(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") != std::string::npos) {\n            clean.push_back(username.substr(0, 2) + username.substr(username.length() - 3));\n        }\n    }\n    return clean.size();\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"yR?TAJhIW?n\", (std::string)\"o11BgEFDfoe\", (std::string)\"KnHdn2vdEd\", (std::string)\"wvwruuqfhXbGis\"}))) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 660,
        "res": false,
        "error": "Exception",
        "error_message": "tmp9ideu7to: /tmp/tmp9ideu7to.cpp:24: int main(): Assertion `candidate((3)) == (1)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(long num) {\n    std::vector<long> initial = {1};\n    std::vector<long> total = initial;\n    for (long i = 0; i < num; i++) {\n        total = {1};\n        for (size_t j = 0; j < total.size() - 1; j++) {\n            total.push_back(initial[j] + initial[j+1]);\n        }\n        initial.push_back(total.back());\n    }\n\n    long sum = 0;\n    for (long val : initial) {\n        sum += val;\n    }\n\n    return sum;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((3)) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 661,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmprw1lauui.cpp:4:\n/tmp/tmprw1lauui.cpp: In function ‘int main()’:\n/tmp/tmprw1lauui.cpp:23:48: error: ‘elrt’ was not declared in this scope\n   23 |     assert(candidate((\"elrts,SS ee\"), (6)) == (elrt,SS ee));\n      |                                                ^~~~\n/tmp/tmprw1lauui.cpp:23:53: error: ‘SS’ was not declared in this scope\n   23 |     assert(candidate((\"elrts,SS ee\"), (6)) == (elrt,SS ee));\n      |                                                     ^~\n/tmp/tmprw1lauui.cpp:23:56: error: expected ‘)’ before ‘ee’\n   23 |     assert(candidate((\"elrts,SS ee\"), (6)) == (elrt,SS ee));\n      |                                               ~        ^~\n/tmp/tmprw1lauui.cpp:23:60: error: expected ‘)’ before ‘;’ token\n   23 |     assert(candidate((\"elrts,SS ee\"), (6)) == (elrt,SS ee));\n      |                                                            ^\n/tmp/tmprw1lauui.cpp:23:60: error: expected ‘)’ before ‘;’ token\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmprw1lauui.cpp:4:\n/tmp/tmprw1lauui.cpp:23:5: note: to match this ‘(’\n   23 |     assert(candidate((\"elrts,SS ee\"), (6)) == (elrt,SS ee));\n      |     ^~~~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string letters, long maxsplit) {\n    std::vector<std::string> words;\n    std::string word;\n    std::stringstream ss(letters);\n    while (ss >> word) {\n        words.push_back(word);\n    }\n    if (maxsplit < words.size()) {\n        words.erase(words.begin(), words.end() - maxsplit);\n    }\n    std::string result = \"\";\n    for (const auto &word : words) {\n        result += word;\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"elrts,SS ee\"), (6)) == (elrt,SS ee));\n}\n\n\n",
        "answer": "(elrt,SS ee)"
    },
    {
        "id": 662,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp_2c_v592.cpp:3:\n/tmp/tmp_2c_v592.cpp: In function ‘int main()’:\n/tmp/tmp_2c_v592.cpp:12:114: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘int’)\n   12 |     assert(candidate((std::vector<std::string>({(std::string)\"Dan\", (std::string)\"Joe\", (std::string)\"Dusty\"}))) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                |\n      |                     std::vector<std::__cxx11::basic_string<char> >                                                   int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmp_2c_v592.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::__cxx11::basic_string<char> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn fi",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::vector<std::string> values) {\n    std::vector<std::string> names = {\"Pete\", \"Linda\", \"Angela\"};\n    names.insert(names.end(), values.begin(), values.end());\n    std::sort(names.begin(), names.end());\n    return names;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"Dan\", (std::string)\"Joe\", (std::string)\"Dusty\"}))) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 663,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmph_bb_dno.cpp:4:\n/tmp/tmph_bb_dno.cpp: In function ‘int main()’:\n/tmp/tmph_bb_dno.cpp:17:50: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   17 |     assert(candidate((std::vector<long>()), (2)) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                |\n      |                     std::vector<long int>            int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmph_bb_dno.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmph_bb_dno.cpp:4:\n/tmp/tmph_bb_dno.cpp:17:55: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   17 |     assert(candidate((std::vector<long>()), (2)) == (0));\n      |                                                       ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n     ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> container, long cron) {\n    std::vector<long> pref;\n    auto it = std::find(container.begin(), container.end(), cron);\n    if (it != container.end()) {\n        pref.assign(container.begin(), it);\n        it++;\n        container.erase(container.begin(), it);\n    }\n    return container;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>()), (2)) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 664,
        "res": false,
        "error": "Exception",
        "error_message": "tmp3evwo49b: /tmp/tmp3evwo49b.cpp:13: int main(): Assertion `candidate((std::map<std::string,std::string>({{\"3\", \"3\"}, {\"4\", \"5\"}}))) == (\"3 3 4 5\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::map<std::string,std::string> tags) {\n    std::string resp = \"\";\n    for (auto const& pair : tags) {\n        resp += pair.first + \" \";\n    }\n    return resp;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,std::string>({{\"3\", \"3\"}, {\"4\", \"5\"}}))) == (\"3 3 4 5\"));\n}\n\n\n",
        "answer": "(\"3 3 4 5\")"
    },
    {
        "id": 665,
        "res": false,
        "error": "Exception",
        "error_message": "tmpw1ejbheb: /tmp/tmpw1ejbheb.cpp:17: int main(): Assertion `candidate((\"acbced\")) == (\"ACBD\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string chars) {\n    std::string s = \"\";\n    for (char ch : chars) {\n        if (std::count(chars.begin(), chars.end(), ch) % 2 == 0) {\n            s += toupper(ch);\n        } else {\n            s += ch;\n        }\n    }\n    return s;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"acbced\")) == (\"ACBD\"));\n}\n\n\n",
        "answer": "(\"ACBD\")"
    },
    {
        "id": 666,
        "res": false,
        "error": "Exception",
        "error_message": "tmp_5j5xtcf: /tmp/tmp_5j5xtcf.cpp:18: int main(): Assertion `candidate((std::map<long,std::vector<long>>({{0, std::vector<long>()}, {1, std::vector<long>()}})), (std::map<long,std::vector<long>>({{0, std::vector<long>({(long)0, (long)0, (long)0, (long)0})}, {2, std::vector<long>({(long)2, (long)2, (long)2})}}))) == (0)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::map<long,std::vector<long>> d1, std::map<long,std::vector<long>> d2) {\n    int mmax = 0;\n    for (auto& pair : d1) {\n        long k1 = pair.first;\n        if (int p = pair.second.size() + d2[k1].size()) {\n            if (p > mmax) {\n                mmax = p;\n            }\n        }\n    }\n    return mmax;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,std::vector<long>>({{0, std::vector<long>()}, {1, std::vector<long>()}})), (std::map<long,std::vector<long>>({{0, std::vector<long>({(long)0, (long)0, (long)0, (long)0})}, {2, std::vector<long>({(long)2, (long)2, (long)2})}}))) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 667,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmprgxu53uw.cpp:3:\n/tmp/tmprgxu53uw.cpp: In function ‘int main()’:\n/tmp/tmprgxu53uw.cpp:15:30: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘int’)\n   15 |     assert(candidate((\"C7\")) == (7));\n      |            ~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |            |\n      |                     |            int\n      |                     std::vector<std::__cxx11::basic_string<char> >\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmprgxu53uw.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::__cxx11::basic_string<char> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmprgxu53uw.cpp:3:\n/tmp/tmprgxu53uw.cpp:15:35: note:   mismatched types ‘const __gnu_cxx::new_allocator<_Tp",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::string text) {\n    std::vector<std::string> new_text;\n    for (size_t i = 0; i < text.size() / 3; ++i) {\n        new_text.push_back(\"< \" + text.substr(i * 3, 3) + \" level=\" + std::to_string(i) + \" >\");\n    }\n    std::string last_item = text.substr(text.size() / 3 * 3);\n    new_text.push_back(\"< \" + last_item + \" level=\" + std::to_string(text.size() / 3) + \" >\");\n    return new_text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"C7\")) == (7));\n}\n\n\n",
        "answer": "(7)"
    },
    {
        "id": 668,
        "res": false,
        "error": "Exception",
        "error_message": "tmpuam85tuf: /tmp/tmpuam85tuf.cpp:9: int main(): Assertion `candidate((\"hellomyfriendear\")) == (\"lemyf\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    return text.substr(text.size() - 1) + text.substr(0, text.size() - 1);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"hellomyfriendear\")) == (\"lemyf\"));\n}\n\n\n",
        "answer": "(\"lemyf\")"
    },
    {
        "id": 669,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp1uavdre1.cpp:4:\n/tmp/tmp1uavdre1.cpp: In function ‘int main()’:\n/tmp/tmp1uavdre1.cpp:24:39: error: ‘imbalanced’ was not declared in this scope\n   24 |     assert(candidate((\"fubarbaz\")) == imbalanced);\n      |                                       ^~~~~~~~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string t) {\n    std::string sep = \"-\";\n    std::size_t pos = t.rfind(sep);\n    if (pos == std::string::npos) {\n        return t;\n    }\n    std::string a = t.substr(0, pos);\n    std::string b = t.substr(pos + 1);\n    if (b.size() == a.size()) {\n        return \"imbalanced\";\n    } else {\n        std::string result = a + b;\n        std::string::iterator end_pos = std::remove(result.begin(), result.end(), '-');\n        result.erase(end_pos, result.end());\n        return result;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"fubarbaz\")) == imbalanced);\n}\n\n\n",
        "answer": "imbalanced"
    },
    {
        "id": 670,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpr9b_szah.cpp:4:\n/tmp/tmpr9b_szah.cpp: In function ‘int main()’:\n/tmp/tmpr9b_szah.cpp:19:131: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   19 |     assert(candidate((std::vector<std::string>({(std::string)\"12\", (std::string)\"ab\"})), (std::vector<long>({(long)2, (long)2}))) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                                 |\n      |                     std::vector<long int>                                                                                             int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpr9b_szah.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpr9b_szah.cpp:4:\n/tmp/tmpr9b_szah.cpp:19:136: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Cont",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<std::string> a, std::vector<long> b) {\n    std::map<std::string, long> d;\n    for(int i = 0; i < a.size(); i++)\n        d[a[i]] = b[i];\n    std::sort(a.begin(), a.end(), [&](std::string x, std::string y) { return d[x] > d[y]; });\n    std::vector<long> result;\n    for(auto& x : a) {\n        result.push_back(d[x]);\n        d.erase(x);\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"12\", (std::string)\"ab\"})), (std::vector<long>({(long)2, (long)2}))) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 671,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpcd5rqjq3.cpp:3:\n/tmp/tmpcd5rqjq3.cpp: In function ‘int main()’:\n/tmp/tmpcd5rqjq3.cpp:19:72: error: ‘ewryyat’ was not declared in this scope\n   19 |     assert(candidate((\"ewriyat emf rwto segya\"), (\"tey\"), (\"dgo\")) == (ewryyat emf rwto segya));\n      |                                                                        ^~~~~~~\n/tmp/tmpcd5rqjq3.cpp:19:80: error: expected ‘)’ before ‘emf’\n   19 |     assert(candidate((\"ewriyat emf rwto segya\"), (\"tey\"), (\"dgo\")) == (ewryyat emf rwto segya));\n      |                                                                       ~        ^~~\n/tmp/tmpcd5rqjq3.cpp:19:96: error: expected ‘)’ before ‘;’ token\n   19 |     assert(candidate((\"ewriyat emf rwto segya\"), (\"tey\"), (\"dgo\")) == (ewryyat emf rwto segya));\n      |                                                                                                ^\n/tmp/tmpcd5rqjq3.cpp:19:96: error: expected ‘)’ before ‘;’ token\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpcd5rqjq3.cpp:3:\n/tmp/tmpcd5rqjq3.cpp:19:5: note: to match this ‘(’\n   19 |     assert(candidate((\"ewriyat emf rwto segya\"), (\"tey\"), (\"dgo\")) == (ewryyat emf rwto segya));\n      |     ^~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string char1, std::string char2) {\n    std::string result = text;\n    std::map<char, char> trans_map;\n    for (int i = 0; i < char1.size(); i++) {\n        trans_map[char1[i]] = char2[i];\n    }\n\n    for (auto& pair : trans_map) {\n        std::replace(result.begin(), result.end(), pair.first, pair.second);\n    }\n\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ewriyat emf rwto segya\"), (\"tey\"), (\"dgo\")) == (ewryyat emf rwto segya));\n}\n\n\n",
        "answer": "(ewryyat emf rwto segya)"
    },
    {
        "id": 672,
        "res": false,
        "error": "Exception",
        "error_message": "tmpy03phri3: /tmp/tmpy03phri3.cpp:15: int main(): Assertion `candidate((\"1zd\"), (0), (\"m\")) == (\"m\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long position, std::string value) {\n    int length = text.size();\n    int index = (position % (length + 2)) - 1;\n    if (index >= length || index < 0) {\n        return text;\n    }\n    text[index] = value[0];\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"1zd\"), (0), (\"m\")) == (\"m\"));\n}\n\n\n",
        "answer": "(\"m\")"
    },
    {
        "id": 673,
        "res": false,
        "error": "Exception",
        "error_message": "tmpgrp3db_9: /tmp/tmpgrp3db_9.cpp:14: int main(): Assertion `candidate((\"cA\")) == (\"cAb\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string string) {\n    if (std::all_of(string.begin(), string.end(), ::isupper)) {\n        std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    } else if (std::all_of(string.begin(), string.end(), ::islower)) {\n        std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    }\n    return string;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"cA\")) == (\"cAb\"));\n}\n\n\n",
        "answer": "(\"cAb\")"
    },
    {
        "id": 674,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp8tytyf9_.cpp:3:\n/tmp/tmp8tytyf9_.cpp: In function ‘int main()’:\n/tmp/tmp8tytyf9_.cpp:16:30: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   16 |     assert(candidate((\"qq\")) == (3));\n      |            ~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |            |\n      |                     |            int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp8tytyf9_.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp8tytyf9_.cpp:3:\n/tmp/tmp8tytyf9_.cpp:16:35: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   16 |     assert(candidate((\"qq\")) == (3));\n      |                                   ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::vector<char> ls(text.begin(), text.end());\n    for(int x = ls.size() - 1; x >= 0; x--) {\n        if(ls.size() <= 1) break;\n        if(std::find(\"zyxwvutsrqponmlkjihgfedcba\", \"zyxwvutsrqponmlkjihgfedcba\" + 26, ls[x]) == \"zyxwvutsrqponmlkjihgfedcba\" + 26) {\n            ls.erase(ls.begin() + x);\n        }\n    }\n    return std::string(ls.begin(), ls.end());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"qq\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 675,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpg2jkcpxg.cpp:3:\n/tmp/tmpg2jkcpxg.cpp: In function ‘int main()’:\n/tmp/tmpg2jkcpxg.cpp:10:104: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   10 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)2, (long)3, (long)4, (long)5})), (1)) == (1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                      |\n      |                     std::vector<long int>                                                                  int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpg2jkcpxg.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpg2jkcpxg.cpp:3:\n/tmp/tmpg2jkcpxg.cpp:10:109: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   10 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)2, (long)3, (long)4, (lon",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums, long sort_count) {\n    std::sort(nums.begin(), nums.end());\n    return std::vector<long>(nums.begin(), nums.begin() + sort_count);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)2, (long)3, (long)4, (long)5})), (1)) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 676,
        "res": false,
        "error": "Exception",
        "error_message": "tmpulwmriwj: /tmp/tmpulwmriwj.cpp:15: int main(): Assertion `candidate((\"a\"), (100)) == (\"a\\ta\\t\\ta\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long tab_size) {\n    size_t pos = text.find('\\t');\n    while (pos != std::string::npos) {\n        text.replace(pos, 1, std::string(tab_size, ' '));\n        pos = text.find('\\t', pos + tab_size);\n    }\n    \n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"a\"), (100)) == (\"a\\ta\\t\\ta\"));\n}\n\n\n",
        "answer": "(\"a\\ta\\t\\ta\")"
    },
    {
        "id": 677,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpk9r7c9en.cpp:3:\n/tmp/tmpk9r7c9en.cpp: In function ‘int main()’:\n/tmp/tmpk9r7c9en.cpp:18:47: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   18 |     assert(candidate((\"I got 1 and 0.\"), (5)) == (1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                             |\n      |                     |                             int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpk9r7c9en.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpk9r7c9en.cpp:3:\n/tmp/tmpk9r7c9en.cpp:18:52: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   18 |     assert(candidate((\"I got 1 and 0.\"), (5)) == (1));\n      |                                                    ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long length) {\n    length = length < 0 ? -length : length;\n    std::string output = \"\";\n    for (int idx = 0; idx < length; idx++) {\n        if (text[idx % text.length()] != ' ') {\n            output += text[idx % text.length()];\n        } else {\n            break;\n        }\n    }\n    return output;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"I got 1 and 0.\"), (5)) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 678,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpxs423qft.cpp:3:\n/tmp/tmpxs423qft.cpp: In function ‘int main()’:\n/tmp/tmpxs423qft.cpp:20:30: error: no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, long int>’ and ‘int’)\n   20 |     assert(candidate((\"HI\")) == (1));\n      |            ~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |            |\n      |                     |            int\n      |                     std::map<std::__cxx11::basic_string<char>, long int>\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpxs423qft.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::pair<const std::__cxx11::basic_string<char>, long int> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpxs423qft.cpp:3:\n/tmp/tmpxs423qft.cpp:20:35: note:   mismatched type",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,long> f(std::string text) {\n    std::map<std::string, long> freq;\n    for(char c : text) {\n        if(isalpha(c)) {\n            std::string key(1, std::tolower(c));\n            if(freq.find(key) != freq.end()) {\n                freq[key]++;\n            } else {\n                freq[key] = 1;\n            }\n        }\n    }\n    return freq;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"HI\")) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 679,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text) {\n    if (text.empty()) {\n        return false;\n    }\n    char first_char = text[0];\n    if (isdigit(text[0])) {\n        return false;\n    }\n    for (char last_char : text) {\n        if ((last_char != '_') && !isalpha(last_char) && !isdigit(last_char)) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"meet\")) == (true));\n}\n\n\n",
        "answer": "(true)"
    },
    {
        "id": 680,
        "res": false,
        "error": "Exception",
        "error_message": "tmp9thovap5: /tmp/tmp9thovap5.cpp:15: int main(): Assertion `candidate((\"we@32r71g72ug94=(823658*!@324\")) == (\"welcome\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string letters = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (std::isalnum(text[i])) {\n            letters += text[i];\n        }\n    }\n    return letters;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"we@32r71g72ug94=(823658*!@324\")) == (\"welcome\"));\n}\n\n\n",
        "answer": "(\"welcome\")"
    },
    {
        "id": 681,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpmfnusuad.cpp:3:\n/tmp/tmpmfnusuad.cpp: In function ‘int main()’:\n/tmp/tmpmfnusuad.cpp:19:109: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   19 |     assert(candidate((std::vector<long>({(long)1, (long)5, (long)8, (long)2, (long)0, (long)3})), (2), (7)) == (5, 7, 8, 2, 0, 3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~\n      |                     |                                                                                                        |\n      |                     std::vector<long int>                                                                                    int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpmfnusuad.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpmfnusuad.cpp:3:\n/tmp/tmpmfnusuad.cpp:19:129: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   19 |     assert(can",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> array, long ind, long elem) {\n    if (ind < 0) {\n        array.insert(array.begin() - 5, elem);\n    }\n    else if (ind > array.size()) {\n        array.insert(array.end(), elem);\n    }\n    else {\n        array.insert(array.begin() + ind + 1, elem);\n    }\n\n    return array;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)5, (long)8, (long)2, (long)0, (long)3})), (2), (7)) == (5, 7, 8, 2, 0, 3));\n}\n\n\n",
        "answer": "(5, 7, 8, 2, 0, 3)"
    },
    {
        "id": 682,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpdk1tfwnt.cpp:4:\n/tmp/tmpdk1tfwnt.cpp: In function ‘int main()’:\n/tmp/tmpdk1tfwnt.cpp:24:53: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   24 |     assert(candidate((\"hypernimovichyp\"), (2), (2)) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                   |\n      |                     std::__cxx11::basic_string<char>    int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpdk1tfwnt.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpdk1tfwnt.cpp:4:\n/tmp/tmpdk1tfwnt.cpp:24:58: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   24 |     assert(candidate((\"hypernimovichyp\"), (2), (2)) == (2));\n      |                                                          ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 fr",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long length, long index) {\n    std::stringstream ss(text);\n    std::string word;\n    std::vector<std::string> words;\n    while (std::getline(ss, word, ' ')) {\n        words.push_back(word);\n    }\n    std::reverse(words.begin(), words.end());\n    std::string result;\n    for (int i = 0; i < index && i < words.size(); ++i) {\n        result += words[i].substr(0, length);\n        if (i < index - 1 && i < words.size() - 1) {\n            result += \"_\";\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"hypernimovichyp\"), (2), (2)) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 683,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp0dnw_7oc.cpp:3:\n/tmp/tmp0dnw_7oc.cpp: In function ‘int main()’:\n/tmp/tmp0dnw_7oc.cpp:13:129: error: no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, long int>’ and ‘int’)\n   13 |     assert(candidate((std::map<std::string,long>({{\"disface\", 9}, {\"cam\", 7}})), (std::map<std::string,long>({{\"mforce\", 5}}))) == (9));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                               |\n      |                     std::map<std::__cxx11::basic_string<char>, long int>                                                            int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmp0dnw_7oc.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::pair<const std::__cxx11::basic_string<char>, long int> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,long> f(std::map<std::string,long> dict1, std::map<std::string,long> dict2) {\n    std::map<std::string, long> result = dict1;\n    for (const auto& pair : dict2) {\n        result[pair.first] = pair.second;\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>({{\"disface\", 9}, {\"cam\", 7}})), (std::map<std::string,long>({{\"mforce\", 5}}))) == (9));\n}\n\n\n",
        "answer": "(9)"
    },
    {
        "id": 684,
        "res": 0
    },
    {
        "id": 685,
        "res": false,
        "error": "Exception",
        "error_message": "tmp2grvf8c4: /tmp/tmp2grvf8c4.cpp:9: int main(): Assertion `candidate((std::vector<long>({(long)1, (long)1, (long)1})), (-2)) == (0)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> array, long elem) {\n    return std::count(array.begin(), array.end(), elem) + elem;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)1})), (-2)) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 686,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp2kx16l4z.cpp:3:\n/tmp/tmp2kx16l4z.cpp: In function ‘int main()’:\n/tmp/tmp2kx16l4z.cpp:17:170: error: no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, long int>’ and ‘int’)\n   17 |     assert(candidate((std::map<std::string,long>({{\"lorem ipsum\", 12}, {\"dolor\", 23}})), (std::vector<std::string>({(std::string)\"lorem ipsum\", (std::string)\"dolor\"}))) == (12));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                                                                                        |\n      |                     std::map<std::__cxx11::basic_string<char>, long int>                                                                                                     int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmp2kx16l4z.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::pair<const std::__cxx11::basic_string<char>, long i",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,long> f(std::map<std::string,long> d, std::vector<std::string> l) {\n    std::map<std::string, long> new_d;\n\n    for (const std::string& k : l) {\n        if (d.find(k) != d.end()) {\n            new_d[k] = d[k];\n        }\n    }\n\n    return new_d;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>({{\"lorem ipsum\", 12}, {\"dolor\", 23}})), (std::vector<std::string>({(std::string)\"lorem ipsum\", (std::string)\"dolor\"}))) == (12));\n}\n\n\n",
        "answer": "(12)"
    },
    {
        "id": 687,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpddqsb5o_.cpp:4:\n/tmp/tmpddqsb5o_.cpp: In function ‘int main()’:\n/tmp/tmpddqsb5o_.cpp:19:42: error: expected primary-expression before ‘:’ token\n   19 |     assert(candidate((\"Rjug nzufE\")) == (:));\n      |                                          ^\n/tmp/tmpddqsb5o_.cpp:19:42: error: expected ‘)’ before ‘:’ token\n   19 |     assert(candidate((\"Rjug nzufE\")) == (:));\n      |                                         ~^\n/tmp/tmpddqsb5o_.cpp:19:45: error: expected ‘)’ before ‘;’ token\n   19 |     assert(candidate((\"Rjug nzufE\")) == (:));\n      |                                             ^\n/tmp/tmpddqsb5o_.cpp:19:45: error: expected ‘)’ before ‘;’ token\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpddqsb5o_.cpp:4:\n/tmp/tmpddqsb5o_.cpp:19:5: note: to match this ‘(’\n   19 |     assert(candidate((\"Rjug nzufE\")) == (:));\n      |     ^~~~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::vector<char> t(text.begin(), text.end());\n    t.erase(t.begin() + t.size() / 2);\n    std::transform(text.begin(), text.end(), text.begin(), ::tolower);\n    std::string result;\n    for(char c : t) {\n        result += c;\n        result += \":\";\n    }\n    result += text;\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Rjug nzufE\")) == (:));\n}\n\n\n",
        "answer": "(:)"
    },
    {
        "id": 688,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpa1zuqk1v.cpp:3:\n/tmp/tmpa1zuqk1v.cpp: In function ‘int main()’:\n/tmp/tmpa1zuqk1v.cpp:15:114: error: expected ‘)’ before numeric constant\n   15 |     assert(candidate((std::vector<long>({(long)3, (long)1, (long)9, (long)0, (long)2, (long)0, (long)8}))) == (3 1 9 0 2 0 8));\n      |                                                                                                               ~  ^\n/tmp/tmpa1zuqk1v.cpp:15:108: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   15 |     assert(candidate((std::vector<long>({(long)3, (long)1, (long)9, (long)0, (long)2, (long)0, (long)8}))) == (3 1 9 0 2 0 8));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                          |\n      |                     std::vector<long int>                                                                      int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpa1zuqk1v.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n      ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    std::vector<long> l;\n    for (long i : nums) {\n        if (std::find(l.begin(), l.end(), i) == l.end()) {\n            l.push_back(i);\n        }\n    }\n    return l;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)9, (long)0, (long)2, (long)0, (long)8}))) == (3 1 9 0 2 0 8));\n}\n\n\n",
        "answer": "(3 1 9 0 2 0 8)"
    },
    {
        "id": 689,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpntcbaidp.cpp:3:\n/tmp/tmpntcbaidp.cpp: In function ‘int main()’:\n/tmp/tmpntcbaidp.cpp:14:83: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   14 |     assert(candidate((std::vector<long>({(long)-3, (long)-6, (long)2, (long)7}))) == (15));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                 |\n      |                     std::vector<long int>                                             int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpntcbaidp.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpntcbaidp.cpp:3:\n/tmp/tmpntcbaidp.cpp:14:89: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((std::vector<long>({(long)-3, (long)-6, (long)2, (long)7}))) == (15));\n      |                                                                           ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> arr) {\n    int count = arr.size();\n    std::vector<long> sub = arr;\n    for (int i = 0; i < count; i += 2) {\n        sub[i] *= 5;\n    }\n    return sub;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)-3, (long)-6, (long)2, (long)7}))) == (15));\n}\n\n\n",
        "answer": "(15)"
    },
    {
        "id": 690,
        "res": false,
        "error": "Exception",
        "error_message": "tmpfuu6li92: /tmp/tmpfuu6li92.cpp:12: int main(): Assertion `candidate((\"800\")) == (\"811\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string n) {\n    if (n.find('.') != std::string::npos) {\n        return std::to_string(std::stoi(n) + 2.5);\n    }\n    return n;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"800\")) == (\"811\"));\n}\n\n\n",
        "answer": "(\"811\")"
    },
    {
        "id": 691,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp2l3l3p1a.cpp:4:\n/tmp/tmp2l3l3p1a.cpp: In function ‘int main()’:\n/tmp/tmp2l3l3p1a.cpp:19:47: error: ‘rpyttc’ was not declared in this scope\n   19 |     assert(candidate((\"rpyttc\"), (\"cyt\")) == (rpyttc));\n      |                                               ^~~~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string suffix) {\n    if (!suffix.empty() && std::find(text.rbegin(), text.rend(), suffix.back()) != text.rend()) {\n        char last_char = suffix.back();\n        while (!text.empty() && text.back() == last_char) {\n            text.pop_back();\n        }\n        suffix.pop_back();\n        return f(text, suffix);\n    } else {\n        return text;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"rpyttc\"), (\"cyt\")) == (rpyttc));\n}\n\n\n",
        "answer": "(rpyttc)"
    },
    {
        "id": 692,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp51s4wli4.cpp:3:\n/tmp/tmp51s4wli4.cpp: In function ‘int main()’:\n/tmp/tmp51s4wli4.cpp:17:49: error: expected primary-expression before ‘)’ token\n   17 |     assert(candidate((std::vector<long>())) == ());\n      |                                                 ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> array) {\n    std::vector<long> a;\n    std::reverse(array.begin(), array.end());\n    for (int i = 0; i < array.size(); i++) {\n        if (array[i] != 0) {\n            a.push_back(array[i]);\n        }\n    }\n    std::reverse(a.begin(), a.end());\n    return a;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>())) == ());\n}\n\n\n",
        "answer": "()"
    },
    {
        "id": 693,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpi0sshrkc.cpp:3:\n/tmp/tmpi0sshrkc.cpp: In function ‘int main()’:\n/tmp/tmpi0sshrkc.cpp:18:56: error: unable to find numeric literal operator ‘operator\"\"d832d83r’\n   18 |     assert(candidate((\"sa832d83r xd 8g 26a81xdf\")) == (832d832d83r xd 8g 26a81xdf));\n      |                                                        ^~~~~~~~~~~\n/tmp/tmpi0sshrkc.cpp:18:56: note: use ‘-fext-numeric-literals’ to enable more built-in suffixes\n/tmp/tmpi0sshrkc.cpp:18:68: error: expected ‘)’ before ‘xd’\n   18 |     assert(candidate((\"sa832d83r xd 8g 26a81xdf\")) == (832d832d83r xd 8g 26a81xdf));\n      |                                                       ~            ^~\n/tmp/tmpi0sshrkc.cpp:18:84: error: expected ‘)’ before ‘;’ token\n   18 |     assert(candidate((\"sa832d83r xd 8g 26a81xdf\")) == (832d832d83r xd 8g 26a81xdf));\n      |                                                                                    ^\n/tmp/tmpi0sshrkc.cpp:18:84: error: expected ‘)’ before ‘;’ token\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpi0sshrkc.cpp:3:\n/tmp/tmpi0sshrkc.cpp:18:5: note: to match this ‘(’\n   18 |     assert(candidate((\"sa832d83r xd 8g 26a81xdf\")) == (832d832d83r xd 8g 26a81xdf));\n      |     ^~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\n\nstd::string f(std::string text) {\n    size_t n = text.find('8');\n    if (n == std::string::npos) {\n        return \"\";\n    }\n    std::string result;\n    for (size_t i = 0; i < n; ++i) {\n        result += \"x0\";\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"sa832d83r xd 8g 26a81xdf\")) == (832d832d83r xd 8g 26a81xdf));\n}\n\n\n",
        "answer": "(832d832d83r xd 8g 26a81xdf)"
    },
    {
        "id": 694,
        "res": 0
    },
    {
        "id": 695,
        "res": 0
    },
    {
        "id": 696,
        "res": false,
        "error": "Exception",
        "error_message": "tmphnr32o5a: /tmp/tmphnr32o5a.cpp:13: int main(): Assertion `candidate((\"wdj\")) == (0)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    int s = 0;\n    for (int i = 1; i < text.length(); i++) {\n        s += text.rfind(text[i]);\n    }\n    return s;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"wdj\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 697,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpu6jgtm9p.cpp:4:\n/tmp/tmpu6jgtm9p.cpp: In function ‘int main()’:\n/tmp/tmpu6jgtm9p.cpp:14:40: error: no match for ‘operator==’ (operand types are ‘std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >’ and ‘const char [1]’)\n   14 |     assert(candidate((\"not it\"), (\"\")) == (\"not it\", \"\", \"\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~\n      |                     |                                  |\n      |                     |                                  const char [1]\n      |                     std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpu6jgtm9p.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::tuple<std::string, std::string, std::string> f(std::string s, std::string sep) {\n    int sep_index = s.find(sep);\n    std::string prefix = s.substr(0, sep_index);\n    std::string middle = s.substr(sep_index, sep.length());\n    std::string right_str = s.substr(sep_index + sep.length());\n    return std::make_tuple(prefix, middle, right_str);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"not it\"), (\"\")) == (\"not it\", \"\", \"\"));\n}\n\n\n",
        "answer": "(\"not it\", \"\", \"\")"
    },
    {
        "id": 698,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpscx_g6l2.cpp:3:\n/tmp/tmpscx_g6l2.cpp: In function ‘int main()’:\n/tmp/tmpscx_g6l2.cpp:15:64: error: expected primary-expression before ‘)’ token\n   15 |     assert(candidate((\"(((((((((((d))))))))).))))(((((\")) == (()));\n      |                                                                ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string result;\n    for (char x : text) {\n        if (x != ')') {\n            result += x;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"(((((((((((d))))))))).))))(((((\")) == (()));\n}\n\n\n",
        "answer": "(())"
    },
    {
        "id": 699,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp7gdqe90r.cpp:3:\n/tmp/tmp7gdqe90r.cpp: In function ‘int main()’:\n/tmp/tmp7gdqe90r.cpp:17:39: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)\n   17 |     assert(candidate((\"some\"), (\"1\")) == (\"1\"));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~\n      |                     |                     |\n      |                     |                     const char [2]\n      |                     std::vector<std::__cxx11::basic_string<char> >\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmp7gdqe90r.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::__cxx11::basic_string<char> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp7gdqe90r.cpp:3:\n/tmp/tmp7gdqe90r.cpp:17:46: ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::string text, std::string elem) {\n    if (elem != \"\") {\n        while (text.find(elem) == 0) {\n            text = text.replace(text.find(elem), elem.length(), \"\");\n        }\n        while (elem.find(text) == 0) {\n            elem = elem.replace(elem.find(text), text.length(), \"\");\n        }\n    }\n    return {elem, text};\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"some\"), (\"1\")) == (\"1\"));\n}\n\n\n",
        "answer": "(\"1\")"
    },
    {
        "id": 700,
        "res": false,
        "error": "Exception",
        "error_message": "tmpkn5rqk0m: /tmp/tmpkn5rqk0m.cpp:13: int main(): Assertion `candidate((\"Where is the bot in this world?\")) == (3)' failed.\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    std::string needle = \"bot\";\n    long count = 0;\n    for (size_t off = 0; (off = text.find(needle, off)) != std::string::npos; ++count, ++off);\n    return text.length() - count;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Where is the bot in this world?\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 701,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmppbktwi5f.cpp:4:\n/tmp/tmppbktwi5f.cpp: In function ‘int main()’:\n/tmp/tmppbktwi5f.cpp:13:226: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   13 |     assert(candidate((\"31849 let it!31849 pass!\"), (std::vector<std::string>({(std::string)\"3\", (std::string)\"1\", (std::string)\"8\", (std::string)\" \", (std::string)\"1\", (std::string)\"9\", (std::string)\"2\", (std::string)\"d\"}))) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                                                                                                                                |\n      |                     std::__cxx11::basic_string<char>                                                                                                                                                                                 int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmppbktwi5f.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_it",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string stg, std::vector<std::string> tabs) {\n    for (std::string tab : tabs) {\n        stg.erase(stg.find_last_not_of(tab) + 1);\n    }\n    return stg;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"31849 let it!31849 pass!\"), (std::vector<std::string>({(std::string)\"3\", (std::string)\"1\", (std::string)\"8\", (std::string)\" \", (std::string)\"1\", (std::string)\"9\", (std::string)\"2\", (std::string)\"d\"}))) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 702,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpovv4vjkk.cpp:4:\n/tmp/tmpovv4vjkk.cpp: In function ‘int main()’:\n/tmp/tmpovv4vjkk.cpp:16:74: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   16 |     assert(candidate((std::vector<long>({(long)0, (long)-5, (long)-4}))) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                        |\n      |                     std::vector<long int>                                    int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpovv4vjkk.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpovv4vjkk.cpp:4:\n/tmp/tmpovv4vjkk.cpp:16:79: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   16 |     assert(candidate((std::vector<long>({(long)0, (long)-5, (long)-4}))) == (0));\n      |                                                                               ^\nIn file included from /usr/include/c++/11/",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    int count = nums.size();\n    for (int i = count - 1; i >= 0; --i) {\n        long value = nums[0];\n        nums.erase(nums.begin());\n        nums.insert(nums.begin() + i, value);\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)0, (long)-5, (long)-4}))) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 703,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpvwmuuyo9.cpp:4:\n/tmp/tmpvwmuuyo9.cpp: In function ‘int main()’:\n/tmp/tmpvwmuuyo9.cpp:17:42: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   17 |     assert(candidate((\"vzzv2sg\"), (\"z\")) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                        |\n      |                     |                        int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpvwmuuyo9.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpvwmuuyo9.cpp:4:\n/tmp/tmpvwmuuyo9.cpp:17:47: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   17 |     assert(candidate((\"vzzv2sg\"), (\"z\")) == (2));\n      |                                               ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /u",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string character) {\n    int count = 0;\n    std::string double_char = character + character;\n    std::string::size_type pos = 0;\n    while ((pos = text.find(double_char, pos)) != std::string::npos) {\n        ++count;\n        pos += double_char.size();\n    }\n    return text.substr(count);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"vzzv2sg\"), (\"z\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 704,
        "res": false,
        "error": "Exception",
        "error_message": "tmpcxoi8xkx: /tmp/tmpcxoi8xkx.cpp:13: int main(): Assertion `candidate((\".\"), (0), (\"99\")) == (\"99\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s, long n, std::string c) {\n    long width = c.length() * n;\n    while (s.length() < width) {\n        s = c + s;\n    }\n    return s;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\".\"), (0), (\"99\")) == (\"99\"));\n}\n\n\n",
        "answer": "(\"99\")"
    },
    {
        "id": 705,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpl30chrl1.cpp:3:\n/tmp/tmpl30chrl1.cpp: In function ‘int main()’:\n/tmp/tmpl30chrl1.cpp:19:217: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘int’)\n   19 |     assert(candidate((std::vector<std::string>({(std::string)\"Sydney\", (std::string)\"Hong Kong\", (std::string)\"Melbourne\", (std::string)\"Sao Paolo\", (std::string)\"Istanbul\", (std::string)\"Boston\"})), (\"Somewhere \")) == (5));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                                                                                                                       |\n      |                     std::vector<std::__cxx11::basic_string<char> >                                                                                                                                                          int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpl30chrl1.cpp:3:\n/usr/include/c++/11/e",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::vector<std::string> cities, std::string name) {\n    if (name.empty()) {\n        return cities;\n    } else if (!name.empty() && name != \"cities\") {\n        return std::vector<std::string>();\n    } else {\n        std::vector<std::string> result;\n        for (const auto& city : cities) {\n            result.push_back(name + city);\n        }\n        return result;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"Sydney\", (std::string)\"Hong Kong\", (std::string)\"Melbourne\", (std::string)\"Sao Paolo\", (std::string)\"Istanbul\", (std::string)\"Boston\"})), (\"Somewhere \")) == (5));\n}\n\n\n",
        "answer": "(5)"
    },
    {
        "id": 706,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp588puuft.cpp:3:\n/tmp/tmp588puuft.cpp: In function ‘int main()’:\n/tmp/tmp588puuft.cpp:17:42: error: ‘ab’ was not declared in this scope; did you mean ‘abs’?\n   17 |     assert(candidate((\"ab\"), (\"xy\")) == (ab, xy));\n      |                                          ^~\n/tmp/tmp588puuft.cpp:17:46: error: ‘xy’ was not declared in this scope\n   17 |     assert(candidate((\"ab\"), (\"xy\")) == (ab, xy));\n      |                                              ^~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::string r, std::string w) {\n    std::vector<std::string> a;\n    if (r[0] == w[0] && w[w.size()-1] == r[r.size()-1]) {\n        a.push_back(r);\n        a.push_back(w);\n    } else {\n        a.push_back(w);\n        a.push_back(r);\n    }\n    return a;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ab\"), (\"xy\")) == (ab, xy));\n}\n\n\n",
        "answer": "(ab, xy)"
    },
    {
        "id": 707,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpx0c59x44.cpp:3:\n/tmp/tmpx0c59x44.cpp: In function ‘int main()’:\n/tmp/tmpx0c59x44.cpp:16:44: error: ‘undbs’ was not declared in this scope\n   16 |     assert(candidate((\"undbs l\"), (1)) == (undbs l));\n      |                                            ^~~~~\n/tmp/tmpx0c59x44.cpp:16:50: error: expected ‘)’ before ‘l’\n   16 |     assert(candidate((\"undbs l\"), (1)) == (undbs l));\n      |                                           ~      ^\n/tmp/tmpx0c59x44.cpp:16:53: error: expected ‘)’ before ‘;’ token\n   16 |     assert(candidate((\"undbs l\"), (1)) == (undbs l));\n      |                                                     ^\n/tmp/tmpx0c59x44.cpp:16:53: error: expected ‘)’ before ‘;’ token\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpx0c59x44.cpp:3:\n/tmp/tmpx0c59x44.cpp:16:5: note: to match this ‘(’\n   16 |     assert(candidate((\"undbs l\"), (1)) == (undbs l));\n      |     ^~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long position) {\n    size_t length = text.length();\n    int index = position % (length + 1);\n    if (position < 0 || index < 0) {\n        index = -1;\n    }\n    std::vector<char> new_text(text.begin(), text.end());\n    new_text.erase(new_text.begin() + index);\n    return std::string(new_text.begin(), new_text.end());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"undbs l\"), (1)) == (undbs l));\n}\n\n\n",
        "answer": "(undbs l)"
    },
    {
        "id": 708,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpclwwcyqa.cpp:3:\n/tmp/tmpclwwcyqa.cpp: In function ‘int main()’:\n/tmp/tmpclwwcyqa.cpp:16:58: error: expected primary-expression before ‘(’ token\n   16 |     assert(candidate((\"    jcmfxv     \")) == (std::string(18,)));\n      |                                                          ^\n/tmp/tmpclwwcyqa.cpp:16:62: error: expected primary-expression before ‘)’ token\n   16 |     assert(candidate((\"    jcmfxv     \")) == (std::string(18,)));\n      |                                                              ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string string) {\n    std::vector<char> l(string.begin(), string.end());\n    for (int i = l.size() - 1; i >= 0; i--) {\n        if (l[i] != ' ') {\n            break;\n        }\n        l.pop_back();\n    }\n    return std::string(l.begin(), l.end());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"    jcmfxv     \")) == (std::string(18,)));\n}\n\n\n",
        "answer": "(std::string(18,))"
    },
    {
        "id": 709,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpjtfsehy4.cpp:3:\n/tmp/tmpjtfsehy4.cpp: In function ‘int main()’:\n/tmp/tmpjtfsehy4.cpp:18:39: error: ‘loved’ was not declared in this scope\n   18 |     assert(candidate((\"a loved\")) == (loved));\n      |                                       ^~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::istringstream iss(text);\n    std::vector<std::string> my_list;\n    std::string word;\n    while(iss >> word) {\n        my_list.push_back(word);\n    }\n    std::sort(my_list.rbegin(), my_list.rend());\n    return std::accumulate(my_list.begin(), my_list.end(), std::string(\"\"), [](const std::string& a, const std::string& b) {\n        return a + (a.length() > 0 ? \" \" : \"\") + b;\n    });\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"a loved\")) == (loved));\n}\n\n\n",
        "answer": "(loved)"
    },
    {
        "id": 710,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmput5f_133.cpp:3:\n/tmp/tmput5f_133.cpp: In function ‘int main()’:\n/tmp/tmput5f_133.cpp:10:163: error: no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >’ and ‘std::vector<std::__cxx11::basic_string<char> >’)\n   10 |     assert(candidate((std::map<std::string,std::vector<std::string>>({{\"aki\", std::vector<std::string>({(std::string)\"1\", (std::string)\"5\"})}})), (\"aki\"), (\"2\")) == (std::vector<std::string> {\"1\", \"5\"}));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                                                                                                                                      |\n      |                     std::map<std::__cxx11::basic_string<char>, std::vector<std::__cxx11::basic_string<char> > >                                                            std::vector<std::__cxx11::basic_string<char> >\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmput5f_133.cpp:3:\n/usr/include/c++/11/ext/new_",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,std::vector<std::string>> f(std::map<std::string,std::vector<std::string>> playlist, std::string liker_name, std::string song_index) {\n    playlist[liker_name].push_back(song_index);\n    return playlist;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,std::vector<std::string>>({{\"aki\", std::vector<std::string>({(std::string)\"1\", (std::string)\"5\"})}})), (\"aki\"), (\"2\")) == (std::vector<std::string> {\"1\", \"5\"}));\n}\n\n\n",
        "answer": "(std::vector<std::string> {\"1\", \"5\"})"
    },
    {
        "id": 711,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpjyybwsi1.cpp:10:66: warning: missing terminating \" character\n   10 |     assert(candidate((\"apples\\n \\npears\\n       \\nbananas\")) == (\"apples\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t);\n      |                                                                  ^\n/tmp/tmpjyybwsi1.cpp:13:1: error: unterminated argument list invoking macro \"assert\"\n   13 | \n      | ^\n/tmp/tmpjyybwsi1.cpp: In function ‘int main()’:\n/tmp/tmpjyybwsi1.cpp:10:5: error: ‘assert’ was not declared in this scope\n   10 |     assert(candidate((\"apples\\n \\npears\\n       \\nbananas\")) == (\"apples\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t);\n      |     ^~~~~~\n/tmp/tmpjyybwsi1.cpp:4:1: note: ‘assert’ is defined in header ‘<cassert>’; did you forget to ‘#include <cassert>’?\n    3 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    4 | std::string f(std::string text) {\n/tmp/tmpjyybwsi1.cpp:10:11: error: expected ‘}’ at end of input\n   10 |     assert(candidate((\"apples\\n \\npears\\n       \\nbananas\")) == (\"apples\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::replace(text.begin(), text.end(), '\\n', '\\t');\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"apples\\n\t\\npears\\n\t\\nbananas\")) == (\"apples\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t);\n}\n\n\n",
        "answer": "(\"apples\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t"
    },
    {
        "id": 712,
        "res": 0
    },
    {
        "id": 713,
        "res": true,
        "code": "\n#include <assert.h>\n#include <bits/stdc++.h>\nbool f(std::string text, std::string delimiter) {\n    if (text.find(delimiter) != std::string::npos) {\n        std::vector<std::string> tokens;\n        std::istringstream iss(text);\n        std::string token;\n        while (std::getline(iss, token, delimiter[0])) {\n            if (!token.empty()) {\n                tokens.push_back(token);\n            }\n        }\n        if (tokens.size() > 1) {\n            return true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"only one line\"), (\" \")) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 714,
        "res": 0
    },
    {
        "id": 715,
        "res": false,
        "error": "Exception",
        "error_message": "tmpxow85ipp: /tmp/tmpxow85ipp.cpp:9: int main(): Assertion `candidate((\"abababac\"), (\"a\")) == (2)' failed.\n",
        "code": "\n#include <assert.h>\n#include <bits/stdc++.h>\nbool f(std::string text, std::string character) {\n    return std::count(text.begin(), text.end(), character[0]) % 2 != 0;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"abababac\"), (\"a\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 716,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp6cjrgah8.cpp:3:\n/tmp/tmp6cjrgah8.cpp: In function ‘int main()’:\n/tmp/tmp6cjrgah8.cpp:13:117: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   13 |     assert(candidate((std::vector<long>({(long)2, (long)1, (long)2, (long)3, (long)1, (long)6, (long)3, (long)8}))) == (6, 3, 8));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~\n      |                     |                                                                                                       |\n      |                     std::vector<long int>                                                                                   int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp6cjrgah8.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp6cjrgah8.cpp:3:\n/tmp/tmp6cjrgah8.cpp:13:128: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   13 |     assert(candida",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    int count = nums.size();\n    while(nums.size() > (count / 2)) {\n        nums.clear();\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)2, (long)1, (long)2, (long)3, (long)1, (long)6, (long)3, (long)8}))) == (6, 3, 8));\n}\n\n\n",
        "answer": "(6, 3, 8)"
    },
    {
        "id": 717,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpqs1kwd2j.cpp:3:\n/tmp/tmpqs1kwd2j.cpp: In function ‘int main()’:\n/tmp/tmpqs1kwd2j.cpp:20:43: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   20 |     assert(candidate((\"timetable, 2mil\")) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                         |\n      |                     |                         int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpqs1kwd2j.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpqs1kwd2j.cpp:3:\n/tmp/tmpqs1kwd2j.cpp:20:48: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   20 |     assert(candidate((\"timetable, 2mil\")) == (2));\n      |                                                ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 f",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    int k = 0, l = text.length() - 1;\n    while (!isalpha(text[l])) {\n        l--;\n    }\n    while (!isalpha(text[k])) {\n        k++;\n    }\n    if (k != 0 || l != text.length() - 1) {\n        return text.substr(k, l - k + 1);\n    } else {\n        return text.substr(0, 1);\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"timetable, 2mil\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 718,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpdoihg2iv.cpp:4:\n/tmp/tmpdoihg2iv.cpp: In function ‘int main()’:\n/tmp/tmpdoihg2iv.cpp:15:45: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   15 |     assert(candidate((\"ThisIsSoAtrocious\")) == (8));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                           |\n      |                     |                           int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpdoihg2iv.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpdoihg2iv.cpp:4:\n/tmp/tmpdoihg2iv.cpp:15:50: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   15 |     assert(candidate((\"ThisIsSoAtrocious\")) == (8));\n      |                                                  ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n      ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\n\nstd::string f(std::string text) {\n    std::string t = text;\n    for (char i : text) {\n        t.erase(std::remove(t.begin(), t.end(), i), t.end());\n    }\n    return std::to_string(t.size()) + text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ThisIsSoAtrocious\")) == (8));\n}\n\n\n",
        "answer": "(8)"
    },
    {
        "id": 719,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmprju2hldf.cpp:4:\n/tmp/tmprju2hldf.cpp: In function ‘int main()’:\n/tmp/tmprju2hldf.cpp:21:57: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   21 |     assert(candidate((\"if (x) {y = 1;} else {z = 1;}\")) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                       |\n      |                     std::__cxx11::basic_string<char>        int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmprju2hldf.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmprju2hldf.cpp:4:\n/tmp/tmprju2hldf.cpp:21:62: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   21 |     assert(candidate((\"if (x) {y = 1;} else {z = 1;}\")) == (2));\n      |                                                              ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string code) {\n    std::stringstream ss(code);\n    std::string line;\n    std::vector<std::string> result;\n    int level = 0;\n    while (std::getline(ss, line, ']')) {\n        level += std::count(line.begin(), line.end(), '{') - std::count(line.begin(), line.end(), '}');\n        result.push_back(line.substr(0, 1) + \" \" + std::string(2 * level, ' ') + line.substr(1));\n    }\n    return std::accumulate(result.begin(), result.end(), std::string(),\n                           [](const std::string& a, const std::string& b) -> std::string {\n                               return a + (a.empty() ? \"\" : \"\\n\") + b;\n                           });\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"if (x) {y = 1;} else {z = 1;}\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 720,
        "res": false,
        "error": "Exception",
        "error_message": "tmppfy7hqj3: /tmp/tmppfy7hqj3.cpp:14: int main(): Assertion `candidate((std::vector<std::string>({(std::string)\"bfreratrrbdbzagbretaredtroefcoiqrrneaosf\"})), (\"n\")) == (7)' failed.\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<std::string> items, std::string item) {\n    while (items.back() == item) {\n        items.pop_back();\n    }\n    items.push_back(item);\n    return items.size();\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"bfreratrrbdbzagbretaredtroefcoiqrrneaosf\"})), (\"n\")) == (7));\n}\n\n\n",
        "answer": "(7)"
    },
    {
        "id": 721,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpryhl1m04.cpp:3:\n/tmp/tmpryhl1m04.cpp: In function ‘int main()’:\n/tmp/tmpryhl1m04.cpp:13:94: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   13 |     assert(candidate((std::vector<long>({(long)-6, (long)-5, (long)-7, (long)-8, (long)2}))) == (7));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                            |\n      |                     std::vector<long int>                                                        int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpryhl1m04.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpryhl1m04.cpp:3:\n/tmp/tmpryhl1m04.cpp:13:99: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   13 |     assert(candidate((std::vector<long>({(long)-6, (long)-5, (long)-7, (long)-8, (long)2}))) == (7));\n      |                       ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    int count = nums.size();\n    for (int num = 2; num < count; num++) {\n        std::sort(nums.begin(), nums.end());\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)-6, (long)-5, (long)-7, (long)-8, (long)2}))) == (7));\n}\n\n\n",
        "answer": "(7)"
    },
    {
        "id": 722,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmpn1667jtv.cpp:17:42: warning: missing terminating \" character\n   17 |     assert(candidate((\",wPzPppdl/\")) == (\"PpZpZpPpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZp);\n      |                                          ^\n/tmp/tmpn1667jtv.cpp:20:1: error: unterminated argument list invoking macro \"assert\"\n   20 | \n      | ^\n/tmp/tmpn1667jtv.cpp: In function ‘int main()’:\n/tmp/tmpn1667jtv.cpp:17:5: error: ‘assert’ was not declared in this scope\n   17 |     assert(candidate((\",wPzPppdl/\")) == (\"PpZpZpPpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZp);\n      |     ^~~~~~\n/tmp/tmpn1667jtv.cpp:4:1: note: ‘assert’ is defined in header ‘<cassert>’; did you forget to ‘#include <cassert>’?\n    3 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    4 | std::string f(std::string text) {\n/tmp/tmpn1667jtv.cpp:17:11: error: expected ‘}’ at end of input\n   17 |     assert(candidate((\",wPzPppdl/\")) == (\"PpZpZpPpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::string out = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (isupper(text[i])) {\n            out += tolower(text[i]);\n        } else {\n            out += toupper(text[i]);\n        }\n    }\n    return out;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\",wPzPppdl/\")) == (\"PpZpZpPpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZp);\n}\n\n\n",
        "answer": "(\"PpZpZpPpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZpZp"
    },
    {
        "id": 723,
        "res": 0
    },
    {
        "id": 724,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpe0fhuig0.cpp:4:\n/tmp/tmpe0fhuig0.cpp: In function ‘int main()’:\n/tmp/tmpe0fhuig0.cpp:17:43: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   17 |     assert(candidate((\"010100\"), (\"010\")) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                         |\n      |                     std::vector<long int>     int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpe0fhuig0.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpe0fhuig0.cpp:4:\n/tmp/tmpe0fhuig0.cpp:17:48: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   17 |     assert(candidate((\"010100\"), (\"010\")) == (2));\n      |                                                ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::string text, std::string function) {\n    std::vector<long> cites = {static_cast<long>(text.substr(text.find(function) + function.size()).size())};\n    for (char char_ : text) {\n        std::string s(1, char_);\n        if (s == function) {\n            cites.push_back(static_cast<long>(text.substr(text.find(function) + function.size()).size()));\n        }\n    }\n    return cites;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"010100\"), (\"010\")) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 725,
        "res": false,
        "error": "Exception",
        "error_message": "tmp7ecw9dhy: /tmp/tmp7ecw9dhy.cpp:13: int main(): Assertion `candidate((\"mrq7y\")) == (3)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    std::vector<std::string> result_list = {\"3\", \"3\", \"3\", \"3\"};\n    if (!result_list.empty()) {\n        result_list.clear();\n    }\n    return text.size();\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"mrq7y\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 726,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpurhacejb.cpp:4:\n/tmp/tmpurhacejb.cpp: In function ‘int main()’:\n/tmp/tmpurhacejb.cpp:16:62: error: no match for ‘operator==’ (operand types are ‘std::tuple<long int, long int>’ and ‘int’)\n   16 |     assert(candidate((\"jcle oq wsnibktxpiozyxmopqkfnrfjds\")) == (7));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                            |\n      |                     std::tuple<long int, long int>               int\nIn file included from /usr/include/c++/11/regex:63,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:110,\n                 from /tmp/tmpurhacejb.cpp:4:\n/usr/include/c++/11/bits/regex.h:1059:5: note: candidate: ‘template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)’\n 1059 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/regex.h:1059:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpurhacejb.cpp:4:\n/tmp/tmpurhacejb.cpp:16:67: note:   ‘std::tuple<long int, long int>’ is not derived from ‘const std::__cxx11::sub_match<_BiIter>’\n   16 |     assert(candidate((\"jcle oq wsnibktxpiozyxmopqkfnrfjds\")) == (7));\n      |                                                                   ^\nIn file included from /usr/include/c++/11/regex:63,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:110,\n                 from /tmp/tmpurhacejb.cpp:4:\n/usr/include/c++/11/bits/regex.h:1155:5: note: candidate: ‘template<class _Bi_iter, class _Ch_traits, class _Ch_alloc> bool std::__cxx11::operator",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::tuple<long, long> f(std::string text) {\n    long ws = 0;\n    for (char s : text) {\n        if (isspace(s)) {\n            ws += 1;\n        }\n    }\n    return std::make_tuple(ws, text.length());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"jcle oq wsnibktxpiozyxmopqkfnrfjds\")) == (7));\n}\n\n\n",
        "answer": "(7)"
    },
    {
        "id": 727,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp3ctiwkyk.cpp:3:\n/tmp/tmp3ctiwkyk.cpp: In function ‘int main()’:\n/tmp/tmp3ctiwkyk.cpp:18:142: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘int’)\n   18 |     assert(candidate((std::vector<std::string>({(std::string)\"ix\", (std::string)\"dxh\", (std::string)\"snegi\", (std::string)\"wiubvu\"})), (\"\")) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                                                            |\n      |                     std::vector<std::__cxx11::basic_string<char> >                                                                               int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmp3ctiwkyk.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::__cxx11::basic_string<char> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::vector<std::string> numbers, std::string prefix) {\n    std::vector<std::string> result;\n    for (const std::string& n : numbers) {\n        if (n.size() > prefix.size() && n.substr(0, prefix.size()) == prefix) {\n            result.push_back(n.substr(prefix.size()));\n        } else {\n            result.push_back(n);\n        }\n    }\n    std::sort(result.begin(), result.end());\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"ix\", (std::string)\"dxh\", (std::string)\"snegi\", (std::string)\"wiubvu\"})), (\"\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 728,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpsqrfpfew.cpp:3:\n/tmp/tmpsqrfpfew.cpp: In function ‘int main()’:\n/tmp/tmpsqrfpfew.cpp:18:34: error: ‘r’ was not declared in this scope\n   18 |     assert(candidate((\"ru\")) == (r));\n      |                                  ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::vector<char> result;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == tolower(text[i])) {\n            continue;\n        }\n        if (text.size() - 1 - i < text.rfind(tolower(text[i]))) {\n            result.push_back(text[i]);\n        }\n    }\n    return std::string(result.begin(), result.end());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"ru\")) == (r));\n}\n\n\n",
        "answer": "(r)"
    },
    {
        "id": 729,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp5jcwd_o7.cpp:4:\n/tmp/tmp5jcwd_o7.cpp: In function ‘int main()’:\n/tmp/tmp5jcwd_o7.cpp:17:48: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   17 |     assert(candidate((\"abcdefghabc\"), (\"abc\")) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                              |\n      |                     std::vector<long int>          int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp5jcwd_o7.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp5jcwd_o7.cpp:4:\n/tmp/tmp5jcwd_o7.cpp:17:53: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   17 |     assert(candidate((\"abcdefghabc\"), (\"abc\")) == (0));\n      |                                                     ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 ",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::string s1, std::string s2) {\n    std::vector<long> res;\n    size_t i = s1.rfind(s2);\n    while (i != std::string::npos) {\n        res.push_back(i + s2.size() - 1);\n        if (i == 0) break;\n        i = s1.rfind(s2, i - 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"abcdefghabc\"), (\"abc\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 730,
        "res": false,
        "error": "Exception",
        "error_message": "tmpg5xhdb2l: /tmp/tmpg5xhdb2l.cpp:19: int main(): Assertion `candidate((\"wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl\")) == (5)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    int m = 0;\n    int cnt = 0;\n    std::stringstream ss(text);\n    std::string word;\n    while (ss >> word) {\n        if (word.length() > m) {\n            cnt++;\n            m = word.length();\n        }\n    }\n    return cnt;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl\")) == (5));\n}\n\n\n",
        "answer": "(5)"
    },
    {
        "id": 731,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpz27oq598.cpp:3:\n/tmp/tmpz27oq598.cpp: In function ‘int main()’:\n/tmp/tmpz27oq598.cpp:14:86: error: ‘a’ was not declared in this scope\n   14 |     assert(candidate((\"Chris requires a ride to the airport on Friday.\"), (\"a\")) == (a));\n      |                                                                                      ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string use) {\n    size_t pos = text.find(use);\n    while (pos != std::string::npos) {\n        text.replace(pos, use.length(), \"\");\n        pos = text.find(use, pos);\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Chris requires a ride to the airport on Friday.\"), (\"a\")) == (a));\n}\n\n\n",
        "answer": "(a)"
    },
    {
        "id": 732,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp7up21z33.cpp:3:\n/tmp/tmp7up21z33.cpp: In function ‘int main()’:\n/tmp/tmp7up21z33.cpp:13:105: error: no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, long int>’ and ‘int’)\n   13 |     assert(candidate((std::map<std::string,long>({{\"u\", 20}, {\"v\", 5}, {\"b\", 7}, {\"w\", 3}, {\"x\", 3}}))) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                                       |\n      |                     std::map<std::__cxx11::basic_string<char>, long int>                                    int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmp7up21z33.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::pair<const std::__cxx11::basic_string<char>, long int> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,long> f(std::map<std::string,long> char_freq) {\n    std::map<std::string, long> result;\n    for(auto& pair : char_freq) {\n        result[pair.first] = pair.second / 2;\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>({{\"u\", 20}, {\"v\", 5}, {\"b\", 7}, {\"w\", 3}, {\"x\", 3}}))) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 733,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    int length = text.length() / 2;\n    std::string left_half = text.substr(0, length);\n    std::string right_half = text.substr(length);\n    std::reverse(right_half.begin(), right_half.end());\n    return left_half + right_half;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"n\")) == (\"n\"));\n}\n\n\n",
        "answer": "(\"n\")"
    },
    {
        "id": 734,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpqdl3cw2r.cpp:3:\n/tmp/tmpqdl3cw2r.cpp: In function ‘int main()’:\n/tmp/tmpqdl3cw2r.cpp:14:81: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   14 |     assert(candidate((std::vector<long>({(long)5, (long)3, (long)3, (long)7}))) == (7));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                               |\n      |                     std::vector<long int>                                           int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpqdl3cw2r.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpqdl3cw2r.cpp:3:\n/tmp/tmpqdl3cw2r.cpp:14:86: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((std::vector<long>({(long)5, (long)3, (long)3, (long)7}))) == (7));\n      |                                                                                      ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    for (int i = nums.size() - 1; i >= 0; i--) {\n        if (nums[i] % 2 == 0) {\n            nums.erase(nums.begin() + i);\n        }\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)3, (long)7}))) == (7));\n}\n\n\n",
        "answer": "(7)"
    },
    {
        "id": 735,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpucojvq76.cpp:3:\n/tmp/tmpucojvq76.cpp: In function ‘int main()’:\n/tmp/tmpucojvq76.cpp:17:44: error: ‘B’ was not declared in this scope\n   17 |     assert(candidate((\"(A (b B))\")) == (A (B)));\n      |                                            ^\n/tmp/tmpucojvq76.cpp:17:41: error: ‘A’ was not declared in this scope\n   17 |     assert(candidate((\"(A (b B))\")) == (A (B)));\n      |                                         ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string sentence) {\n    if (sentence == \"\") {\n        return \"\";\n    }\n    sentence.erase(std::remove(sentence.begin(), sentence.end(), '('), sentence.end());\n    sentence.erase(std::remove(sentence.begin(), sentence.end(), ')'), sentence.end());\n    std::transform(sentence.begin(), sentence.end(), sentence.begin(), ::tolower);\n    sentence[0] = std::toupper(sentence[0]);\n    sentence.erase(std::remove(sentence.begin(), sentence.end(), ' '), sentence.end());\n    return sentence;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"(A (b B))\")) == (A (B)));\n}\n\n\n",
        "answer": "(A (B))"
    },
    {
        "id": 736,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp54d6ujud.cpp:3:\n/tmp/tmp54d6ujud.cpp: In function ‘int main()’:\n/tmp/tmp54d6ujud.cpp:18:46: error: ‘pi’ was not declared in this scope\n   18 |     assert(candidate((\"pi wa\"), (\"chi\")) == (pi wa));\n      |                                              ^~\n/tmp/tmp54d6ujud.cpp:18:49: error: expected ‘)’ before ‘wa’\n   18 |     assert(candidate((\"pi wa\"), (\"chi\")) == (pi wa));\n      |                                             ~   ^~\n/tmp/tmp54d6ujud.cpp:18:53: error: expected ‘)’ before ‘;’ token\n   18 |     assert(candidate((\"pi wa\"), (\"chi\")) == (pi wa));\n      |                                                     ^\n/tmp/tmp54d6ujud.cpp:18:53: error: expected ‘)’ before ‘;’ token\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp54d6ujud.cpp:3:\n/tmp/tmp54d6ujud.cpp:18:5: note: to match this ‘(’\n   18 |     assert(candidate((\"pi wa\"), (\"chi\")) == (pi wa));\n      |     ^~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string insert) {\n    std::unordered_set<char> whitespaces = {'\\t', '\\r', '\\v', ' ', '\\f', '\\n'};\n    std::string clean = \"\";\n    for (char c : text) {\n        if (whitespaces.find(c) != whitespaces.end()) {\n            clean += insert;\n        } else {\n            clean += c;\n        }\n    }\n    return clean;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"pi wa\"), (\"chi\")) == (pi wa));\n}\n\n\n",
        "answer": "(pi wa)"
    },
    {
        "id": 737,
        "res": false,
        "error": "Exception",
        "error_message": "tmpxxwyrxqg: /tmp/tmpxxwyrxqg.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)0, (long)6, (long)2, (long)-1, (long)-2}))) == (2)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> nums) {\n    long counts = 0;\n    for (long i : nums) {\n        if (std::to_string(i).find_first_not_of(\"0123456789\") == std::string::npos) {\n            if (counts == 0) {\n                counts += 1;\n            }\n        }\n    }\n    return counts;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)0, (long)6, (long)2, (long)-1, (long)-2}))) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 738,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp4o14a9k2.cpp:3:\n/tmp/tmp4o14a9k2.cpp: In function ‘int main()’:\n/tmp/tmp4o14a9k2.cpp:12:58: error: ‘r’ was not declared in this scope\n   12 |     assert(candidate((\"r;r;r;r;r;r;r;r;r\"), (\"x.r\")) == (r;r;r;r;r;r;r;r;r));\n      |                                                          ^\n/tmp/tmp4o14a9k2.cpp:12:59: error: expected ‘)’ before ‘;’ token\n   12 |     assert(candidate((\"r;r;r;r;r;r;r;r;r\"), (\"x.r\")) == (r;r;r;r;r;r;r;r;r));\n      |                                                         ~ ^\n/tmp/tmp4o14a9k2.cpp:12:59: error: expected ‘)’ before ‘;’ token\n/tmp/tmp4o14a9k2.cpp:12:59: error: expected ‘)’ before ‘;’ token\n/tmp/tmp4o14a9k2.cpp:12:5: note: to match this ‘(’\n   12 |     assert(candidate((\"r;r;r;r;r;r;r;r;r\"), (\"x.r\")) == (r;r;r;r;r;r;r;r;r));\n      |     ^~~~~~\n/tmp/tmp4o14a9k2.cpp:12:75: error: expected ‘;’ before ‘)’ token\n   12 |     assert(candidate((\"r;r;r;r;r;r;r;r;r\"), (\"x.r\")) == (r;r;r;r;r;r;r;r;r));\n      |                                                                           ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string characters) {\n    for(int i = 0; i < characters.length(); i++) {\n        text.erase(std::find_if(text.rbegin(), text.rend(), [&](char c) { return c != characters[i]; }).base(), text.end());\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"r;r;r;r;r;r;r;r;r\"), (\"x.r\")) == (r;r;r;r;r;r;r;r;r));\n}\n\n\n",
        "answer": "(r;r;r;r;r;r;r;r;r)"
    },
    {
        "id": 739,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string st, std::vector<std::string> pattern) {\n    for (const std::string& p : pattern) {\n        if (st.find(p) != 0) {\n            return false;\n        }\n        st = st.substr(p.length());\n    }\n    return true;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"qwbnjrxs\"), (std::vector<std::string>({(std::string)\"jr\", (std::string)\"b\", (std::string)\"r\", (std::string)\"qw\"}))) == (false));\n}\n\n\n",
        "answer": "(false)"
    },
    {
        "id": 740,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpdast2wtl.cpp:3:\n/tmp/tmpdast2wtl.cpp: In function ‘int main()’:\n/tmp/tmpdast2wtl.cpp:18:86: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   18 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})), (3)) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                    |\n      |                     std::vector<long int>                                                int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpdast2wtl.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpdast2wtl.cpp:3:\n/tmp/tmpdast2wtl.cpp:18:91: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   18 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})), (3)) == (3));\n      |                                                               ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> plot, long delin) {\n    auto it = std::find(plot.begin(), plot.end(), delin);\n    if (it != plot.end()) {\n        size_t split = std::distance(plot.begin(), it);\n        std::vector<long> first(plot.begin(), plot.begin() + split);\n        std::vector<long> second(plot.begin() + split + 1, plot.end());\n        first.insert(first.end(), second.begin(), second.end());\n        return first;\n    } else {\n        return plot;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})), (3)) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 741,
        "res": false,
        "error": "Exception",
        "error_message": "tmpo6pl30_x: /tmp/tmpo6pl30_x.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)6, (long)8, (long)2, (long)5, (long)3, (long)1, (long)9, (long)7})), (6)) == (6)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> nums, long p) {\n    long prev_p = p - 1;\n    if (prev_p < 0) {\n        prev_p = nums.size() - 1;\n    }\n    return nums[prev_p];\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)6, (long)8, (long)2, (long)5, (long)3, (long)1, (long)9, (long)7})), (6)) == (6));\n}\n\n\n",
        "answer": "(6)"
    },
    {
        "id": 742,
        "res": false,
        "error": "Exception",
        "error_message": "tmpxdcj34e4: /tmp/tmpxdcj34e4.cpp:18: int main(): Assertion `candidate((\"-1-3\")) == (-1)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text) {\n    bool b = true;\n    for(char x : text) {\n        if(isdigit(x)) {\n            b = true;\n        } else {\n            b = false;\n            break;\n        }\n    }\n    return b;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"-1-3\")) == (-1));\n}\n\n\n",
        "answer": "(-1)"
    },
    {
        "id": 743,
        "res": false,
        "error": "Exception",
        "error_message": "tmponpja5o7: /tmp/tmponpja5o7.cpp:14: int main(): Assertion `candidate((\"dog,cat\")) == (-3)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    std::stringstream ss(text);\n    std::string string_a, string_b;\n    std::getline(ss, string_a, ',');\n    std::getline(ss, string_b);\n    \n    return -(string_a.length() + string_b.length());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"dog,cat\")) == (-3));\n}\n\n\n",
        "answer": "(-3)"
    },
    {
        "id": 744,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpq_05bui8.cpp:3:\n/tmp/tmpq_05bui8.cpp: In function ‘int main()’:\n/tmp/tmpq_05bui8.cpp:11:45: error: ‘jrowdlp’ was not declared in this scope\n   11 |     assert(candidate((\"jro\"), (\"wdlp\")) == (jrowdlp));\n      |                                             ^~~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string new_ending) {\n    std::vector<char> result(text.begin(), text.end());\n    result.insert(result.end(), new_ending.begin(), new_ending.end());\n    return std::string(result.begin(), result.end());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"jro\"), (\"wdlp\")) == (jrowdlp));\n}\n\n\n",
        "answer": "(jrowdlp)"
    },
    {
        "id": 745,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp7c7jls71.cpp:3:\n/tmp/tmp7c7jls71.cpp: In function ‘int main()’:\n/tmp/tmp7c7jls71.cpp:19:48: error: ‘minimc’ was not declared in this scope\n   19 |     assert(candidate((\"minimc@minimc.io\")) == (minimc));\n      |                                                ^~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string address) {\n    size_t suffix_start = address.find('@') + 1;\n    if (std::count(address.begin() + suffix_start, address.end(), '.') > 1) {\n        std::vector<std::string> parts;\n        std::istringstream iss(address);\n        std::string token;\n        while (std::getline(iss, token, '@')) {\n            parts.push_back(token);\n        }\n        address = address.substr(0, suffix_start) + parts[1].substr(0, parts[1].find('.')) + parts[1].substr(parts[1].find('.'));\n    }\n    return address;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"minimc@minimc.io\")) == (minimc));\n}\n\n\n",
        "answer": "(minimc)"
    },
    {
        "id": 746,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp_qi6ej2m.cpp:3:\n/tmp/tmp_qi6ej2m.cpp:18:64: error: stray ‘@’ in program\n   18 |     assert(candidate((std::map<std::string,std::string>())) == @pinc.uk);\n      |                                                                ^\n/tmp/tmp_qi6ej2m.cpp: In function ‘int main()’:\n/tmp/tmp_qi6ej2m.cpp:18:65: error: ‘pinc’ was not declared in this scope\n   18 |     assert(candidate((std::map<std::string,std::string>())) == @pinc.uk);\n      |                                                                 ^~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,std::string> f(std::map<std::string,std::string> dct) {\n    std::map<std::string, std::string> result;\n    std::vector<std::string> values;\n    for (const auto& elem : dct) {\n        values.push_back(elem.second);\n    }\n    for (const auto& value : values) {\n        std::string item = value.substr(0, value.find('.')) + \"@pinc.uk\";\n        result[value] = item;\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,std::string>())) == @pinc.uk);\n}\n\n\n",
        "answer": "@pinc.uk"
    },
    {
        "id": 747,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string text) {\n    if (text == \"42.42\") {\n        return true;\n    }\n    for (int i = 3; i < text.length() - 3; ++i) {\n        if (text[i] == '.' && std::isdigit(text[i - 3]) && std::isdigit(text[i - 2]) && std::isdigit(text[i - 1]) && std::isdigit(text[i + 1]) && std::isdigit(text[i + 2]) && std::isdigit(text[i + 3])) {\n            return true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"123E-10\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 748,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpkvo8czsm.cpp:3:\n/tmp/tmpkvo8czsm.cpp: In function ‘int main()’:\n/tmp/tmpkvo8czsm.cpp:13:90: error: no match for ‘operator==’ (operand types are ‘std::tuple<std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long int>, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long int> >’ and ‘int’)\n   13 |     assert(candidate((std::map<std::string,long>({{\"a\", 123}, {\"b\", 456}, {\"c\", 789}}))) == (123, 456));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~\n      |                     |                                                                           |\n      |                     |                                                                           int\n      |                     std::tuple<std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long int>, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long int> >\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpkvo8czsm.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included fro",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::tuple<std::tuple<std::string, long>, std::tuple<std::string, long>> f(std::map<std::string,long> d) {\n    auto it = d.begin();\n    std::tuple<std::string, long> first = std::make_tuple(it->first, it->second);\n    ++it;\n    std::tuple<std::string, long> second = std::make_tuple(it->first, it->second);\n    return std::make_tuple(first, second);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>({{\"a\", 123}, {\"b\", 456}, {\"c\", 789}}))) == (123, 456));\n}\n\n\n",
        "answer": "(123, 456)"
    },
    {
        "id": 749,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmptpz_qlff.cpp:3:\n/tmp/tmptpz_qlff.cpp: In function ‘int main()’:\n/tmp/tmptpz_qlff.cpp:23:37: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   23 |     assert(candidate((\"l\\nl\"), (2)) == (2));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                   |\n      |                     |                   int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmptpz_qlff.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmptpz_qlff.cpp:3:\n/tmp/tmptpz_qlff.cpp:23:42: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   23 |     assert(candidate((\"l\\nl\"), (2)) == (2));\n      |                                          ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long width) {\n    std::string result = \"\";\n    std::vector<std::string> lines;\n    std::string line;\n    std::istringstream iss(text);\n    while (std::getline(iss, line, '\\n')) {\n        lines.push_back(line);\n    }\n\n    for (const auto& l : lines) {\n        result += std::string((width - l.size()) / 2, ' ') + l + std::string((width - l.size() + 1) / 2, ' ');\n        result += '\\n';\n    }\n\n    result = result.substr(0, result.size() - 1); // Remove the very last empty line\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"l\\nl\"), (2)) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 750,
        "res": false,
        "error": "Exception",
        "error_message": "tmp59i_nutk: /tmp/tmp59i_nutk.cpp:18: int main(): Assertion `candidate((std::map<std::string,std::string>()), (\"hbd\")) == (\"hello\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::map<std::string,std::string> char_map, std::string text) {\n    std::string new_text = \"\";\n    for (char ch : text) {\n        auto it = char_map.find(std::string(1, ch));\n        if (it == char_map.end()) {\n            new_text += ch;\n        } else {\n            new_text += it->second;\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,std::string>()), (\"hbd\")) == (\"hello\"));\n}\n\n\n",
        "answer": "(\"hello\")"
    },
    {
        "id": 751,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp0w1gbfwa.cpp:4:\n/tmp/tmp0w1gbfwa.cpp: In function ‘int main()’:\n/tmp/tmp0w1gbfwa.cpp:15:52: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   15 |     assert(candidate((\"wwwwhhhtttpp\"), (\"w\"), (3)) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                  |\n      |                     std::__cxx11::basic_string<char>   int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp0w1gbfwa.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp0w1gbfwa.cpp:4:\n/tmp/tmp0w1gbfwa.cpp:15:57: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   15 |     assert(candidate((\"wwwwhhhtttpp\"), (\"w\"), (3)) == (3));\n      |                                                         ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /us",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string character, long min_count) {\n    long count = std::count(text.begin(), text.end(), character[0]);\n    if (count < min_count) {\n        std::transform(text.begin(), text.end(), text.begin(),\n        [](unsigned char c){ return std::isupper(c)? std::tolower(c) : std::toupper(c); });\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"wwwwhhhtttpp\"), (\"w\"), (3)) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 752,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpiro9lvjw.cpp:3:\n/tmp/tmpiro9lvjw.cpp: In function ‘int main()’:\n/tmp/tmpiro9lvjw.cpp:9:36: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n    9 |     assert(candidate((\"abc\"), (8)) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                  |\n      |                     |                  int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpiro9lvjw.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpiro9lvjw.cpp:3:\n/tmp/tmpiro9lvjw.cpp:9:41: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n    9 |     assert(candidate((\"abc\"), (8)) == (0));\n      |                                         ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n        ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s, long amount) {\n    return std::string(std::max(0L, amount - static_cast<long>(s.length())), 'z') + s;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"abc\"), (8)) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 753,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmph_mok6wj.cpp:3:\n/tmp/tmph_mok6wj.cpp: In function ‘int main()’:\n/tmp/tmph_mok6wj.cpp:21:87: error: no match for ‘operator==’ (operand types are ‘std::map<long int, long int>’ and ‘int’)\n   21 |     assert(candidate((std::map<long,long>({{0, 0}, {1, 0}, {2, 0}, {3, 0}, {4, 0}}))) == (0, 0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~\n      |                     |                                                                      |\n      |                     std::map<long int, long int>                                           int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmph_mok6wj.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmph_mok6wj.cpp:3:\n/tmp/tmph_mok6wj.cpp:21:95: note:   ‘std::map<long int, long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   21 |     assert(candidate((std::map<long,long>({{0, 0}, {1, 0}, {2, 0}, {3, 0}, {4, 0}}))) == (0, 0));\n      |                                 ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<long,long> f(std::map<long,long> bag) {\n    std::vector<long> values;\n    for(auto const& pair: bag) {\n        values.push_back(pair.second);\n    }\n    \n    std::map<long, long> tbl;\n    for (long v = 0; v < 100; ++v) {\n        if (std::find(values.begin(), values.end(), v) != values.end()) {\n            tbl[v] = std::count(values.begin(), values.end(), v);\n        }\n    }\n    \n    return tbl;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,long>({{0, 0}, {1, 0}, {2, 0}, {3, 0}, {4, 0}}))) == (0, 0));\n}\n\n\n",
        "answer": "(0, 0)"
    },
    {
        "id": 754,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpjhbj42iu.cpp:3:\n/tmp/tmpjhbj42iu.cpp: In function ‘int main()’:\n/tmp/tmpjhbj42iu.cpp:18:183: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘int’)\n   18 |     assert(candidate((std::vector<std::string>({(std::string)\"1\", (std::string)\"2\", (std::string)\"2\", (std::string)\"44\", (std::string)\"0\", (std::string)\"7\", (std::string)\"20257\"}))) == (44));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                                                                                                     |\n      |                     std::vector<std::__cxx11::basic_string<char> >                                                                                                                        int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpjhbj42iu.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::__cxx",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::vector<std::string> nums) {\n    int width = std::stoi(nums[0]);\n    std::vector<std::string> result;\n    for (size_t i = 1; i < nums.size(); ++i) {\n        std::string val = nums[i];\n        while (val.size() < width) {\n            val = \"0\" + val;\n        }\n        result.push_back(val);\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"1\", (std::string)\"2\", (std::string)\"2\", (std::string)\"44\", (std::string)\"0\", (std::string)\"7\", (std::string)\"20257\"}))) == (44));\n}\n\n\n",
        "answer": "(44)"
    },
    {
        "id": 755,
        "res": false,
        "error": "SyntaxError",
        "error_message": "/tmp/tmp87805qoc.cpp:16:1: error: unterminated argument list invoking macro \"assert\"\n   16 | \n      | ^\n/tmp/tmp87805qoc.cpp: In function ‘int main()’:\n/tmp/tmp87805qoc.cpp:13:5: error: ‘assert’ was not declared in this scope\n   13 |     assert(candidate((\"###\"), (\"ph>t#A#BiEcDefW#ON#iiNCU\"), (\".\")) == (axbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxb);\n      |     ^~~~~~\n/tmp/tmp87805qoc.cpp:4:1: note: ‘assert’ is defined in header ‘<cassert>’; did you forget to ‘#include <cassert>’?\n    3 | #include<bits/stdc++.h>\n  +++ |+#include <cassert>\n    4 | std::string f(std::string replace, std::string text, std::string hide) {\n/tmp/tmp87805qoc.cpp:13:11: error: expected ‘}’ at end of input\n   13 |     assert(candidate((\"###\"), (\"ph>t#A#BiEcDefW#ON#iiNCU\"), (\".\")) == (axbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxb",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string replace, std::string text, std::string hide) {\n    while (text.find(hide) != std::string::npos) {\n        replace += \"ax\";\n        text.replace(text.find(hide), hide.length(), replace);\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"###\"), (\"ph>t#A#BiEcDefW#ON#iiNCU\"), (\".\")) == (axbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxb);\n}\n\n\n",
        "answer": "(axbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxbaxb"
    },
    {
        "id": 756,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmprh_uzqdm.cpp:4:\n/tmp/tmprh_uzqdm.cpp: In function ‘int main()’:\n/tmp/tmprh_uzqdm.cpp:17:31: error: ‘integer’ was not declared in this scope\n   17 |     assert(candidate((\"\")) == integer);\n      |                               ^~~~~~~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    if (text.find_first_not_of(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\") == std::string::npos \n        && !text.empty() \n        && std::find_if(text.begin(), text.end(), ::isalpha) != text.end()\n        && std::all_of(text.begin(), text.end(), ::isdigit)) \n    {\n        return \"integer\";\n    }\n    return \"string\";\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"\")) == integer);\n}\n\n\n",
        "answer": "integer"
    },
    {
        "id": 757,
        "res": false,
        "error": "Exception",
        "error_message": "tmpwxxll32c: /tmp/tmpwxxll32c.cpp:15: int main(): Assertion `candidate((\"a1a8\"), (\"1\"), (\"n2\")) == (\"a1an2\")' failed.\n",
        "code": "\n#include <assert.h>\n#include <bits/stdc++.h>\n\nstd::string f(std::string text, std::string character, std::string replace) {\n    size_t pos = text.find(character);\n    while (pos != std::string::npos) {\n        text.replace(pos, character.length(), replace);\n        pos = text.find(character, pos + replace.length());\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"a1a8\"), (\"1\"), (\"n2\")) == (\"a1an2\"));\n}\n\n\n",
        "answer": "(\"a1an2\")"
    },
    {
        "id": 758,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::vector<long> nums) {\n    std::vector<long> reversed_nums = nums;\n    std::reverse(reversed_nums.begin(), reversed_nums.end());\n    \n    if (reversed_nums == nums) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)6, (long)2}))) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 759,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpd2pvro00.cpp:3:\n/tmp/tmpd2pvro00.cpp: In function ‘int main()’:\n/tmp/tmpd2pvro00.cpp:18:47: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   18 |     assert(candidate((\"egmdartoa\"), (\"good\")) == (0, 0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~\n      |                     |                              |\n      |                     std::vector<long int>          int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpd2pvro00.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpd2pvro00.cpp:3:\n/tmp/tmpd2pvro00.cpp:18:55: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   18 |     assert(candidate((\"egmdartoa\"), (\"good\")) == (0, 0));\n      |                                                       ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n         ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::string text, std::string sub) {\n    std::vector<long> index;\n    size_t starting = 0;\n    while (starting != std::string::npos) {\n        starting = text.find(sub, starting);\n        if (starting != std::string::npos) {\n            index.push_back(starting);\n            starting += sub.length();\n        }\n    }\n    return index;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"egmdartoa\"), (\"good\")) == (0, 0));\n}\n\n\n",
        "answer": "(0, 0)"
    },
    {
        "id": 760,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpa8561rln.cpp:4:\n/tmp/tmpa8561rln.cpp: In function ‘int main()’:\n/tmp/tmpa8561rln.cpp:16:100: error: expected ‘)’ before numeric constant\n   16 |     assert(candidate((std::map<std::string,long>({{\"f\", 1}, {\"h\", 2}, {\"j\", 3}, {\"k\", 4}}))) == (1 2 3 4));\n      |                                                                                                 ~  ^\n/tmp/tmpa8561rln.cpp:16:94: error: no match for ‘operator==’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘int’)\n   16 |     assert(candidate((std::map<std::string,long>({{\"f\", 1}, {\"h\", 2}, {\"j\", 3}, {\"k\", 4}}))) == (1 2 3 4));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                            |\n      |                     std::vector<std::__cxx11::basic_string<char> >                               int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmpa8561rln.cpp:4:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::__cxx11::basic_string<char> >&, const __gnu_cxx::new_al",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::map<std::string,long> d) {\n    std::vector<std::string> l;\n    while (!d.empty()) {\n        std::string key = d.rbegin()->first;\n        d.erase(key);\n        l.push_back(key);\n    }\n    return l;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>({{\"f\", 1}, {\"h\", 2}, {\"j\", 3}, {\"k\", 4}}))) == (1 2 3 4));\n}\n\n\n",
        "answer": "(1 2 3 4)"
    },
    {
        "id": 761,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpbax_mfij.cpp:3:\n/tmp/tmpbax_mfij.cpp: In function ‘int main()’:\n/tmp/tmpbax_mfij.cpp:14:49: error: expected primary-expression before ‘)’ token\n   14 |     assert(candidate((std::vector<long>())) == ());\n      |                                                 ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> array) {\n    std::vector<long> output = array;\n    for (int i = 0; i < output.size(); i += 2) {\n        output[i] = output[output.size() - 1 - i];\n    }\n    std::reverse(output.begin(), output.end());\n    return output;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>())) == ());\n}\n\n\n",
        "answer": "()"
    },
    {
        "id": 762,
        "res": false,
        "error": "Exception",
        "error_message": "tmp1ejda_31: /tmp/tmp1ejda_31.cpp:12: int main(): Assertion `candidate((\"this And cPanel\")) == (\"T\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::transform(text.begin(), text.end(), text.begin(), ::tolower);\n    std::string capitalize = text;\n    capitalize[0] = std::toupper(capitalize[0]);\n    return text.substr(0, 1) + capitalize.substr(1);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"this And cPanel\")) == (\"T\"));\n}\n\n\n",
        "answer": "(\"T\")"
    },
    {
        "id": 763,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpswjkgmt1.cpp:3:\n/tmp/tmpswjkgmt1.cpp: In function ‘int main()’:\n/tmp/tmpswjkgmt1.cpp:19:59: error: unable to find numeric literal operator ‘operator\"\"Pn’\n   19 |     assert(candidate((\"2Pn\"), (\"yCxpg2C2Pny2\"), (\"\")) == (2Pn));\n      |                                                           ^~~\n/tmp/tmpswjkgmt1.cpp:19:59: note: use ‘-fext-numeric-literals’ to enable more built-in suffixes\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string values, std::string text, std::string markers) {\n    size_t pos = text.find_last_not_of(values);\n    if (pos != std::string::npos) {\n        text.erase(pos + 1);\n    }\n\n    pos = text.find_last_not_of(markers);\n    if (pos != std::string::npos) {\n        text.erase(pos + 1);\n    }\n\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"2Pn\"), (\"yCxpg2C2Pny2\"), (\"\")) == (2Pn));\n}\n\n\n",
        "answer": "(2Pn)"
    },
    {
        "id": 764,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpjhogspfl.cpp:3:\n/tmp/tmpjhogspfl.cpp: In function ‘int main()’:\n/tmp/tmpjhogspfl.cpp:24:67: error: ‘some’ was not declared in this scope\n   24 |     assert(candidate((\"some test string\"), (\"some\"), (\"any\")) == (some test string));\n      |                                                                   ^~~~\n/tmp/tmpjhogspfl.cpp:24:72: error: expected ‘)’ before ‘test’\n   24 |     assert(candidate((\"some test string\"), (\"some\"), (\"any\")) == (some test string));\n      |                                                                  ~     ^~~~\n/tmp/tmpjhogspfl.cpp:24:85: error: expected ‘)’ before ‘;’ token\n   24 |     assert(candidate((\"some test string\"), (\"some\"), (\"any\")) == (some test string));\n      |                                                                                     ^\n/tmp/tmpjhogspfl.cpp:24:85: error: expected ‘)’ before ‘;’ token\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpjhogspfl.cpp:3:\n/tmp/tmpjhogspfl.cpp:24:5: note: to match this ‘(’\n   24 |     assert(candidate((\"some test string\"), (\"some\"), (\"any\")) == (some test string));\n      |     ^~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string old, std::string replacement) {\n    std::string text2 = text;\n    size_t pos = text2.find(old);\n    while (pos != std::string::npos) {\n        text2.replace(pos, old.length(), replacement);\n        pos = text2.find(old, pos + replacement.length());\n    }\n\n    std::string old2 = old;\n    std::reverse(old2.begin(), old2.end());\n    pos = text2.find(old2);\n    while (pos != std::string::npos) {\n        text2.replace(pos, old2.length(), replacement);\n        pos = text2.find(old2, pos + replacement.length());\n    }\n\n    return text2;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"some test string\"), (\"some\"), (\"any\")) == (some test string));\n}\n\n\n",
        "answer": "(some test string)"
    },
    {
        "id": 765,
        "res": false,
        "error": "Exception",
        "error_message": "tmphapgh9c7: /tmp/tmphapgh9c7.cpp:15: int main(): Assertion `candidate((\"so456\")) == (6)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text) {\n    int count = 0;\n    for (char c : text) {\n        if (std::isdigit(c)) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"so456\")) == (6));\n}\n\n\n",
        "answer": "(6)"
    },
    {
        "id": 766,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp9_z7d_7g.cpp:3:\n/tmp/tmp9_z7d_7g.cpp: In function ‘int main()’:\n/tmp/tmp9_z7d_7g.cpp:16:95: error: no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, long int>’ and ‘int’)\n   16 |     assert(candidate((std::vector<std::string>({(std::string)\"0\", (std::string)\"3\"})), (117)) == (0));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                                                                             |\n      |                     std::map<std::__cxx11::basic_string<char>, long int>                          int\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmp9_z7d_7g.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::pair<const std::__cxx11::basic_string<char>, long int> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(const new_allocator&, const new_allocator<_Up>&)\n      |         ^~~~~~~~\n/usr/include/c++/11/ext/new_allocator.h:183:9: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,long> f(std::vector<std::string> values, long value) {\n    std::map<std::string, long> new_dict;\n    int length = values.size();\n    for (const std::string& val : values) {\n        new_dict[val] = value;\n    }\n    std::sort(values.begin(), values.end());\n    new_dict[std::accumulate(values.begin(), values.end(), std::string(\"\"))] = value * 3;\n    return new_dict;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"0\", (std::string)\"3\"})), (117)) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 767,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpuy3hey2e.cpp:3:\n/tmp/tmpuy3hey2e.cpp: In function ‘int main()’:\n/tmp/tmpuy3hey2e.cpp:24:49: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   24 |     assert(candidate((\"d khqw whi fwi bbn 41\")) == (41));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                               |\n      |                     |                               int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpuy3hey2e.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpuy3hey2e.cpp:3:\n/tmp/tmpuy3hey2e.cpp:24:55: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   24 |     assert(candidate((\"d khqw whi fwi bbn 41\")) == (41));\n      |                                                       ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    std::stringstream ss(text);\n    std::vector<std::string> a;\n    std::string word;\n    while (ss >> word) {\n        a.push_back(word);\n    }\n\n    for (int i = 0; i < a.size(); i++) {\n        if (std::all_of(a[i].begin(), a[i].end(), ::isdigit) == false) {\n            return \"-\";\n        }\n    }\n\n    return std::accumulate(a.begin(), a.end(), std::string(), [](const std::string& left, const std::string& right) {\n        return left + (left.empty() ? \"\" : \" \") + right;\n    });\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"d khqw whi fwi bbn 41\")) == (41));\n}\n\n\n",
        "answer": "(41)"
    },
    {
        "id": 768,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpcm361v16.cpp:3:\n/tmp/tmpcm361v16.cpp: In function ‘int main()’:\n/tmp/tmpcm361v16.cpp:12:45: error: ‘abba’ was not declared in this scope\n   12 |     assert(candidate((\"abba\"), (\"bab\")) == (abba));\n      |                                             ^~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s, std::string o) {\n    if(s.find(o) == 0) {\n        return s;\n    }\n    return o + f(s, o.substr(o.length() - 2, 1) + o.substr(0, o.length() - 2));\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"abba\"), (\"bab\")) == (abba));\n}\n\n\n",
        "answer": "(abba)"
    },
    {
        "id": 769,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpbu0qb4b6.cpp:4:\n/tmp/tmpbu0qb4b6.cpp: In function ‘int main()’:\n/tmp/tmpbu0qb4b6.cpp:17:39: error: expected primary-expression before ‘?’ token\n   17 |     assert(candidate((\"akA?riu\")) == (?=.*a));\n      |                                       ^\n/tmp/tmpbu0qb4b6.cpp:17:40: error: expected primary-expression before ‘=’ token\n   17 |     assert(candidate((\"akA?riu\")) == (?=.*a));\n      |                                        ^\n/tmp/tmpbu0qb4b6.cpp:17:41: error: expected primary-expression before ‘.*’ token\n   17 |     assert(candidate((\"akA?riu\")) == (?=.*a));\n      |                                         ^~\n/tmp/tmpbu0qb4b6.cpp:17:43: error: ‘a’ was not declared in this scope\n   17 |     assert(candidate((\"akA?riu\")) == (?=.*a));\n      |                                           ^\n/tmp/tmpbu0qb4b6.cpp:17:44: error: expected ‘:’ before ‘)’ token\n   17 |     assert(candidate((\"akA?riu\")) == (?=.*a));\n      |                                            ^\n/tmp/tmpbu0qb4b6.cpp:17:44: error: expected primary-expression before ‘)’ token\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    for (int i = 0; i < text.length(); i++) {\n        if (islower(text[i])) {\n            text[i] = toupper(text[i]);\n        } else if (isupper(text[i])) {\n            text[i] = tolower(text[i]);\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"akA?riu\")) == (?=.*a));\n}\n\n\n",
        "answer": "(?=.*a)"
    },
    {
        "id": 770,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpq_xnee8a.cpp:4:\n/tmp/tmpq_xnee8a.cpp: In function ‘int main()’:\n/tmp/tmpq_xnee8a.cpp:18:38: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   18 |     assert(candidate((\"$78\"), (\"$\")) == (78));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                    |\n      |                     |                    int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpq_xnee8a.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpq_xnee8a.cpp:4:\n/tmp/tmpq_xnee8a.cpp:18:44: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   18 |     assert(candidate((\"$78\"), (\"$\")) == (78));\n      |                                            ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cm",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string line, std::string character) {\n    int count = std::count(line.begin(), line.end(), character[0]);\n    for (int i = count + 1; i > 0; i--) {\n        int length = line.length() + (i / character.length());\n        int spaces = length - line.length();\n        int padding_left = spaces / 2;\n        int padding_right = spaces - padding_left;\n        line = std::string(padding_left, character[0]) + line + std::string(padding_right, character[0]);\n    }\n    return line;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"$78\"), (\"$\")) == (78));\n}\n\n\n",
        "answer": "(78)"
    },
    {
        "id": 771,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpyp65x8xy.cpp:4:\n/tmp/tmpyp65x8xy.cpp: In function ‘int main()’:\n/tmp/tmpyp65x8xy.cpp:19:123: error: expected ‘)’ before numeric constant\n   19 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8}))) == (1 2 3 4 5 6 7 8));\n      |                                                                                                                        ~  ^\n/tmp/tmpyp65x8xy.cpp:19:117: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   19 |     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8}))) == (1 2 3 4 5 6 7 8));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                                   |\n      |                     std::vector<long int>                                                                               int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpyp65x8xy.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> items) {\n    std::vector<long> odd_positioned;\n    while (items.size() > 0) {\n        std::vector<long>::iterator result = std::min_element(items.begin(), items.end());\n        int position = std::distance(items.begin(), result);\n        items.erase(items.begin() + position);\n        long item = items[position];\n        items.erase(items.begin() + position);\n        odd_positioned.push_back(item);\n    }\n    return odd_positioned;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8}))) == (1 2 3 4 5 6 7 8));\n}\n\n\n",
        "answer": "(1 2 3 4 5 6 7 8)"
    },
    {
        "id": 772,
        "res": false,
        "error": "Exception",
        "error_message": "tmpqz_xys7l: /tmp/tmpqz_xys7l.cpp:15: int main(): Assertion `candidate((\"serjgpoDFdbcA.\")) == (\"serjgpoDdbcA\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string phrase) {\n    std::string result = \"\";\n    for (char& i : phrase) {\n        if (!islower(i)) {\n            result += i;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"serjgpoDFdbcA.\")) == (\"serjgpoDdbcA\"));\n}\n\n\n",
        "answer": "(\"serjgpoDdbcA\")"
    },
    {
        "id": 773,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmphablhc9p.cpp:3:\n/tmp/tmphablhc9p.cpp: In function ‘int main()’:\n/tmp/tmphablhc9p.cpp:11:116: error: no match for ‘operator==’ (operand types are ‘long int’ and ‘std::tuple<int, int>’)\n   11 |     assert(candidate((std::vector<long>({(long)-7, (long)3, (long)1, (long)-1, (long)-1, (long)0, (long)4})), (6)) == (std::make_tuple(3, 1)));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                                                                                                 |\n      |                     long int                                                                                                          std::tuple<int, int>\nIn file included from /usr/include/c++/11/regex:63,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:110,\n                 from /tmp/tmphablhc9p.cpp:3:\n/usr/include/c++/11/bits/regex.h:1059:5: note: candidate: ‘template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)’\n 1059 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/regex.h:1059:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmphablhc9p.cpp:3:\n/tmp/tmphablhc9p.cpp:11:141: note:   mismatched types ‘const std::__cxx11::sub_match<_BiIter>’ and ‘long int’\n   11 |     assert(candidate((std::vector<long>({(long)-7, (long)3, (long)1, (long)-1, (long)-1, (long)0, (long)4})), (6)) == (std::make_tuple(3, 1)));\n      |                                        ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> nums, long n) {\n    long result = nums[n];\n    nums.erase(nums.begin() + n);\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)-7, (long)3, (long)1, (long)-1, (long)-1, (long)0, (long)4})), (6)) == (std::make_tuple(3, 1)));\n}\n\n\n",
        "answer": "(std::make_tuple(3, 1))"
    },
    {
        "id": 774,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpflrc05bf.cpp:3:\n/tmp/tmpflrc05bf.cpp: In function ‘int main()’:\n/tmp/tmpflrc05bf.cpp:11:43: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   11 |     assert(candidate((23), (\"Cornareti\")) == (23));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                         |\n      |                     |                         int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpflrc05bf.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpflrc05bf.cpp:3:\n/tmp/tmpflrc05bf.cpp:11:49: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   11 |     assert(candidate((23), (\"Cornareti\")) == (23));\n      |                                                 ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n              ",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(long num, std::string name) {\n    std::stringstream ss;\n    ss << \"quiz leader = \" << name << \", count = \" << num;\n    return ss.str();\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((23), (\"Cornareti\")) == (23));\n}\n\n\n",
        "answer": "(23)"
    },
    {
        "id": 775,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp662zzew6.cpp:3:\n/tmp/tmp662zzew6.cpp: In function ‘int main()’:\n/tmp/tmp662zzew6.cpp:13:90: error: no match for ‘operator==’ (operand types are ‘std::vector<long int>’ and ‘int’)\n   13 |     assert(candidate((std::vector<long>({(long)2, (long)6, (long)1, (long)3, (long)1}))) == (6, 3, 2, 1, 3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~\n      |                     |                                                                                  |\n      |                     std::vector<long int>                                                              int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmp662zzew6.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp662zzew6.cpp:3:\n/tmp/tmp662zzew6.cpp:13:107: note:   ‘std::vector<long int>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   13 |     assert(candidate((std::vector<long>({(long)2, (long)6, (long)1, (long)3, (long)1}))) == (6, 3, 2, 1",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<long> f(std::vector<long> nums) {\n    int count = nums.size();\n    for (int i = 0; i < count / 2; i++) {\n        std::swap(nums[i], nums[count - i - 1]);\n    }\n    return nums;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)2, (long)6, (long)1, (long)3, (long)1}))) == (6, 3, 2, 1, 3));\n}\n\n\n",
        "answer": "(6, 3, 2, 1, 3)"
    },
    {
        "id": 776,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpct_a8e80.cpp:3:\n/tmp/tmpct_a8e80.cpp: In function ‘int main()’:\n/tmp/tmpct_a8e80.cpp:15:51: error: expected primary-expression before ‘)’ token\n   15 |     assert(candidate((std::map<long,long>())) == ());\n      |                                                   ^\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,long> f(std::map<long,long> dictionary) {\n    std::map<std::string, long> a;\n    for (auto iter = dictionary.begin(); iter != dictionary.end(); ++iter) {\n        if (iter->first % 2 != 0) {\n            a['$' + std::to_string(iter->first)] = iter->second;\n        }\n    }\n    return a;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<long,long>())) == ());\n}\n\n\n",
        "answer": "()"
    },
    {
        "id": 777,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpnr1woqfm.cpp:3:\n/tmp/tmpnr1woqfm.cpp: In function ‘int main()’:\n/tmp/tmpnr1woqfm.cpp:15:90: error: ‘avc’ was not declared in this scope\n   15 |     assert(candidate((std::vector<std::string>({(std::string)\"avc  a .d e\"})), (\"\")) == (avc  a .d e));\n      |                                                                                          ^~~\n/tmp/tmpnr1woqfm.cpp:15:95: error: expected ‘)’ before ‘a’\n   15 |     assert(candidate((std::vector<std::string>({(std::string)\"avc  a .d e\"})), (\"\")) == (avc  a .d e));\n      |                                                                                         ~     ^\n/tmp/tmpnr1woqfm.cpp:15:103: error: expected ‘)’ before ‘;’ token\n   15 |     assert(candidate((std::vector<std::string>({(std::string)\"avc  a .d e\"})), (\"\")) == (avc  a .d e));\n      |                                                                                                       ^\n/tmp/tmpnr1woqfm.cpp:15:103: error: expected ‘)’ before ‘;’ token\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpnr1woqfm.cpp:3:\n/tmp/tmpnr1woqfm.cpp:15:5: note: to match this ‘(’\n   15 |     assert(candidate((std::vector<std::string>({(std::string)\"avc  a .d e\"})), (\"\")) == (avc  a .d e));\n      |     ^~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::string> f(std::vector<std::string> names, std::string excluded) {\n    for (int i = 0; i < names.size(); i++) {\n        if (names[i].find(excluded) != std::string::npos) {\n            size_t pos = names[i].find(excluded);\n            names[i] = names[i].erase(pos, excluded.length());\n        }\n    }\n    return names;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"avc  a .d e\"})), (\"\")) == (avc  a .d e));\n}\n\n\n",
        "answer": "(avc  a .d e)"
    },
    {
        "id": 778,
        "res": false,
        "error": "Exception",
        "error_message": "tmp5m_uor4q: /tmp/tmp5m_uor4q.cpp:13: int main(): Assertion `candidate((\"mjs\"), (\"mjqwmjsqjwisojqwiso\")) == (\"mjs\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string prefix, std::string text) {\n    if (text.find(prefix) == 0) {\n        return text;\n    } else {\n        return prefix + text;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"mjs\"), (\"mjqwmjsqjwisojqwiso\")) == (\"mjs\"));\n}\n\n\n",
        "answer": "(\"mjs\")"
    },
    {
        "id": 779,
        "res": true,
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\n\nstd::string f(std::string text) {\n    std::istringstream iss(text);\n    std::vector<std::string> tokens{std::istream_iterator<std::string>{iss}, std::istream_iterator<std::string>{}};\n    std::string res = \"${first}y, ${second}x, ${third}r, ${fourth}p\";\n    for (size_t i = 0; i < tokens.size(); ++i) {\n        std::string placeholder = \"${\" + std::to_string(i + 1) + \"}\";\n        size_t pos = res.find(placeholder);\n        while (pos != std::string::npos) {\n            res.replace(pos, placeholder.length(), tokens[i]);\n            pos = res.find(placeholder, pos + tokens[i].length());\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"python ruby c javascript\")) == (\"${first}y, ${second}x, ${third}r, ${fourth}p\"));\n}\n\n\n",
        "answer": "(\"${first}y, ${second}x, ${third}r, ${fourth}p\")"
    },
    {
        "id": 780,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpgegl5t3j.cpp:3:\n/tmp/tmpgegl5t3j.cpp: In function ‘int main()’:\n/tmp/tmpgegl5t3j.cpp:25:124: error: expected ‘)’ before numeric constant\n   25 |     assert(candidate((std::vector<long>({(long)2, (long)3, (long)5, (long)2, (long)4, (long)5, (long)2, (long)89}))) == (2 3 5 2 4 5 2 89));\n      |                                                                                                                         ~  ^\n/tmp/tmpgegl5t3j.cpp:25:118: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   25 |     assert(candidate((std::vector<long>({(long)2, (long)3, (long)5, (long)2, (long)4, (long)5, (long)2, (long)89}))) == (2 3 5 2 4 5 2 89));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                                                                                                    |\n      |                     std::__cxx11::basic_string<char>                                                                     int\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpgegl5t3j.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/subs",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::vector<long> ints) {\n    std::vector<long> counts(301, 0);\n\n    for (int i : ints) {\n        counts[i]++;\n    }\n\n    std::vector<std::string> r;\n    for (int i = 0; i < counts.size(); i++) {\n        if (counts[i] >= 3) {\n            r.push_back(std::to_string(i));\n        }\n    }\n    counts.clear();\n\n    return std::accumulate(std::begin(r), std::end(r), std::string(), [](const std::string& a, const std::string& b) {\n        return a + (a.length() > 0 ? \" \" : \"\") + b;\n    });\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)2, (long)3, (long)5, (long)2, (long)4, (long)5, (long)2, (long)89}))) == (2 3 5 2 4 5 2 89));\n}\n\n\n",
        "answer": "(2 3 5 2 4 5 2 89)"
    },
    {
        "id": 781,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmplf8bicmy.cpp:3:\n/tmp/tmplf8bicmy.cpp: In function ‘int main()’:\n/tmp/tmplf8bicmy.cpp:23:48: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   23 |     assert(candidate((\"shivajimonto6\"), (\"6\")) == (6));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                              |\n      |                     |                              int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmplf8bicmy.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmplf8bicmy.cpp:3:\n/tmp/tmplf8bicmy.cpp:23:53: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   23 |     assert(candidate((\"shivajimonto6\"), (\"6\")) == (6));\n      |                                                     ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/sp",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string s, std::string ch) {\n    if(s.find(ch) == std::string::npos) {\n        return \"\";\n    }\n    \n    size_t index = s.find(ch);\n    s = s.substr(index + 1);\n    std::reverse(s.begin(), s.end());\n    \n    while(s.find(ch) != std::string::npos) {\n        index = s.find(ch);\n        s = s.substr(index + 1);\n        std::reverse(s.begin(), s.end());\n    }\n    \n    return s;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"shivajimonto6\"), (\"6\")) == (6));\n}\n\n\n",
        "answer": "(6)"
    },
    {
        "id": 782,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nbool f(std::string input) {\n    for(char c : input) {\n        if(isupper(c)) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"a j c n x X k\")) == (false));\n}\n\n\n",
        "answer": "(false)"
    },
    {
        "id": 783,
        "res": true,
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::string text, std::string comparison) {\n    int length = comparison.length();\n    if (length <= text.length()) {\n        for (int i = 0; i < length; i++) {\n            if (comparison[length - i - 1] != text[text.length() - i - 1]) {\n                return i;\n            }\n        }\n    }\n    return length;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"managed\"), (\"\")) == (0));\n}\n\n\n",
        "answer": "(0)"
    },
    {
        "id": 784,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpak_d3sci.cpp:4:\n/tmp/tmpak_d3sci.cpp: In function ‘int main()’:\n/tmp/tmpak_d3sci.cpp:13:50: error: ‘Is’ was not declared in this scope\n   13 |     assert(candidate((\"read\"), (\"Is\")) == (read, Is));\n      |                                                  ^~\n",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::tuple<std::string, std::string> f(std::string key, std::string value) {\n    std::map<std::string, std::string> dict_ = {{key, value}};\n    std::tuple<std::string, std::string> result = *dict_.begin();\n    dict_.erase(dict_.begin());\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"read\"), (\"Is\")) == (read, Is));\n}\n\n\n",
        "answer": "(read, Is)"
    },
    {
        "id": 785,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmptdtsvwfe.cpp:4:\n/tmp/tmptdtsvwfe.cpp: In function ‘int main()’:\n/tmp/tmptdtsvwfe.cpp:14:27: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   14 |     assert(candidate((1)) == (1));\n      |            ~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |         |\n      |                     |         int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmptdtsvwfe.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmptdtsvwfe.cpp:4:\n/tmp/tmptdtsvwfe.cpp:14:32: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((1)) == (1));\n      |                                ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/b",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(long n) {\n    std::string streak = \"\";\n    for (char c : std::to_string(n)) {\n        streak += c + std::string(c - '0', ' ');\n    }\n    return streak;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((1)) == (1));\n}\n\n\n",
        "answer": "(1)"
    },
    {
        "id": 786,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmppfhprs05.cpp:3:\n/tmp/tmppfhprs05.cpp: In function ‘int main()’:\n/tmp/tmppfhprs05.cpp:13:42: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   13 |     assert(candidate((\"19kefp7\"), (\"9\")) == (19));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~\n      |                     |                        |\n      |                     |                        int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmppfhprs05.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmppfhprs05.cpp:3:\n/tmp/tmppfhprs05.cpp:13:48: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   13 |     assert(candidate((\"19kefp7\"), (\"9\")) == (19));\n      |                                                ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 fro",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string letter) {\n    if (text.find(letter) != std::string::npos) {\n        size_t start = text.find(letter);\n        return text.substr(start + 1) + text.substr(0, start + 1);\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"19kefp7\"), (\"9\")) == (19));\n}\n\n\n",
        "answer": "(19)"
    },
    {
        "id": 787,
        "res": false,
        "error": "Exception",
        "error_message": "tmp0gd4k17w: /tmp/tmp0gd4k17w.cpp:14: int main(): Assertion `candidate((\"xzd\")) == (\"XZD\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    if (text.length() == 0) {\n        return \"\";\n    }\n    transform(text.begin(), text.end(), text.begin(), ::tolower);\n    text[0] = toupper(text[0]);\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"xzd\")) == (\"XZD\"));\n}\n\n\n",
        "answer": "(\"XZD\")"
    },
    {
        "id": 788,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpkxh0p9m3.cpp:3:\n/tmp/tmpkxh0p9m3.cpp: In function ‘int main()’:\n/tmp/tmpkxh0p9m3.cpp:12:48: error: ‘hello’ was not declared in this scope; did you mean ‘ftello’?\n   12 |     assert(candidate((\"hello.txt\"), (\"/\")) == (hello.txt));\n      |                                                ^~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string suffix) {\n    if(suffix.find(\"/\") == 0) {\n        return text + suffix.substr(1);\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"hello.txt\"), (\"/\")) == (hello.txt));\n}\n\n\n",
        "answer": "(hello.txt)"
    },
    {
        "id": 789,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpw2ujkp9j.cpp:3:\n/tmp/tmpw2ujkp9j.cpp: In function ‘int main()’:\n/tmp/tmpw2ujkp9j.cpp:20:40: error: expected primary-expression before ‘long’\n   20 |     assert(candidate((\"bR\"), (-1)) == (long));\n      |                                        ^~~~\n/tmp/tmpw2ujkp9j.cpp:20:40: error: expected ‘)’ before ‘long’\n   20 |     assert(candidate((\"bR\"), (-1)) == (long));\n      |                                       ~^~~~\n/tmp/tmpw2ujkp9j.cpp:20:46: error: expected ‘)’ before ‘;’ token\n   20 |     assert(candidate((\"bR\"), (-1)) == (long));\n      |                                              ^\n/tmp/tmpw2ujkp9j.cpp:20:46: error: expected ‘)’ before ‘;’ token\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpw2ujkp9j.cpp:3:\n/tmp/tmpw2ujkp9j.cpp:20:5: note: to match this ‘(’\n   20 |     assert(candidate((\"bR\"), (-1)) == (long));\n      |     ^~~~~~\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, long n) {\n    if (n < 0 || text.length() <= n) {\n        return text;\n    }\n    std::string result = text.substr(0, n);\n    int i = result.length() - 1;\n    while (i >= 0) {\n        if (result[i] != text[i]) {\n            break;\n        }\n        i--;\n    }\n    return text.substr(0, i + 1);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"bR\"), (-1)) == (long));\n}\n\n\n",
        "answer": "(long)"
    },
    {
        "id": 790,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpx_5c9dwl.cpp:4:\n/tmp/tmpx_5c9dwl.cpp: In function ‘int main()’:\n/tmp/tmpx_5c9dwl.cpp:14:96: error: no match for ‘operator==’ (operand types are ‘std::tuple<bool, bool>’ and ‘bool’)\n   14 |     assert(candidate((std::map<std::string,std::string>({{\"i\", \"1\"}, {\"love\", \"parakeets\"}}))) == (false, true));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~\n      |                     |                                                                                   |\n      |                     std::tuple<bool, bool>                                                              bool\nIn file included from /usr/include/c++/11/regex:63,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:110,\n                 from /tmp/tmpx_5c9dwl.cpp:4:\n/usr/include/c++/11/bits/regex.h:1059:5: note: candidate: ‘template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)’\n 1059 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/regex.h:1059:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpx_5c9dwl.cpp:4:\n/tmp/tmpx_5c9dwl.cpp:14:111: note:   ‘std::tuple<bool, bool>’ is not derived from ‘const std::__cxx11::sub_match<_BiIter>’\n   14 |     assert(candidate((std::map<std::string,std::string>({{\"i\", \"1\"}, {\"love\", \"parakeets\"}}))) == (false, true));\n      |                                                                                                               ^\nIn file included from /usr/include/c++/11/regex:63,\n                 from /usr/incl",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::tuple<bool, bool> f(std::map<std::string,std::string> d) {\n    std::map<std::string, std::map<std::string, std::string>> r = {\n        {\"c\", d},\n        {\"d\", d}\n    };\n    return std::make_tuple(false, r[\"c\"] == r[\"d\"]);\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,std::string>({{\"i\", \"1\"}, {\"love\", \"parakeets\"}}))) == (false, true));\n}\n\n\n",
        "answer": "(false, true)"
    },
    {
        "id": 791,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmphoqnv6u5.cpp:3:\n/tmp/tmphoqnv6u5.cpp: In function ‘int main()’:\n/tmp/tmphoqnv6u5.cpp:14:35: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   14 |     assert(candidate((8999), (2)) == (9999));\n      |            ~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~\n      |                     |                 |\n      |                     |                 int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmphoqnv6u5.cpp:3:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmphoqnv6u5.cpp:3:\n/tmp/tmphoqnv6u5.cpp:14:43: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   14 |     assert(candidate((8999), (2)) == (9999));\n      |                                           ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(long integer, long n) {\n    int i = 1;\n    std::string text = std::to_string(integer);\n    while (i + text.length() < n) {\n        i += text.length();\n    }\n    return std::string(i + text.length() - text.length(), '0') + text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((8999), (2)) == (9999));\n}\n\n\n",
        "answer": "(9999)"
    },
    {
        "id": 792,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpki3fvqyk.cpp:3:\n/tmp/tmpki3fvqyk.cpp: In function ‘int main()’:\n/tmp/tmpki3fvqyk.cpp:19:170: error: missing template arguments before ‘(’ token\n   19 |     assert(candidate((std::vector<std::string>({(std::string)\"a\", (std::string)\"b\"})), (std::vector<std::string>({(std::string)\"car\", (std::string)\"dog\"}))) == (std::map({\"a\": (std::vector<std::string> {\"b\", \"c\"}), \"car\": (std::vector<std::string> {\"d\", \"e\"})}) =\n      |                                                                                                                                                                          ^\n/tmp/tmpki3fvqyk.cpp:19:175: error: expected ‘}’ before ‘:’ token\n   19 |     assert(candidate((std::vector<std::string>({(std::string)\"a\", (std::string)\"b\"})), (std::vector<std::string>({(std::string)\"car\", (std::string)\"dog\"}))) == (std::map({\"a\": (std::vector<std::string> {\"b\", \"c\"}), \"car\": (std::vector<std::string> {\"d\", \"e\"})}) =\n      |                                                                                                                                                                           ~   ^\n/tmp/tmpki3fvqyk.cpp:19:175: error: expected ‘)’ before ‘:’ token\n   19 |     assert(candidate((std::vector<std::string>({(std::string)\"a\", (std::string)\"b\"})), (std::vector<std::string>({(std::string)\"car\", (std::string)\"dog\"}))) == (std::map({\"a\": (std::vector<std::string> {\"b\", \"c\"}), \"car\": (std::vector<std::string> {\"d\", \"e\"})}) =\n      |                                                                                                                                                                          ~    ^\n/tmp/tmpki3fvqyk.cpp:19:221: error: expected ‘)’ before ‘:’ token\n   19 |     assert(candidate((std::vector<std::string>({(std::string)\"a\", (std::string)\"b\"})), (std::vector<std::string>({(std::string)\"car\", (std::st",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::map<std::string,std::vector<std::string>> f(std::vector<std::string> l1, std::vector<std::string> l2) {\n    std::map<std::string, std::vector<std::string>> result;\n\n    if (l1.size() != l2.size()) {\n        return result;\n    }\n\n    for (const std::string& s : l1) {\n        result[s] = l2;\n    }\n\n    return result;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<std::string>({(std::string)\"a\", (std::string)\"b\"})), (std::vector<std::string>({(std::string)\"car\", (std::string)\"dog\"}))) == (std::map({\"a\": (std::vector<std::string> {\"b\", \"c\"}), \"car\": (std::vector<std::string> {\"d\", \"e\"})}) = \n{\n    \"a\": (std::vector<std::string> {\"b\", \"c\"}),\n    \"car\": (std::vector<std::string> {\"d\", \"e\"})\n}\n)));\n}\n\n\n",
        "answer": "(std::map({\"a\": (std::vector<std::string> {\"b\", \"c\"}), \"car\": (std::vector<std::string> {\"d\", \"e\"})}) = \n{\n    \"a\": (std::vector<std::string> {\"b\", \"c\"}),\n    \"car\": (std::vector<std::string> {\"d\", \"e\"})\n}\n))"
    },
    {
        "id": 793,
        "res": false,
        "error": "Exception",
        "error_message": "tmpxf7k_7ui: /tmp/tmpxf7k_7ui.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)1, (long)2, (long)4, (long)3, (long)2, (long)1})), (0), (3)) == (2)' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nlong f(std::vector<long> lst, long start, long end) {\n    long count = 0;\n    for (long i = start; i < end; i++) {\n        for (long j = i; j < end; j++) {\n            if (lst[i] != lst[j]) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)4, (long)3, (long)2, (long)1})), (0), (3)) == (2));\n}\n\n\n",
        "answer": "(2)"
    },
    {
        "id": 794,
        "res": 0
    },
    {
        "id": 795,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpvvt4vg74.cpp:4:\n/tmp/tmpvvt4vg74.cpp: In function ‘int main()’:\n/tmp/tmpvvt4vg74.cpp:22:49: error: no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   22 |     assert(candidate((\"Fu,ux zfujijabji pfu.\")) == (3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~\n      |                     |                               |\n      |                     |                               int\n      |                     std::__cxx11::basic_string<char>\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/bits/specfun.h:45,\n                 from /usr/include/c++/11/cmath:1935,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:41,\n                 from /tmp/tmpvvt4vg74.cpp:4:\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’\n 1155 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,\n      |     ^~~~~~~~\n/usr/include/c++/11/bits/stl_iterator.h:1155:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmpvvt4vg74.cpp:4:\n/tmp/tmpvvt4vg74.cpp:22:54: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’\n   22 |     assert(candidate((\"Fu,ux zfujijabji pfu.\")) == (3));\n      |                                                      ^\nIn file included from /usr/include/c++/11/bits/stl_algobase.h:67,\n                 from /usr/include/c++/11/b",
        "code": "\n\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text) {\n    for (std::size_t i = 0; i < text.size(); ++i) {\n        if (i == 0 || !std::isalpha(text[i - 1])) {\n            text[i] = std::toupper(text[i]);\n        } else {\n            text[i] = std::tolower(text[i]);\n        }\n    }\n    size_t start_pos = 0;\n    while((start_pos = text.find(\"Io\", start_pos)) != std::string::npos) {\n        text.replace(start_pos, 2, \"io\");\n        start_pos += 2;\n    }\n    return text;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"Fu,ux zfujijabji pfu.\")) == (3));\n}\n\n\n",
        "answer": "(3)"
    },
    {
        "id": 796,
        "res": false,
        "error": "Exception",
        "error_message": "tmpkbh7get4: /tmp/tmpkbh7get4.cpp:13: int main(): Assertion `candidate((\"fnuiyh\"), (\"ni\")) == (\"fuiyhni\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string str, std::string toget) {\n    if (str.find(toget) == 0) {\n        return str.substr(toget.size());\n    } else {\n        return str;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"fnuiyh\"), (\"ni\")) == (\"fuiyhni\"));\n}\n\n\n",
        "answer": "(\"fuiyhni\")"
    },
    {
        "id": 797,
        "res": false,
        "error": "SyntaxError",
        "error_message": "In file included from /usr/include/c++/11/cassert:44,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:33,\n                 from /tmp/tmp_21rdhes.cpp:3:\n/tmp/tmp_21rdhes.cpp: In function ‘int main()’:\n/tmp/tmp_21rdhes.cpp:14:84: error: no match for ‘operator==’ (operand types are ‘std::vector<std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long int> >’ and ‘int’)\n   14 |     assert(candidate((std::map<std::string,long>({{\"a\", 1}, {\"b\", 2}, {\"c\", 3}}))) == (1, 2, 3));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~\n      |                     |                                                                      |\n      |                     |                                                                      int\n      |                     std::vector<std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long int> >\nIn file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,\n                 from /usr/include/c++/11/bits/allocator.h:46,\n                 from /usr/include/c++/11/string:41,\n                 from /usr/include/c++/11/bits/locale_classes.h:40,\n                 from /usr/include/c++/11/bits/ios_base.h:41,\n                 from /usr/include/c++/11/ios:42,\n                 from /usr/include/c++/11/istream:38,\n                 from /usr/include/c++/11/sstream:38,\n                 from /usr/include/c++/11/complex:45,\n                 from /usr/include/c++/11/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/11/bits/stdc++.h:54,\n                 from /tmp/tmp_21rdhes.cpp:3:\n/usr/include/c++/11/ext/new_allocator.h:183:9: note: candidate: ‘template<class _Up> bool __gnu_cxx::operator==(const __gnu_cxx::new_allocator<std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long int> >&, const __gnu_cxx::new_allocator<_Tp>&)’\n  183 |         operator==(co",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::vector<std::tuple<std::string, long>> f(std::map<std::string,long> dct) {\n    std::vector<std::tuple<std::string, long>> lst;\n    for (const auto& pair : dct) {\n        lst.push_back(std::make_tuple(pair.first, pair.second));\n    }\n    std::sort(lst.begin(), lst.end());\n    return lst;\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((std::map<std::string,long>({{\"a\", 1}, {\"b\", 2}, {\"c\", 3}}))) == (1, 2, 3));\n}\n\n\n",
        "answer": "(1, 2, 3)"
    },
    {
        "id": 798,
        "res": false,
        "error": "Exception",
        "error_message": "tmpq5xyyktt: /tmp/tmpq5xyyktt.cpp:12: int main(): Assertion `candidate((\"@hihu@!\"), (\"@hihu\")) == (\"hihu\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string text, std::string pre) {\n    if (text.substr(0, pre.length()) != pre) {\n        return text;\n    }\n    return text.substr(pre.length());\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"@hihu@!\"), (\"@hihu\")) == (\"hihu\"));\n}\n\n\n",
        "answer": "(\"hihu\")"
    },
    {
        "id": 799,
        "res": false,
        "error": "Exception",
        "error_message": "tmp1sstmd86: /tmp/tmp1sstmd86.cpp:14: int main(): Assertion `candidate((\"eqe-;ew22\")) == (\"negnana\")' failed.\n",
        "code": "\n#include<assert.h>\n#include<bits/stdc++.h>\nstd::string f(std::string st) {\n    if (st[0] == '~') {\n        std::string e = std::string(10 - st.size(), 's') + st;\n        return f(e);\n    } else {\n        return std::string(10 - st.size(), 'n') + st;\n    }\n}\nint main() {\n    auto candidate = f;\n    assert(candidate((\"eqe-;ew22\")) == (\"negnana\"));\n}\n\n\n",
        "answer": "(\"negnana\")"
    }
]