[
    {
        "id": 0,
        "code": "function f(nums::Vector{Int64})::Vector{Tuple{Int64, Int64}} \n    output = []\n    for n in nums\n        push!(output, (count(x->x==n, nums), n))\n    end\n    sort!(output, rev=true)\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 1, 3, 1, 3, 1]) == [(4, 1), (4, 1), (4, 1), (4, 1), (2, 3), (2, 3)])\nend\n"
    },
    {
        "id": 1
    },
    {
        "id": 2,
        "code": "function f(text::String)::String \n    new_text = collect(text)\n    for i in '+'\n        if i in new_text\n            filter!(x -> x != i, new_text)\n        end\n    end\n    return join(new_text, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"hbtofdeiequ\") == \"hbtofdeiequ\")\nend\n"
    },
    {
        "id": 3,
        "code": "\nfunction f(text::String, value::String)::String \n    text_list = collect(text)\n    append!(text_list, value)\n    return join(text_list, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"bcksrut\", \"q\") == \"bcksrutq\")\nend\n"
    },
    {
        "id": 4,
        "code": "function f(array::Vector{String})::String \n    s = ' '\n    s *= join(array)\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\" \", \"  \", \"    \", \"   \"]) == \"           \")\nend\n"
    },
    {
        "id": 5,
        "code": "\nfunction f(text::String, lower::String, upper::String)::Tuple{Int64, String} \n    count = 0\n    new_text = []\n    for char in text\n        char = isdigit(char) ? lower : upper\n        if char in ['p', 'C']\n            count += 1\n        end\n        push!(new_text, char)\n    end\n    return count, join(new_text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"DSUWeqExTQdCMGpqur\", \"a\", \"x\") == (0, \"xxxxxxxxxxxxxxxxxx\"))\nend\n"
    },
    {
        "id": 6
    },
    {
        "id": 7,
        "code": "\nfunction f(list::Vector{Int64})::Vector{Int64}\n    original = copy(list)\n    while length(list) > 1\n        popat!(list, length(list))\n        for i in 1:length(list)\n            popat!(list, i)\n        end\n    end\n    list = copy(original)\n    if !isempty(list)\n        popfirst!(list)\n    end\n    return list\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\nend\n"
    },
    {
        "id": 8,
        "code": "function f(string::String, encryption::Int64)::String \n    if encryption == 0\n        return string\n    else\n        return uppercase(string)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"UppEr\", 0) == \"UppEr\")\nend\n"
    },
    {
        "id": 9,
        "code": "function f(t::String)::Bool \n    for c in t\n        if !isdigit(c)\n            return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"#284376598\") == false)\nend\n"
    },
    {
        "id": 10,
        "code": "function f(text::String)::String \n    new_text = \"\"\n    for ch in lowercase(strip(text))\n        if isnumeric(ch) || ch in ['Ä', 'ä', 'Ï', 'ï', 'Ö', 'ö', 'Ü', 'ü']\n            new_text *= ch\n        end\n    end\n    return new_text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\") == \"\")\nend\n"
    },
    {
        "id": 11
    },
    {
        "id": 12,
        "code": "function f(s::String, x::String)::String \n    count = 0\n    while startswith(s, x) && count < length(s) - length(x)\n        s = s[length(x) + 1:end]\n        count += length(x)\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"If you want to live a happy life! Daniel\", \"Daniel\") == \"If you want to live a happy life! Daniel\")\nend\n"
    },
    {
        "id": 13,
        "code": "using Base.Iterators: count\n\nfunction f(names::Vector{String})::Int64 \n    count = length(names)\n    numberOfNames = 0\n    for name in names\n        if all(isletter, name)\n            numberOfNames += 1\n        end\n    end\n    return numberOfNames\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"sharron\", \"Savannah\", \"Mike Cherokee\"]) == 2)\nend\n"
    },
    {
        "id": 14,
        "code": "function f(s::String)::String \n    arr = reverse(collect(strip(s)))\n    return join(arr, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"   OOP   \") == \"POO\")\nend\n"
    },
    {
        "id": 15,
        "code": "function f(text::String, wrong::String, right::String)::String \n    new_text = replace(text, wrong => right)\n    return uppercase(new_text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"zn kgd jw lnt\", \"h\", \"u\") == \"ZN KGD JW LNT\")\nend\n"
    },
    {
        "id": 16,
        "code": "function f(text::String, suffix::String)::String \n    if endswith(text, suffix)\n        return text[1:endof(text)-length(suffix)]\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"zejrohaj\", \"owc\") == \"zejrohaj\")\nend\n"
    },
    {
        "id": 17,
        "code": "function f(text::String)::Int64 \n    return findfirst(',', text) == nothing ? -1 : findfirst(',', text) - 1\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"There are, no, commas, in this text\") == 9)\nend\n"
    },
    {
        "id": 18,
        "code": "function f(array::Vector{Int64}, elem::Int64)::Vector{Int64} \n    k = 1\n    l = copy(array)\n    for i in l\n        if i > elem\n            insert!(array, k, elem)\n            break\n        end\n        k += 1\n    end\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([5, 4, 3, 2, 1, 0], 3) == [3, 5, 4, 3, 2, 1, 0])\nend\n"
    },
    {
        "id": 19,
        "code": "function f(x::String, y::String)::String \n    tmp = join([c == '9' ? '0' : '9' for c in reverse(y)], \"\")\n    try\n        x_parsed = parse(Int, x)\n        tmp_parsed = parse(Int, tmp)\n        return string(x_parsed * tmp_parsed)\n    catch\n        return x\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\", \"sdasdnakjsda80\") == \"\")\nend\n"
    },
    {
        "id": 20,
        "code": "function f(text::String)::String \n    result = \"\"\n    for i in reverse(1:length(text))\n        result *= text[i]\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"was,\") == \",saw\")\nend\n"
    },
    {
        "id": 21,
        "code": "function f(array::Vector{Int64})::Vector{Int64} \n    n = pop!(array)\n    push!(array, n)\n    push!(array, n)\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 1, 2, 2]) == [1, 1, 2, 2, 2])\nend\n"
    },
    {
        "id": 22,
        "code": "function f(a::Int64)::Union{Vector{Int64}, Int64} \n    if a == 0\n        return [0]\n    end\n    \n    result = []\n    while a > 0\n        push!(result, a % 10)\n        a = div(a, 10)\n    end\n    reverse!(result)\n    \n    return parse(Int, join(string(i) for i in result))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(0) == [0])\nend\n"
    },
    {
        "id": 23,
        "code": "function f(text::String, chars::String)::String\n    if !isempty(chars)\n        text = rstrip(text, Set(chars))\n    else\n        text = rstrip(text, ' ')\n    end\n    if text == \"\"\n        return \"-\"\n    end\n    return text\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"new-medium-performing-application - XQuery 2.2\", \"0123456789-\") == \"new-medium-performing-application - XQuery 2.\")\nend\n"
    },
    {
        "id": 24,
        "code": "\nfunction f(nums::Vector{Int64}, i::Int64)::Vector{Int64}\n    popat!(nums, i+1)\n    return nums\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([35, 45, 3, 61, 39, 27, 47], 0) == [45, 3, 61, 39, 27, 47])\nend\n"
    },
    {
        "id": 25,
        "code": "function f(d::Dict{String, Int})::Dict{String, Int}\n    d = copy(d)\n    pop!(d)\n    return d\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"l\" => 1, \"t\" => 2, \"x:\" => 3)) == Dict(\"l\" => 1, \"t\" => 2))\nend\n"
    },
    {
        "id": 26,
        "code": "function f(items::String, target::String)::Union{Int64, String} \n    for (i, word) in enumerate(split(items))\n        if occursin(word, target)\n            return i + 1\n        end\n        \n        if contains(word, \".\") && (first(word) == '.' || last(word) == '.')\n            return \"error\"\n        end\n    end\n    return \".\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"qy. dg. rnvprt rse.. irtwv tx..\", \"wtwdoacb\") == \"error\")\nend\n"
    },
    {
        "id": 27,
        "code": "function f(w::String)::Bool \n    ls = collect(w)\n    omw = \"\"\n    while length(ls) > 0\n        omw *= popfirst!(ls)\n        if length(ls) * 2 > length(w)\n            return w[length(ls) + 1:end] == omw\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"flak\") == false)\nend\n"
    },
    {
        "id": 28,
        "code": "function f(mylist::Vector{Int64})::Bool \n    revl = copy(mylist)\n    reverse!(revl)\n    sort!(mylist, rev=true)\n    return mylist == revl\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([5, 8]) == true)\nend\n"
    },
    {
        "id": 29,
        "code": "function f(text::String)::String \n    nums = filter(c -> isnumeric(c), text)\n    nums = collect(nums)\n    @assert length(nums) > 0\n    return join(nums, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"-123   \t+314\") == \"123314\")\nend\n"
    },
    {
        "id": 30
    },
    {
        "id": 31,
        "code": "function f(string::String)::Int64 \n    upper = 0\n    for c in string\n        if isuppercase(c)\n            upper += 1\n        end\n    end\n    return upper * (upper % 2 == 0 ? 2 : 1)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"PoIOarTvpoead\") == 8)\nend\n"
    },
    {
        "id": 32,
        "code": "function f(s::String, sep::String)::String \n    reverse = ['*' * e for e in split(s, sep)]\n    return join(reverse[end:-1:1], ';')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"volume\", \"l\") == \"*ume;*vo\")\nend\n"
    },
    {
        "id": 33
    },
    {
        "id": 34,
        "code": "function f(nums::Vector{Int64}, odd1::Int64, odd2::Int64)::Vector{Int64} \n    while odd1 in nums\n        filter!(x -> x != odd1, nums)\n    end\n    \n    while odd2 in nums\n        filter!(x -> x != odd2, nums)\n    end\n    \n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3, 7, 7, 6, 8, 4, 1, 2, 3, 5, 1, 3, 21, 1, 3], 3, 1) == [2, 7, 7, 6, 8, 4, 2, 5, 21])\nend\n"
    },
    {
        "id": 35,
        "code": "\nfunction f(pattern::String, items::Vector{String})::Vector{Int64}\n    result = Int64[]\n    for text in items\n        pos = findlast(pattern, text)\n        if pos !== nothing\n            push!(result, pos.start - 1)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\" B \", [\" bBb \", \" BaB \", \" bB\", \" bBbB \", \" bbb\"]) == Vector{Int64}([]))\nend\n"
    },
    {
        "id": 36,
        "code": "\nfunction f(text::String, chars::String)::String \n    chars = collect(chars)\n    text = collect(text)\n    for char in reverse(text)\n        if char in chars\n            poplast!(text)\n        else\n            break\n        end\n    end\n    return String(text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ha\", \"\") == \"ha\")\nend\n"
    },
    {
        "id": 37,
        "code": "function f(text::String)::Vector{String} \n    text_arr = [text[j:end] for j in 1:length(text)]\n    return text_arr\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"123\") == [\"123\", \"23\", \"3\"])\nend\n"
    },
    {
        "id": 38,
        "code": "function f(string::String)::String \n    return replace(titlecase(string), \" \" => \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"1oE-err bzz-bmm\") == \"1Oe-ErrBzz-Bmm\")\nend\n"
    },
    {
        "id": 39,
        "code": "function f(array::Vector{Int64}, elem::Int64)::Int64 \n    if elem in array\n        return findfirst(x -> x == elem, array) - 1\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([6, 2, 7, 1], 6) == 0)\nend\n"
    },
    {
        "id": 40,
        "code": "function f(text::String)::String \n    return string(text, \"#\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"the cow goes moo\") == \"the cow goes moo#\")\nend\n"
    },
    {
        "id": 41,
        "code": "function f(array::Vector{Int64}, values::Vector{Int64})::Vector{Int64} \n    reverse!(array)\n    for value in values\n        insert!(array, length(array) ÷ 2 + 1, value)\n    end\n    reverse!(array)\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([58], [21, 92]) == [58, 92, 21])\nend\n"
    },
    {
        "id": 42,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    nums = []\n    for num in nums\n        push!(nums, num * 2)\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([4, 3, 2, 1, 2, -1, 4, 2]) == Vector{Int64}([]))\nend\n"
    },
    {
        "id": 43,
        "code": "function f(n::String)::Int64 \n    for i in n\n        if !isdigit(Char(i))\n            n = \"-1\"\n            break\n        end\n    end\n    return parse(Int64, n)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"6 ** 2\") == -1)\nend\n"
    },
    {
        "id": 44,
        "code": "function f(text::String)::String \n    ls = collect(text)\n    for i in 1:length(ls)\n        if ls[i] != '+'\n            insert!(ls, i, '+')\n            insert!(ls, i, '*')\n            break\n        end\n    end\n    return join(ls, '+')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"nzoh\") == \"*+++n+z+o+h\")\nend\n"
    },
    {
        "id": 45,
        "code": "function f(text::String, letter::String)::Int64 \n    counts = Dict{Char, Int}()\n    for char in text\n        if haskey(counts, char)\n            counts[char] += 1\n        else\n            counts[char] = 1\n        end\n    end\n    return get(counts, first(letter), 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"za1fd1as8f7afasdfam97adfa\", \"7\") == 2)\nend\n"
    },
    {
        "id": 46,
        "code": "function f(l::Vector{String}, c::String)::String \n    return join(l, c)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"many\", \"letters\", \"asvsz\", \"hello\", \"man\"], \"\") == \"manylettersasvszhelloman\")\nend\n"
    },
    {
        "id": 47,
        "code": "\nfunction f(text::String)::Bool \n    length_text = length(text)\n    half = div(length_text, 2)\n    encode = codeunits(text[1:half])\n    return text[half+1:end] == String(encode)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"bbbbr\") == false)\nend\n"
    },
    {
        "id": 48,
        "code": "function f(names::Vector{String})::String \n    if names == []\n        return \"\"\n    end\n    smallest = names[1]\n    for name in names[2:end]\n        if name < smallest\n            smallest = name\n        end\n    end\n    deleteat!(names, findfirst(x -> x == smallest, names))\n    return join(smallest)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{String}([])) == \"\")\nend\n"
    },
    {
        "id": 49,
        "code": "\nis_valid_identifier(s::AbstractString) = all(isletter(c) || c in ['_', '!'] for c in s)\n\nfunction f(text::String)::String \n    if is_valid_identifier(text)\n        return join(c for c in text if isdigit(c))\n    else\n        return join(text)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"816\") == \"816\")\nend\n"
    },
    {
        "id": 50,
        "code": "function f(lst::Vector{String})::Vector{Int64} \n    lst = []\n    for i in 1:length(lst) + 1\n        push!(lst, 1)\n    end\n    return lst\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"a\", \"c\", \"v\"]) == [1])\nend\n"
    },
    {
        "id": 51,
        "code": "function f(num::Int64)::Union{String, Int64} \n    s = repeat(\"<\", 10)\n    if num % 2 == 0\n        return s\n    else\n        return num - 1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(21) == 20)\nend\n"
    },
    {
        "id": 52,
        "code": "function f(text::String)::String \n    a = Char[]\n    for i in 1:length(text)\n        if !isdigit(text[i])\n            push!(a, text[i])\n        end\n    end\n    return join(a, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"seiq7229 d27\") == \"seiq d\")\nend\n"
    },
    {
        "id": 53,
        "code": "function f(text::String)::Vector{Int64} \n    occ = Dict{Char, Int}()\n    for ch in text\n        name = Dict('a' => 'b', 'b' => 'c', 'c' => 'd', 'd' => 'e', 'e' => 'f')\n        name = get(name, ch, ch)\n        occ[name] = get(occ, name, 0) + 1\n    end\n    return [x for x in values(occ)]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"URW rNB\") == [1, 1, 1, 1, 1, 1, 1])\nend\n"
    },
    {
        "id": 54,
        "code": "function f(text::String, s::Int64, e::Int64)::Int64\n    sublist = text[s+1:e]  # Julia uses 1-based indexing, so adjust the start index\n    if isempty(sublist)\n        return -1\n    end\n    min_char = minimum(sublist)\n    return findfirst(==(min_char), sublist) - 1  # Adjust for 0-based index in the result\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"happy\", 0, 3) == 1)\nend\n"
    },
    {
        "id": 55,
        "code": "function f(array::Vector{Int64})::Vector{Int64} \n    array_2 = Int64[]\n    for i in array\n        if i > 0\n            push!(array_2, i)\n        end\n    end\n    sort!(array_2, rev=true)\n    return array_2\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([4, 8, 17, 89, 43, 14]) == [89, 43, 17, 14, 8, 4])\nend\n"
    },
    {
        "id": 56,
        "code": "function f(sentence::String)::Bool \n    for c in sentence\n        if isascii(c) == false\n            return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"1z1z1\") == true)\nend\n"
    },
    {
        "id": 57,
        "code": "function f(text::String)::Int64 \n    text = uppercase(text)\n    count_upper = 0\n    for char in text\n        if isuppercase(char)\n            count_upper += 1\n        else\n            return \"no\"\n        end\n    end\n    return count_upper ÷ 2\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ax\") == 1)\nend\n"
    },
    {
        "id": 58,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    count = length(nums)\n    for i in 0:count-1\n        push!(nums, nums[i % 2 + 1])\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-1, 0, 0, 1, 1]) == [-1, 0, 0, 1, 1, -1, 0, -1, 0, -1])\nend\n"
    },
    {
        "id": 59,
        "code": "function f(s::String)::String \n    a = [char for char in s if char != ' ']\n    b = copy(a)\n    for c in reverse(a)\n        if c == ' '\n            pop!(b)\n        else\n            break\n        end\n    end\n    return join(b, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"hi \") == \"hi\")\nend\n"
    },
    {
        "id": 60,
        "code": "function f(doc::String)::String\n    for x in doc\n        if isletter(x)\n            return uppercase(string(x))\n        end\n    end\n    return \"-\"\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"raruwa\") == \"R\")\nend\n"
    },
    {
        "id": 61,
        "code": "function f(text::String)::String \n    texts = split(text)\n    if !isempty(texts)\n        xtexts = [t for t in texts if isascii(t) && !(t in [\"nada\", \"0\"])]\n        return isempty(xtexts) ? \"nada\" : xtexts[indmax(length.(xtexts))]\n    end\n    return \"nada\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\") == \"nada\")\nend\n"
    },
    {
        "id": 62
    },
    {
        "id": 63,
        "code": "function f(text::String, prefix::String)::String \n    while startswith(text, prefix)\n        text = text[length(prefix)+1:end]\n        if text == \"\"\n            break\n        end\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ndbtdabdahesyehu\", \"n\") == \"dbtdabdahesyehu\")\nend\n"
    },
    {
        "id": 64,
        "code": "function f(text::String, size::Int64)::String \n    counter = length(text)\n    for i in 1:trunc(Int, size - size % 2)\n        text = \" \" * text * \" \"\n        counter += 2\n        if counter >= size\n            return text\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"7\", 10) == \"     7     \")\nend\n"
    },
    {
        "id": 65,
        "code": "\nfunction f(nums::Vector{Int64}, index::Int64)::Int64\n    return nums[index+1] % 42 + popat!(nums, index+1) * 2\nend\n\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([3, 2, 0, 3, 7], 3) == 9)\nend\n"
    },
    {
        "id": 66,
        "code": "function f(text::String, prefix::String)::String \n    prefix_length = length(prefix)\n    if startswith(text, prefix)\n        return text[(prefix_length + 1) ÷ 2: (prefix_length - 1) ÷ 2]\n    else\n        return text\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"happy\", \"ha\") == \"\")\nend\n"
    },
    {
        "id": 67,
        "code": "function f(num1::Int64, num2::Int64, num3::Int64)::String \n    nums = [num1, num2, num3]\n    sort!(nums)\n    return string(nums[1], \",\", nums[2], \",\", nums[3])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(6, 8, 8) == \"6,8,8\")\nend\n"
    },
    {
        "id": 68,
        "code": "\nfunction f(text::String, pref::String)::String \n    if startswith(text, pref)\n        n = length(pref)\n        suffix = split(text[n+1:end], '.')[2:end]\n        prefix = split(text[1:n-1], '.')[1:end-1]\n        text = join([suffix; prefix], '.')\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"omeunhwpvr.dq\", \"omeunh\") == \"dq\")\nend\n"
    },
    {
        "id": 69,
        "code": "function f(student_marks::Dict{String, Int}, name::String)::Union{Int, String} \n    if haskey(student_marks, name)\n        value = pop!(student_marks, name)\n        return value\n    end\n    return \"Name unknown\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"882afmfp\" => 56), \"6f53p\") == \"Name unknown\")\nend\n"
    },
    {
        "id": 70,
        "code": "function f(x::String)::Int64 \n    a = 0\n    for i in split(x, ' ')\n        a += length(i)*2\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"999893767522480\") == 30)\nend\n"
    },
    {
        "id": 71
    },
    {
        "id": 72,
        "code": "function f(text::String)::Bool \n    for c in text\n        if !isdigit(c)\n            return false\n        end\n    end\n    return !isempty(text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"99\") == true)\nend\n"
    },
    {
        "id": 73,
        "code": "\nfunction f(row::String)::Tuple{Int64, Int64}\n    return (count(i -> i=='1', row), count(i -> i=='0', row))\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"100010010\") == (3, 6))\nend\n"
    },
    {
        "id": 74,
        "code": "\nfunction f(lst::Vector{Int64}, i::Int64, n::Int64)::Vector{Int64} \n    insert!(lst, i+1, n)\n    return lst\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([44, 34, 23, 82, 24, 11, 63, 99], 4, 15) == [44, 34, 23, 82, 15, 24, 11, 63, 99])\nend\n"
    },
    {
        "id": 75,
        "code": "function f(array::Vector{Int64}, elem::Int64)::Int64 \n    ind = findfirst(isequal(elem), array) - 1\n    return ind * 2 + array[end - ind] * 3\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-1, 2, 1, -8, 2], 2) == -22)\nend\n"
    },
    {
        "id": 76,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    nums = filter(x -> x > 0, nums)\n    if length(nums) <= 3\n        return nums\n    end\n    nums = reverse(nums)\n    half = div(length(nums), 2)\n    return vcat(nums[1:half], zeros(Int64, 5), nums[half+1:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([10, 3, 2, 2, 6, 0]) == [6, 2, 0, 0, 0, 0, 0, 2, 3, 10])\nend\n"
    },
    {
        "id": 77,
        "code": "\nfunction f(text::String, character::String)::String\n    last_index = findlast(character, text)\n    if last_index != nothing\n        subject = text[last_index:end]\n        return subject^count(character, text)\n    else\n        return \"\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"h ,lpvvkohh,u\", \"i\") == \"\")\nend\n"
    },
    {
        "id": 78,
        "code": "function f(text::String)::String \n    if text != \"\" && text == uppercase(text)\n        cs = Dict(zip(uppercase('A':'Z'), lowercase('a':'z')))\n        return join([get(cs, c, c) for c in text])\n    end\n    return lowercase(text)[1:3]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n\") == \"mty\")\nend\n"
    },
    {
        "id": 79,
        "code": "function f(arr::Vector{Int64})::String \n    arr = []\n    push!(arr, \"1\")\n    push!(arr, \"2\")\n    push!(arr, \"3\")\n    push!(arr, \"4\")\n    return join(arr, \",\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([0, 1, 2, 3, 4]) == \"1,2,3,4\")\nend\n"
    },
    {
        "id": 80,
        "code": "function f(s::String)::String \n    return string(reverse(rstrip(s)))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ab        \") == \"ba\")\nend\n"
    },
    {
        "id": 81
    },
    {
        "id": 82,
        "code": "function f(a::String, b::String, c::String, d::String)::String \n    return a != \"\" ? b : c != \"\" ? d : c\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"CJU\", \"BFS\", \"WBYDZPVES\", \"Y\") == \"BFS\")\nend\n"
    },
    {
        "id": 83
    },
    {
        "id": 84,
        "code": "function f(text::String)::String \n    arr = split(text)\n    result = []\n    for item in arr\n        if endswith(item, \"day\")\n            item *= \"y\"\n        else\n            item *= \"day\"\n        end\n        push!(result, item)\n    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"nwv mef ofme bdryl\") == \"nwvday mefday ofmeday bdrylday\")\nend\n"
    },
    {
        "id": 85,
        "code": "function f(n::Int64)::Vector{Float64} \n    values = Dict{Int64, Any}(0 => 3, 1 => 4.5, 2 => '-')\n    res = Dict{Any, Int64}()\n    for (i, j) in values\n        if i % n != 2\n            res[j] = n ÷ 2\n        end\n    end\n    return sort(collect(keys(res)))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(12) == [3, 4.5])\nend\n"
    },
    {
        "id": 86,
        "code": "function f(instagram::Vector{String}, imgur::Vector{String}, wins::Int64)::Union{String, Vector{String}} \n    photos = [instagram, imgur]\n    if instagram == imgur\n        return wins\n    end\n    if wins == 1\n        return pop!(photos)\n    else\n        reverse!(photos)\n        return pop!(photos)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"sdfs\", \"drcr\", \"2e\"], [\"sdfs\", \"dr2c\", \"QWERTY\"], 0) == [\"sdfs\", \"drcr\", \"2e\"])\nend\n"
    },
    {
        "id": 87,
        "code": "function f(nums::Vector{Int64})::String \n    reverse!(nums)\n    return join(string.(nums))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-1, 9, 3, 1, -2]) == \"-2139-1\")\nend\n"
    },
    {
        "id": 88,
        "code": "function f(s1::String, s2::String)::String \n    if endswith(s2, s1)\n        s2 = s2[1:endof(s2)-length(s1)]\n    end\n    return s2\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"he\", \"hello\") == \"hello\")\nend\n"
    },
    {
        "id": 89,
        "code": "\nfunction f(char::String)::Union{String,Nothing}\n    if char[1] ∉ ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        return nothing\n    end\n    if char[1] ∈ ('A', 'E', 'I', 'O', 'U')\n        return lowercase(char)\n    end\n    return uppercase(char)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"o\") == \"O\")\nend\n"
    },
    {
        "id": 90
    },
    {
        "id": 91
    },
    {
        "id": 92,
        "code": "function f(text::String)::Bool \n    return isascii(text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"wW의IV]HDJjhgK[dGIUlVO@Ess\\$coZkBqu[Ct\") == false)\nend\n"
    },
    {
        "id": 93,
        "code": "\nfunction f(n::String)::String \n    revn = collect(n)\n    result = join(revn, \"\")\n    return result * \"!\"^(length(result) + 2)\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"iq\") == \"iq!!!!\")\nend\n"
    },
    {
        "id": 94,
        "code": "function f(a::Dict{String, Int}, b::Dict{String, Int})::Dict{String, Int}\n    return merge(a, b)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"w\" => 5, \"wi\" => 10), Dict(\"w\" => 3)) == Dict(\"w\" => 3, \"wi\" => 10))\nend\n"
    },
    {
        "id": 95,
        "code": "function f(zoo::Dict{String, String})::Dict{String, String}\n    return Dict(v => k for (k, v) in pairs(zoo))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"AAA\" => \"fr\")) == Dict(\"fr\" => \"AAA\"))\nend\n"
    },
    {
        "id": 96,
        "code": "function f(text::String)::Bool \n    return !any(c -> isuppercase(c), text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"lunabotics\") == true)\nend\n"
    },
    {
        "id": 97,
        "code": "function f(lst::Vector{Int64})::Bool \n    lst = []\n    for i in lst\n        if i == 3\n            return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2, 0]) == true)\nend\n"
    },
    {
        "id": 98,
        "code": "\nfunction f(s::String)::Int64\n    return sum([isa(s, AbstractString) && isuppercase(first(s)) && all(islowercase, s[2:end]) for s in split(s)])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"SOME OF THIS Is uknowN!\") == 1)\nend\n"
    },
    {
        "id": 99
    },
    {
        "id": 100
    },
    {
        "id": 101,
        "code": "\nfunction f(array::Vector{Int64}, i_num::Int64, elem::Int64)::Vector{Int64} \n    insert!(array, i_num + 1, elem)\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-4, 1, 0], 1, 4) == [-4, 4, 1, 0])\nend\n"
    },
    {
        "id": 102,
        "code": "function f(names::Vector{String}, winners::Vector{String})::Vector{Int64} \n    ls = [findfirst(name .== names) for name in names if name in winners]\n    ls = filter(x-> x != nothing, ls) |> x->sort(x, rev=true)\n    return ls\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"e\", \"f\", \"j\", \"x\", \"r\", \"k\"], [\"a\", \"v\", \"2\", \"im\", \"nb\", \"vj\", \"z\"]) == Vector{Int64}([]))\nend\n"
    },
    {
        "id": 103,
        "code": "function f(s::String)::String \n    return join([lowercase(c) for c in s])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abcDEFGhIJ\") == \"abcdefghij\")\nend\n"
    },
    {
        "id": 104,
        "code": "\nfunction f(text::String)::Dict{String, Int64}\n    dic = Dict()\n    for char in text\n        dic[string(char)] = get(dic, string(char), 0) + 1\n    end\n    for key in keys(dic)\n        if dic[key] > 1\n            dic[key] = 1\n        end\n    end\n    return dic\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
    },
    {
        "id": 105,
        "code": "function f(text::String)::String \n    if text != uppercase(text)\n        return titlecase(text)\n    end\n    return lowercase(text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"PermissioN is GRANTed\") == \"Permission Is Granted\")\nend\n"
    },
    {
        "id": 106,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    count = length(nums)\n    for i in 1:count\n        insert!(nums, i, nums[i]*2)\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2, 8, -2, 9, 3, 3]) == [4, 4, 4, 4, 4, 4, 2, 8, -2, 9, 3, 3])\nend\n"
    },
    {
        "id": 107,
        "code": "\nfunction f(text::String)::String\n    result = []\n    for i in text\n        if isletter(i) || isdigit(i)\n            push!(result, uppercase(i))\n        else\n            push!(result, i)\n        end\n    end\n    return join(result)\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ua6hajq\") == \"UA6HAJQ\")\nend\n"
    },
    {
        "id": 108,
        "code": "\nfunction f(var::Union{Int, Vector{Int}, Dict{Any,Any}})::Int64\n    if typeof(var) == Int\n        amount = 0\n    elseif typeof(var) == Vector{Int}\n        amount = length(var)\n    elseif typeof(var) == Dict{Any,Any}\n        amount = length(keys(var))\n    end\n    nonzero = amount > 0 ? amount : 0\n    return nonzero\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(1) == 0)\nend\n"
    },
    {
        "id": 109,
        "code": "function f(nums::Vector{Int}, spot::Int, idx::Int)::Vector{Int}\n    insert!(nums, spot+1, idx)\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 0, 1, 1], 0, 9) == [9, 1, 0, 1, 1])\nend\n"
    },
    {
        "id": 110,
        "code": "function f(text::String)::Int64 \n    a = [\"\"]\n    b = \"\"\n    for i in text\n        if !isspace(i)\n            push!(a, b)\n            b = \"\"\n        else\n            b *= i\n        end\n    end\n    return length(a)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"       \") == 1)\nend\n"
    },
    {
        "id": 111,
        "code": "function f(marks::Dict{String, Int})::Tuple{Int, Int}\n    highest = 0\n    lowest = 100\n    for value in values(marks)\n        if value > highest\n            highest = value\n        end\n        if value < lowest\n            lowest = value\n        end\n    end\n    return (highest, lowest)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"x\" => 67, \"v\" => 89, \"\" => 4, \"alij\" => 11, \"kgfsd\" => 72, \"yafby\" => 83)) == (89, 4))\nend\n"
    },
    {
        "id": 112
    },
    {
        "id": 113,
        "code": "\nfunction f(line::String)::String\n    count = 0\n    a = []\n    for i in 1:length(line)\n        count += 1\n        if count%2==0\n            push!(a, islowercase(line[i]) ? uppercase(line[i]) : lowercase(line[i]))\n        else\n            push!(a, line[i])\n        end\n    end\n    return join(a)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"987yhNSHAshd 93275yrgSgbgSshfbsfB\") == \"987YhnShAShD 93275yRgsgBgssHfBsFB\")\nend\n"
    },
    {
        "id": 114,
        "code": "function f(text::String, sep::String)::Vector{String} \n    return split(text, sep, limit=3)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a-.-.b\", \"-.\") == [\"a\", \"\", \"b\"])\nend\n"
    },
    {
        "id": 115,
        "code": "\nfunction f(text::String)::String \n    res = UInt8[]\n    for ch in codeunits(text)\n        if ch == 61\n            break\n        elseif ch != 0\n            push!(res, ch)\n        end\n    end\n    return \"b'$(join([string(x, \"; \") for x in res], \"\"))'\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"os||agx5\") == \"b'111; 115; 124; 124; 97; 103; 120; 53; '\")\nend\n"
    },
    {
        "id": 116,
        "code": "function f(d::Dict{Int64, Int64}, count::Int64)::Dict{Int64, Int64}\n    for i in 1:count\n        if isempty(d)\n            break\n        end\n        delete!(d, first(keys(d)))\n    end\n    return d\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict{Int64, Int64}(), 200) == Dict{Int64, Int64}())\nend\n"
    },
    {
        "id": 117,
        "code": "function f(numbers::String)::Int64 \n    for i in 1:length(numbers)\n        if count(x -> x == '3', numbers) > 1\n            return i\n        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"23157\") == -1)\nend\n"
    },
    {
        "id": 118,
        "code": "\nfunction f(text::String, chars::String)::String\n    num_applies = 2\n    extra_chars = \"\"\n    for i in 1:num_applies\n        extra_chars *= chars\n        text = replace(text, extra_chars => \"\")\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"zbzquiuqnmfkx\", \"mk\") == \"zbzquiuqnmfkx\")\nend\n"
    },
    {
        "id": 119,
        "code": "function f(text::String)::String \n    result = \"\"\n    for i in 1:length(text)\n        if i % 2 == 0\n            result *= string(text[i])\n        else\n            result *= uppercase(text[i])\n        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"vsnlygltaw\") == \"VsNlYgLtAw\")\nend\n"
    },
    {
        "id": 120
    },
    {
        "id": 121,
        "code": "function f(s::String)::String \n    nums = join(filter(c -> isdigit(c), s))\n    if nums == \"\"\n        return \"none\"\n    end\n    nums_split = split(nums, ',')\n    m = maximum([parse(Int, num) for num in nums_split])\n    return string(m)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"01,001\") == \"1001\")\nend\n"
    },
    {
        "id": 122,
        "code": "function f(string::String)::String \n    if startswith(string, \"Nuva\")\n        return rstrip(string)\n    else\n        return \"no\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Nuva?dlfuyjys\") == \"Nuva?dlfuyjys\")\nend\n"
    },
    {
        "id": 123,
        "code": "function f(array::Vector{Int64}, elem::Int64)::Vector{Int64} \n    for idx in eachindex(array)\n        if idx != 1 && array[idx] > elem && array[idx - 1] < elem\n            insert!(array, idx, elem)\n        end\n    end\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3, 5, 8], 6) == [1, 2, 3, 5, 6, 8])\nend\n"
    },
    {
        "id": 124,
        "code": "function f(txt::String, sep::String, sep_count::Int64)::String \n    o = \"\"\n    while sep_count > 0 && count(txt, sep) > 0\n        parts = split(txt, sep, limit=2)\n        o *= parts[1] * sep\n        txt = parts[2]\n        sep_count -= 1\n    end\n    return o * txt\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"i like you\", \" \", -1) == \"i like you\")\nend\n"
    },
    {
        "id": 125,
        "code": "\nfunction f(text::String, res::Int64)::String \n    for c in ['*', '\\n', '\"']\n        text = replace(text, c => \"!$res\" )\n    end\n    if text[1] == '!'\n        text = text[length(string(res))+1:end]\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\\\"Leap and the net will appear\", 123) == \"3Leap and the net will appear\")\nend\n"
    },
    {
        "id": 126
    },
    {
        "id": 127,
        "code": "function f(text::String)::Int64 \n    s = split(text, '\\n')\n    return length(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"145\n\n12fjkjg\") == 3)\nend\n"
    },
    {
        "id": 128,
        "code": "function f(text::String)::String\n    odd = \"\"\n    even = \"\"\n    for (i, c) in enumerate(text)\n        if (i - 1) % 2 == 0\n            even *= c\n        else\n            odd *= c\n        end\n    end\n    return even * lowercase(odd)\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Mammoth\") == \"Mmohamt\")\nend\n"
    },
    {
        "id": 129
    },
    {
        "id": 130
    },
    {
        "id": 131
    },
    {
        "id": 132,
        "code": "\nfunction f(a_str::String, prefix::String)::String \n    if !isempty(replace(a_str, prefix => \"\", count=1))\n        return a_str\n    else\n        return prefix * a_str\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abc\", \"abcd\") == \"abc\")\nend\n"
    },
    {
        "id": 133,
        "code": "function f(nums::Vector{Int64}, elements::Vector{Int64})::Vector{Int64} \n    result = []\n    for i in 1:length(elements)\n        push!(result, pop!(nums))\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([7, 1, 2, 6, 0, 2], [9, 0, 3]) == [7, 1, 2])\nend\n"
    },
    {
        "id": 134,
        "code": "function f(n::Int64)::String \n    t = 0\n    b = \"\"\n    digits = [parse(Int, x) for x in string(n)]\n    \n    for d in digits\n        if d == 0\n            t += 1\n        else\n            break\n        end\n    end\n    \n    for _ in 1:t\n        b *= \"1\" * \"0\" * \"4\"\n    end\n    \n    b *= string(n)\n    return b\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(372359) == \"372359\")\nend\n"
    },
    {
        "id": 135,
        "code": "function f()::Vector{String}\n    d = Dict(\n        \"Russia\" => [(\"Moscow\", \"Russia\"), (\"Vladivostok\", \"Russia\")],\n        \"Kazakhstan\" => [(\"Astana\", \"Kazakhstan\")]\n    )\n    return [\"Russia\", \"Kazakhstan\"]\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate() == [\"Russia\", \"Kazakhstan\"])\nend\n"
    },
    {
        "id": 136
    },
    {
        "id": 137,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    count = 0\n    while length(nums) > 0\n        if count % 2 == 0\n            pop!(nums)\n        else\n            splice!(nums, 1)\n        end\n        count += 1\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([3, 2, 0, 0, 2, 3]) == Vector{Int64}([]))\nend\n"
    },
    {
        "id": 138,
        "code": "function f(text::String, chars::String)::String \n    listchars = collect(chars)\n    first = popfirst!(listchars)\n    for i in listchars\n        text = text[1:findfirst(i, text)] * i * text[findfirst(i, text)+1:end]\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"tflb omn rtt\", \"m\") == \"tflb omn rtt\")\nend\n"
    },
    {
        "id": 139,
        "code": "function f(first::Vector{Int64}, second::Vector{Int64})::Union{String, Vector{Int64}} \n    if length(first) < 10 || length(second) < 10\n        return \"no\"\n    end\n    \n    for i in 1:5\n        if first[i] != second[i]\n            return \"no\"\n        end\n    end\n    \n    append!(first, second)\n    return first\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 1], [1, 1, 2]) == \"no\")\nend\n"
    },
    {
        "id": 140,
        "code": "\nfunction f(st::String)::String\n    lower_st = lowercase(st)\n    last_h_index = findlast('h', lower_st)\n    last_i_index = findlast('i', lower_st)\n    if last_h_index != nothing && last_i_index != nothing && last_h_index >= last_i_index\n        return \"Hey\"\n    else\n        return \"Hi\"\n    end\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Hi there\") == \"Hey\")\nend\n"
    },
    {
        "id": 141,
        "code": "function f(li::Vector{String})::Vector{Int64} \n    return [count(x -> x == i, li) for i in li]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"k\", \"x\", \"c\", \"x\", \"x\", \"b\", \"l\", \"f\", \"r\", \"n\", \"g\"]) == [1, 3, 1, 3, 3, 1, 1, 1, 1, 1, 1])\nend\n"
    },
    {
        "id": 142,
        "code": "\nfunction f(x::String)::String \n    if all((islowercase(c) || c == ' ') for c in x)\n        return x\n    else\n        return reverse(x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ykdfhp\") == \"ykdfhp\")\nend\n"
    },
    {
        "id": 143,
        "code": "function f(s::String, n::String)::Bool \n    return lowercase(s) == lowercase(n)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"daaX\", \"daaX\") == true)\nend\n"
    },
    {
        "id": 144,
        "code": "function f(vectors::Vector{Vector{Int64}})::Vector{Vector{Int64}} \n    sorted_vecs = []\n    for vec in vectors\n        sort!(vec)\n        push!(sorted_vecs, vec)\n    end\n    return sorted_vecs\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Vector{Int64}}([])) == Vector{Vector{Int64}}([]))\nend\n"
    },
    {
        "id": 145,
        "code": "function f(price::Float64, product::String)::Float64 \n    inventory = [\"olives\", \"key\", \"orange\"]\n    if !(product in inventory)\n        return price\n    else\n        price *= 0.85\n        filter!(x -> x != product, inventory)\n    end\n    return price\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(8.5, \"grapes\") == 8.5)\nend\n"
    },
    {
        "id": 146,
        "code": "function f(single_digit::Int64)::Vector{Int64} \n    result = Int64[]\n    for c in 1:10\n        if c != single_digit\n            push!(result, c)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1, 2, 3, 4, 6, 7, 8, 9, 10])\nend\n"
    },
    {
        "id": 147,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    middle = div(length(nums), 2)\n    return vcat(nums[middle+1:end], nums[1:middle])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 1, 1]) == [1, 1, 1])\nend\n"
    },
    {
        "id": 148,
        "code": "function f(forest::String, animal::String)::String\n    index = findfirst(==('m'), forest)\n    if index === nothing\n        return forest\n    end\n    index = index[1]\n    result = collect(forest)\n    while index < length(forest)\n        if index < length(forest)\n            result[index] = forest[index + 1]\n        end\n        index += 1\n    end\n    if index == length(forest)\n        result[index] = '-'\n    end\n    return join(result)\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"2imo 12 tfiqr.\", \"m\") == \"2io 12 tfiqr.-\")\nend\n"
    },
    {
        "id": 149
    },
    {
        "id": 150,
        "code": "\nfunction f(numbers::Vector{Int64}, index::Int64)::Vector{Int64} \n    return vcat(numbers[1:index], numbers[index+1:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-2, 4, -4], 0) == [-2, 4, -4])\nend\n"
    },
    {
        "id": 151,
        "code": "function f(text::String)::String \n    for c in text\n        if isdigit(c)\n            if c == '0'\n                c = '.'\n            else\n                c = c == '1' ? '.' : '0'\n            end\n        end\n    end\n    return replace(join(collect(text), \"\"), '.' => '0')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"697 this is the ultimate 7 address to attack\") == \"697 this is the ultimate 7 address to attack\")\nend\n"
    },
    {
        "id": 152,
        "code": "\nfunction f(text::String)::Int64\n    n = 0\n    for char in text\n        if isuppercase(char)\n            n += 1\n        end\n    end\n    return n\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"AAAAAAAAAAAAAAAAAAAA\") == 20)\nend\n"
    },
    {
        "id": 153,
        "code": "function f(text::String, suffix::String, num::Int64)::Bool \n    str_num = string(num)\n    return endswith(text, suffix * str_num)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"friends and love\", \"and\", 3) == false)\nend\n"
    },
    {
        "id": 154,
        "code": "function f(s::String, c::String)::String \n    s = split(s, ' ')\n    return c * \"  \" * join(reverse(s), \"  \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Hello There\", \"*\") == \"*  There  Hello\")\nend\n"
    },
    {
        "id": 155,
        "code": "function f(ip::String, n::Int64)::String \n    i = 0\n    out = \"\"\n    for c in ip\n        if i == n\n            out *= '\\n'\n            i = 0\n        end\n        i += 1\n        out *= c\n    end\n    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"dskjs hjcdjnxhjicnn\", 4) == \"dskj\ns hj\ncdjn\nxhji\ncnn\")\nend\n"
    },
    {
        "id": 156,
        "code": "function f(text::String, limit::Int64, char::String)::String \n    if limit < length(text)\n        return text[1:limit]\n    end\n    return lpad(text, limit, char)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"tqzym\", 5, \"c\") == \"tqzym\")\nend\n"
    },
    {
        "id": 157,
        "code": "function f(phrase::String)::Int64 \n    ans = 0\n    words = split(phrase)\n    for w in words\n        for ch in w\n            if ch == '0'\n                ans += 1\n            end\n        end\n    end\n    return ans\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"aboba 212 has 0 digits\") == 1)\nend\n"
    },
    {
        "id": 158,
        "code": "\nfunction f(arr::Vector{Int64})::Vector{Int64} \n    n = [item for item in arr if item%2 == 0]\n    m = vcat(n, arr)\n    for i in m\n        if findfirst(x->x==i, m) > length(n)\n            deleteat!(m, findfirst(x->x==i, m))\n        end\n    end\n    return m\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([3, 6, 4, -2, 5]) == [6, 4, -2, 6, 4, -2])\nend\n"
    },
    {
        "id": 159,
        "code": "function f(st::String)::String \n    swapped = \"\"\n    for ch in reverse(st)\n        swapped *= uppercase(ch) == ch ? lowercase(ch) : uppercase(ch)\n    end\n    return swapped\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"RTiGM\") == \"mgItr\")\nend\n"
    },
    {
        "id": 160,
        "code": "\nfunction f(dictionary::Dict{Int64, Int64})::Dict{Int64, Int64} \n    while !haskey(dictionary, 1)\n        empty(dictionary)\n        break\n    end\n    return dictionary\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(1 => 47698, 1 => 32849, 1 => 38381, 3 => 83607)) == Dict(1 => 38381, 3 => 83607))\nend\n"
    },
    {
        "id": 161,
        "code": "function f(text::String, value::String)::String \n    parts = split(text, value)\n    left = parts[1]\n    right = parts[2]\n    return right * left\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"difkj rinpx\", \"k\") == \"j rinpxdif\")\nend\n"
    },
    {
        "id": 162,
        "code": "function f(text::String)::String \n    result = \"\"\n    for char in text\n        if isletter(char) || isdigit(char)\n            result *= uppercase(char)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"с bishop.Swift\") == \"СBISHOPSWIFT\")\nend\n"
    },
    {
        "id": 163,
        "code": "function f(text::String, space_symbol::String, size::Int64)::String \n    spaces = repeat(space_symbol, size - length(text))\n    return text * spaces\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"w\", \"))\", 7) == \"w))))))))))))\")\nend\n"
    },
    {
        "id": 164,
        "code": "function f(lst::Vector{Int64})::Vector{Int64} \n    sort!(lst)\n    return lst[1:3]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([5, 8, 1, 3, 0]) == [0, 1, 3])\nend\n"
    },
    {
        "id": 165,
        "code": "function f(text::String, lower::Int64, upper::Int64)::Bool \n    return isascii(text[lower:upper])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"=xtanp|sugv?z\", 3, 6) == true)\nend\n"
    },
    {
        "id": 166
    },
    {
        "id": 167
    },
    {
        "id": 168,
        "code": "function f(text::String, new_value::String, index::Int64)::String\n    key = text[index+1]  # Adjust for 1-based indexing\n    return replace(text, key => new_value)\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"spain\", \"b\", 4) == \"spaib\")\nend\n"
    },
    {
        "id": 169,
        "code": "function f(text::String)::String \n    ls = collect(text)\n    total = (length(text) - 1) * 2\n    for i in 1:total\n        if isodd(i)\n            push!(ls, '+')\n        else\n            insert!(ls, 1, '+')\n        end\n    end\n    return join(ls, \"\") |> x -> rpad(x, total)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"taole\") == \"++++taole++++\")\nend\n"
    },
    {
        "id": 170,
        "code": "function f(nums::Vector{Int64}, number::Int64)::Int64 \n    return count(x -> x == number, nums)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([12, 0, 13, 4, 12], 12) == 2)\nend\n"
    },
    {
        "id": 171,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    count = length(nums) ÷ 2\n    for _ in 1:count\n        popfirst!(nums)\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([3, 4, 1, 2, 3]) == [1, 2, 3])\nend\n"
    },
    {
        "id": 172,
        "code": "function f(array::Vector{Int64})::Vector{Int64} \n    i = 1\n    while i <= length(array)\n        if array[i] < 0\n            splice!(array, i)\n        else\n            i += 1\n        end\n    end\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\nend\n"
    },
    {
        "id": 173,
        "code": "function f(list_x::Vector{Int64})::Vector{Int64} \n    item_count = length(list_x)\n    new_list = Vector{Int64}()\n    for i in 1:item_count\n        push!(new_list, pop!(list_x))\n    end\n    return new_list\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([5, 8, 6, 8, 4]) == [4, 8, 6, 8, 5])\nend\n"
    },
    {
        "id": 174,
        "code": "\nfunction f(lst::Vector{Int64})::Vector{Int64}\n    lst[2:3] = reverse(lst[2:3])\n    return lst\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3]) == [1, 3, 2])\nend\n"
    },
    {
        "id": 175
    },
    {
        "id": 176,
        "code": "\nfunction f(text::String, to_place::String)::String \n    after_place = text[1:findfirst(to_place, text)[1]]\n    before_place = text[findfirst(to_place, text)[1]+1:end]\n    return after_place * before_place\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"some text\", \"some\") == \"some text\")\nend\n"
    },
    {
        "id": 177
    },
    {
        "id": 178,
        "code": "function f(array::Vector{Int64}, n::Int64)::Vector{Int64} \n    return array[n+1:end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([0, 0, 1, 2, 2, 2, 2], 4) == [2, 2, 2])\nend\n"
    },
    {
        "id": 179
    },
    {
        "id": 180,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    a = -1\n    b = nums[2:end]\n    while a <= b[1]\n        splice!(nums, findfirst(x -> x == b[1], nums))\n        a = 0\n        b = b[2:end]\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-1, 5, 3, -2, -6, 8, 8]) == [-1, -2, -6, 8, 8])\nend\n"
    },
    {
        "id": 181,
        "code": "\nfunction f(s::String)::Tuple{String, Int64} \n    count = 0\n    digits = \"\"\n    for c in s\n        if isdigit(c)\n            count += 1\n            digits *= string(c)\n        end\n    end\n    return (digits, count)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"qwfasgahh329kn12a23\") == (\"3291223\", 7))\nend\n"
    },
    {
        "id": 182,
        "code": "\nfunction f(dic::Dict{String, Int})::Vector{Tuple{String, Int}} \n    return sort([(k, v) for (k, v) in dic])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"b\" => 1, \"a\" => 2)) == [(\"a\", 2), (\"b\", 1)])\nend\n"
    },
    {
        "id": 183,
        "code": "function f(text::String)::Vector{String} \n    ls = split(text)\n    lines = split(join(ls[1:3:end]), '\\n')\n    res = []\n    for i in 0:1\n        ln = ls[2:3:end]\n        if 3*i + 2 <= length(ln)\n            push!(res, join(ln[3*i+1:3*(i+1)], \" \"))\n        end\n    end\n    return vcat(lines, res)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"echo hello!!! nice!\") == [\"echo\"])\nend\n"
    },
    {
        "id": 184,
        "code": "function f(digits::Vector{Int64})::Vector{Int64} \n    reverse!(digits)\n    if length(digits) < 2\n        return digits\n    end\n    for i in 1:2:length(digits)-1\n        digits[i], digits[i+1] = digits[i+1], digits[i]\n    end\n    return digits\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2]) == [1, 2])\nend\n"
    },
    {
        "id": 185,
        "code": "function f(L::Vector{Int64})::Vector{Int64} \n    N = length(L)\n    for k in 1:N÷2\n        i = k\n        j = N - k + 1\n        while i < j\n            # swap elements\n            L[i], L[j] = L[j], L[i]\n            # update i, j\n            i += 1\n            j -= 1\n        end\n    end\n    return L\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([16, 14, 12, 7, 9, 11]) == [11, 14, 7, 12, 9, 16])\nend\n"
    },
    {
        "id": 186,
        "code": "function f(text::String)::String \n    words = split(text)\n    stripped_words = map(word -> lstrip(word), words)\n    return join(stripped_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"pvtso\") == \"pvtso\")\nend\n"
    },
    {
        "id": 187,
        "code": "\nfunction f(d::Dict{Int64,Int64}, index::Int64)::Int64\n    length_dict = length(d)\n    if length_dict == 0\n        error(\"Dictionary is empty\")\n    end\n    idx = index % length_dict + 1\n    keys_dict = collect(keys(d))\n    k = keys_dict[idx]\n    v = d[k]\n    deleteat!(keys_dict, idx)\n    for key in keys_dict\n        if haskey(d, key)\n            deleteat!(d, key)\n        end\n    end\n    return v\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(27 => 39), 1) == 39)\nend\n"
    },
    {
        "id": 188,
        "code": "function f(strings::Vector{String})::Vector{String}\n    new_strings = String[]\n    for string in strings\n        first_two = string[1:min(2, end)]\n        if startswith(first_two, 'a') || startswith(first_two, 'p')\n            push!(new_strings, first_two)\n        end\n    end\n    return new_strings\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"a\", \"b\", \"car\", \"d\"]) == [\"a\"])\nend\n"
    },
    {
        "id": 189
    },
    {
        "id": 190,
        "code": "function f(text::String)::String \n    short = \"\"\n    for c in text\n        if islowercase(c)\n            short *= c\n        end\n    end\n    return short\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"980jio80jic kld094398IIl \") == \"jiojickldl\")\nend\n"
    },
    {
        "id": 191,
        "code": "function f(string::String)::Bool \n    if all(isuppercase, string)\n        return true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Ohno\") == false)\nend\n"
    },
    {
        "id": 192,
        "code": "function f(text::String, suffix::String)::String \n    output = text\n    while endswith(text, suffix)\n        output = text[1:endof(text)-length(suffix)]\n        text = output\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"!klcd!ma:ri\", \"!\") == \"!klcd!ma:ri\")\nend\n"
    },
    {
        "id": 193,
        "code": "function f(string::String)::String\n    count_colons = count(c -> c == ':', string)\n    if count_colons > 1\n        return replace(string, ':' => \"\", count=count_colons - 1)\n    else\n        return string\n    end\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"1::1\") == \"1:1\")\nend\n"
    },
    {
        "id": 194,
        "code": "\nfunction f(matr::Vector{Vector{Int64}}, insert_loc::Int64)::Vector{Vector{Int64}} \n    insert_loc += 1\n    matr = vcat(matr[1:insert_loc-1], [[]], matr[insert_loc:end])\n    return matr\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([[5, 6, 2, 3], [1, 9, 5, 6]], 0) == [[], [5, 6, 2, 3], [1, 9, 5, 6]])\nend\n"
    },
    {
        "id": 195,
        "code": "\nfunction f(text::String)::String \n    prefixes = [\"acs\", \"asp\", \"scn\"]\n    for p in prefixes\n        text = replace(text, p => \"\", count=1) * \" \"\n    end\n    return text[1:end-1]\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ilfdoirwirmtoibsac\") == \"ilfdoirwirmtoibsac  \")\nend\n"
    },
    {
        "id": 196,
        "code": "\nfunction f(text::String)::String \n    text = replace(text, \" x\" => \" x.\")\n    if titlecase(text) == text\n        return \"correct\"\n    else\n        text = replace(text, \" x.\" => \" x\")\n        return \"mixed\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"398 Is A Poor Year To Sow\") == \"correct\")\nend\n"
    },
    {
        "id": 197,
        "code": "function f(temp::Int64, timeLimit::Int64)::String \n    s = div(timeLimit, temp)\n    e = rem(timeLimit, temp)\n    return ifelse(s > 1, string(s, \" \", e), string(e, \" oC\"))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(1, 1234567890) == \"1234567890 0\")\nend\n"
    },
    {
        "id": 198,
        "code": "\nfunction f(text::String, strip_chars::String)::String \n    reversed_text = join(reverse(collect(text)))\n    stripped_text = join(collect(lstrip(rstrip(reversed_text, [c for c in strip_chars]), [c for c in strip_chars])))\n    return join(reverse(collect(stripped_text)))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"tcmfsmj\", \"cfj\") == \"tcmfsm\")\nend\n"
    },
    {
        "id": 199,
        "code": "function f(s::String, char::String)::String \n    base = repeat(char, count(s, char) + 1)\n    return endswith(s, base) ? s[1:end-length(base)] : s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"mnmnj krupa...##!@#!@#\\$\\$@##\", \"@\") == \"mnmnj krupa...##!@#!@#\\$\\$@##\")\nend\n"
    },
    {
        "id": 200,
        "code": "\nfunction f(text::String, value::String)::String\n    length_ = length(text)\n    index = 1\n    while length_ > 0\n        value = text[index] * value\n        length_ -= 1\n        index += 1\n    end\n    return value\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"jao mt\", \"house\") == \"tm oajhouse\")\nend\n"
    },
    {
        "id": 201,
        "code": "function f(text::String)::String \n    chars = []\n    for c in text\n        if isdigit(c)\n            push!(chars, c)\n        end\n    end\n    return join(reverse(chars))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"--4yrw 251-//4 6p\") == \"641524\")\nend\n"
    },
    {
        "id": 202,
        "code": "\nfunction f(array::Vector{Int64}, lst::Vector{Int64})::Vector{Int64}\n    append!(array, lst)\n    filter(x -> x % 2 == 0, array)\n    return filter(x -> x >= 10, array)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2, 15], [15, 1]) == [15, 15])\nend\n"
    },
    {
        "id": 203,
        "code": "function f(d::Dict{String, String})::Dict{String, String}\n    empty!(d)\n    return d\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"a\" => \"3\", \"b\" => \"-1\", \"c\" => \"Dum\")) == Dict{String, String}())\nend\n"
    },
    {
        "id": 204,
        "code": "\nfunction f(name::String)::Vector{String} \n    return [string(name[1]), string(name[2])[end:-1:1]]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"master. \") == [\"m\", \"a\"])\nend\n"
    },
    {
        "id": 205,
        "code": "function f(a::String)::String \n    for _ in 1:10\n        for j in 1:length(a)\n            if a[j] != '#'\n                a = a[j:end]\n                break\n            end\n        end\n        for j in 1:length(a)\n            if a[end-j+1] != '#'\n                break\n            else\n                a = a[1:end-j]\n            end\n        end\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"##fiu##nk#he###wumun##\") == \"fiu##nk#he###wumun\")\nend\n"
    },
    {
        "id": 206,
        "code": "\nfunction f(a::String)::String \n    return join(split(a), \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\" h e l l o   w o r l d! \") == \"h e l l o w o r l d!\")\nend\n"
    },
    {
        "id": 207,
        "code": "function f(commands::Vector{Dict{String, Int64}})::Dict{String, Int64}\n    d = Dict{String, Int64}()\n    for c in commands\n        merge!(d, c)\n    end\n    return d\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([Dict(\"brown\" => 2), Dict(\"blue\" => 5), Dict(\"bright\" => 4)]) == Dict(\"brown\" => 2, \"blue\" => 5, \"bright\" => 4))\nend\n"
    },
    {
        "id": 208
    },
    {
        "id": 209
    },
    {
        "id": 210,
        "code": "\nfunction f(n::Int64, m::Int64, num::Int64)::Int64 \n    x_list = collect(n:m)\n    j = 0\n    while true\n        j = mod(j + num, length(x_list))\n        if x_list[j+1] % 2 == 0\n            return x_list[j+1]\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(46, 48, 21) == 46)\nend\n"
    },
    {
        "id": 211,
        "code": "function f(s::String)::Int64 \n    count = 0\n    for c in s\n        if findlast(isequal(c), s) != findfirst(isequal(c), s)\n            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abca dea ead\") == 10)\nend\n"
    },
    {
        "id": 212,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    for _ in 1:length(nums) - 1\n        reverse!(nums)\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, -9, 7, 2, 6, -3, 3]) == [1, -9, 7, 2, 6, -3, 3])\nend\n"
    },
    {
        "id": 213,
        "code": "function f(s::String)::String \n    s = replace(s, '(' => '[')\n    s = replace(s, ')' => ']')\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"(ac)\") == \"[ac]\")\nend\n"
    },
    {
        "id": 214
    },
    {
        "id": 215,
        "code": "function f(text::String)::String \n    new_text = text\n    while length(text) > 1 && text[1] == text[end]\n        new_text = text = text[2:end-1]\n    end\n    return new_text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\")\") == \")\")\nend\n"
    },
    {
        "id": 216,
        "code": "function f(letters::String)::Int64 \n    count = 0\n    for l in letters\n        if isdigit(l)\n            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"dp ef1 gh2\") == 2)\nend\n"
    },
    {
        "id": 217,
        "code": "function f(string::String)::String \n    if occursin(r\"^[a-zA-Z0-9]*$\", string)\n        return \"ascii encoded is allowed for this language\"\n    else\n        return \"more than ASCII\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Str zahrnuje anglo-ameriæske vasi piscina and kuca!\") == \"more than ASCII\")\nend\n"
    },
    {
        "id": 218
    },
    {
        "id": 219,
        "code": "function f(s1::String, s2::String)::Bool \n    for k in 1:(length(s2) + length(s1))\n        s1 *= s1[1]\n        if occursin(s2, s1) \n            return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Hello\", \")\") == false)\nend\n"
    },
    {
        "id": 220,
        "code": "function f(text::String, m::Int64, n::Int64)::String \n    text = string(text, text[1:m], text[n+1:end])\n    result = \"\"\n    for i in n+1:length(text)-m\n        result = string(text[i], result)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abcdefgabc\", 1, 2) == \"bagfedcacbagfedc\")\nend\n"
    },
    {
        "id": 221,
        "code": "function f(text::String, delim::String)::String \n    parts = split(text, delim)\n    return parts[2] * delim * parts[1]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"bpxa24fc5.\", \".\") == \".bpxa24fc5\")\nend\n"
    },
    {
        "id": 222,
        "code": "\nfunction f(mess::String, char::String)::String \n    while findnext(char, mess, findlast(char, mess)[1] + 1) != nothing\n        mess = mess[1:prevind(mess, findlast(char, mess)[1])] * mess[nextind(mess, findlast(char, mess)[1]):end]\n    end\n    return mess\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"0aabbaa0b\", \"a\") == \"0aabbaa0b\")\nend\n"
    },
    {
        "id": 223,
        "code": "function f(array::Vector{Int64}, target::Int64)::Int64 \n    count, i = 0, 1\n    for j in 2:length(array)\n        if (array[j] > array[j-1]) && (array[j] <= target)\n            count += i\n        elseif array[j] <= array[j-1]\n            i = 1\n        else\n            i += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, -1, 4], 2) == 1)\nend\n"
    },
    {
        "id": 224,
        "code": "function f(array::Vector{String}, value::Int64)::Dict{String, Int64}> \n    reverse!(array)\n    pop!(array)\n    odd = []\n    while length(array) > 0\n        tmp = Dict()\n        tmp[pop!(array)] = value\n        push!(odd, tmp)\n    end\n    result = Dict()\n    while length(odd) > 0\n        merge!(result, pop!(odd))\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"23\"], 123) == Dict{String, Int64}())\nend\n"
    },
    {
        "id": 225,
        "code": "\nfunction f(text::String)::Bool\n    return all(islowercase(c) for c in text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"54882\") == false)\nend\n"
    },
    {
        "id": 226,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    n = length(nums)\n    for i in 1:n\n        if nums[i] % 3 == 0\n            push!(nums, nums[i])\n        end\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 3]) == [1, 3, 3])\nend\n"
    },
    {
        "id": 227,
        "code": "function f(text::String)::String \n    text = lowercase(text)\n    head, tail = text[1], text[2:end]\n    return uppercase(head) * tail\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Manolo\") == \"Manolo\")\nend\n"
    },
    {
        "id": 228,
        "code": "function f(text::String, splitter::String)::String \n    return join(split(lowercase(text), \" \"), splitter)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"LlTHH sAfLAPkPhtsWP\", \"#\") == \"llthh#saflapkphtswp\")\nend\n"
    },
    {
        "id": 229
    },
    {
        "id": 230,
        "code": "function f(text::String)::String \n    result = \"\"\n    i = length(text)\n    while i >= 1\n        c = text[i]\n        if isletter(c)\n            result *= c\n        end\n        i -= 1\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"102x0zoq\") == \"qozx\")\nend\n"
    },
    {
        "id": 231,
        "code": "function f(years::Vector{Int64})::Int64 \n    a10 = sum([1 for x in years if x <= 1900])\n    a90 = sum([1 for x in years if x > 1910])\n    \n    if a10 > 3\n        return 3\n    elseif a90 > 3\n        return 1\n    else\n        return 2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1872, 1995, 1945]) == 2)\nend\n"
    },
    {
        "id": 232,
        "code": "function f(text::String, changes::String)::String \n    result = \"\"\n    count = 0\n    changes = collect(changes)\n    for char in text\n        if char in \"e\"\n            result *= char\n        else\n            result *= changes[count % length(changes) + 1]\n        end\n        count += (char ∉ \"e\") ? 1 : 0\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"fssnvd\", \"yes\") == \"yesyes\")\nend\n"
    },
    {
        "id": 233,
        "code": "\nfunction f(xs::Vector{Int64})::Vector{Int64}\n    for idx in range(1, stop=length(xs), step=1)\n        pushfirst!(xs, popat!(xs, length(xs)))\n    end\n    return xs\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3]) == [1, 2, 3])\nend\n"
    },
    {
        "id": 234
    },
    {
        "id": 235,
        "code": "function f(array::Vector{String}, arr::Vector{String})::Vector{String} \n    result = []\n    for s in arr\n        result .= filter(x -> x != \"\", split(s, arr[findfirst(x -> x == s, array)]))\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{String}([]), Vector{String}([])) == Vector{String}([]))\nend\n"
    },
    {
        "id": 236,
        "code": "\nfunction f(array::Vector{String})::String\n    if length(array) == 1\n        return join(array)\n    end\n    result = collect(array)\n    i = 0\n    while i < length(array)-1\n        for j in 1:2\n            result[i*2+1] = array[i+1]\n            i += 1\n        end\n    end\n    return join(result)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"ac8\", \"qk6\", \"9wg\"]) == \"ac8qk6qk6\")\nend\n"
    },
    {
        "id": 237
    },
    {
        "id": 238,
        "code": "function f(ls::Vector{Vector{Int64}}, n::Int64)::Union{Vector{Int64}, Int64} \n    answer = 0\n    for i in ls\n        if i[1] == n\n            answer = i\n        end\n    end\n    return answer\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([[1, 9, 4], [83, 0, 5], [9, 6, 100]], 1) == [1, 9, 4])\nend\n"
    },
    {
        "id": 239,
        "code": "\nfunction f(text::String, froms::String)::String \n    text = lstrip(text, Set(froms))\n    text = rstrip(text, Set(froms))\n    return text\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"0 t 1cos \", \"st 0\t\n  \") == \"1co\")\nend\n"
    },
    {
        "id": 240,
        "code": "function f(float_number::Float64)::String \n    number = string(float_number)\n    dot = findfirst('.', number)\n    if dot != nothing\n        return number[1:dot-1] * \".\" * lpad(number[dot+1:end], 2, '0')\n    end\n    return number * \".00\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(3.121) == \"3.121\")\nend\n"
    },
    {
        "id": 241,
        "code": "function f(postcode::String)::String \n    return postcode[findfirst(isequal('C'), postcode):end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ED20 CW\") == \"CW\")\nend\n"
    },
    {
        "id": 242,
        "code": "function f(book::String)::String \n    a = split(book, ':')\n    if split(split(a[1], ' ')[1])[end] == split(split(a[2], ' ')[1])[1]\n        return f(join(split(a[1], ' ')[1:end], ' ') * ' ' * split(a[2], ' ')[1])\n    end\n    return book\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"udhv zcvi nhtnfyd :erwuyawa pun\") == \"udhv zcvi nhtnfyd :erwuyawa pun\")\nend\n"
    },
    {
        "id": 243,
        "code": "\nfunction f(text::String, char::String)::Bool\n    return islowercase(char[1]) && text == lowercase(text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abc\", \"e\") == true)\nend\n"
    },
    {
        "id": 244,
        "code": "\nfunction f(text::String, symbols::String)::String \n    count = 0\n    if !isempty(symbols)\n        count = length(symbols)\n        text = text^count\n    end\n    return rpad(text, length(text) + count*2)[1:(end - 2)]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\", \"BC1ty\") == \"        \")\nend\n"
    },
    {
        "id": 245,
        "code": "function f(alphabet::String, s::String)::Vector{String} \n    a = [x for x in split(alphabet, \"\") if contains(uppercase(x), uppercase(s))]\n    if uppercase(s) == s\n        push!(a, \"all_uppercased\")\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abcdefghijklmnopqrstuvwxyz\", \"uppercased # % ^ @ ! vz.\") == Vector{String}([]))\nend\n"
    },
    {
        "id": 246,
        "code": "\nfunction f(haystack::String, needle::String)::Int64 \n    for i in reverse(first(findfirst(needle, haystack)):(findfirst(needle, haystack)[1]-1))\n        if haystack[i:end] == needle\n            return i\n        end\n    end\n    return -1\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"345gerghjehg\", \"345\") == -1)\nend\n"
    },
    {
        "id": 247,
        "code": "using Base.Iterators: all\n\nfunction f(s::String)::String \n    if all(isletter, s)\n        return \"yes\"\n    end\n    if s == \"\"\n        return \"str is empty\"\n    end\n    return \"no\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Boolean\") == \"yes\")\nend\n"
    },
    {
        "id": 248,
        "code": "function f(a::Vector{Int64}, b::Vector{Int64})::Vector{Union{Int64, Float64}} \n    sort!(a)\n    sort!(b, rev=true)\n    return vcat(a, b)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([666], Vector{Int64}([])) == [666])\nend\n"
    },
    {
        "id": 249,
        "code": "\nfunction f(s::String)::Dict{String, Int64}\n    count = Dict{String, Int64}()\n    for i in s\n        if islowercase(i)\n            if haskey(count, string(i))\n                count[string(i)] = count[string(i)] + countlowercase(s, i)\n            else\n                count[string(i)] = countlowercase(s, i)\n            end\n        else\n            if haskey(count, lowercase(string(i)))\n                count[lowercase(string(i))] = count[lowercase(string(i))] + countuppercase(s, uppercase(i))\n            else\n                count[lowercase(string(i))] = countuppercase(s, uppercase(i))\n            end\n        end\n    end\n    return count\nend\n\nfunction countlowercase(s::String, i::Char)::Int64\n    count = 0\n    for j in s\n        if j == i\n            count += 1\n        end\n    end\n    return count\nend\n\nfunction countuppercase(s::String, i::Char)::Int64\n    count = 0\n    for j in s\n        if j == i\n            count += 1\n        end\n    end\n    return count\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"FSA\") == Dict(\"f\" => 1, \"s\" => 1, \"a\" => 1))\nend\n"
    },
    {
        "id": 250
    },
    {
        "id": 251,
        "code": "\nfunction f(messages::Vector{Vector{String}})::String \n    phone_code = \"+353\"\n    result = []\n    for message in messages\n        append!(message, split(phone_code, \"\"))\n        push!(result, join(message, \";\"))\n    end\n    return join(result, \". \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([[\"Marie\", \"Nelson\", \"Oscar\"]]) == \"Marie;Nelson;Oscar;+;3;5;3\")\nend\n"
    },
    {
        "id": 252
    },
    {
        "id": 253,
        "code": "\nfunction f(text::String, pref::String)::String \n    if pref == text[1:length(pref)]\n        return text[length(pref)+1:end]\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"kumwwfv\", \"k\") == \"umwwfv\")\nend\n"
    },
    {
        "id": 254,
        "code": "function f(text::String, repl::String)::String \n    trans = Dict(zip(text, repl))\n    return join([get(trans, c, c) for c in text])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"upper case\", \"lower case\") == \"lwwer case\")\nend\n"
    },
    {
        "id": 255,
        "code": "function f(text::String, fill::String, size::Int64)::String \n    if size < 0\n        size = abs(size)\n    end\n    if length(text) > size\n        return text[end-size+1:end]\n    else\n        return string(fill^((size - length(text))) * text)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"no asw\", \"j\", 1) == \"w\")\nend\n"
    },
    {
        "id": 256,
        "code": "function f(text::String, sub::String)::Int64\n    a = 0\n    b = length(text) - 1\n\n    while a <= b\n        c = div(a + b, 2)\n        if findlast(sub, text) !== nothing && findlast(sub, text) >= c\n            a = c + 1\n        else\n            b = c - 1\n        end\n    end\n\n    return a\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"dorfunctions\", \"2\") == 0)\nend\n"
    },
    {
        "id": 257,
        "code": "function f(text::Vector{String})::Vector{Vector{String}} \n    ls = []\n    for x in text\n        push!(ls, split(x, '\\n'))\n    end\n    return ls\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"Hello World\n\\\"I am String\\\"\"]) == [[\"Hello World\", \"\\\"I am String\\\"\"]])\nend\n"
    },
    {
        "id": 258,
        "code": "\nfunction f(L::Vector{Int64}, m::Int64, start::Int64, step::Int64)::Vector{Int64}\n    insert!(L, start+1, m)\n    for x in start-1:-step:0\n        start -= 1\n        insertionPoint = findlast(x -> x == m, L)\n        insertionPoint != nothing && start >= insertionPoint >= (x-step+1) ? insertionPoint = (insertionPoint - step + 1) : nothing\n        insert!(L, insertionPoint, popat!(L, findlast(x -> x == m, L)))\n    end\n    return L\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 7, 9], 3, 3, 2) == [1, 2, 7, 3, 9])\nend\n"
    },
    {
        "id": 259,
        "code": "function f(text::String)::String \n    new_text = []\n    for character in text\n        if isuppercase(character)\n            insert!(new_text, length(new_text) ÷ 2 + 1, character)\n        end\n    end\n    \n    if isempty(new_text)\n        new_text = ['-']\n    end\n    \n    return join(new_text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"String matching is a big part of RexEx library.\") == \"RES\")\nend\n"
    },
    {
        "id": 260,
        "code": "\nfunction f(nums::Vector{Int64}, start::Int64, k::Int64)::Vector{Int64}\n    if start + k <= length(nums)\n        nums[start+1:start+k] = nums[start+1:start+k][end:-1:1]\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3, 4, 5, 6], 4, 2) == [1, 2, 3, 4, 6, 5])\nend\n"
    },
    {
        "id": 261,
        "code": "function f(nums::Vector{Int64}, target::Int64)::Tuple{Vector{Int64}, Vector{Int64}} \n    lows = Int64[]\n    higgs = Int64[]\n    for i in nums\n        if i < target\n            push!(lows, i)\n        else\n            push!(higgs, i)\n        end\n    end\n    empty!(lows)\n    return lows, higgs\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([12, 516, 5, 2, 3, 214, 51], 5) == ([], [12, 516, 5, 214, 51]))\nend\n"
    },
    {
        "id": 262,
        "code": "function f(nums::Vector{Int64})::String \n    score = Dict(0 => \"F\", 1 => \"E\", 2 => \"D\", 3 => \"C\", 4 => \"B\", 5 => \"A\", 6 => \"\")\n    result = []\n    for i in 1:length(nums)\n        push!(result, get(score, nums[i], \"\"))\n    end\n    return join(result)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([4, 5]) == \"BA\")\nend\n"
    },
    {
        "id": 263,
        "code": "function f(base::Vector{String}, delta::Vector{Vector{Union{String, String}}})::Vector{String} \n    for j in 1:length(delta)\n        for i in 1:length(base)\n            if base[i] == delta[j][1]\n                @assert delta[j][2] != base[i]\n                base[i] = delta[j][2]\n            end\n        end\n    end\n    return base\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"gloss\", \"banana\", \"barn\", \"lawn\"], Vector{Vector{String}}([])) == [\"gloss\", \"banana\", \"barn\", \"lawn\"])\nend\n"
    },
    {
        "id": 264,
        "code": "function f(test_str::String)::String \n    s = replace(test_str, 'a' => 'A')\n    return replace(s, 'e' => 'A')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"papera\") == \"pApArA\")\nend\n"
    },
    {
        "id": 265,
        "code": "function f(d::Dict{Int64, Int64}, k::Int64)::Dict{Int64, Int64}\n    new_d = Dict{Int64, Int64}()\n    for (key, val) in d\n        if key < k\n            new_d[key] = val\n        end\n    end\n    return new_d\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(1 => 2, 2 => 4, 3 => 3), 3) == Dict(1 => 2, 2 => 4))\nend\n"
    },
    {
        "id": 266,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    for i in length(nums):-1:1\n        if nums[i] % 2 == 1\n            insert!(nums, i+1, nums[i])\n        end\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2, 3, 4, 6, -2]) == [2, 3, 3, 4, 6, -2])\nend\n"
    },
    {
        "id": 267,
        "code": "function f(text::String, space::Int64)::String \n    if space < 0\n        return text\n    end\n    return lpad(text, length(text) ÷ 2 + space)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"sowpf\", -7) == \"sowpf\")\nend\n"
    },
    {
        "id": 268,
        "code": "\nfunction f(s::String, separator::String)::String\n    for i in 1:length(s)\n        if s[i] == separator[1]\n            new_s = collect(s)\n            new_s[i] = '/'\n            return join(new_s, \" \")\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"h grateful k\", \" \") == \"h / g r a t e f u l   k\")\nend\n"
    },
    {
        "id": 269
    },
    {
        "id": 270,
        "code": "function f(dic::Dict{Int64, Int64})::Dict{Int64, Int64}\n    d = Dict{Int64, Int64}()\n    keys_list = collect(keys(dic))\n    for key in keys_list\n        first_key = first(keys(dic))\n        d[key] = dic[first_key]\n        delete!(dic, first_key)\n    end\n    return d\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict{Int64, Int64}()) == Dict{Int64, Int64}())\nend\n"
    },
    {
        "id": 271,
        "code": "function f(text::String, c::String)::String\n    ls = collect(text)\n    if !occursin(c, text)\n        throw(ArgumentError(\"Text has no $c\"))\n    end\n    idx = findlast(x -> x == c[1], ls)\n    if idx !== nothing\n        deleteat!(ls, idx)\n    end\n    return join(ls)\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"uufhl\", \"l\") == \"uufh\")\nend\n"
    },
    {
        "id": 272,
        "code": "function f(base_list::Vector{Int64}, nums::Vector{Int64})::Vector{Int64} \n    append!(base_list, nums)\n    res = copy(base_list)\n    for i in 1:length(nums)\n        push!(res, res[end - length(nums) + i])\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([9, 7, 5, 3, 1], [2, 4, 6, 8, 0]) == [9, 7, 5, 3, 1, 2, 4, 6, 8, 0, 2, 6, 0, 6, 6])\nend\n"
    },
    {
        "id": 273,
        "code": "function f(name::String)::String \n    new_name = \"\"\n    name = reverse(name)\n    for i in 1:length(name)\n        n = name[i]\n        if n != '.' && count(x->x=='.', new_name) < 2\n            new_name = string(n, new_name)\n        else\n            break\n        end\n    end\n    return new_name\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\".NET\") == \"NET\")\nend\n"
    },
    {
        "id": 274,
        "code": "function f(nums::Vector{Int64}, target::Int64)::Int64 \n    count = 0\n    for n1 in nums\n        for n2 in nums\n            count += (n1 + n2 == target)\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3], 4) == 3)\nend\n"
    },
    {
        "id": 275,
        "code": "function f(dic::Dict{Int64, String})::Dict{String, Int64}\n    dic2 = Dict(zip(values(dic), keys(dic)))\n    return dic2\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(-1 => \"a\", 0 => \"b\", 1 => \"c\")) == Dict(\"a\" => -1, \"b\" => 0, \"c\" => 1))\nend\n"
    },
    {
        "id": 276,
        "code": "function f(a::Vector{Int64})::Vector{Int64} \n    if length(a) >= 2 && a[1] > 0 && a[2] > 0\n        reverse!(a)\n        return a\n    end\n    push!(a, 0)\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Int64}([])) == [0])\nend\n"
    },
    {
        "id": 277,
        "code": "function f(lst::Vector{Int64}, mode::Int64)::Vector{Int64} \n    result = copy(lst)\n    if mode != 0\n        reverse!(result)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3, 4], 1) == [4, 3, 2, 1])\nend\n"
    },
    {
        "id": 278
    },
    {
        "id": 279,
        "code": "function f(text::String)::String \n    ans = \"\"\n    while text != \"\"\n        x, text = split(text, '(', limit=1)\n        ans = x * \"|\" * ans\n        ans = ans * text[1] * ans\n        text = text[2:end]\n    end\n    return ans\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\") == \"\")\nend\n"
    },
    {
        "id": 280,
        "code": "function f(text::String)::String \n    global g, field\n    field = replace(text, ' ' => \"\")\n    global g = replace(text, '0' => ' ')\n    text = replace(text, '1' => 'i')\n\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"00000000 00000000 01101100 01100101 01101110\") == \"00000000 00000000 0ii0ii00 0ii00i0i 0ii0iii0\")\nend\n"
    },
    {
        "id": 281
    },
    {
        "id": 282
    },
    {
        "id": 283,
        "code": "function f(dictionary::Dict{String, Int}, key::String)::String \n    delete!(dictionary, key)\n    if key == first(sort(collect(keys(dictionary))))\n        key = first(keys(dictionary))\n    end\n    return key\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"Iron Man\" => 4, \"Captain America\" => 3, \"Black Panther\" => 0, \"Thor\" => 1, \"Ant-Man\" => 6), \"Iron Man\") == \"Iron Man\")\nend\n"
    },
    {
        "id": 284,
        "code": "function f(text::String, prefix::String)::String \n    idx = 1\n    for letter in prefix\n        if text[idx] != letter\n            return nothing\n        end\n        idx += 1\n    end\n    return text[idx:end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"bestest\", \"bestest\") == \"\")\nend\n"
    },
    {
        "id": 285,
        "code": "function f(text::String, ch::String)::Int64 \n    return count(ch, text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"This be Pirate's Speak for 'help'!\", \" \") == 5)\nend\n"
    },
    {
        "id": 286,
        "code": "\nfunction f(array::Vector{Int64}, x::Int64, i::Int64)::Union{String, Vector{Int64}}\n    if i < -length(array) || i > length(array) - 1\n        return \"no\"\n    end\n    temp = array[i+1]\n    array[i+1] = x\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 11, 4) == [1, 2, 3, 4, 11, 6, 7, 8, 9, 10])\nend\n"
    },
    {
        "id": 287,
        "code": "\nfunction f(name::String)::String \n    if all(islowercase, name)\n        name = uppercase(name)\n    else\n        name = lowercase(name)\n    end\n    return name\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Pinneaple\") == \"pinneaple\")\nend\n"
    },
    {
        "id": 288,
        "code": "function f(d::Dict{Int64, Int64})::Vector{Tuple{Int64, Int64}}\n    sorted_pairs = sort(collect(pairs(d)), by = x -> length(string(string(x.first) * string(x.second))))\n    return [(k, v) for (k, v) in sorted_pairs if k < v]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(55 => 4, 4 => 555, 1 => 3, 99 => 21, 499 => 4, 71 => 7, 12 => 6)) == [(1, 3), (4, 555)])\nend\n"
    },
    {
        "id": 289
    },
    {
        "id": 290,
        "code": "function f(text::String, prefix::String)::String \n    if startswith(text, prefix)\n        return replace(text, prefix => \"\", limit=1)\n    end    \n    if occursin(prefix, text)\n        return replace(text, prefix => \"\") |> strip\n    end\n    return uppercase(text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abixaaaily\", \"al\") == \"ABIXAAAILY\")\nend\n"
    },
    {
        "id": 291
    },
    {
        "id": 292,
        "code": "function f(text::String)::String \n    new_text = [isnumeric(c) ? c : '*' for c in text]\n    return join(new_text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"5f83u23saa\") == \"5*83*23***\")\nend\n"
    },
    {
        "id": 293,
        "code": "function f(text::String)::String \n    s = lowercase(text)\n    for i in 1:length(s)\n        if s[i] == 'x'\n            return \"no\"\n        end\n    end\n    return isuppercase(text) ? \"true\" : \"false\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"dEXE\") == \"no\")\nend\n"
    },
    {
        "id": 294,
        "code": "\nfunction f(n::String, m::String, text::String)::String \n    if strip(text) == \"\"\n        return text\n    end\n    head, mid, tail = string(text[1]), text[2:end-1], string(text[end])\n    joined = replace(head, n => m) * replace(mid, n => m) * replace(tail, n => m)\n    return joined\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"x\", \"\\$\", \"2xz&5H3*1a@#a*1hris\") == \"2\\$z&5H3*1a@#a*1hris\")\nend\n"
    },
    {
        "id": 295,
        "code": "function f(fruits::Vector{String})::Vector{String} \n    if fruits[end] == fruits[1]\n        return [\"no\"]\n    else\n        popfirst!(fruits)\n        popfirst!(fruits)\n        pop!(fruits)\n        pop!(fruits)\n        return fruits\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"apple\", \"apple\", \"pear\", \"banana\", \"pear\", \"orange\", \"orange\"]) == [\"pear\", \"banana\", \"pear\"])\nend\n"
    },
    {
        "id": 296,
        "code": "function f(url::String)::String \n    return replace(url, \"http://www.\" => \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"https://www.www.ekapusta.com/image/url\") == \"https://www.www.ekapusta.com/image/url\")\nend\n"
    },
    {
        "id": 297,
        "code": "function f(num::Int64)::String \n    if 0 < num < 1000 && num != 6174\n        return \"Half Life\"\n    end\n    return \"Not found\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(6173) == \"Not found\")\nend\n"
    },
    {
        "id": 298,
        "code": "function f(text::String)::String \n    new_text = collect(text)\n    for i in 1:length(new_text)\n        character = new_text[i]\n        new_character = uppercase(character) == character ? lowercase(character) : uppercase(character)\n        new_text[i] = new_character\n    end\n    return join(new_text, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"dst vavf n dmv dfvm gamcu dgcvb.\") == \"DST VAVF N DMV DFVM GAMCU DGCVB.\")\nend\n"
    },
    {
        "id": 299,
        "code": "function f(text::String, char::String)::String \n    if text[end-length(char)+1:end] != char\n        return f(char * text, char)\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"staovk\", \"k\") == \"staovk\")\nend\n"
    },
    {
        "id": 300,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    count = 1\n    for i in count:2:length(nums)-1\n        nums[i] = max(nums[i], nums[count])\n        count += 1\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3]) == [1, 2, 3])\nend\n"
    },
    {
        "id": 301
    },
    {
        "id": 302,
        "code": "function f(string::String)::String \n    return replace(string, \"needles\" => \"haystacks\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"wdeejjjzsjsjjsxjjneddaddddddefsfd\") == \"wdeejjjzsjsjjsxjjneddaddddddefsfd\")\nend\n"
    },
    {
        "id": 303,
        "code": "\nfunction f(text::String)::String \n    i = cld(length(text) + 1, 2)\n    result = collect(text)\n    while i < length(text)\n        t = lowercase(result[i])\n        if t == result[i]\n            i += 1\n        else\n            result[i] = t\n        end\n        i += 2\n    end\n    return join(result, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"mJkLbn\") == \"mJklbn\")\nend\n"
    },
    {
        "id": 304,
        "code": "function f(d::Dict{Int64, Int64})::Dict{Int64, Int64}\n    sorted_items = sort(collect(d), by=x->x[1], rev=true)\n    key1 = sorted_items[1][1]\n    val1 = pop!(d, key1)\n    key2 = sorted_items[2][1]\n    val2 = pop!(d, key2)\n    return Dict(key1 => val1, key2 => val2)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(2 => 3, 17 => 3, 16 => 6, 18 => 6, 87 => 7)) == Dict(87 => 7, 18 => 6))\nend\n"
    },
    {
        "id": 305,
        "code": "\nfunction f(text::String, char::String)::String \n    length_text = length(text)\n    index = -1\n    for i in 1:length_text\n        if text[i] == char[1]\n            index = i\n        end\n    end\n    if index == -1\n        index = div(length_text, 2)\n    end\n    new_text = collect(text)\n    deleteat!(new_text, index)\n    return join(new_text, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"o horseto\", \"r\") == \"o hoseto\")\nend\n"
    },
    {
        "id": 306
    },
    {
        "id": 307,
        "code": "function f(text::String)::String \n    rtext = collect(text)\n    for i in 2:length(rtext)-1\n        insert!(rtext, i+1, '|')\n    end\n    return join(rtext)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"pxcznyf\") == \"px|||||cznyf\")\nend\n"
    },
    {
        "id": 308,
        "code": "function f(strings::Vector{String})::Dict{String, Int64}> \n    occurances = Dict{String, Int64}()\n    for string in strings\n        if !haskey(occurances, string)\n            occurances[string] = count(x -> x == string, strings)\n        end\n    end\n    return occurances\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"La\", \"Q\", \"9\", \"La\", \"La\"]) == Dict(\"La\" => 3, \"Q\" => 1, \"9\" => 1))\nend\n"
    },
    {
        "id": 309,
        "code": "function f(text::String, suffix::String)::String \n    text *= suffix\n    while text[end-length(suffix)+1:end] == suffix\n        text = text[1:end-1]\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"faqo osax f\", \"f\") == \"faqo osax \")\nend\n"
    },
    {
        "id": 310,
        "code": "function f(strands::Vector{String})::String \n    subs = copy(strands)\n    for i in eachindex(subs)\n        for _ in 1:(length(subs[i]) ÷ 2)\n            subs[i] = subs[i][end] * subs[i][2:end-1] * subs[i][1]\n        end\n    end\n    return join(subs)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"__\", \"1\", \".\", \"0\", \"r0\", \"__\", \"a_j\", \"6\", \"__\", \"6\"]) == \"__1.00r__j_a6__6\")\nend\n"
    },
    {
        "id": 311,
        "code": "function f(text::String)::String \n    text = replace(text, '#' => '1', '$' => '5')\n    return occursin(r\"^\\d+$\", text) ? \"yes\" : \"no\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"A\") == \"no\")\nend\n"
    },
    {
        "id": 312,
        "code": "function f(s::String)::String \n    if occursin(r\"^[a-zA-Z0-9]*$\", s)\n        return \"True\"\n    else\n        return \"False\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"777\") == \"True\")\nend\n"
    },
    {
        "id": 313,
        "code": "function f(s::String, l::Int64)::String \n    return split(s * repeat(\"=\", l), \"=\")[1]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"urecord\", 8) == \"urecord\")\nend\n"
    },
    {
        "id": 314,
        "code": "function f(text::String)::String \n    if occursin(\",\", text)\n        before, after = split(text, \",\", limit=2)\n        return after * \" \" * before\n    end\n    return \", \" * split(text, \" \")[end] * \" 0\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"244, 105, -90\") == \" 105, -90 244\")\nend\n"
    },
    {
        "id": 315,
        "code": "function f(challenge::String)::String \n    return replace(lowercase(challenge), \"l\" => \",\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"czywZ\") == \"czywz\")\nend\n"
    },
    {
        "id": 316,
        "code": "function f(name::String)::String \n    return \"| \" * join(split(name, ' '), \" \") * \" |\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"i am your father\") == \"| i am your father |\")\nend\n"
    },
    {
        "id": 317,
        "code": "function f(text::String, a::String, b::String)::String \n    text = replace(text, a => b)\n    return replace(text, b => a)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\" vup a zwwo oihee amuwuuw! \", \"a\", \"u\") == \" vap a zwwo oihee amawaaw! \")\nend\n"
    },
    {
        "id": 318
    },
    {
        "id": 319,
        "code": "function f(needle::String, haystack::String)::Int64 \n    count = 0\n    while occursin(needle, haystack)\n        haystack = replace(haystack, needle => \"\", count=1)\n        count += 1\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a\", \"xxxaaxaaxx\") == 4)\nend\n"
    },
    {
        "id": 320
    },
    {
        "id": 321
    },
    {
        "id": 322,
        "code": "function f(chemicals::Vector{String}, num::Int64)::Vector{String} \n    fish = chemicals[2:end]\n    reverse!(chemicals)\n    for i in 1:num\n        push!(fish, splice!(chemicals, 2))\n    end\n    reverse!(chemicals)\n    return chemicals\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"lsi\", \"s\", \"t\", \"t\", \"d\"], 0) == [\"lsi\", \"s\", \"t\", \"t\", \"d\"])\nend\n"
    },
    {
        "id": 323,
        "code": "function f(text::String)::Int64 \n    return length(split(text, '\\n'))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ncdsdfdaaa0a1cdscsk*XFd\") == 1)\nend\n"
    },
    {
        "id": 324,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    asc = copy(nums)\n    desc = reverse(asc)\n    desc = desc[1:div(length(desc), 2)]\n    return vcat(desc, asc, desc)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\nend\n"
    },
    {
        "id": 325,
        "code": "function f(s::String)::Bool \n    l = collect(s)\n    for i in 1:length(l)\n        l[i] = lowercase(l[i])\n        if !isdigit(l[i])\n            return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\") == true)\nend\n"
    },
    {
        "id": 326,
        "code": "function f(text::String)::Int64 \n    number = 0\n    for t in text\n        if isnumeric(t)\n            number += 1\n        end\n    end\n    return number\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Thisisastring\") == 0)\nend\n"
    },
    {
        "id": 327,
        "code": "function f(lst::Vector{Int64})::Vector{Int64} \n    new = Int64[]\n    i = length(lst)\n    for _ in 1:length(lst)\n        if i % 2 == 1\n            push!(new, -lst[i])\n        else\n            push!(new, lst[i])\n        end\n        i -= 1\n    end\n    return new\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 7, -1, -3]) == [-3, 1, 7, -1])\nend\n"
    },
    {
        "id": 328,
        "code": "\nfunction f(array::Vector{Int64}, L::Int64)::Vector{Int64}\n    if L <= 0\n        return array\n    elseif length(array) < L\n        append!(array, f(array, L - length(array)))\n    end\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3], 4) == [1, 2, 3, 1, 2, 3])\nend\n"
    },
    {
        "id": 329,
        "code": "\nfunction f(text::String)::Bool\n    for i in 2:length(text)\n        if text[i] == uppercase(text[i]) && text[i-1] == lowercase(text[i-1])\n            return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"jh54kkk6\") == true)\nend\n"
    },
    {
        "id": 330,
        "code": "function f(text::String)::String \n    ans = [isnumeric(ch) ? ch : ' ' for ch in text]\n    return join(ans)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"m4n2o\") == \" 4 2 \")\nend\n"
    },
    {
        "id": 331,
        "code": "\nfunction f(strand::String, zmnc::String)::Int64 \n    poz = findfirst(zmnc, strand)\n    while poz !== nothing\n        strand = strand[poz.stop+1:end]\n        poz = findfirst(zmnc, strand)\n    end\n    return something(findlast(zmnc, strand), -1)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\", \"abc\") == -1)\nend\n"
    },
    {
        "id": 332,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    count = length(nums)\n    if count == 0\n        nums = fill(0, pop!(nums))\n    elseif count % 2 == 0\n        empty!(nums)\n    else\n        deleteat!(nums, 1:count ÷ 2)\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-6, -2, 1, -3, 0, 1]) == Vector{Int64}([]))\nend\n"
    },
    {
        "id": 333,
        "code": "function f(places::Vector{Int64}, lazy::Vector{Int64})::Int64 \n    sort!(places)\n    for l in lazy\n        deleteat!(places, findfirst(x -> x == l, places))\n    end\n    \n    if length(places) == 1\n        return 1\n    end\n    \n    for i in 1:length(places)\n        if count(x -> x == places[i] + 1, places) == 0\n            return i\n        end\n    end\n    \n    return length(places)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([375, 564, 857, 90, 728, 92], [728]) == 1)\nend\n"
    },
    {
        "id": 334,
        "code": "function f(a::String, b::Vector{String})::String \n    return join(b, a)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"00\", [\"nU\", \" 9 rCSAz\", \"w\", \" lpA5BO\", \"sizL\", \"i7rlVr\"]) == \"nU00 9 rCSAz00w00 lpA5BO00sizL00i7rlVr\")\nend\n"
    },
    {
        "id": 335
    },
    {
        "id": 336,
        "code": "function f(s::String, sep::String)::String \n    s *= sep\n    parts = split(s, sep)\n    return join(parts[1:end-1], sep)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"234dsfssdfs333324314\", \"s\") == \"234dsfssdfs333324314\")\nend\n"
    },
    {
        "id": 337,
        "code": "function f(txt::String)::String \n    d = []\n    for c in txt\n        if isdigit(c)\n            continue\n        elseif islowercase(c)\n            push!(d, uppercase(c))\n        elseif isuppercase(c)\n            push!(d, lowercase(c))\n        end\n    end\n    return join(d, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"5ll6\") == \"LL\")\nend\n"
    },
    {
        "id": 338,
        "code": "function f(my_dict::Dict{String, Int})::Dict{Int, String}\n    result = Dict{Int, String}()\n    for (k, v) in my_dict\n        result[v] = k\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 2)) == Dict(1 => \"a\", 2 => \"d\", 3 => \"c\"))\nend\n"
    },
    {
        "id": 339,
        "code": "function f(array::Vector{Int64}, elem::Int64)::Int64 \n    elem = string(elem)\n    d = 0\n    for i in array\n        if string(i) == elem\n            d += 1\n        end\n    end\n    return d\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-1, 2, 1, -8, -8, 2], 2) == 2)\nend\n"
    },
    {
        "id": 340,
        "code": "\nfunction f(text::String)::String\n    uppercase_index = findfirst(isequal('A'), text)\n    if uppercase_index !== nothing\n        return text[1:uppercase_index-1] * text[findnext(isequal('a'), text, uppercase_index):end]\n    else\n        return join(sort([collect(text)...]))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"E jIkx HtDpV G\") == \"   DEGHIVjkptx\")\nend\n"
    },
    {
        "id": 341,
        "code": "function f(cart::Dict{Int64, Int64})::Dict{Int64, Int64}\n    while length(cart) > 5\n        delete!(cart, first(keys(cart)))\n    end\n    return cart\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict{Int64, Int64}()) == Dict{Int64, Int64}())\nend\n"
    },
    {
        "id": 342,
        "code": "function f(text::String)::Bool \n    return count(x -> x == '-', text) == length(text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"---123-4\") == false)\nend\n"
    },
    {
        "id": 343,
        "code": "function f(array::Vector{Any}, elem::Vector{Any})::Vector{Any} \n    append!(array, elem)\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([[1, 2, 3], [1, 2], 1], [[1, 2, 3], 3, [2, 1]]) == [[1, 2, 3], [1, 2], 1, [1, 2, 3], 3, [2, 1]])\nend\n"
    },
    {
        "id": 344,
        "code": "\nfunction f(lst::Vector{Int64})::Vector{Int64}\n    operation = reverse\n    new_list = copy(lst)\n    sort(new_list)\n    operation(new_list)\n    return lst\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([6, 4, 2, 8, 15]) == [6, 4, 2, 8, 15])\nend\n"
    },
    {
        "id": 345,
        "code": "\nfunction f(a::String, b::String)::Tuple{String, String} \n    if a < b\n        return (b, a)\n    else\n        return (a, b)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ml\", \"mv\") == (\"mv\", \"ml\"))\nend\n"
    },
    {
        "id": 346,
        "code": "function f(filename::String)::Bool \n    suffix = split(filename, '.')[end]\n    f2 = filename * reverse(suffix)\n    return endswith(f2, suffix)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"docs.doc\") == false)\nend\n"
    },
    {
        "id": 347
    },
    {
        "id": 348
    },
    {
        "id": 349,
        "code": "\nfunction f(dictionary::Dict{String, Int64})::Dict{String, Int64}\n    dictionary[\"1049\"] = 55\n    return dictionary\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"noeohqhk\" => 623)) == Dict(\"noeohqhk\" => 623, \"1049\" => 55))\nend\n"
    },
    {
        "id": 350
    },
    {
        "id": 351,
        "code": "function f(text::String)::String \n    while occursin(\"nnet lloP\", text)\n        text = replace(text, \"nnet lloP\", \"nnet loLp\")\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a_A_b_B3 \") == \"a_A_b_B3 \")\nend\n"
    },
    {
        "id": 352,
        "code": "function f(nums::Vector{Int64})::Int64 \n    return nums[div(length(nums), 2) + 1]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-1, -3, -5, -7, 0]) == -5)\nend\n"
    },
    {
        "id": 353,
        "code": "function f(x::Vector{Int64})::Int64 \n    if x == []\n        return -1\n    else\n        cache = Dict{Int64, Int64}()\n        for item in x\n            if haskey(cache, item)\n                cache[item] += 1\n            else\n                cache[item] = 1\n            end\n        end\n        return maximum(values(cache))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 0, 2, 2, 0, 0, 0, 1]) == 4)\nend\n"
    },
    {
        "id": 354
    },
    {
        "id": 355,
        "code": "function f(text::String, prefix::String)::String \n    return text[length(prefix)+1:end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"123x John z\", \"z\") == \"23x John z\")\nend\n"
    },
    {
        "id": 356,
        "code": "function f(array::Vector{Int}, num::Int)::Vector{Int}\n    reverse = false\n    if num < 0\n        reverse = true\n        num *= -1\n    end\n    \n    array = reverse!(copy(array)) * num\n    l = length(array)\n    \n    if reverse\n        array = reverse!(copy(array))\n    end\n    \n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2], 1) == [2, 1])\nend\n"
    },
    {
        "id": 357,
        "code": "function f(s::String)::String \n    r = []\n    for i in length(s):-1:1\n        push!(r, s[i])\n    end\n    return join(r)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"crew\") == \"werc\")\nend\n"
    },
    {
        "id": 358,
        "code": "\nfunction f(text::String, value::String)::String\n    indexes = Int64[]\n    for i in 1:length(text)\n        if text[i] == value[1] && (i == 1 || text[i-1] != value[1])\n            push!(indexes, i)\n        end\n    end\n    if length(indexes) % 2 != 0\n        return text\n    else\n        return text[indexes[1]+1:indexes[end]-1]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"btrburger\", \"b\") == \"tr\")\nend\n"
    },
    {
        "id": 359,
        "code": "function f(lines::Vector{String})::Vector{String} \n    for i in 1:length(lines)\n        lines[i] = lpad(lines[i], length(lines[end]), ' ')\n    end\n    return lines\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"dZwbSR\", \"wijHeq\", \"qluVok\", \"dxjxbF\"]) == [\"dZwbSR\", \"wijHeq\", \"qluVok\", \"dxjxbF\"])\nend\n"
    },
    {
        "id": 360,
        "code": "function f(text::String, n::Int64)::String \n    if length(text) <= 2\n        return text\n    end\n    \n    leading_chars = repeat(text[1], n - length(text) + 1)\n    return leading_chars * text[2:end-1] * text[end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"g\", 15) == \"g\")\nend\n"
    },
    {
        "id": 361,
        "code": "function f(text::String)::Int64 \n    return count(occursin(\"#\", split(text,':')[1]))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"#! : #!\") == 1)\nend\n"
    },
    {
        "id": 362,
        "code": "using Unicode\n\nfunction f(text::String)::String \n    for i in 1:length(text)-1\n        if all(islowercase, text[i:end])\n            return text[i+1:end]\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"wrazugizoernmgzu\") == \"razugizoernmgzu\")\nend\n"
    },
    {
        "id": 363,
        "code": "\nfunction f(nums::Vector{Int64})::Vector{Int64} \n    sort(nums)\n    n = length(nums)\n    new_nums = [nums[div(n,2)+1]]\n    \n    if n % 2 == 0\n        new_nums = [nums[div(n,2)], nums[div(n,2)+1]]\n    end\n    \n    for i in 0:(div(n,2)-1)\n        pushfirst!(new_nums, nums[n-i])\n        push!(new_nums, nums[i+1])\n    end\n    return new_nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1]) == [1])\nend\n"
    },
    {
        "id": 364
    },
    {
        "id": 365,
        "code": "function f(n::String, s::String)::String \n    if startswith(s, n)\n        pre, _ = split(s, n, limit=1)\n        return pre * n * s[length(n) + 1:end]\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"xqc\", \"mRcwVqXsRDRb\") == \"mRcwVqXsRDRb\")\nend\n"
    },
    {
        "id": 366,
        "code": "\nfunction f(string::String)::String \n    tmp = lowercase(string)\n    for char in lowercase(string)\n        if char in tmp\n            tmp = replace(tmp, char => \"\"; count=1)\n        end\n    end\n    return tmp\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"[ Hello ]+ Hello, World!!_ Hi\") == \"\")\nend\n"
    },
    {
        "id": 367,
        "code": "function f(nums::Vector{Int64}, rmvalue::Int64)::Vector{Int64} \n    res = copy(nums)\n    while rmvalue in res\n        index = findfirst(x -> x == rmvalue, res)\n        popped = splice!(res, index)\n        if popped != rmvalue\n            push!(res, popped)\n        end\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([6, 2, 1, 1, 4, 1], 5) == [6, 2, 1, 1, 4, 1])\nend\n"
    },
    {
        "id": 368,
        "code": "function f(string::String, numbers::Vector{Int64})::String \n    arr = [lpad(string, n, '0') for n in numbers]\n    return join(arr, ' ')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"4327\", [2, 8, 9, 2, 7, 1]) == \"4327 00004327 000004327 4327 0004327 4327\")\nend\n"
    },
    {
        "id": 369,
        "code": "function f(var::String)::String \n    if occursin(r\"^\\d+$\", var)\n        return \"int\"\n    elseif occursin(r\"^\\d+\\.\\d+$\", var)\n        return \"float\"\n    elseif count(isspace, var) == length(var) - 1\n        return \"str\"\n    elseif length(var) == 1\n        return \"char\"\n    else\n        return \"tuple\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\" 99 777\") == \"tuple\")\nend\n"
    },
    {
        "id": 370,
        "code": "function f(text::String)::Bool \n    for char in text\n        if !isspace(char)\n            return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"     i\") == false)\nend\n"
    },
    {
        "id": 371,
        "code": "function f(nums::Vector{Int64})::Int64 \n    for odd in copy(nums)\n        if odd % 2 != 0\n            deleteat!(nums, findall(x->x==odd, nums))\n        end\n    end\n    \n    sum_ = 0\n    for num in nums\n        sum_ += num\n    end\n    return sum_\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([11, 21, 0, 11]) == 0)\nend\n"
    },
    {
        "id": 372,
        "code": "function f(list_::Vector{String}, num::Int64)::Vector{String} \n    temp = []\n    for i in list_\n        i = repeat(string(i) * \",\", div(num, 2))\n        push!(temp, i)\n    end\n    return temp\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"v\"], 1) == [\"\"])\nend\n"
    },
    {
        "id": 373,
        "code": "\nfunction f(orig::Vector{Int64})::Vector{Int64}\n    copy = orig\n    push!(copy, 100)\n    popat!(orig, length(orig))\n    return copy\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3]) == [1, 2, 3])\nend\n"
    },
    {
        "id": 374,
        "code": "\nfunction f(seq::Vector{String}, v::String)::Vector{String}\n    a = String[]\n    for i in seq\n        if endswith(i, v)\n            push!(a, i^2)\n        end\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"oH\", \"ee\", \"mb\", \"deft\", \"n\", \"zz\", \"f\", \"abA\"], \"zz\") == [\"zzzz\"])\nend\n"
    },
    {
        "id": 375
    },
    {
        "id": 376,
        "code": "function f(text::String)::String \n    for i in 1:length(text)\n        if startswith(text[1:i], \"two\")\n            return text[i+1:end]\n        end\n    end\n    return \"no\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"2two programmers\") == \"no\")\nend\n"
    },
    {
        "id": 377,
        "code": "function f(text::String)::String \n    return join(split(text, '\\n'), \", \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"BYE\nNO\nWAY\") == \"BYE, NO, WAY\")\nend\n"
    },
    {
        "id": 378,
        "code": "\nfunction f(dic::Dict{String, Int64}, key::String)::Union{String, Int64}\n    dic = copy(dic)\n    v = get(dic, key, 0)\n    if v == 0\n        return \"No such key!\"\n    end\n    while length(dic) > 0\n        k, v = popitem(dic)\n        dic[v] = k\n    end\n    k, v = popitem(dic)\n    return parse(Int64, k)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"did\" => 0), \"u\") == \"No such key!\")\nend\n"
    },
    {
        "id": 379,
        "code": "function f(nums::Vector{Int64})::Union{Bool, Vector{Int64}} \n    for i in reverse(1:length(nums), 3)\n        if nums[i] == 0\n            empty!(nums)\n            return false\n        end\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([0, 0, 1, 2, 1]) == false)\nend\n"
    },
    {
        "id": 380,
        "code": "\nfunction f(text::String, delimiter::String)::String\n    text = rsplit(text, delimiter, limit=2)\n    return text[1] * text[2]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"xxjarczx\", \"x\") == \"xxjarcz\")\nend\n"
    },
    {
        "id": 381,
        "code": "function f(text::String, num_digits::Int64)::String \n    width = max(1, num_digits)\n    return lpad(text, width, '0')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"19\", 5) == \"00019\")\nend\n"
    },
    {
        "id": 382,
        "code": "\nfunction f(a::Dict{Int64, String})::String \n    s = reverse(collect(a))\n    return join([\"($(i[1]), '$(i[2])')\" for i in s], \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(15 => \"Qltuf\", 12 => \"Rwrepny\")) == \"(12, 'Rwrepny') (15, 'Qltuf')\")\nend\n"
    },
    {
        "id": 383,
        "code": "\nfunction f(text::String, chars::String)::String \n    result = collect(text)\n    while chars in reverse(result[1:3])\n        popfirst(result)\n        popfirst(result)\n    end\n    return strip(join(result), '.')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ellod!p.nkyp.exa.bi.y.hain\", \".n.in.ha.y\") == \"ellod!p.nkyp.exa.bi.y.hain\")\nend\n"
    },
    {
        "id": 384,
        "code": "function f(text::String, chars::String)::String \n    chars = collect(chars)\n    text = collect(text)\n    new_text = text\n    while length(new_text) > 0 && text != []\n        if new_text[1] in chars\n            new_text = new_text[2:end]\n        else\n            break \n        end\n    end\n    return join(new_text, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"asfdellos\", \"Ta\") == \"sfdellos\")\nend\n"
    },
    {
        "id": 385,
        "code": "function f(lst::Vector{Int64})::Vector{Int64} \n    i = 1\n    new_list = []\n    while i <= length(lst)\n        if lst[i] in lst[i+1:end]\n            push!(new_list, lst[i])\n            if length(new_list) == 3\n                return new_list\n            end\n        end\n        i += 1\n    end\n    return new_list\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([0, 2, 1, 2, 6, 2, 6, 3, 0]) == [0, 2, 2])\nend\n"
    },
    {
        "id": 386,
        "code": "\nfunction f(concat::String, di::Dict{String, String})::String \n    count = length(di)\n    for i in 0:count-1\n        if haskey(di, string(i)) && string(i) in keys(di)\n            pop!(di, string(i))\n        end\n    end\n    return \"Done!\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"mid\", Dict(\"0\" => \"q\", \"1\" => \"f\", \"2\" => \"w\", \"3\" => \"i\")) == \"Done!\")\nend\n"
    },
    {
        "id": 387,
        "code": "\nfunction f(nums::Vector{Int64}, pos::Int64, value::Int64)::Vector{Int64}\n    insert!(nums, pos + 1, value)\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([3, 1, 2], 2, 0) == [3, 1, 0, 2])\nend\n"
    },
    {
        "id": 388,
        "code": "function f(text::String, characters::String)::String \n    character_list = collect(characters) |> (x -> push!(x, ' ', '_'))\n    \n    i = 1\n    while i <= length(text) && in(text[i], character_list)\n        i += 1\n    end\n    \n    return text[i:end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"2nm_28in\", \"nm\") == \"2nm_28in\")\nend\n"
    },
    {
        "id": 389,
        "code": "\nfunction f(total::Vector{String}, arg::String)::Vector{String}\n    if typeof(arg) <: AbstractArray\n        for e in arg\n            append!(total, split(e, \"\"))\n        end\n    else\n        append!(total, split(arg, \"\"))\n    end\n    return total\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"1\", \"2\", \"3\"], \"nammo\") == [\"1\", \"2\", \"3\", \"n\", \"a\", \"m\", \"m\", \"o\"])\nend\n"
    },
    {
        "id": 390,
        "code": "function f(text::String)::Int64 \n    if strip(text) == \"\"\n        return length(strip(text))\n    end\n    return nothing\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\" \t \") == 0)\nend\n"
    },
    {
        "id": 391
    },
    {
        "id": 392,
        "code": "function f(text::String)::String \n    if uppercase(text) == text\n        return \"ALL UPPERCASE\"\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Hello Is It MyClass\") == \"Hello Is It MyClass\")\nend\n"
    },
    {
        "id": 393,
        "code": "function f(text::String)::String \n    ls = reverse(text)\n    text2 = \"\"\n    for i in length(ls)-2:-3:1\n        text2 *= join(ls[i:i+2], \"---\") * \"---\"\n    end\n    return text2[1:end-3]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"scala\") == \"a---c---s\")\nend\n"
    },
    {
        "id": 394,
        "code": "function f(text::String)::Int64 \n    k = split(text, '\\n')\n    i = 0\n    for j in k\n        if length(j) == 0\n            return i\n        end\n        i += 1\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"2 m2 \n\nbike\") == 1)\nend\n"
    },
    {
        "id": 395,
        "code": "function f(s::String)::Int64\n    for i in 1:length(s)\n        if isdigit(s[i])\n            return i - 1 + (s[i] == '0' ? 1 : 0)\n        elseif s[i] == '0'\n            return -1\n        end\n    end\n    return -1\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"11\") == 0)\nend\n"
    },
    {
        "id": 396,
        "code": "function f(ets::Dict{Int64, Int64})::Dict{Int64, Int64}\n    keys_to_process = collect(keys(ets))\n    for k in keys_to_process\n        v = delete!(ets, k)\n        ets[k] = v^2\n    end\n    return ets\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict{Int64, Int64}()) == Dict{Int64, Int64}())\nend\n"
    },
    {
        "id": 397
    },
    {
        "id": 398
    },
    {
        "id": 399,
        "code": "function f(text::String, old::String, new::String)::String \n    if length(old) > 3\n        return text\n    end\n    \n    if contains(text, old) && !occursin(\" \", text)\n        return replace(text, old => repeat(new, length(old)))\n    end\n    \n    while contains(text, old)\n        text = replace(text, old => new)\n    end\n    \n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"avacado\", \"va\", \"-\") == \"a--cado\")\nend\n"
    },
    {
        "id": 400,
        "code": "function f(multi_string::String)::String \n    cond_string = map(isascii, split(multi_string))\n    if true in cond_string\n        return join([x for x in split(multi_string) if isascii(x)], \", \")\n    else\n        return \"\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"I am hungry! eat food.\") == \"I, am, hungry!, eat, food.\")\nend\n"
    },
    {
        "id": 401,
        "code": "function f(text::String, suffix::String)::String \n    if length(suffix) > 0 && endswith(text, suffix)\n        return text[1:end-length(suffix)]\n    end\n    \n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"mathematics\", \"example\") == \"mathematics\")\nend\n"
    },
    {
        "id": 402,
        "code": "function f(n::Int64, l::Vector{String})::Dict{Int64, Int64}> \n    archive = Dict{Int64, Int64}()\n    for i in 1:n\n        empty!(archive)\n        for x in l\n            archive[x + 10] = x * 10\n        end\n    end\n    return archive\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(0, [\"aaa\", \"bbb\"]) == Dict{Int64, Int64}())\nend\n"
    },
    {
        "id": 403,
        "code": "\nfunction f(full::String, part::String)::Int64\n    length_part = length(part)\n    index = findfirst(part, full)\n    count = 0\n    while index !== nothing\n        full = full[index[2]:end]\n        index = findfirst(part, full)\n        count += 1\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"hrsiajiajieihruejfhbrisvlmmy\", \"hr\") == 2)\nend\n"
    },
    {
        "id": 404,
        "code": "function f(no::Vector{String})::Int64 \n    d = Dict{String, Bool}(no .=> false)\n    return length(keys(d))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"l\", \"f\", \"h\", \"g\", \"s\", \"b\"]) == 6)\nend\n"
    },
    {
        "id": 405,
        "code": "function f(xs::Vector{Int64})::Vector{Int64} \n    new_x = xs[1] - 1\n    xs = xs[2:end]\n    while new_x <= xs[1]\n        xs = xs[2:end]\n        new_x -= 1\n    end\n    xs = [new_x; xs...]\n    return xs\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([6, 3, 4, 1, 2, 3, 5]) == [5, 3, 4, 1, 2, 3, 5])\nend\n"
    },
    {
        "id": 406,
        "code": "function f(text::String)::Bool \n    ls = collect(text)\n    ls[1], ls[end] = uppercase(ls[end]), uppercase(ls[1])\n    return join(ls) == titlecase(join(ls))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Josh\") == false)\nend\n"
    },
    {
        "id": 407,
        "code": "function f(s::Vector{Int64})::Int64 \n    while length(s) > 1\n        empty!(s)\n        push!(s, length(s))\n    end\n    return pop!(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([6, 1, 2, 3]) == 0)\nend\n"
    },
    {
        "id": 408,
        "code": "function f(m::Vector{Int64})::Vector{Int64} \n    reverse!(m)\n    return m\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-4, 6, 0, 4, -7, 2, -1]) == [-1, 2, -7, 4, 0, 6, -4])\nend\n"
    },
    {
        "id": 409,
        "code": "\nfunction f(text::String, char::String)::String \n    if !isempty(text)\n        text = replace(text, \"^$char\" => \"\")\n        text = replace(text, \"^$(text[end])\" => \"\")\n        text = text[1:end-1] * uppercase(text[end])\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"querist\", \"u\") == \"querisT\")\nend\n"
    },
    {
        "id": 410,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    a = 1\n    for i in 1:length(nums)\n        insert!(nums, i, nums[a])\n        a += 1\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 3, -1, 1, -2, 6]) == [1, 1, 1, 1, 1, 1, 1, 3, -1, 1, -2, 6])\nend\n"
    },
    {
        "id": 411,
        "code": "function f(text::String, pref::String)::Bool \n    if isa(pref, Vector{String})\n        return join([startswith(text, x) for x in pref], \", \")\n    else\n        return startswith(text, pref)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Hello World\", \"W\") == false)\nend\n"
    },
    {
        "id": 412,
        "code": "\nfunction f(start::Int64, end_val::Int64, interval::Int64)::Int64 \n    steps = collect(start:interval:end_val)\n    if 1 in steps\n        steps[end] = end_val + 1\n    end\n    return length(steps)\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(3, 10, 1) == 8)\nend\n"
    },
    {
        "id": 413,
        "code": "\nfunction f(s::String)::String \n    return string(s[4:end], s[3], s[6:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"jbucwc\") == \"cwcuc\")\nend\n"
    },
    {
        "id": 414
    },
    {
        "id": 415
    },
    {
        "id": 416,
        "code": "\nfunction f(text::String, old::String, new::String)::String\n    result = collect(text)\n    index = findlast(x -> x == old, text)\n    while index != nothing\n        result[index:index+length(old)] = collect(new)\n        index = findlast(x -> x == old, text[1:index-1])\n    end\n    return join(result, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"jysrhfm ojwesf xgwwdyr dlrul ymba bpq\", \"j\", \"1\") == \"jysrhfm ojwesf xgwwdyr dlrul ymba bpq\")\nend\n"
    },
    {
        "id": 417,
        "code": "function f(lst::Vector{Int64})::Vector{Int64} \n    reverse!(lst)\n    pop!(lst)\n    reverse!(lst)\n    return lst\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([7, 8, 2, 8]) == [8, 2, 8])\nend\n"
    },
    {
        "id": 418,
        "code": "function f(s::String, p::String)::String \n    arr = split(s, p)\n    part_one, part_two, part_three = length(arr[1]), length(p), length(arr[2])\n    if part_one >= 2 && part_two <= 2 && part_three >= 2\n        return string(reverse(arr[1]) * p * reverse(arr[2]) * \"#\")\n    end\n    return string(arr[1] * p * arr[2])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"qqqqq\", \"qqq\") == \"qqqqq\")\nend\n"
    },
    {
        "id": 419,
        "code": "function f(text::String, value::String)::String \n    if !(occursin(value, text))\n        return \"\"\n    end\n    parts = split(text, value)\n    return parts[1]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"mmfbifen\", \"i\") == \"mmfb\")\nend\n"
    },
    {
        "id": 420,
        "code": "function f(text::String)::Bool \n    try\n        return occursin(r\"^[a-zA-Z]+$\", text)\n    catch\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"x\") == true)\nend\n"
    },
    {
        "id": 421,
        "code": "function f(s::String, n::Int64)::String \n    if length(s) < n\n        return s\n    else\n        return s[n+1:end]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"try.\", 5) == \"try.\")\nend\n"
    },
    {
        "id": 422,
        "code": "function f(array::Vector{Int64})::Vector{Int64} \n    new_array = copy(array)\n    new_array = reverse(new_array)\n    return [x*x for x in new_array]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 1]) == [1, 4, 1])\nend\n"
    },
    {
        "id": 423,
        "code": "function f(selfie::Vector{Int64})::Vector{Int64} \n    lo = length(selfie)\n    for i in reverse(1:lo)\n        if selfie[i] == selfie[1]\n            deleteat!(selfie, lo)\n        end\n    end\n    return selfie\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([4, 2, 5, 1, 3, 2, 6]) == [4, 2, 5, 1, 3, 2])\nend\n"
    },
    {
        "id": 424,
        "code": "function f(s::String)::String \n    s = replace(s, \"\\\"\" => \"\")\n    lst = collect(s)\n    col = 1\n    count = 1\n    while col <= length(lst) && lst[col] in ['.', ':', ',']\n        if lst[col] == '.'\n            count = lst[col] + 1\n        end\n        col += 1\n    end\n    return join(lst[col+count:end], \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\\\"Makers of a Statement\\\"\") == \"akers of a Statement\")\nend\n"
    },
    {
        "id": 425,
        "code": "\nfunction f(a::String)::Vector{String} \n    a = replace(a, \"/\" => \":\")\n    z = rsplit(a, \":\", limit=2)\n    if length(z) == 1\n        return [z[1], \"\", \"\"]\n    else\n        return [z[1], \":\", z[2]]\n    end\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"/CL44     \") == [\"\", \":\", \"CL44     \"])\nend\n"
    },
    {
        "id": 426,
        "code": "function f(numbers::Vector{Int64}, elem::Int64, idx::Int64)::Vector{Int64}\n    if idx > length(numbers)\n        push!(numbers, elem)\n    else\n        insert!(numbers, idx, elem)\n    end\n    return numbers\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3], 8, 5) == [1, 2, 3, 8])\nend\n"
    },
    {
        "id": 427,
        "code": "function f(s::String)::String \n    count = length(s) - 1\n    reverse_s = reverse(s)\n    while count > 0 && occursin(\"sea\", reverse_s[1:3:end]) == false\n        count -= 1\n        reverse_s = reverse_s[1:count]\n    end\n    return reverse_s[count + 1:end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"s a a b s d s a a s a a\") == \"\")\nend\n"
    },
    {
        "id": 428,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    for i in 1:length(nums)\n        if i % 2 != 0\n            push!(nums, nums[i] * nums[i+1])\n        end\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\nend\n"
    },
    {
        "id": 429
    },
    {
        "id": 430
    },
    {
        "id": 431,
        "code": "function f(n::Int64, m::Int64)::Vector{Int64} \n    arr = collect(1:n)\n    for i in 1:m\n        empty!(arr)\n    end\n    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(1, 3) == Vector{Int64}([]))\nend\n"
    },
    {
        "id": 432
    },
    {
        "id": 433,
        "code": "function f(text::String)::String \n    text = split(text, ',')\n    text = filter!(x -> x != \"\", text) # remove empty strings\n    deleteat!(text, 1)\n    idx = findfirst(isequal(\"T\"), text)\n    insert!(text, 1, splice!(text, idx))\n    return join([\"T\", text...], \",\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Dmreh,Sspp,T,G ,.tB,Vxk,Cct\") == \"T,T,Sspp,G ,.tB,Vxk,Cct\")\nend\n"
    },
    {
        "id": 434,
        "code": "function f(string::String)::Int64\n    try\n        return findlast(==('e'), string) - 1\n    catch e\n        if isa(e, ArgumentError)\n            return -1\n        else\n            rethrow()\n        end\n    end\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"eeuseeeoehasa\") == 8)\nend\n"
    },
    {
        "id": 435,
        "code": "\nfunction f(numbers::Vector{String}, num::Int64, val::Int64)::String \n    while length(numbers) < num\n        insert!(numbers, div(length(numbers), 2) + 1, string(val))\n    end\n    for _ in 1:div(length(numbers), (num - 1)) - 4\n        insert!(numbers, div(length(numbers), 2) + 1, string(val))\n    end\n    return join(numbers, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{String}([]), 0, 1) == \"\")\nend\n"
    },
    {
        "id": 436,
        "code": "\nfunction f(s::String, characters::Vector{Int64})::Vector{String} \n    return [SubString(s, i, i) for i in characters .+ 1]\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"s7 6s 1ss\", [1, 3, 6, 1, 2]) == [\"7\", \"6\", \"1\", \"7\", \" \"])\nend\n"
    },
    {
        "id": 437
    },
    {
        "id": 438
    },
    {
        "id": 439,
        "code": "function f(value::String)::String \n    parts = split(value, ' ')[1:2:end]\n    return join(parts, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"coscifysu\") == \"coscifysu\")\nend\n"
    },
    {
        "id": 440,
        "code": "function f(text::String)::String \n    if occursin(r\"\\d+\", text)\n        return \"yes\"\n    else\n        return \"no\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abc\") == \"no\")\nend\n"
    },
    {
        "id": 441
    },
    {
        "id": 442,
        "code": "function f(lst::Vector{Int64})::Vector{Int64} \n    res = Int64[]\n    for i in 1:length(lst)\n        if lst[i] % 2 == 0\n            push!(res, lst[i])\n        end\n    end\n    \n    return copy(lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\nend\n"
    },
    {
        "id": 443,
        "code": "function f(text::String)::String \n    for space in text\n        if space == ' '\n            text = strip(text)\n        else\n            text = replace(text, \"cd\" => string(space))\n        end\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"lorem ipsum\") == \"lorem ipsum\")\nend\n"
    },
    {
        "id": 444
    },
    {
        "id": 445,
        "code": "function f(names::String)::String \n    parts = split(names, ',')\n    for (i, part) in enumerate(parts)\n        parts[i] = replace(replace(titlecase(part), \" And\" => \"+\"), \"+\" => \" and\")\n    end\n    return join(parts, \", \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"carrot, banana, and strawberry\") == \"Carrot,  Banana,  and Strawberry\")\nend\n"
    },
    {
        "id": 446,
        "code": "function f(array::Vector{Int64})::Vector{Int64} \n    l = length(array)\n    if l % 2 == 0\n        empty!(array)\n    else\n        reverse!(array)\n    end\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\nend\n"
    },
    {
        "id": 447,
        "code": "function f(text::String, tab_size::Int64)::String \n    res = \"\"\n    text = replace(text, '\\t' => repeat(' ', tab_size-1))\n    for i in 1:length(text)\n        if text[i] == ' '\n            res *= '|'\n        else\n            res *= text[i]\n        end\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\ta\", 3) == \"||a\")\nend\n"
    },
    {
        "id": 448,
        "code": "function f(text::String, suffix::String)::Bool \n    if suffix == \"\"\n        suffix = nothing\n    end\n    return endswith(text, suffix)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"uMeGndkGh\", \"kG\") == false)\nend\n"
    },
    {
        "id": 449,
        "code": "function f(x::String)::Bool \n    n = length(x)\n    i = 1\n    while i <= n && isdigit(x[i])\n        i += 1\n    end\n    return i > n\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"1\") == true)\nend\n"
    },
    {
        "id": 450,
        "code": "function f(strs::String)::String \n    strs = split(strs)\n    for i in 2:2:length(strs)\n        strs[i] = join(reverse(strs[i]))\n    end\n    return join(strs, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"K zBK\") == \"K KBz\")\nend\n"
    },
    {
        "id": 451,
        "code": "\nfunction f(text::String, char::String)::String \n    text = collect(text)\n    for (count, item) in enumerate(text)\n        if item == char[1]\n            deleteat!(text, count)\n            return join(text, \"\")\n        end\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"pn\", \"p\") == \"n\")\nend\n"
    },
    {
        "id": 452,
        "code": "function f(text::String)::Int64 \n    counter = 0\n    for char in text\n        if isletter(char)\n            counter += 1\n        end\n    end\n    return counter\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"l000*\") == 1)\nend\n"
    },
    {
        "id": 453,
        "code": "function f(string::String, c::String)::Bool \n    return endswith(string, c)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"wrsch)xjmb8\", \"c\") == false)\nend\n"
    },
    {
        "id": 454
    },
    {
        "id": 455,
        "code": "function f(text::String)::String \n    uppers = count(isuppercase, text)\n    if uppers >= 10\n        return uppercase(text)\n    else\n        return text\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"?XyZ\") == \"?XyZ\")\nend\n"
    },
    {
        "id": 456,
        "code": "function f(s::String, tab::Int64)::String \n    return replace(s, \"\\t\" => repeat(\" \", tab))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Join us in Hungary\", 4) == \"Join us in Hungary\")\nend\n"
    },
    {
        "id": 457,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    count = collect(1:length(nums))\n    for i in 1:length(nums)\n        pop!(nums)\n        if length(count) > 0\n            popfirst!(count)\n        end\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([3, 1, 7, 5, 6]) == Vector{Int64}([]))\nend\n"
    },
    {
        "id": 458,
        "code": "function f(text::String, search_chars::String, replace_chars::String)::String \n    trans_table = Dict{Char, Char}()\n    for (i, search_char) in enumerate(search_chars)\n        trans_table[search_char] = replace_chars[i]\n    end\n    return join([get(trans_table, c, c) for c in text])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"mmm34mIm\", \"mm3\", \",po\") == \"pppo4pIp\")\nend\n"
    },
    {
        "id": 459
    },
    {
        "id": 460,
        "code": "function f(text::String, amount::Int64)::String \n    length_text = length(text)\n    pre_text = '|'\n    if amount >= length_text\n        extra_space = amount - length_text\n        pre_text *= \" \" ^ div(extra_space, 2)\n        return pre_text * text * pre_text\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"GENERAL NAGOOR\", 5) == \"GENERAL NAGOOR\")\nend\n"
    },
    {
        "id": 461,
        "code": "function f(text::String, search::String)::Bool \n    return startswith(search, text) || false\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"123\", \"123eenhas0\") == true)\nend\n"
    },
    {
        "id": 462
    },
    {
        "id": 463,
        "code": "function f(dict::Dict{Int64, Int64})::Dict{Int64, Int64}\n    result = copy(dict)\n    remove_keys = []\n    for (k, v) in dict\n        if haskey(dict, v)\n            delete!(result, k)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(-1 => -1, 5 => 5, 3 => 6, -4 => -4)) == Dict(3 => 6))\nend\n"
    },
    {
        "id": 464,
        "code": "function f(ans::String)::Union{Int64, String} \n    try\n        num = parse(Int, ans)\n        total = num * 4 - 50\n        total -= count(c -> c ∉ \"02468\", ans) * 100\n        return total\n    catch\n        return \"NAN\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"0\") == -50)\nend\n"
    },
    {
        "id": 465,
        "code": "function f(seq::Vector{String}, value::String)::Dict{String, String}> \n    roles = Dict{String, String}(zip(seq, fill(\"north\", length(seq))))\n    if !isempty(value)\n        for key in split(value, \", \")\n            roles[key] = key\n        end\n    end\n    return roles\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"wise king\", \"young king\"], \"\") == Dict(\"wise king\" => \"north\", \"young king\" => \"north\"))\nend\n"
    },
    {
        "id": 466,
        "code": "\nfunction f(text::String)::String \n    length_ = length(text)\n    index = 0\n    while index < length_ && isspace(text[index+1])\n        index += 1\n    end\n    return text[index+1:index+5]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"-----\t\n\tth\n-----\") == \"-----\")\nend\n"
    },
    {
        "id": 467,
        "code": "function f(nums::Dict{String, String})::Dict{String, Int64}\n    copy = deepcopy(nums)\n    newDict = Dict{String, Int64}()\n    for k in keys(copy)\n        newDict[k] = length(copy[k])\n    end\n    return newDict\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict{String, String}()) == Dict{String, Int64}())\nend\n"
    },
    {
        "id": 468,
        "code": "function f(a::String, b::String, n::Int64)::String \n    result = m = b\n    for _ in 1:n\n        if m != \"\"\n            a, m = replace(a, m => \"\", count=1), \"\"\n            result = m = b\n        end\n    end\n    return join(split(a, b), result)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"unrndqafi\", \"c\", 2) == \"unrndqafi\")\nend\n"
    },
    {
        "id": 469
    },
    {
        "id": 470,
        "code": "function f(number::Int64)::Vector{String} \n    transl = Dict(\"A\" => 1, \"B\" => 2, \"C\" => 3, \"D\" => 4, \"E\" => 5)\n    result = String[]\n    for (key, value) in transl\n        if value % number == 0\n            push!(result, key)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(2) == [\"B\", \"D\"])\nend\n"
    },
    {
        "id": 471,
        "code": "function f(val::String, text::String)::Int64 \n    indices = [index for index in 1:length(text) if text[index] == val]\n    if length(indices) == 0\n        return -1\n    else\n        return indices[1]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"o\", \"fnmart\") == -1)\nend\n"
    },
    {
        "id": 472,
        "code": "\nfunction f(text::String)::Vector{Int64} \n    d = Dict{Char, Int64}()\n    for char in lowercase(replace(text, \"-\" => \"\"))\n        d[char] = get(d, char, 0) + 1\n    end\n    d = sort(collect(d), by=x->x[2])\n    return [val for (key, val) in d]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"x--y-z-5-C\") == [1, 1, 1, 1, 1])\nend\n"
    },
    {
        "id": 473,
        "code": "\nfunction f(text::String, value::String)::String\n    indexes = Int[]\n    for i in 1:length(text)\n        if text[i] == value[1]\n            push!(indexes, i)\n        end\n    end\n    new_text = collect(text)\n    for i in reverse(indexes)\n        deleteat!(new_text, i)\n    end\n    return join(new_text, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"scedvtvotkwqfoqn\", \"o\") == \"scedvtvtkwqfqn\")\nend\n"
    },
    {
        "id": 474,
        "code": "function f(txt::String, marker::Int64)::String \n    a = []\n    lines = split(txt, '\\n')\n    for line in lines\n        push!(a, rpad(lpad(line, div(marker - length(line), 2)), marker, ' '))\n    end\n    return join(a, '\\n')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"#[)[]>[^e>\n 8\", -5) == \"#[)[]>[^e>\n 8\")\nend\n"
    },
    {
        "id": 475,
        "code": "\nfunction f(array::Vector{Int64}, index::Int64)::Int64 \n    if index < 0\n        index = length(array) + index\n    end\n    return array[index+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1], 0) == 1)\nend\n"
    },
    {
        "id": 476,
        "code": "function f(a::String, split_on::String)::Bool \n    t = split(a)\n    a = []\n    for i in t\n        for j in i\n            push!(a, j)\n        end\n    end\n    if split_on in a\n        return true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"booty boot-boot bootclass\", \"k\") == false)\nend\n"
    },
    {
        "id": 477,
        "code": "\nfunction f(text::String)::Tuple{String, String} \n    parts = split(text, '|', limit=2)\n    topic = length(parts) > 1 ? parts[1] : \"\"\n    problem = length(parts) > 1 ? parts[2] : text\n    if problem == \"r\"\n        problem = replace(topic, \"u\" => \"p\")\n    end\n    return topic, problem\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"|xduaisf\") == (\"\", \"xduaisf\"))\nend\n"
    },
    {
        "id": 478,
        "code": "\nfunction f(sb::String)::Dict{String, Int64} \n    d = Dict{String, Int64}()\n    for s in sb\n        d[string(s)] = get(d, string(s), 0) + 1\n    end\n    return d\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"meow meow\") == Dict(\"m\" => 2, \"e\" => 2, \"o\" => 2, \"w\" => 2, \" \" => 1))\nend\n"
    },
    {
        "id": 479,
        "code": "function f(nums::Vector{Int64}, pop1::Int64, pop2::Int64)::Vector{Int64} \n    splice!(nums, pop1)\n    splice!(nums, pop2)\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 5, 2, 3, 6], 2, 4) == [1, 2, 3])\nend\n"
    },
    {
        "id": 480,
        "code": "function f(s::String, c1::String, c2::String)::String \n    if s == \"\"\n        return s\n    end\n    \n    ls = split(s, c1)\n    for (index, item) in enumerate(ls)\n        if occursin(c1, item)\n            ls[index] = replace(item, c1 => c2, count=1)\n        end\n    end\n    \n    return join(ls, c1)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\", \"mi\", \"siast\") == \"\")\nend\n"
    },
    {
        "id": 481,
        "code": "function f(values::Vector{Int64}, item1::Int64, item2::Int64)::Vector{Int64} \n    if values[end] == item2\n        if !(values[1] in values[2:end])\n            push!(values, values[1])\n        end\n    elseif values[end] == item1\n        if values[1] == item2\n            push!(values, values[1])\n        end\n    end\n    return values\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 1], 2, 3) == [1, 1])\nend\n"
    },
    {
        "id": 482,
        "code": "\nfunction f(text::String)::String \n    return replace(text, \"\\\\\\\"\" => \"\\\"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Because it intrigues them\") == \"Because it intrigues them\")\nend\n"
    },
    {
        "id": 483,
        "code": "function f(text::String, char::String)::String \n    return join(split(text, char), \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a\", \"a\") == \" \")\nend\n"
    },
    {
        "id": 484
    },
    {
        "id": 485,
        "code": "\nfunction f(tokens::String)::String \n    tokens = split(tokens)\n    if length(tokens) == 2\n        tokens = reverse(tokens)\n    end\n    result = join([rpad(tokens[1], 5), rpad(tokens[2], 5)], \" \")\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"gsd avdropj\") == \"avdropj gsd  \")\nend\n"
    },
    {
        "id": 486,
        "code": "function f(dic::Dict{Int64, Int64})::Dict{Int64, Int64}\n    dic_op = copy(dic)\n    for (key, val) in dic\n        dic_op[key] = val * val\n    end\n    return dic_op\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(1 => 1, 2 => 2, 3 => 3)) == Dict(1 => 1, 2 => 4, 3 => 9))\nend\n"
    },
    {
        "id": 487,
        "code": "function f(dict::Dict{Int64, String})::Vector{Int64} \n    even_keys = Int[]\n    for key in keys(dict)\n        if key % 2 == 0\n            push!(even_keys, key)\n        end\n    end\n    return even_keys\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(4 => \"a\")) == [4])\nend\n"
    },
    {
        "id": 488
    },
    {
        "id": 489,
        "code": "function f(text::String, value::String)::String \n    return replace(text, value => \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"coscifysu\", \"cos\") == \"cifysu\")\nend\n"
    },
    {
        "id": 490,
        "code": "function f(s::String)::String \n    return join([c for c in s if isspace(c)])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\ngiyixjkvu\n\r\r \frgjuo\") == \"\n\n\r\r \f\")\nend\n"
    },
    {
        "id": 491,
        "code": "\nfunction f(xs::Vector{Int64})::Vector{Int64}\n    for i in 1:length(xs)\n        extend_arr = [xs[end-i+1], xs[end-i+1]]\n        append!(xs, extend_arr)\n    end\n    return xs\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([4, 8, 8, 5]) == [4, 8, 8, 5, 5, 5, 5, 5, 5, 5, 5, 5])\nend\n"
    },
    {
        "id": 492,
        "code": "function f(text::String, value::String)::String \n    ls = collect(text)\n    if count(e -> e == value, ls) % 2 == 0\n        while value in ls\n            deleteat!(ls, findfirst(x -> x == value, ls))\n        end\n    else\n        empty!(ls)\n    end\n    return join(ls, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abbkebaniuwurzvr\", \"m\") == \"abbkebaniuwurzvr\")\nend\n"
    },
    {
        "id": 493
    },
    {
        "id": 494,
        "code": "function f(num::String, l::Int64)::String \n    t = \"\"\n    while l > length(num)\n        t *= '0'\n        l -= 1\n    end\n    return t * num\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"1\", 3) == \"001\")\nend\n"
    },
    {
        "id": 495,
        "code": "\nfunction f(s::String)::Tuple{String, String} \n    if all(isascii, s[end-4:end])\n        return s[end-4:end], s[1:3]\n    elseif all(isascii, s[1:5])\n        return s[1:5], s[end-2:end]\n    else\n        return s\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a1234år\") == (\"a1234\", \"år\"))\nend\n"
    },
    {
        "id": 496
    },
    {
        "id": 497,
        "code": "function f(n::Int64)::Vector{String} \n    b = [string(d) for d in digits(n)]\n    for i in 3:length(b)\n        b[i] *= \"+\"\n    end\n    return b\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(44) == [\"4\", \"4\"])\nend\n"
    },
    {
        "id": 498,
        "code": "\nfunction f(nums::Vector{Int64}, idx::Int64, added::Int64)::Vector{Int64} \n    insert!(nums, idx + 1, added)\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2, 2, 2, 3, 3], 2, 3) == [2, 2, 3, 2, 3, 3])\nend\n"
    },
    {
        "id": 499
    },
    {
        "id": 500
    },
    {
        "id": 501
    },
    {
        "id": 502,
        "code": "function f(name::String)::String \n    return join(split(name, \" \"), \"*\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Fred Smith\") == \"Fred*Smith\")\nend\n"
    },
    {
        "id": 503,
        "code": "function f(d::Dict{Int64, Int64})::Vector{Int64}\n    result = Vector{Int64}(undef, length(d))\n    a = b = 0\n    while !isempty(d)\n        key, value = pop!(d)\n        result[a + 1] = value  # Julia is 1-indexed\n        a, b = b, (b + 1) % length(result)\n    end\n    return result\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict{Int64, Int64}()) == Vector{Int64}([]))\nend\n"
    },
    {
        "id": 504,
        "code": "function f(values::Vector{Int64})::Vector{Int64} \n    sort!(values)\n    return values\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 1, 1, 1]) == [1, 1, 1, 1])\nend\n"
    },
    {
        "id": 505,
        "code": "function f(string::String)::String \n    while !isempty(string)\n        if isletter(string[end])\n            return string\n        end\n        string = string[1:end-1]\n    end\n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"--4/0-209\") == \"\")\nend\n"
    },
    {
        "id": 506,
        "code": "function f(n::Int64)::String \n    p = \"\"\n    if n % 2 == 1\n        p *= \"sn\"\n    else\n        return string(n * n)\n    end\n    \n    for x in 1:n\n        if x % 2 == 0\n            p *= \"to\"\n        else\n            p *= \"ts\"\n        end\n    end\n    \n    return p\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(1) == \"snts\")\nend\n"
    },
    {
        "id": 507,
        "code": "\nfunction f(text::String, search::String)::Int64 \n    result = lowercase(text)\n    search_lowercase = lowercase(search)\n    return isnothing(findfirst(search_lowercase, result)) ? -1 : first(findfirst(search_lowercase, result)) - 1\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"car hat\", \"car\") == 0)\nend\n"
    },
    {
        "id": 508,
        "code": "\nfunction f(text::String, sep::String, maxsplit::Int64)::String \n    splitted = split(text, sep)\n    length_s = length(splitted)\n    new_splitted = splitted[1:div(length_s,2)]\n    reverse!(new_splitted)\n    new_splitted = vcat(new_splitted, splitted[div(length_s,2)+1:end])\n    return join(new_splitted, sep)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ertubwi\", \"p\", 5) == \"ertubwi\")\nend\n"
    },
    {
        "id": 509,
        "code": "function f(value::Int64, width::Int64)::String \n    if value >= 0\n        return string(value) |> x -> lpad(x, width, '0')\n    elseif value < 0\n        return '-' * string(-value) |> x -> lpad(x, width, '0')\n    else\n        return \"\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5, 1) == \"5\")\nend\n"
    },
    {
        "id": 510,
        "code": "function f(a::Dict{Int64, String}, b::Int64, c::String, d::String, e::Union{Int64, Float64})::Union{String, Int64} \n    key = d\n    if haskey(a, key)\n        num = pop!(a, key)\n    end\n    if b > 3\n        return join(c)\n    else\n        return num\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(7 => \"ii5p\", 1 => \"o3Jwus\", 3 => \"lot9L\", 2 => \"04g\", 9 => \"Wjf\", 8 => \"5b\", 0 => \"te6\", 5 => \"flLO\", 6 => \"jq\", 4 => \"vfa0tW\"), 4, \"Wy\", \"Wy\", 1.0) == \"Wy\")\nend\n"
    },
    {
        "id": 511,
        "code": "\nfunction f(fields::Tuple{String, String, String}, update_dict::Dict{String, String})::Dict{String, String} \n    di = Dict{String, String}(x => \"\" for x in fields)\n    di = merge(di, update_dict)\n    return di\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate((\"ct\", \"c\", \"ca\"), Dict(\"ca\" => \"cx\")) == Dict(\"ct\" => \"\", \"c\" => \"\", \"ca\" => \"cx\"))\nend\n"
    },
    {
        "id": 512,
        "code": "function f(s::String)::Bool \n    return length(s) == count(x -> x == '0' || x == '1', s)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"102\") == false)\nend\n"
    },
    {
        "id": 513,
        "code": "function f(array::Vector{Int64})::Vector{Int64} \n    while -1 in array\n        splice!(array, findlast(x -> x == -3, array))\n    end\n    while 0 in array\n        pop!(array)\n    end\n    while 1 in array\n        popfirst!(array)\n    end\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([0, 2]) == Vector{Int64}([]))\nend\n"
    },
    {
        "id": 514,
        "code": "using Base\n\nfunction f(text::String)::String \n    words = split(text)\n    for item in words\n        text = replace(text, \"-$item\" => \" \")\n        text = replace(text, \"$item-\" => \" \")\n    end\n    return strip(text, '-')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"-stew---corn-and-beans-in soup-.-\") == \"stew---corn-and-beans-in soup-.\")\nend\n"
    },
    {
        "id": 515,
        "code": "function f(array::Vector{Int64})::Vector{Int64} \n    result = copy(array)\n    reverse!(result)\n    result .= [item * 2 for item in result]\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3, 4, 5]) == [10, 8, 6, 4, 2])\nend\n"
    },
    {
        "id": 516,
        "code": "function f(strings::Vector{String}, substr::String)::Vector{String} \n    list = filter(s -> startswith(s, substr), strings)\n    return sort(list, by = x -> length(x))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"condor\", \"eyes\", \"gay\", \"isa\"], \"d\") == Vector{String}([]))\nend\n"
    },
    {
        "id": 517,
        "code": "function f(text::String)::String \n    for i in reverse(1:length(text)-1)\n        if !isuppercase(text[i])\n            return text[1:i]\n        end\n    end\n    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"SzHjifnzog\") == \"SzHjifnzo\")\nend\n"
    },
    {
        "id": 518,
        "code": "function f(text::String)::Bool \n    return !occursin(r\"^\\d+$\", text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"the speed is -36 miles per hour\") == true)\nend\n"
    },
    {
        "id": 519
    },
    {
        "id": 520,
        "code": "function f(album_sales::Vector{Int64})::Int64 \n    while length(album_sales) != 1\n        push!(album_sales, shift!(album_sales))\n    end\n    return album_sales[1]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([6]) == 6)\nend\n"
    },
    {
        "id": 521,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    m = maximum(nums)\n    for i in 1:m\n        reverse!(nums)\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([43, 0, 4, 77, 5, 2, 0, 9, 77]) == [77, 9, 0, 2, 5, 77, 4, 0, 43])\nend\n"
    },
    {
        "id": 522,
        "code": "\nfunction f(numbers::Vector{Int64})::Vector{Float64} \n    floats = [n % 1 for n in numbers]\n    return 1 in floats ? floats : Float64[]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119]) == Vector{Float64}([]))\nend\n"
    },
    {
        "id": 523,
        "code": "function f(text::String)::String\n    result = IOBuffer()\n    for i in eachindex(text)\n        if isspace(text[i])\n            print(result, \"&nbsp;\")\n        else\n            print(result, text[i])\n        end\n    end\n    return String(take!(result))\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"   \") == \"&nbsp;&nbsp;&nbsp;\")\nend\n"
    },
    {
        "id": 524,
        "code": "function f(dict0::Dict{Int, Int})::Dict{Int, Int}\n    new = copy(dict0)\n    for i in 1:length(keys(new)) - 1\n        key_list = sort(collect(keys(new)))\n        dict0[key_list[i]] = i - 1\n    end\n    return dict0\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(2 => 5, 4 => 1, 3 => 5, 1 => 3, 5 => 1)) == Dict(2 => 1, 4 => 3, 3 => 2, 1 => 0, 5 => 1))\nend\n"
    },
    {
        "id": 525,
        "code": "function f(c::Dict{String, Int}, st::Int, ed::Int)::Tuple{String, String}\n    d = Dict{Int, String}()\n    a, b = 0, 0\n    for (x, y) in c\n        d[y] = x\n        if y == st\n            a = x\n        end\n        if y == ed\n            b = x\n        end\n    end\n    w = d[st]\n    return a > b ? (w, d[ed]) : (d[ed], w)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"TEXT\" => 7, \"CODE\" => 3), 7, 3) == (\"TEXT\", \"CODE\"))\nend\n"
    },
    {
        "id": 526
    },
    {
        "id": 527,
        "code": "function f(text::String, value::String)::String \n    return lpad(text, length(value), '?')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"!?\", \"\") == \"!?\")\nend\n"
    },
    {
        "id": 528,
        "code": "\nfunction f(s::String)::Int64\n    b = \"\"\n    c = \"\"\n    for i in s\n        c = string(c, i)\n        if occursin(c, s)\n            return findlast(c, s)[1] - 1\n        end\n    end\n    return 0\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"papeluchis\") == 2)\nend\n"
    },
    {
        "id": 529,
        "code": "function f(array::Vector{Int64})::Vector{Int64} \n    prev = array[1]\n    newArray = copy(array)\n    for i in 2:length(array)\n        if prev != array[i]\n            newArray[i] = array[i]\n        else\n            deleteat!(newArray, i)\n        end\n        prev = array[i]\n    end\n    return newArray\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3]) == [1, 2, 3])\nend\n"
    },
    {
        "id": 530
    },
    {
        "id": 531,
        "code": "\nfunction f(text::String, x::String)::String \n    if startswith(text, x) == false\n        return f(text[2:end], x)\n    else\n        return text\n    end\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Ibaskdjgblw asdl \", \"djgblw\") == \"djgblw asdl \")\nend\n"
    },
    {
        "id": 532,
        "code": "function f(n::Int64, array::Vector{Int64})::Vector{Vector{Int64}} \n    final = [copy(array)]\n    for i in 1:n\n        arr = copy(array)\n        push!(arr, final[end]...)\n        push!(final, arr)\n    end\n    return final\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(1, [1, 2, 3]) == [[1, 2, 3], [1, 2, 3, 1, 2, 3]])\nend\n"
    },
    {
        "id": 533,
        "code": "function f(query::String, base::Dict{String, Int64})::Int64\n    net_sum = 0\n    for (key, val) in base\n        if first(key) == query && length(key) == 3\n            net_sum -= val\n        elseif last(key) == query && length(key) == 3\n            net_sum += val\n        end\n    end\n    return net_sum\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a\", Dict{String, Int64}()) == 0)\nend\n"
    },
    {
        "id": 534,
        "code": "\nfunction f(sequence::String, value::String)::String\n    i = max(findfirst(value, sequence).start - div(length(sequence), 3), 0)\n    result = \"\"\n    for j in enumerate(sequence[i:end])\n        if j[2] == '+'\n            result *= value\n        else\n            result *= sequence[i + j[1] - 1]\n        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"hosu\", \"o\") == \"hosu\")\nend\n"
    },
    {
        "id": 535,
        "code": "function f(n::Int64)::Bool \n    for i in string(n)\n        if !(i in ['0','1','2']) && !(i in ['5','6','7','8','9'])\n            return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(1341240312) == false)\nend\n"
    },
    {
        "id": 536,
        "code": "function f(cat::String)::Int64 \n    digits = 0\n    for char in cat\n        if isdigit(char)\n            digits += 1\n        end\n    end\n    return digits\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"C24Bxxx982ab\") == 5)\nend\n"
    },
    {
        "id": 537,
        "code": "function f(text::String, value::String)::String\n    new_text = collect(text) |> x -> map(string, x)  # Convert each Char to String\n    len = 0  # Initialize len to ensure it is defined\n    try\n        push!(new_text, value)\n        len = length(new_text)\n    catch e\n        if isa(e, BoundsError)\n            len = 0\n        else\n            rethrow(e)\n        end\n    end\n    return \"[\" * string(len) * \"]\"\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abv\", \"a\") == \"[4]\")\nend\n"
    },
    {
        "id": 538
    },
    {
        "id": 539,
        "code": "\nfunction f(array::Vector{String})::Vector{String} \n    c = array\n    array_copy = array\n\n    while true\n        push!(c, \"_\")\n        if c == array_copy\n            array_copy[findfirst(x -> x == \"_\", c)] = \"\"\n            break\n        end\n    end\n    return array_copy\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{String}([])) == [\"\"])\nend\n"
    },
    {
        "id": 540,
        "code": "function f(a::Vector{Int64})::Vector{Int64} \n    b = copy(a)\n    for k in 1:2:length(a)-1\n        insert!(b, k+1, b[k])\n    end\n    push!(b, b[1])\n    return b\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([5, 5, 5, 6, 4, 9]) == [5, 5, 5, 5, 5, 5, 6, 4, 9, 5])\nend\n"
    },
    {
        "id": 541,
        "code": "function f(text::String)::Bool \n    return isspace.(collect(text)) |> all\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\" \t  　\") == true)\nend\n"
    },
    {
        "id": 542,
        "code": "function f(test::String, sep::String, maxsplit::Int64)::Vector{String} \n    try\n        return rsplit(test, sep, limit = maxsplit)\n    catch\n        return rsplit(test)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ab cd\", \"x\", 2) == [\"ab cd\"])\nend\n"
    },
    {
        "id": 543,
        "code": "function f(item::String)::String \n    modified = replace(item, \". \" => \" , \")\n    modified = replace(modified, \"&#33; \" => \"! \")\n    modified = replace(modified, \". \" => \"? \")\n    modified = replace(modified, \". \" => \". \")\n    return uppercase(modified[1]) * modified[2:end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\".,,,,,. منبت\") == \".,,,,, , منبت\")\nend\n"
    },
    {
        "id": 544,
        "code": "function f(text::String)::String \n    a = split(text, '\\n')\n    b = []\n    for i in 1:length(a)\n        c = replace(a[i], '\\t' => \"    \")\n        push!(b, c)\n    end\n    return join(b, '\\n')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\t\t\ttab tab tabulates\") == \"            tab tab tabulates\")\nend\n"
    },
    {
        "id": 545,
        "code": "function f(array::Vector{Int64})::Vector{Int64} \n    result = []\n    index = 1\n    while index <= length(array)\n        push!(result, pop!(array))\n        index += 2\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([8, 8, -4, -9, 2, 8, -1, 8]) == [8, -1, 8])\nend\n"
    },
    {
        "id": 546,
        "code": "function f(text::String, speaker::String)::String \n    while startswith(text, speaker)\n        text = text[length(speaker)+1:end]\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"[CHARRUNNERS]Do you know who the other was? [NEGMENDS]\", \"[CHARRUNNERS]\") == \"Do you know who the other was? [NEGMENDS]\")\nend\n"
    },
    {
        "id": 547,
        "code": "\nfunction f(letters::String)::String \n    letters_only = strip(letters, [' ', '.', ',', '!', '?', '*'])\n    spl = split(letters_only, \" \")\n    return join(spl, \"....\")\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"h,e,l,l,o,wo,r,ld,\") == \"h,e,l,l,o,wo,r,ld\")\nend\n"
    },
    {
        "id": 548,
        "code": "function f(text::String, suffix::String)::String \n    if length(suffix) > 0 && length(text) > 0 && endswith(text, suffix)\n        return chop(text, length(suffix))\n    else\n        return text\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"spider\", \"ed\") == \"spider\")\nend\n"
    },
    {
        "id": 549,
        "code": "function f(matrix::Vector{Vector{Int64}})::Vector{Vector{Int64}} \n    reverse!(matrix)\n    result = Vector{Vector{Int64}}()\n    for primary in matrix\n        sort!(primary, rev=true)\n        push!(result, primary)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([[1, 1, 1, 1]]) == [[1, 1, 1, 1]])\nend\n"
    },
    {
        "id": 550,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    for i in 1:length(nums)\n        insert!(nums, i, nums[i]^2)\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 4]) == [1, 1, 1, 1, 2, 4])\nend\n"
    },
    {
        "id": 551
    },
    {
        "id": 552
    },
    {
        "id": 553,
        "code": "function f(text::String, count::Int64)::String \n    for i in 1:count\n        text = reverse(text)\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"439m2670hlsw\", 3) == \"wslh0762m934\")\nend\n"
    },
    {
        "id": 554,
        "code": "function f(arr::Vector{Int64})::Vector{Int64} \n    return reverse(arr)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2, 0, 1, 9999, 3, -5]) == [-5, 3, 9999, 1, 0, 2])\nend\n"
    },
    {
        "id": 555,
        "code": "function f(text::String, tabstop::Int64)::String \n    text = replace(text, '\\n' => \"_____\")\n    text = replace(text, '\\t' => \" \" ^ tabstop)\n    text = replace(text, \"_____\" => '\\n')\n    \n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"odes\tcode\twell\", 2) == \"odes  code  well\")\nend\n"
    },
    {
        "id": 556
    },
    {
        "id": 557,
        "code": "\nfunction f(s::String)::String \n    d = rsplit(s, \"ar\"; limit=2)\n    return join((d[1], \"ar\", d[2]), \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"xxxarmmarxx\") == \"xxxarmm ar xx\")\nend\n"
    },
    {
        "id": 558,
        "code": "function f(nums::Vector{Int64}, mos::Vector{Int64})::Bool \n    for num in mos\n        index_num = findfirst(isequal(num), nums)\n        splice!(nums, index_num)\n    end\n    sort!(nums)\n    for num in mos\n        push!(nums, num)\n    end\n    for i in 1:length(nums)-1\n        if nums[i] > nums[i+1]\n            return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([3, 1, 2, 1, 4, 1], [1]) == false)\nend\n"
    },
    {
        "id": 559,
        "code": "function f(n::String)::String \n    n = string(n)\n    return n[1] * \".\" * replace(n[2:end], '-' => '_')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"first-second-third\") == \"f.irst_second_third\")\nend\n"
    },
    {
        "id": 560,
        "code": "\nfunction f(text::String)::Int64 \n    x = 0\n    if all(islowercase, text)\n        for c in text\n            if parse(Int, c) in 0:89\n                x += 1\n            end\n        end\n    end\n    return x\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"591237865\") == 0)\nend\n"
    },
    {
        "id": 561,
        "code": "\nfunction f(text::String, digit::String)::Int64 \n    count_digit = count(i -> string(i) == digit, text)\n    return parse(Int64, digit) * count_digit\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"7Ljnw4Lj\", \"7\") == 7)\nend\n"
    },
    {
        "id": 562,
        "code": "function f(text::String)::Bool \n    return uppercase(text) == text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"VTBAEPJSLGAHINS\") == true)\nend\n"
    },
    {
        "id": 563,
        "code": "function f(text1::String, text2::String)::Int64 \n    nums = []\n    for i in 1:length(text2)\n        push!(nums, count(ch -> ch == text2[i], text1))\n    end\n    return sum(nums)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"jivespdcxc\", \"sx\") == 2)\nend\n"
    },
    {
        "id": 564
    },
    {
        "id": 565,
        "code": "function f(text::String)::Int64\n    return maximum(findfirst(ch, text) !== nothing ? first(findfirst(ch, text)) - 1 : -1 for ch in \"aeiou\")\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"qsqgijwmmhbchoj\") == 13)\nend\n"
    },
    {
        "id": 566,
        "code": "\nfunction f(string::String, code::String)::String\n    try\n        t = code(string, code)\n        if t.endswith(b'\\n')\n            t = t[1:end-1]\n        end\n        t = String(t)\n        return t\n    catch\n        return string\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"towaru\", \"UTF-8\") == \"towaru\")\nend\n"
    },
    {
        "id": 567,
        "code": "function f(s::String, n::Int64)::Vector{String} \n    ls = split(s, \" \")\n    out = String[]\n    while length(ls) >= n\n        append!(out, ls[end-n+1:end])\n        ls = ls[1:end-n]\n    end\n    \n    return vcat(ls, join(out, \"_\"))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"one two three four five\", 3) == [\"one\", \"two\", \"three_four_five\"])\nend\n"
    },
    {
        "id": 568
    },
    {
        "id": 569,
        "code": "function f(txt::String)::Int64 \n    coincidences = Dict{Char, Int}()\n    for c in txt\n        if haskey(coincidences, c)\n            coincidences[c] += 1\n        else\n            coincidences[c] = 1\n        end\n    end\n    return sum(values(coincidences))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"11 1 1\") == 6)\nend\n"
    },
    {
        "id": 570,
        "code": "function f(array::Vector{Int}, index::Int, value::Int)::Vector{Int}\n    new_array = [index + 1; array...]  # Insert index + 1 at the beginning\n    if value >= 1\n        new_array = [new_array[1:index]; value; new_array[index+1:end]]  # Insert value at index\n    end\n    return new_array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2], 0, 2) == [2, 1, 2])\nend\n"
    },
    {
        "id": 571
    },
    {
        "id": 572
    },
    {
        "id": 573,
        "code": "function f(string::String, prefix::String)::String \n    if startswith(string, prefix)\n        return replace(string, prefix => \"\", count=1)\n    end\n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Vipra\", \"via\") == \"Vipra\")\nend\n"
    },
    {
        "id": 574,
        "code": "function f(simpons::Vector{String})::String\n    while !isempty(simpons)\n        pop = pop!(simpons)\n        if pop == titlecase(pop)\n            return pop\n        end\n    end\n    return pop\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"George\", \"Michael\", \"George\", \"Costanza\"]) == \"Costanza\")\nend\n"
    },
    {
        "id": 575,
        "code": "function f(nums::Vector{Int64}, val::Int64)::Int64 \n    new_list = []\n    for i in nums\n        append!(new_list, fill(i, val))\n    end\n    return sum(new_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([10, 4], 3) == 42)\nend\n"
    },
    {
        "id": 576
    },
    {
        "id": 577,
        "code": "\nfunction f(items::Vector{Tuple{Int64, String}})::Vector{Dict{Int64, String}}\n    result = []\n    for number in items\n        d = Dict{Int64, String}(items)\n        pop!(d)\n        push!(result, d)\n        items = collect(d)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([(1, \"pos\")]) == [Dict{Int64, Int64}()])\nend\n"
    },
    {
        "id": 578,
        "code": "function f(obj::Dict{String, Int})\n    for (k, v) in obj\n        if v >= 0\n            obj[k] = -v\n        end\n    end\n    return obj\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"R\" => 0, \"T\" => 3, \"F\" => -6, \"K\" => 0)) == Dict(\"R\" => 0, \"T\" => -3, \"F\" => -6, \"K\" => 0))\nend\n"
    },
    {
        "id": 579,
        "code": "\nfunction f(text::String)::String \n    if titlecase(text) == text\n        if length(text) > 1 && lowercase(text) != text\n            return lowercase(text[1]) * text[2:end]\n        end\n    elseif isletter(text)\n        return uppercase(text[1]) * text[2:end]\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\") == \"\")\nend\n"
    },
    {
        "id": 580,
        "code": "\nfunction f(text::String, char::String)::Vector{Int64} \n    new_text = text\n    a = Int64[]\n    while contains(new_text, char)\n        push!(a, findfirst(x -> x == char[1], new_text) - 1)\n        new_text = replace(new_text, char => \"\" ,count=1)\n    end\n    return a\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"rvr\", \"r\") == [0, 1])\nend\n"
    },
    {
        "id": 581
    },
    {
        "id": 582,
        "code": "function f(k::Int64, j::Int64)::Vector{Int64} \n    arr = Int64[]\n    for i in 1:k\n        push!(arr, j)\n    end\n    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(7, 5) == [5, 5, 5, 5, 5, 5, 5])\nend\n"
    },
    {
        "id": 583,
        "code": "\nfunction f(text::String, ch::String)::String \n    result = String[]\n    lines = split(text, '\\n')\n    for line in lines\n        if length(line) > 0 && line[1] == ch[1]\n            push!(result, lowercase(line))\n        else\n            push!(result, uppercase(line))\n        end\n    end\n    return join(result, '\\n')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"t\nza\na\", \"t\") == \"t\nZA\nA\")\nend\n"
    },
    {
        "id": 584,
        "code": "\nfunction f(txt::String)::String \n    return txt\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"5123807309875480094949830\") == \"5123807309875480094949830\")\nend\n"
    },
    {
        "id": 585,
        "code": "function f(text::String)::String\n    first_char = text[1]\n    count_first_char = count(c -> c == first_char, text)\n    ls = collect(text)\n    for _ in 1:count_first_char\n        deleteat!(ls, 1)\n    end\n    return join(ls)\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\";,,,?\") == \",,,?\")\nend\n"
    },
    {
        "id": 586,
        "code": "\nfunction f(text::String, char::String)::Int64\n    return findlast(char, text)[1] - 1\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"breakfast\", \"e\") == 2)\nend\n"
    },
    {
        "id": 587,
        "code": "\nfunction f(nums::Vector{Int64}, fill::String)::Dict{Int64, String}\n    ans = Dict(i => fill for i in nums)\n    return ans\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([0, 1, 1, 2], \"abcca\") == Dict(0 => \"abcca\", 1 => \"abcca\", 2 => \"abcca\"))\nend\n"
    },
    {
        "id": 588,
        "code": "\nfunction f(items::Vector{String}, target::String)::Int64\n    if target in items\n        return findfirst(isequal(target), items) - 1\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"1\", \"+\", \"-\", \"**\", \"//\", \"*\", \"+\"], \"**\") == 3)\nend\n"
    },
    {
        "id": 589,
        "code": "function f(num::Vector{Int64})::Vector{Int64} \n    push!(num, num[end])\n    return num\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-70, 20, 9, 1]) == [-70, 20, 9, 1, 1])\nend\n"
    },
    {
        "id": 590,
        "code": "function f(text::String)::String\n    for i in 10:-1:1\n        while startswith(text, string(i))\n            text = text[length(string(i))+1:end]\n        end\n    end\n    return text\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"25000   \\$\") == \"5000   \\$\")\nend\n"
    },
    {
        "id": 591
    },
    {
        "id": 592,
        "code": "function f(numbers::Vector{Int64})::Vector{Int64} \n    new_numbers = Int64[]\n    for i in reverse(1:length(numbers))\n        push!(new_numbers, numbers[i])\n    end\n    return new_numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([11, 3]) == [3, 11])\nend\n"
    },
    {
        "id": 593,
        "code": "function f(nums::Vector{Int64}, n::Int64)::Vector{Int64} \n    pos = length(nums)\n    for i in -length(nums): -1\n        insert!(nums, pos, nums[i])\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Int64}([]), 14) == Vector{Int64}([]))\nend\n"
    },
    {
        "id": 594,
        "code": "function f(file::String)::Int64 \n    return findfirst(isequal('\\n'), file) - 1\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"n wez szize lnson tilebi it 504n.\n\") == 33)\nend\n"
    },
    {
        "id": 595,
        "code": "function f(text::String, prefix::String)::String \n    if startswith(text, prefix)\n        text = replace(text, prefix => \"\")\n    end\n    text = uppercase(text[1]) * lowercase(text[2:end])\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"qdhstudentamxupuihbuztn\", \"jdm\") == \"Qdhstudentamxupuihbuztn\")\nend\n"
    },
    {
        "id": 596,
        "code": "function f(txt::Vector{String}, alpha::String)::Vector{String} \n    txt = sort(txt)\n    if findfirst(x -> x == alpha, txt) % 2 != 0\n        return reverse(txt)\n    end\n    return txt\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"8\", \"9\", \"7\", \"4\", \"3\", \"2\"], \"9\") == [\"2\", \"3\", \"4\", \"7\", \"8\", \"9\"])\nend\n"
    },
    {
        "id": 597,
        "code": "function f(s::String)::String \n    return uppercase(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Jaafodsfa SOdofj AoaFjIs  JAFasIdfSa1\") == \"JAAFODSFA SODOFJ AOAFJIS  JAFASIDFSA1\")\nend\n"
    },
    {
        "id": 598,
        "code": "function f(text::String, n::Int64)::String \n    length_text = length(text)\n    return text[length_text*(n%4)+1:length_text]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abc\", 1) == \"\")\nend\n"
    },
    {
        "id": 599
    },
    {
        "id": 600,
        "code": "function f(array::Vector{Int64})::Vector{String} \n    just_ns = map(num -> \"n\"^num, array)\n    final_output = String[]\n    for wipe in just_ns\n        push!(final_output, wipe)\n    end\n    return final_output\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Int64}([])) == Vector{String}([]))\nend\n"
    },
    {
        "id": 601,
        "code": "\nfunction f(text::String)::String\n    t = 5\n    tab = []\n    vowels = ['a', 'e', 'i', 'o', 'u', 'y']\n    for i in text\n        if lowercase(i) in vowels\n            push!(tab, uppercase(i)^t)\n        else\n            push!(tab, i^t)\n        end\n    end\n    return join(tab, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"csharp\") == \"ccccc sssss hhhhh AAAAA rrrrr ppppp\")\nend\n"
    },
    {
        "id": 602,
        "code": "function f(nums::Vector{Int64}, target::Int64)::Int64 \n    cnt = count(x -> x == target, nums)\n    return cnt * 2\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 1], 1) == 4)\nend\n"
    },
    {
        "id": 603,
        "code": "function f(sentences::String)::String \n    if all(tryparse(Float64, sentence) !== nothing for sentence in split(sentences, '.'))\n        return \"oscillating\"\n    else\n        return \"not oscillating\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"not numbers\") == \"not oscillating\")\nend\n"
    },
    {
        "id": 604,
        "code": "function f(text::String, start::String)::Bool \n    return start == text[1:length(start)]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Hello world\", \"Hello\") == true)\nend\n"
    },
    {
        "id": 605,
        "code": "function f(nums::Vector{Int64})::String \n    empty!(nums)\n    return \"quack\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2, 5, 1, 7, 9, 3]) == \"quack\")\nend\n"
    },
    {
        "id": 606,
        "code": "\nfunction f(value::String)::String \n    ls = collect(value)\n    push!(ls,'N','H','I','B')\n    return join(ls,\"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ruam\") == \"ruamNHIB\")\nend\n"
    },
    {
        "id": 607,
        "code": "function f(text::String)::Bool \n    for i in ['.', '!', '?']\n        if endswith(text, i)\n            return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\". C.\") == true)\nend\n"
    },
    {
        "id": 608,
        "code": "\nfunction f(aDict::Dict{Int64, Int64})::Dict{Int64, Int64}\n    # transpose the keys and values into a new dict\n    return Dict([v for v in aDict])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(1 => 1, 2 => 2, 3 => 3)) == Dict(1 => 1, 2 => 2, 3 => 3))\nend\n"
    },
    {
        "id": 609,
        "code": "function f(array::Dict{Int64, Int64}, elem::Int64)::Dict{Int64, Int64}\n    result = copy(array)\n    while !isempty(result)\n        key, value = first(result)\n        delete!(result, key)\n        if elem == key || elem == value\n            result = merge(result, array)\n        end\n    end\n    return result\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict{Int64, Int64}(), 1) == Dict{Int64, Int64}())\nend\n"
    },
    {
        "id": 610
    },
    {
        "id": 611,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    reverse!(nums)\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-6, -2, 1, -3, 0, 1]) == [1, 0, -3, 1, -2, -6])\nend\n"
    },
    {
        "id": 612,
        "code": "function f(d::Dict{String, Int64})::Dict{String, Int64}\n    return Dict{String, Int64}(collect(d))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"a\" => 42, \"b\" => 1337, \"c\" => -1, \"d\" => 5)) == Dict(\"a\" => 42, \"b\" => 1337, \"c\" => -1, \"d\" => 5))\nend\n"
    },
    {
        "id": 613
    },
    {
        "id": 614,
        "code": "\nfunction f(text::String, substr::String, occ::Int64)::Int64 \n    n = 0\n    while true\n        i = findlast(substr, text)\n        if i === nothing\n            break\n        elseif n == occ\n            return i.start - 1\n        else\n            n += 1\n            text = text[1:i.start-1]\n        end\n    end\n    return -1\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"zjegiymjc\", \"j\", 2) == -1)\nend\n"
    },
    {
        "id": 615,
        "code": "function f(in_list::Vector{Int64}, num::Int64)::Int64 \n    push!(in_list, num)\n    return findfirst(x -> x == maximum(in_list[1:end-1]), in_list[1:end-1]) - 1\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-1, 12, -6, -2], -1) == 1)\nend\n"
    },
    {
        "id": 616
    },
    {
        "id": 617,
        "code": "function f(text::String)::String \n    if isascii(text)\n        return \"ascii\"\n    else\n        return \"non ascii\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"<<<<\") == \"ascii\")\nend\n"
    },
    {
        "id": 618,
        "code": "function f(match::String, fill::String, n::Int64)::String\n    return fill[1:min(n, end)] * match\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"9\", \"8\", 2) == \"89\")\nend\n"
    },
    {
        "id": 619,
        "code": "function f(title::String)::String \n    return lowercase(title)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"   Rock   Paper   SCISSORS  \") == \"   rock   paper   scissors  \")\nend\n"
    },
    {
        "id": 620,
        "code": "function f(x::String)::String \n    return join(reverse(collect(x)), \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"lert dna ndqmxohi3\") == \"3 i h o x m q d n   a n d   t r e l\")\nend\n"
    },
    {
        "id": 621
    },
    {
        "id": 622
    },
    {
        "id": 623,
        "code": "function f(text::String, rules::Vector{String})::String \n    for rule in rules\n        if rule == \"@\"\n            text = reverse(text)\n        elseif rule == \"~\"\n            text = uppercase(text)\n        elseif !isempty(text) && text[end] == first(rule)\n            text = text[1:end-1]\n        end\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"hi~!\", [\"~\", \"`\", \"!\", \"&\"]) == \"HI~\")\nend\n"
    },
    {
        "id": 624,
        "code": "\nfunction f(text::String, char::String)::String \n    char_index = findfirst(char, text)\n    if isnothing(char_index)\n        char_index = 0\n    end\n    result = vcat(collect(text[1:char_index-1]))\n    result = vcat(result, collect(char), collect(text[char_index + length(char):end]))\n    return join(result)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"llomnrpc\", \"x\") == \"xllomnrpc\")\nend\n"
    },
    {
        "id": 625,
        "code": "function f(text::String)::Int64 \n    count = 0\n    for i in text\n        if i in ['.', '?', '!', ',']\n            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"bwiajegrwjd??djoda,?\") == 4)\nend\n"
    },
    {
        "id": 626,
        "code": "\nfunction f(line::String, equalityMap::Vector{Tuple{String, String}})::String \n    rs = Dict(equalityMap)\n    return mapreduce(c -> get(rs, string(c), string(c)), *, line)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abab\", [(\"a\", \"b\"), (\"b\", \"a\")]) == \"baba\")\nend\n"
    },
    {
        "id": 627,
        "code": "function f(parts::Vector{Tuple{String, Int64}})::Vector{Int64} \n    return collect(values(Dict(parts)))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([(\"u\", 1), (\"s\", 7), (\"u\", -5)]) == [-5, 7])\nend\n"
    },
    {
        "id": 628,
        "code": "function f(nums::Vector{Int64}, delete::Int64)::Vector{Int64} \n    filter!(x -> x != delete, nums)\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([4, 5, 3, 6, 1], 5) == [4, 3, 6, 1])\nend\n"
    },
    {
        "id": 629,
        "code": "function f(text::String, dng::String)::String \n    if !occursin(dng, text)\n        return text\n    end\n    \n    if endswith(text, dng)\n        return text[1:end-length(dng)]\n    end\n    \n    return text[1:end-1] * f(text[1:end-2], dng)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"catNG\", \"NG\") == \"cat\")\nend\n"
    },
    {
        "id": 630,
        "code": "function f(original::Dict{Int, Int}, string::Dict{Int, Int})::Dict{Int, Int}\n    temp = deepcopy(original)\n    for (a, b) in string\n        temp[b] = a\n    end\n    return temp\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(1 => -9, 0 => -7), Dict(1 => 2, 0 => 3)) == Dict(1 => -9, 0 => -7, 2 => 1, 3 => 0))\nend\n"
    },
    {
        "id": 631
    },
    {
        "id": 632,
        "code": "function f(lst::Vector{Int64})::Vector{Int64} \n    for i in reverse(1:length(lst)-1)\n        for j in 1:i\n            if lst[j] > lst[j+1]\n                lst[j], lst[j+1] = lst[j+1], lst[j]\n            end\n        end\n    end\n    return sort(lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([63, 0, 1, 5, 9, 87, 0, 7, 25, 4]) == [0, 0, 1, 4, 5, 7, 9, 25, 63, 87])\nend\n"
    },
    {
        "id": 633,
        "code": "\nfunction f(array::Vector{Int64}, elem::Int64)::Int64\n    reverse!(array)\n    found = findfirst(x -> x == elem, array)\n    reverse!(array)\n    return found - 1\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([5, -3, 3, 2], 2) == 0)\nend\n"
    },
    {
        "id": 634,
        "code": "function f(input_string::String)::String \n    table = Dict('a'=>'i', 'i'=>'o', 'o'=>'u', 'e'=>'a')\n    while occursin('a', input_string) || occursin('A', input_string)\n        input_string = replace(input_string, table)\n    end\n    return input_string\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"biec\") == \"biec\")\nend\n"
    },
    {
        "id": 635,
        "code": "\nfunction f(text::String)::Bool \n    valid_chars = ['-', '_', '+', '.', '/', ' ']\n    text = uppercase(text)\n    for char in text\n        if !isletter(char) && char ∉ valid_chars\n            return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW\") == false)\nend\n"
    },
    {
        "id": 636,
        "code": "function f(d::Dict{Int64, String})::Dict{Int64, String}\n    r = Dict{Int64, String}()\n    while !isempty(d)\n        r = merge(r, d)\n        delete!(d, maximum(keys(d)))\n    end\n    return r\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(3 => \"A3\", 1 => \"A1\", 2 => \"A2\")) == Dict(3 => \"A3\", 1 => \"A1\", 2 => \"A2\"))\nend\n"
    },
    {
        "id": 637,
        "code": "function f(text::String)::String \n    words = split(text, ' ')\n    for t in words\n        if !all(isnumeric, t)\n            return \"no\"\n        end\n    end\n    return \"yes\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"03625163633 d\") == \"no\")\nend\n"
    },
    {
        "id": 638,
        "code": "function f(s::String, suffix::String)::String \n    if suffix == \"\"\n        return s\n    end\n    \n    while endswith(s, suffix)\n        s = s[1:end-length(suffix)]\n    end\n    \n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ababa\", \"ab\") == \"ababa\")\nend\n"
    },
    {
        "id": 639,
        "code": "function f(perc::String, full::String)::String \n    reply = \"\"\n    i = 1\n    while i <= min(length(perc), length(full)) && perc[i] == full[i]\n        if perc[i] == full[i]\n            reply *= \"yes \"\n        else\n            reply *= \"no \"\n        end\n        i += 1\n    end\n    return reply\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"xabxfiwoexahxaxbxs\", \"xbabcabccb\") == \"yes \")\nend\n"
    },
    {
        "id": 640,
        "code": "function f(text::String)::Int64 \n    a = 0\n    if text[1] ∈ text[2:end]\n        a += 1\n    end\n    for i in 1:length(text)-1\n        if text[i] ∈ text[i+1:end]\n            a += 1\n        end\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"3eeeeeeoopppppppw14film3oee3\") == 18)\nend\n"
    },
    {
        "id": 641,
        "code": "function f(number::String)::Bool \n    return all(isdigit, number)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"dummy33;d\") == false)\nend\n"
    },
    {
        "id": 642,
        "code": "function f(text::String)::String \n    i = 1\n    while i <= length(text) && isspace(text[i])\n        i += 1\n    end\n    if i > length(text)\n        return \"space\"\n    else\n        return \"no\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"     \") == \"space\")\nend\n"
    },
    {
        "id": 643,
        "code": "function f(text::String, suffix::String)::String \n    if endswith(text, suffix)\n        text = text[1:end-1] * uppercase(text[end])\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"damdrodm\", \"m\") == \"damdrodM\")\nend\n"
    },
    {
        "id": 644,
        "code": "function f(nums::Vector{Int64}, pos::Int64)::Vector{Int64} \n    s = 1:length(nums)\n    if pos % 2 != 0\n        s = 1:length(nums) - 1\n    end\n    reverse!(view(nums, s))\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([6, 1], 3) == [6, 1])\nend\n"
    },
    {
        "id": 645,
        "code": "function f(nums::Vector{Int64}, target::Int64)::Int64 \n    if count(x -> x == 0, nums) > 0\n        return 0\n    elseif count(x -> x == target, nums) < 3\n        return 1\n    else\n        return findfirst(x -> x == target, nums)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 1, 1, 2], 3) == 1)\nend\n"
    },
    {
        "id": 646,
        "code": "function f(text::String, count::Int64)::String \n    for i in 1:count\n        text = reverse(text)\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"aBc, ,SzY\", 2) == \"aBc, ,SzY\")\nend\n"
    },
    {
        "id": 647,
        "code": "function f(text::String, chunks::Int64)::Vector{String} \n    return split(text, '\\n', limit=chunks, keepempty=false)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"/alcm@ an)t//eprw)/e!/d\nujv\", 0) == [\"/alcm@ an)t//eprw)/e!/d\", \"ujv\"])\nend\n"
    },
    {
        "id": 648,
        "code": "function f(list1::Vector{Int64}, list2::Vector{Int64})::Union{Int64, String} \n    l = copy(list1)\n    while length(l) > 0\n        if l[end] in list2\n            pop!(l)\n        else\n            return l[end]\n        end\n    end\n    return \"missing\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([0, 4, 5, 6], [13, 23, -5, 0]) == 6)\nend\n"
    },
    {
        "id": 649,
        "code": "function f(text::String, tabsize::Int64)::String \n    return join([replace(t, \"\\t\" => \" \" ^ tabsize) for t in split(text, \"\\n\")], \"\\n\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\tf9\n\tldf9\n\tadf9!\n\tf9?\", 1) == \" f9\n ldf9\n adf9!\n f9?\")\nend\n"
    },
    {
        "id": 650,
        "code": "function f(string::String, substring::String)::String \n    while startswith(string, substring)\n        string = string[length(substring)+1:end]\n    end\n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\", \"A\") == \"\")\nend\n"
    },
    {
        "id": 651,
        "code": "function f(text::String, letter::String)::String \n    if islowercase(letter[1])\n        letter = uppercase(letter)\n    end\n    \n    text = join([char == lowercase(letter[1]) ? letter : char for char in text])\n    \n    return uppercase(text[1]) * lowercase(text[2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"E wrestled evil until upperfeat\", \"e\") == \"E wrestled evil until upperfeat\")\nend\n"
    },
    {
        "id": 652
    },
    {
        "id": 653,
        "code": "function f(text::String, letter::String)::Int64 \n    t = text\n    for alph in text\n        t = replace(t, alph => \"\")\n    end\n    return length(split(t, letter))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"c, c, c ,c, c\", \"c\") == 1)\nend\n"
    },
    {
        "id": 654,
        "code": "function f(s::String, from_c::String, to_c::String)::String \n    table = Dict(zip(from_c, to_c))\n    return join([get(table, c, c) for c in s])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"aphid\", \"i\", \"?\") == \"aph?d\")\nend\n"
    },
    {
        "id": 655,
        "code": "function f(s::String)::String \n    s = replace(s, 'a' => \"\")\n    s = replace(s, 'r' => \"\")\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"rpaar\") == \"p\")\nend\n"
    },
    {
        "id": 656,
        "code": "function f(letters::Vector{String})::String \n    a = []\n    for i in 1:length(letters)\n        if letters[i] in a\n            return \"no\"\n        end\n        push!(a, letters[i])\n    end\n    return \"yes\"\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"b\", \"i\", \"r\", \"o\", \"s\", \"j\", \"v\", \"p\"]) == \"yes\")\nend\n"
    },
    {
        "id": 657,
        "code": "function f(text::String)::String \n    punctuations = ['!', '.', '?', ',', ':', ';']\n    for punct in punctuations\n        if count(punct, text) > 1\n            return \"no\"\n        end\n        if endswith(text, punct)\n            return \"no\"\n        end\n    end\n    return titlecase(text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"djhasghasgdha\") == \"Djhasghasgdha\")\nend\n"
    },
    {
        "id": 658,
        "code": "\nfunction f(d::Dict{Int64, String}, get_ary::Vector{Int64})::Vector{Union{String, Nothing}} \n    result = []\n    for key in get_ary\n        push!(result, get(d, key, nothing))\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(3 => \"swims like a bull\"), [3, 2, 5]) == [\"swims like a bull\", nothing, nothing])\nend\n"
    },
    {
        "id": 659,
        "code": "function f(bots::Vector{String})::Int64 \n    clean = filter(x -> !all(isuppercase, x), bots)\n    clean = [x[1:2] * x[end-2:end] for x in clean]\n    return length(clean)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"yR?TAJhIW?n\", \"o11BgEFDfoe\", \"KnHdn2vdEd\", \"wvwruuqfhXbGis\"]) == 4)\nend\n"
    },
    {
        "id": 660,
        "code": "function f(num::Int64)::Int64 \n    initial = [1]\n    total = initial\n    for _ in 1:num\n        total = [1; [x+y for (x, y) in zip(total, total[2:end])]]\n        push!(initial, total[end])\n    end\n    return sum(initial)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(3) == 4)\nend\n"
    },
    {
        "id": 661,
        "code": "\nfunction f(letters::String, maxsplit::Int64)::String \n    split_letters = split(letters)\n    return join(split_letters[max(1, end-maxsplit+1):end])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"elrts,SS ee\", 6) == \"elrts,SSee\")\nend\n"
    },
    {
        "id": 662,
        "code": "function f(values::Vector{String})::Vector{String} \n    names = [\"Pete\", \"Linda\", \"Angela\"]\n    append!(names, values)\n    sort!(names)\n    return names\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"Dan\", \"Joe\", \"Dusty\"]) == [\"Angela\", \"Dan\", \"Dusty\", \"Joe\", \"Linda\", \"Pete\"])\nend\n"
    },
    {
        "id": 663
    },
    {
        "id": 664
    },
    {
        "id": 665,
        "code": "function f(chars::String)::String \n    s = \"\"\n    for ch in chars\n        if count(x -> x == ch, chars) % 2 == 0\n            s *= uppercase(ch)\n        else\n            s *= ch\n        end\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"acbced\") == \"aCbCed\")\nend\n"
    },
    {
        "id": 666
    },
    {
        "id": 667,
        "code": "function f(text::String)::Vector{String} \n    new_text = []\n    for i in 1:div(length(text), 3)\n        push!(new_text, \"< $(text[(i-1)*3+1:i*3]) level=$(i-1) >\")\n    end\n    last_item = text[div(length(text), 3)*3+1:end]\n    push!(new_text, \"< $last_item level=$(div(length(text), 3)) >\")\n    return new_text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"C7\") == [\"< C7 level=0 >\"])\nend\n"
    },
    {
        "id": 668,
        "code": "function f(text::String)::String \n    return text[end] * text[1:end-1]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"hellomyfriendear\") == \"rhellomyfriendea\")\nend\n"
    },
    {
        "id": 669,
        "code": "function f(t::String)::String \n    parts = split(t, '-')\n    a = join(parts[1:end-1], '-')\n    b = parts[end]\n    if length(b) == length(a)\n        return \"imbalanced\"\n    end\n    return a * replace(b, \"-\" => \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"fubarbaz\") == \"fubarbaz\")\nend\n"
    },
    {
        "id": 670,
        "code": "\nfunction f(a::Vector{String}, b::Vector{Int64})::Vector{Int64} \n    d = Dict(zip(a, b))\n    sort(a, by=x->d[x], rev=true)\n    return [d[x] for x in a]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"12\", \"ab\"], [2, 2]) == [2, 2])\nend\n"
    },
    {
        "id": 671,
        "code": "function f(text::String, char1::String, char2::String)::String \n    t1a = [char1[i] for i in 1:length(char1)]\n    t2a = [char2[i] for i in 1:length(char2)]\n    t1 = Dict(zip(t1a, t2a))\n    \n    translated_text = \"\"\n    for c in text\n        if haskey(t1, c)\n            translated_text *= t1[c]\n        else\n            translated_text *= c\n        end\n    end\n    \n    return translated_text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ewriyat emf rwto segya\", \"tey\", \"dgo\") == \"gwrioad gmf rwdo sggoa\")\nend\n"
    },
    {
        "id": 672,
        "code": "\nfunction f(text::String, position::Int64, value::String)::String\n    length_text = length(text)\n    index = (position % (length_text + 2)) - 1\n    if index >= length_text || index < 0\n        return text\n    else\n        text = collect(text)\n        text[index+1] = value[1]\n        return join(text)\n    end\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"1zd\", 0, \"m\") == \"1zd\")\nend\n"
    },
    {
        "id": 673,
        "code": "function f(string::String)::String \n    if all(isuppercase, string)\n        return lowercase(string)\n    elseif all(islowercase, string)\n        return uppercase(string)\n    end\n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"cA\") == \"cA\")\nend\n"
    },
    {
        "id": 674,
        "code": "function f(text::String)::String \n    ls = collect(text)\n    for x in reverse(eachindex(ls))\n        if length(ls) <= 1\n            break\n        end\n        if !(ls[x] in ['z', 'y', 'x', 'w', 'v', 'u', 't', 's', 'r', 'q', 'p', 'o', 'n', 'm', 'l', 'k', 'j', 'i', 'h', 'g', 'f', 'e', 'd', 'c', 'b', 'a'])\n            splice!(ls, x)\n        end\n    end\n    return join(ls, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"qq\") == \"qq\")\nend\n"
    },
    {
        "id": 675,
        "code": "function f(nums::Vector{Int64}, sort_count::Int64)::Vector{Int64} \n    sort!(nums)\n    return nums[1:sort_count]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 2, 3, 4, 5], 1) == [1])\nend\n"
    },
    {
        "id": 676,
        "code": "function f(text::String, tab_size::Int64)::String \n    return replace(text, '\\t' => repeat(' ', tab_size))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a\", 100) == \"a\")\nend\n"
    },
    {
        "id": 677,
        "code": "function f(text::String, length::Int64)::String \n    length = length < 0 ? -length : length\n    output = \"\"\n    for idx in 1:length\n        if text[idx % lastindex(text)] != ' '\n            output *= text[idx % lastindex(text)]\n        else\n            break\n        end\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"I got 1 and 0.\", 5) == \"I\")\nend\n"
    },
    {
        "id": 678,
        "code": "\nfunction f(text::String)::Dict{String, Int64}\n    freq = Dict{String, Int64}()\n    for c in lowercase(text)\n        if haskey(freq, string(c))\n            freq[string(c)] += 1\n        else\n            freq[string(c)] = 1\n        end\n    end\n    return freq\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"HI\") == Dict(\"h\" => 1, \"i\" => 1))\nend\n"
    },
    {
        "id": 679,
        "code": "function f(text::String)::Bool \n    if text == \"\"\n        return false\n    end\n    \n    first_char = text[1]\n    if isdigit(first_char)\n        return false\n    end\n    \n    for last_char in text\n        if (last_char != '_') && !(last_char in ['a':'z'; 'A':'Z'; '0':'9'; '_'])\n            return false\n        end\n    end\n    \n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"meet\") == true)\nend\n"
    },
    {
        "id": 680
    },
    {
        "id": 681,
        "code": "\nfunction f(array::Vector{Int64}, ind::Int64, elem::Int64)::Vector{Int64} \n    insertion_index = ind < 0 ? -5 : (ind > length(array) ? length(array) : ind + 1)\n    insertion_index = insertion_index < 0 ? 0 : insertion_index\n    insertion_index = insertion_index > length(array) ? length(array) : insertion_index\n    insertion_index += 1\n    insert!(array, insertion_index, elem)\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 5, 8, 2, 0, 3], 2, 7) == [1, 5, 8, 7, 2, 0, 3])\nend\n"
    },
    {
        "id": 682,
        "code": "function f(text::String, length::Int64, index::Int64)::String \n    ls = split(text, ' ', limit=index)\n    ls = reverse(ls)\n    ls = [l[1:min(length, end)] for l in ls]\n    return join(ls, \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"hypernimovichyp\", 2, 2) == \"hy\")\nend\n"
    },
    {
        "id": 683,
        "code": "function f(dict1::Dict{String, Int}, dict2::Dict{String, Int})::Dict{String, Int}\n    result = copy(dict1)\n    for key in keys(dict2)\n        result[key] = dict2[key]\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"disface\" => 9, \"cam\" => 7), Dict(\"mforce\" => 5)) == Dict(\"disface\" => 9, \"cam\" => 7, \"mforce\" => 5))\nend\n"
    },
    {
        "id": 684,
        "code": "function f(text::String)::String \n    trans = Dict('\"'=>'9', '\\''=>'8', '>'=>'3', '<'=>'3')\n    return join([get(trans, c, c) for c in text])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Transform quotations\\\"\nnot into numbers.\") == \"Transform quotations9\nnot into numbers.\")\nend\n"
    },
    {
        "id": 685,
        "code": "function f(array::Vector{Int64}, elem::Int64)::Int64 \n    return count(x -> x == elem, array) + elem\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 1, 1], -2) == -2)\nend\n"
    },
    {
        "id": 686,
        "code": "function f(d::Dict{String, Int}, l::Vector{String})::Dict{String, Int}\n    new_d = Dict{String, Int}()\n\n    for k in l\n        if haskey(d, k)\n            new_d[k] = d[k]\n        end\n    end\n\n    return copy(new_d)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"lorem ipsum\" => 12, \"dolor\" => 23), [\"lorem ipsum\", \"dolor\"]) == Dict(\"lorem ipsum\" => 12, \"dolor\" => 23))\nend\n"
    },
    {
        "id": 687
    },
    {
        "id": 688,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    l = Int[]\n    for i in nums\n        if !(i in l)\n            push!(l, i)\n        end\n    end\n    return l\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([3, 1, 9, 0, 2, 0, 8]) == [3, 1, 9, 0, 2, 8])\nend\n"
    },
    {
        "id": 689,
        "code": "function f(arr::Vector{Int64})::Vector{Int64} \n    count = length(arr)\n    sub = copy(arr)\n    for i in 1:2:count\n        sub[i] *= 5\n    end\n    return sub\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-3, -6, 2, 7]) == [-15, -6, 10, 7])\nend\n"
    },
    {
        "id": 690,
        "code": "function f(n::String)::String \n    if occursin(\".\", n) != 0\n        return string(parse(Int, n) + 2.5)\n    end\n    return n\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"800\") == \"800\")\nend\n"
    },
    {
        "id": 691,
        "code": "function f(text::String, suffix::String)::String\n    if !isempty(suffix) && last(suffix) in text\n        return f(String(rstrip(text, last(suffix))), suffix[1:end-1])\n    else\n        return text\n    end\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"rpyttc\", \"cyt\") == \"rpytt\")\nend\n"
    },
    {
        "id": 692,
        "code": "function f(array::Vector{Int64})::Vector{Int64} \n    a = Vector{Int64}()\n    reverse!(array)\n    for i in 1:length(array)\n        if array[i] != 0\n            push!(a, array[i])\n        end\n    end\n    reverse!(a)\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\nend\n"
    },
    {
        "id": 693,
        "code": "function f(text::String)::String \n    n = findfirst(isequal('8'), text)\n    if n === nothing\n        return \"\"\n    else\n        return \"x0\" ^ (n-1)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"sa832d83r xd 8g 26a81xdf\") == \"x0x0\")\nend\n"
    },
    {
        "id": 694
    },
    {
        "id": 695
    },
    {
        "id": 696,
        "code": "\nfunction f(text::String)::Int64\n    s = 0\n    for i in 1:length(text)-1\n        s += length(split(text, text[i+1:end])[1])\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"wdj\") == 3)\nend\n"
    },
    {
        "id": 697
    },
    {
        "id": 698,
        "code": "function f(text::String)::String \n    return join([x for x in text if x != ')'], \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"(((((((((((d))))))))).))))(((((\") == \"(((((((((((d.(((((\")\nend\n"
    },
    {
        "id": 699,
        "code": "function f(text::String, elem::String)::Vector{String} \n    if elem != \"\"\n        while startswith(text, elem)\n            text = replace(text, elem, \"\")\n        end\n        while startswith(elem, text)\n            elem = replace(elem, text, \"\")\n        end\n    end\n    return [elem, text]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"some\", \"1\") == [\"1\", \"some\"])\nend\n"
    },
    {
        "id": 700,
        "code": "function f(text::String)::Int64 \n    return length(text) - count(occursin.(\"bot\", text))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Where is the bot in this world?\") == 30)\nend\n"
    },
    {
        "id": 701,
        "code": "\nfunction f(stg::String, tabs::Vector{String})::String\n    for tab in tabs\n        for char in tab\n            stg = rstrip(stg, char)\n        end\n    end\n    return stg\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"31849 let it!31849 pass!\", [\"3\", \"1\", \"8\", \" \", \"1\", \"9\", \"2\", \"d\"]) == \"31849 let it!31849 pass!\")\nend\n"
    },
    {
        "id": 702,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    count = length(nums)\n    for i in reverse(1:length(nums))\n        insert!(nums, i, popfirst!(nums))\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([0, -5, -4]) == [-4, -5, 0])\nend\n"
    },
    {
        "id": 703,
        "code": "\nfunction f(text::String, char::String)::String\n    count = 0\n    for i in 1:length(text)-1\n        if text[i] == text[i+1] == char[1]\n            count += 1\n        end\n    end\n    return text[count+1:end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"vzzv2sg\", \"z\") == \"zzv2sg\")\nend\n"
    },
    {
        "id": 704,
        "code": "function f(s::String, n::Int64, c::String)::String \n    width = length(c) * n\n    while length(s) < width\n        s = string(c, s)\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\".\", 0, \"99\") == \".\")\nend\n"
    },
    {
        "id": 705,
        "code": "function f(cities::Vector{String}, name::String)::Vector{String} \n    if name == \"\"\n        return cities\n    end\n    \n    if name != \"\" && name != \"cities\"\n        return String[]\n    end\n    \n    return [name * city for city in cities]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"Sydney\", \"Hong Kong\", \"Melbourne\", \"Sao Paolo\", \"Istanbul\", \"Boston\"], \"Somewhere \") == Vector{String}([]))\nend\n"
    },
    {
        "id": 706,
        "code": "function f(r::String, w::String)::Vector{String} \n    a = []\n    if r[1] == w[1] && w[end] == r[end]\n        push!(a, r)\n        push!(a, w)\n    else\n        push!(a, w)\n        push!(a, r)\n    end\n    return a\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ab\", \"xy\") == [\"xy\", \"ab\"])\nend\n"
    },
    {
        "id": 707,
        "code": "\nfunction f(text::String, position::Int64)::String \n    length_text = length(text)\n    index = position % (length_text + 1)\n    if position < 0 || index < 0\n        index = -1\n    end\n    new_text = collect(text)\n    deleteat!(new_text, index + 1)\n    return join(new_text, \"\")\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"undbs l\", 1) == \"udbs l\")\nend\n"
    },
    {
        "id": 708,
        "code": "function f(string::String)::String \n    l = collect(string)\n    for i in reverse(1:length(l))\n        if l[i] != ' '\n            break\n        end\n        popat!(l, i)\n    end\n    return join(l, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"    jcmfxv     \") == \"    jcmfxv\")\nend\n"
    },
    {
        "id": 709,
        "code": "function f(text::String)::String \n    my_list = split(text)\n    sort!(my_list, rev=true)\n    return join(my_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a loved\") == \"loved a\")\nend\n"
    },
    {
        "id": 710
    },
    {
        "id": 711,
        "code": "function f(text::String)::String \n    return replace(text, '\\n' => '\\t')\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"apples\n\t\npears\n\t\nbananas\") == \"apples\t\t\tpears\t\t\tbananas\")\nend\n"
    },
    {
        "id": 712
    },
    {
        "id": 713,
        "code": "function f(text::String, char::String)::Bool \n    if occursin(char, text)\n        text = [strip(t) for t in split(text, char) if t != \"\"]\n        if length(text) > 1\n            return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"only one line\", \" \") == true)\nend\n"
    },
    {
        "id": 714,
        "code": "function f(array::Vector{Int64})::Vector{String} \n    reverse!(array)\n    empty!(array)\n    append!(array, fill(\"x\", length(array)))\n    reverse!(array)\n    return array\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([3, -2, 0]) == Vector{String}([]))\nend\n"
    },
    {
        "id": 715,
        "code": "function f(text::String, char::String)::Bool \n    return count(occ -> occ == char, text) % 2 != 0\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abababac\", \"a\") == false)\nend\n"
    },
    {
        "id": 716,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    count = length(nums)\n    while length(nums) > div(count, 2)\n        empty!(nums)\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2, 1, 2, 3, 1, 6, 3, 8]) == Vector{Int64}([]))\nend\n"
    },
    {
        "id": 717,
        "code": "function f(text::String)::String\n    k, l = 1, lastindex(text)\n    while !isletter(text[l])\n        l -= 1\n    end\n    while !isletter(text[k])\n        k += 1\n    end\n    if k != 1 || l != lastindex(text)\n        return text[k:l]\n    else\n        return string(text[1])\n    end\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"timetable, 2mil\") == \"t\")\nend\n"
    },
    {
        "id": 718,
        "code": "function f(text::String)::String \n    t = text\n    for i in text\n        text = replace(text, i => \"\")\n    end\n    return string(length(text), t)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ThisIsSoAtrocious\") == \"0ThisIsSoAtrocious\")\nend\n"
    },
    {
        "id": 719,
        "code": "function f(code::String)::String \n    lines = split(code, ']')\n    result = []\n    level = 0\n    for line in lines\n        push!(result, line[1] * \" \" * \"  \"^level * line[2:end])\n        level += count(occursin.(['{'], line)) - count(occursin.(['}'], line))\n    end\n    return join(result, \"\\n\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"if (x) {y = 1;} else {z = 1;}\") == \"i f (x) {y = 1;} else {z = 1;}\")\nend\n"
    },
    {
        "id": 720,
        "code": "\nfunction f(items::Vector{String}, item::String)::Int64 \n    while items[end] == item\n        pop!(items)\n    end\n    push!(items, item)\n    return length(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"bfreratrrbdbzagbretaredtroefcoiqrrneaosf\"], \"n\") == 2)\nend\n"
    },
    {
        "id": 721,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    count = length(nums)\n    for num in 2:count\n        sort!(nums)\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-6, -5, -7, -8, 2]) == [-8, -7, -6, -5, 2])\nend\n"
    },
    {
        "id": 722,
        "code": "function f(text::String)::String \n    out = \"\"\n    for i in 1:length(text)\n        if isuppercase(text[i])\n            out *= lowercase(text[i])\n        else\n            out *= uppercase(text[i])\n        end\n    end\n    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\",wPzPppdl/\") == \",WpZpPPDL/\")\nend\n"
    },
    {
        "id": 723,
        "code": "function f(text::String, separator::Int64)::Vector{String} \n    splitted = split(text, '\\n')\n    if separator != 0\n        return [join(s, ' ') for s in splitted]\n    else\n        return splitted\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"dga nqdk\rull qcha kl\", 1) == [\"d g a   n q d k\", \"u l l   q c h a   k l\"])\nend\n"
    },
    {
        "id": 724
    },
    {
        "id": 725,
        "code": "function f(text::String)::Int64 \n    result_list = ['3', '3', '3', '3']\n    if !isempty(result_list)\n        empty!(result_list)\n    end\n    return length(text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"mrq7y\") == 5)\nend\n"
    },
    {
        "id": 726,
        "code": "\nfunction f(text::String)::Tuple{Int64, Int64} \n    ws = 0\n    for s in text\n        if isspace(s)\n            ws += 1\n        end\n    end\n    return ws, length(text)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"jcle oq wsnibktxpiozyxmopqkfnrfjds\") == (2, 34))\nend\n"
    },
    {
        "id": 727,
        "code": "function f(numbers::Vector{String}, prefix::String)::Vector{String} \n    return sort([length(n) > length(prefix) && startswith(n, prefix) ? n[length(prefix)+1:end] : n for n in numbers])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"ix\", \"dxh\", \"snegi\", \"wiubvu\"], \"\") == [\"dxh\", \"ix\", \"snegi\", \"wiubvu\"])\nend\n"
    },
    {
        "id": 728,
        "code": "function f(text::String)::String \n    result = Vector{Char}()\n    for (i, ch) in enumerate(text)\n        if ch == lowercase(ch)\n            continue\n        end\n        if length(text) - 1 - i < findlast(c -> c == lowercase(ch), text)\n            push!(result, ch)\n        end\n    end\n    return join(result, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"ru\") == \"\")\nend\n"
    },
    {
        "id": 729
    },
    {
        "id": 730,
        "code": "function f(text::String)::Int64 \n    m = 0\n    cnt = 0\n    for i in split(text)\n        if length(i) > m\n            cnt += 1\n            m = length(i)\n        end\n    end\n    return cnt\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl\") == 2)\nend\n"
    },
    {
        "id": 731,
        "code": "function f(text::String, use::String)::String \n    return replace(text, use => \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Chris requires a ride to the airport on Friday.\", \"a\") == \"Chris requires  ride to the irport on Fridy.\")\nend\n"
    },
    {
        "id": 732,
        "code": "function f(char_freq::Dict{String, Int})\n    result = Dict{String, Int}()\n    for (k, v) in deepcopy(char_freq)\n        result[k] = div(v, 2)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"u\" => 20, \"v\" => 5, \"b\" => 7, \"w\" => 3, \"x\" => 3)) == Dict(\"u\" => 10, \"v\" => 2, \"b\" => 3, \"w\" => 1, \"x\" => 1))\nend\n"
    },
    {
        "id": 733,
        "code": "function f(text::String)::String\n    len = div(length(text), 2)\n    left_half = text[1:len]\n    right_half = reverse(text[len+1:end])\n    return left_half * right_half\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"n\") == \"n\")\nend\n"
    },
    {
        "id": 734,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    i = length(nums)\n    while i > 0\n        if nums[i] % 2 == 0\n            splice!(nums, i)\n        end\n        i -= 1\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([5, 3, 3, 7]) == [5, 3, 3, 7])\nend\n"
    },
    {
        "id": 735,
        "code": "\nfunction f(sentence::String)::String \n    if sentence == \"\"\n        return \"\"\n    end\n    sentence = replace(sentence, \"(\" => \"\")\n    sentence = replace(sentence, \")\" => \"\")\n    sentence = uppercase(sentence[1])*lowercase(sentence[2:end])\n    sentence = replace(sentence, \" \" => \"\")\n    return sentence\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"(A (b B))\") == \"Abb\")\nend\n"
    },
    {
        "id": 736,
        "code": "function f(text::String, insert::String)::String \n    whitespaces = Set(['\\t', '\\r', '\\v', ' ', '\\f', '\\n'])\n    clean = \"\"\n    for char in text\n        if char in whitespaces\n            clean *= insert\n        else\n            clean *= char\n        end\n    end\n    return clean\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"pi wa\", \"chi\") == \"pichiwa\")\nend\n"
    },
    {
        "id": 737,
        "code": "function f(nums::Vector{Int64})::Int64 \n    counts = 0\n    for i in nums\n        if occursin(r\"^\\d+$\", string(i))\n            if counts == 0\n                counts += 1\n            end\n        end\n    end\n    return counts\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([0, 6, 2, -1, -2]) == 1)\nend\n"
    },
    {
        "id": 738,
        "code": "\nfunction f(text::String, characters::String)::String \n    for i in 1:length(characters)\n        text = rstrip(text, characters[i])\n    end\n    return text\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"r;r;r;r;r;r;r;r;r\", \"x.r\") == \"r;r;r;r;r;r;r;r;\")\nend\n"
    },
    {
        "id": 739,
        "code": "function f(st::String, pattern::Vector{String})::Bool \n    for p in pattern\n        if !startswith(st, p)\n            return false\n        end\n        st = st[length(p)+1:end]\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"qwbnjrxs\", [\"jr\", \"b\", \"r\", \"qw\"]) == false)\nend\n"
    },
    {
        "id": 740,
        "code": "function f(plot::Vector{Int64}, delin::Int64)::Vector{Int64} \n    if delin in plot\n        split = findfirst(x -> x == delin, plot)\n        first = plot[1:split-1]\n        second = plot[split+1:end]\n        return vcat(first, second)\n    else\n        return plot\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3, 4], 3) == [1, 2, 4])\nend\n"
    },
    {
        "id": 741,
        "code": "function f(nums::Vector{Int64}, p::Int64)::Int64 \n    prev_p = p - 1\n    if prev_p < 0\n        prev_p = length(nums) - 1\n    end\n    return nums[prev_p + 1]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([6, 8, 2, 5, 3, 1, 9, 7], 6) == 1)\nend\n"
    },
    {
        "id": 742,
        "code": "function f(text::String)::Bool \n    b = true\n    for x in text\n        if isdigit(x)\n            b = true\n        else\n            b = false\n            break\n        end\n    end\n    return b\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"-1-3\") == false)\nend\n"
    },
    {
        "id": 743,
        "code": "function f(text::String)::Int64 \n    string_a, string_b = split(text, ',')\n    return -(length(string_a) + length(string_b))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"dog,cat\") == -6)\nend\n"
    },
    {
        "id": 744,
        "code": "function f(text::String, new_ending::String)::String \n    result = collect(text)\n    append!(result, new_ending)\n    return join(result, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"jro\", \"wdlp\") == \"jrowdlp\")\nend\n"
    },
    {
        "id": 745,
        "code": "function f(address::String)::String \n    suffix_start = findfirst(isequal('@'), address) + 1\n    if count(c -> c == '.', address[suffix_start:end]) > 1\n        address = replace(address, \".\" * join(split(address, '@')[2].split('.')[1:2], \".\"), \"\")\n    end\n    return address\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"minimc@minimc.io\") == \"minimc@minimc.io\")\nend\n"
    },
    {
        "id": 746,
        "code": "function f(dct::Dict{String, String})::Dict{String, String}\n    result = Dict{String, String}()\n    for value in values(dct)\n        item = split(value, '.')[1] * \"@pinc.uk\"\n        result[value] = item\n    end\n    return result\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict{String, String}()) == Dict{String, String}())\nend\n"
    },
    {
        "id": 747,
        "code": "function f(text::String)::Bool \n    if text == \"42.42\"\n        return true\n    end\n    \n    for i in 3:length(text)-3\n        if text[i] == '.' && isdigit(text[i-3:end]) && isdigit(text[1:i-1])\n            return true\n        end\n    end\n    \n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"123E-10\") == false)\nend\n"
    },
    {
        "id": 748,
        "code": "\nfunction f(d::Dict{String, Int})::Tuple{Tuple{String, Int}, Tuple{String, Int}} \n    keys_sorted = sort(collect(keys(d)))\n    return (keys_sorted[1], d[keys_sorted[1]]), (keys_sorted[2], d[keys_sorted[2]])\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"a\" => 123, \"b\" => 456, \"c\" => 789)) == ((\"a\", 123), (\"b\", 456)))\nend\n"
    },
    {
        "id": 749,
        "code": "function f(text::String, width::Int64)::String \n    result = \"\"\n    lines = split(text, '\\n')\n    for l in lines\n        result *= l * \" \" ^ (width - length(l)) * \"\\n\"\n    end\n    result = result[1:end-1]  # Remove the very last empty line\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"l\nl\", 2) == \"l \nl \")\nend\n"
    },
    {
        "id": 750
    },
    {
        "id": 751,
        "code": "\nfunction f(text::String, char::String, min_count::Int64)::String \n    count = sum(string(i) == char for i in text)\n    if count < min_count\n        return uppercase(text) == text ? lowercase(text) : uppercase(text)\n    else\n        return text\n    end\nend\n\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"wwwwhhhtttpp\", \"w\", 3) == \"wwwwhhhtttpp\")\nend\n"
    },
    {
        "id": 752,
        "code": "function f(s::String, amount::Int64)::String \n    return repeat('z', max(amount - length(s), 0)) * s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abc\", 8) == \"zzzzzabc\")\nend\n"
    },
    {
        "id": 753
    },
    {
        "id": 754,
        "code": "function f(nums::Vector{String})::Vector{String} \n    nums = [lpad(val, parse(Int, nums[1]), '0') for val in nums[2:end]]\n    return string.(nums)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"1\", \"2\", \"2\", \"44\", \"0\", \"7\", \"20257\"]) == [\"2\", \"2\", \"44\", \"0\", \"7\", \"20257\"])\nend\n"
    },
    {
        "id": 755,
        "code": "function f(replace::String, text::String, hide::String)::String \n    while occursin(hide, text)\n        replace *= \"ax\"\n        text = replace(text, hide, replace, 1)\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"###\", \"ph>t#A#BiEcDefW#ON#iiNCU\", \".\") == \"ph>t#A#BiEcDefW#ON#iiNCU\")\nend\n"
    },
    {
        "id": 756,
        "code": "\nfunction f(text::String)::String\n    if isempty(text) \n        return \"string\" \n    end\n    if all(isdigit(c) for c in text)\n        return \"integer\"\n    else\n        return \"string\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"\") == \"string\")\nend\n"
    },
    {
        "id": 757,
        "code": "\nfunction f(text::String, char::String, replacement::String)::String \n    return replace(text, char => replacement)\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a1a8\", \"1\", \"n2\") == \"an2a8\")\nend\n"
    },
    {
        "id": 758,
        "code": "function f(nums::Vector{Int64})::Bool \n    if nums == reverse(nums)\n        return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([0, 3, 6, 2]) == false)\nend\n"
    },
    {
        "id": 759,
        "code": "\nfunction f(text::String, sub::String)::Vector{Int64}\n    index = Int[]\n    starting = 1\n    while true\n        starting = findnext(sub, text, starting)\n        if isnothing(starting)\n            break\n        else\n            push!(index, starting.start - 1)\n            starting += length(sub)\n        end\n    end\n    return index\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"egmdartoa\", \"good\") == Vector{Int64}([]))\nend\n"
    },
    {
        "id": 760
    },
    {
        "id": 761,
        "code": "function f(array::Vector{Int64})::Vector{Int64} \n    output = copy(array)\n    output[1:2:end] .= reverse(output[end:-2:1])\n    reverse!(output)\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\nend\n"
    },
    {
        "id": 762,
        "code": "function f(text::String)::String \n    text = lowercase(text)\n    capitalize = uppercase(text[1]) * text[2:end]\n    return text[1] * capitalize[2:end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"this And cPanel\") == \"this and cpanel\")\nend\n"
    },
    {
        "id": 763,
        "code": "\nfunction f(values::String, text::String, markers::String)::String\n    return rstrip(rstrip(text, collect(values)), collect(markers))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"2Pn\", \"yCxpg2C2Pny2\", \"\") == \"yCxpg2C2Pny\")\nend\n"
    },
    {
        "id": 764,
        "code": "function f(text::String, old::String, new::String)::String \n    text2 = replace(text, old => new)\n    old2 = reverse(old)\n    while occursin(old2, text2)\n        text2 = replace(text2, old2 => new)\n    end\n    return text2\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"some test string\", \"some\", \"any\") == \"any test string\")\nend\n"
    },
    {
        "id": 765,
        "code": "function f(text::String)::Int64 \n    return sum(1 for c in text if isdigit(c))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"so456\") == 3)\nend\n"
    },
    {
        "id": 766,
        "code": "function f(values::Vector{String}, value::Int64)::Dict{String, Int64}\n    length_values = length(values)\n    new_dict = Dict{String, Int64}()\n    for val in values\n        new_dict[val] = value\n    end\n    sorted_values = join(sort(values))\n    new_dict[sorted_values] = value * 3\n    return new_dict\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"0\", \"3\"], 117) == Dict(\"0\" => 117, \"3\" => 117, \"03\" => 351))\nend\n"
    },
    {
        "id": 767,
        "code": "function f(text::String)::String \n    a = split(strip(text), ' ')\n    for i in 1:length(a)\n        if !occursin(r\"[0-9]+\", a[i])\n            return \"-\"\n        end\n    end\n    return join(a, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"d khqw whi fwi bbn 41\") == \"-\")\nend\n"
    },
    {
        "id": 768,
        "code": "function f(s::String, o::String)::String \n    if occursin(o, s)\n        return s\n    end\n    return o * f(s, reverse(o[1:end-2]))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"abba\", \"bab\") == \"bababba\")\nend\n"
    },
    {
        "id": 769,
        "code": "function f(text::String)::String \n    text_list = [uppercase(text[i]) == text[i] ? lowercase(text[i]) : uppercase(text[i]) for i in 1:length(text)]\n    return join(text_list, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"akA?riu\") == \"AKa?RIU\")\nend\n"
    },
    {
        "id": 770
    },
    {
        "id": 771,
        "code": "\nfunction f(items::Vector{Int64})::Vector{Int64} \n    odd_positioned = []\n    while length(items) > 0\n        position = findfirst(x -> x == minimum(items), items)\n        splice!(items, position)\n        item = splice!(items, position)\n        push!(odd_positioned, item)\n    end\n    return odd_positioned\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8]) == [2, 4, 6, 8])\nend\n"
    },
    {
        "id": 772,
        "code": "function f(phrase::String)::String \n    result = \"\"\n    for i in phrase\n        if !islowercase(i)\n            result *= i\n        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"serjgpoDFdbcA.\") == \"DFA.\")\nend\n"
    },
    {
        "id": 773,
        "code": "\nfunction f(nums::Vector{Int64}, n::Int64)::Int64 \n    return popat!(nums, n+1)\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([-7, 3, 1, -1, -1, 0, 4], 6) == 4)\nend\n"
    },
    {
        "id": 774,
        "code": "function f(num::Int64, name::String)::String \n    f_str = \"quiz leader = $name, count = $num\"\n    return f_str\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(23, \"Cornareti\") == \"quiz leader = Cornareti, count = 23\")\nend\n"
    },
    {
        "id": 775,
        "code": "function f(nums::Vector{Int64})::Vector{Int64} \n    count = length(nums)\n    for i in 1:count ÷ 2\n        nums[i], nums[count-i+1] = nums[count-i+1], nums[i]\n    end\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2, 6, 1, 3, 1]) == [1, 3, 1, 6, 2])\nend\n"
    },
    {
        "id": 776
    },
    {
        "id": 777,
        "code": "function f(names::Vector{String}, excluded::String)::Vector{String} \n    for i in 1:length(names)\n        if occursin(excluded, names[i])\n            names[i] = replace(names[i], excluded => \"\")\n        end\n    end\n    return names\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([\"avc  a .d e\"], \"\") == [\"avc  a .d e\"])\nend\n"
    },
    {
        "id": 778,
        "code": "function f(prefix::String, text::String)::String \n    if startswith(text, prefix)\n        return text\n    else\n        return prefix * text\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"mjs\", \"mjqwmjsqjwisojqwiso\") == \"mjsmjqwmjsqjwisojqwiso\")\nend\n"
    },
    {
        "id": 779
    },
    {
        "id": 780,
        "code": "function f(ints::Vector{Int64})::String \n    counts = zeros(Int64, 301)\n    \n    for i in ints\n        counts[i + 1] += 1\n    end\n    \n    r = []\n    for i in 1:length(counts)\n        if counts[i] >= 3\n            push!(r, string(i - 1))\n        end\n    end\n    \n    return join(r, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([2, 3, 5, 2, 4, 5, 2, 89]) == \"2\")\nend\n"
    },
    {
        "id": 781,
        "code": "\nfunction f(s::String, ch::String)::String \n    if !occursin(ch, s)\n        return \"\"\n    end\n    s = reverse(split(s, ch)[2])\n    for i in 1:length(s)\n        s = reverse(split(s, ch)[2])\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"shivajimonto6\", \"6\") == \"\")\nend\n"
    },
    {
        "id": 782,
        "code": "function f(input::String)::Bool \n    for char in input\n        if isuppercase(char)\n            return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"a j c n x X k\") == false)\nend\n"
    },
    {
        "id": 783,
        "code": "\nfunction f(text::String, comparison::String)::Int64 \n    length_c = length(comparison)\n    if length_c <= length(text)\n        for i in 1:length_c\n            if comparison[length_c - i + 1] != text[length(text) - i + 1]\n                return i - 1\n            end\n        end\n    end\n    return length_c\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"managed\", \"\") == 0)\nend\n"
    },
    {
        "id": 784,
        "code": "\nfunction f(key::String, value::String)::Tuple{String, String}\n    dict_ = Dict(key => value)\n    return (key, dict_[key])\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"read\", \"Is\") == (\"read\", \"Is\"))\nend\n"
    },
    {
        "id": 785
    },
    {
        "id": 786,
        "code": "\nfunction f(text::String, letter::String)::String \n    if occursin(letter, text)\n        start = findfirst(letter, text)\n        return text[start[1]+1:end] * text[1:start[1]]\n    end\n    return text\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"19kefp7\", \"9\") == \"kefp719\")\nend\n"
    },
    {
        "id": 787,
        "code": "function f(text::String)::String \n    if length(text) == 0\n        return \"\"\n    end\n    text = lowercase(text)\n    return uppercase(text[1]) * text[2:end]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"xzd\") == \"Xzd\")\nend\n"
    },
    {
        "id": 788,
        "code": "function f(text::String, suffix::String)::String \n    if startswith(suffix, \"/\")\n        return text * suffix[2:end]\n    end\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"hello.txt\", \"/\") == \"hello.txt\")\nend\n"
    },
    {
        "id": 789,
        "code": "function f(text::String, n::Int64)::String \n    if n < 0 || length(text) <= n\n        return text\n    end\n    \n    result = text[1:n]\n    i = length(result)\n    while i >= 1\n        if result[i] != text[i]\n            break\n        end\n        i -= 1\n    end\n    \n    return text[1:i]\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"bR\", -1) == \"bR\")\nend\n"
    },
    {
        "id": 790,
        "code": "\nfunction f(d::Dict{String, String})::Tuple{Bool, Bool} \n    r = Dict{String, Dict{String, String}}()\n    r[\"c\"] = copy(d)\n    r[\"d\"] = copy(d)\n    return (r[\"c\"] === r[\"d\"], r[\"c\"] == r[\"d\"])\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"i\" => \"1\", \"love\" => \"parakeets\")) == (false, true))\nend\n"
    },
    {
        "id": 791,
        "code": "function f(integer::Int64, n::Int64)::String \n    i = 1\n    text = string(integer)\n    while i + length(text) < n\n        i += length(text)\n    end\n    return string(integer, base=10, pad=i + length(text))\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(8999, 2) == \"08999\")\nend\n"
    },
    {
        "id": 792
    },
    {
        "id": 793,
        "code": "\nfunction f(lst::Vector{Int64}, start::Int64, end_val::Int64)::Int64 \n    count = 0\n    for i in start:end_val-1\n        for j in i+1:end_val\n            if lst[i+1] != lst[j]\n                count += 1\n            end\n        end\n    end\n    return count\nend\n\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate([1, 2, 4, 3, 2, 1], 0, 3) == 3)\nend\n"
    },
    {
        "id": 794
    },
    {
        "id": 795,
        "code": "function f(text::String)::String \n    return replace(titlecase(text), \"Io\" => \"io\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"Fu,ux zfujijabji pfu.\") == \"Fu,Ux Zfujijabji Pfu.\")\nend\n"
    },
    {
        "id": 796,
        "code": "function f(str::String, toget::String)::String \n    if startswith(str, toget)\n        return str[length(toget) + 1:end]\n    else\n        return str\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"fnuiyh\", \"ni\") == \"fnuiyh\")\nend\n"
    },
    {
        "id": 797,
        "code": "function f(dct::Dict{String, Int})::Vector{Tuple{String, Int}}\n    lst = []\n    for key in sort(collect(keys(dct)))\n        push!(lst, (key, dct[key]))\n    end\n    return lst\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => 2, \"c\" => 3)) == [(\"a\", 1), (\"b\", 2), (\"c\", 3)])\nend\n"
    },
    {
        "id": 798,
        "code": "function f(text::String, pre::String)::String \n    if !startswith(text, pre)\n        return text\n    end\n    return replace(text, pre => \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"@hihu@!\", \"@hihu\") == \"@!\")\nend\n"
    },
    {
        "id": 799,
        "code": "function f(st::String)::String \n    if st[1] == '~'\n        e = rpad(st, 10, 's')\n        return f(e)\n    else\n        return lpad(st, 10, 'n')\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(\"eqe-;ew22\") == \"neqe-;ew22\")\nend\n"
    }
]