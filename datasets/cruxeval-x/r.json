[
    {
        "id": 0,
        "code": "f <- function(nums) {    output <- list()\n    for (n in nums) {\n        count <- sum(nums == n)\n        output <- c(output, list(c(count, n)))\n    }\n    output <- output[order(sapply(output, `[[`, 1), decreasing = TRUE)]\n    return(output)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 1, 3, 1, 3, 1)), list(c(4, 1), c(4, 1), c(4, 1), c(4, 1), c(2, 3), c(2, 3)))))\n}\ntest_humaneval()"
    },
    {
        "id": 1
    },
    {
        "id": 2,
        "code": "f <- function(text) {    new_text <- strsplit(text, '')[[1]]\n    new_text <- new_text[new_text != '+']\n    paste(new_text, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('hbtofdeiequ'), 'hbtofdeiequ')))\n}\ntest_humaneval()"
    },
    {
        "id": 3,
        "code": "f <- function(text, value) {    text_list <- strsplit(text, '')[[1]]\n    text_list <- c(text_list, value)\n    paste(text_list, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('bcksrut', 'q'), 'bcksrutq')))\n}\ntest_humaneval()"
    },
    {
        "id": 4,
        "code": "f <- function(array) {    s <- ' '\n    s <- paste0(s, paste(array, collapse = ''))\n    return(s)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(' ', '  ', '    ', '   ')), '           ')))\n}\ntest_humaneval()"
    },
    {
        "id": 5,
        "code": "f <- function(text, lower, upper) {    count <- 0\n    new_text <- vector(mode = \"character\", length = nchar(text))\n    for (i in 1:nchar(text)) {\n        char <- substr(text, i, i)\n        char <- ifelse(is.numeric(char), lower, upper)\n        if (char %in% c(\"p\", \"C\")) {\n            count <- count + 1\n        }\n        new_text[i] <- char\n    }\n    return(list(count, paste(new_text, collapse = \"\")))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('DSUWeqExTQdCMGpqur', 'a', 'x'), list(0, 'xxxxxxxxxxxxxxxxxx'))))\n}\ntest_humaneval()"
    },
    {
        "id": 6
    },
    {
        "id": 7,
        "code": "f <- function(lst) {    original <- lst\n    while(length(lst) > 1) {\n        lst <- lst[-length(lst)]\n        for (i in seq_along(lst)) {\n            lst <- lst[-i]\n        }\n    }\n    lst <- original\n    if (length(lst) > 0) {\n        lst <- lst[-1]\n    }\n    return(lst)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c()), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 8,
        "code": "f <- function(string, encryption) {    if (encryption == 0) {\n        return(string)\n    } else {\n        return(chartr('A-Ma-mN-Zn-z', 'N-Zn-zA-Ma-m', toupper(string)))\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('UppEr', 0), 'UppEr')))\n}\ntest_humaneval()"
    },
    {
        "id": 9,
        "code": "f <- function(t) {    all(grepl(\"^\\\\d+$\", strsplit(t, \"\")[[1]]))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('#284376598'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 10,
        "code": "f <- function(text) {    new_text <- ''\n    text <- tolower(trimws(text))\n    for (ch in strsplit(text, '')[[1]]) {\n        if (grepl('[0-9]', ch) || ch %in% c('Ä', 'ä', 'Ï', 'ï', 'Ö', 'ö', 'Ü', 'ü')) {\n            new_text <- paste0(new_text, ch)\n        }\n    }\n    return(new_text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(''), '')))\n}\ntest_humaneval()"
    },
    {
        "id": 11,
        "code": "\nf <- function(a, b) {    for (key in names(b)) {\n        if (!(key %in% names(a))) {\n            a[[key]] <- c(b[[key]])\n        } else {\n            a[[key]] <- c(a[[key]], b[[key]])\n        }\n    }\n    return(a)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(), list(\"'foo'\" = 'bar')), list(\"'foo'\" = c('bar')))))\n}\ntest_humaneval()"
    },
    {
        "id": 12,
        "code": "f <- function(s, x) {    count <- 0\n    while(substr(s, 1, nchar(x)) == x && count < nchar(s) - nchar(x)) {\n        s <- substr(s, nchar(x) + 1, nchar(s))\n        count <- count + nchar(x)\n    }\n    return(s)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('If you want to live a happy life! Daniel', 'Daniel'), 'If you want to live a happy life! Daniel')))\n}\ntest_humaneval()"
    },
    {
        "id": 13,
        "code": "f <- function(names) {    count <- length(names)\n    numberOfNames <- 0\n    for (i in names) {\n        if (grepl(\"^[a-zA-Z]+$\", i)) {\n            numberOfNames <- numberOfNames + 1\n        }\n    }\n    return(numberOfNames)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('sharron', 'Savannah', 'Mike Cherokee')), 2)))\n}\ntest_humaneval()"
    },
    {
        "id": 14,
        "code": "f <- function(s) {    arr <- strsplit(trimws(s), '')[[1]]\n    arr <- rev(arr)\n    paste(arr, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('   OOP   '), 'POO')))\n}\ntest_humaneval()"
    },
    {
        "id": 15,
        "code": "f <- function(text, wrong, right) {    new_text <- toupper(gsub(wrong, right, text))\n    return(new_text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('zn kgd jw lnt', 'h', 'u'), 'ZN KGD JW LNT')))\n}\ntest_humaneval()"
    },
    {
        "id": 16,
        "code": "f <- function(text, suffix) {    if (substring(text, nchar(text) - nchar(suffix) + 1, nchar(text)) == suffix) {\n        return(substring(text, 1, nchar(text) - nchar(suffix)))\n    } else {\n        return(text)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('zejrohaj', 'owc'), 'zejrohaj')))\n}\ntest_humaneval()"
    },
    {
        "id": 17,
        "code": "f <- function(text) {    return(regexpr(\",\", text)[1] - 1)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('There are, no, commas, in this text'), 9)))\n}\ntest_humaneval()"
    },
    {
        "id": 18,
        "code": "f <- function(array, elem) {    k <- 1\n    l <- array\n    for (i in seq_along(l)) {\n        if (l[i] > elem) {\n            array <- append(array, elem, after = k-1)\n            break\n        }\n        k <- k + 1\n    }\n    return(array)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(5, 4, 3, 2, 1, 0), 3), c(3, 5, 4, 3, 2, 1, 0))))\n}\ntest_humaneval()"
    },
    {
        "id": 19,
        "code": "f <- function(x, y) {    tmp <- paste0(ifelse(strsplit(y, '')[[1]] == '9', '0', '9'), collapse = '')\n    if (grepl('^[0-9]+$', x) && grepl('^[0-9]+$', tmp)) {\n        return (paste0(x, tmp))\n    } else {\n        return (x)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('', 'sdasdnakjsda80'), '')))\n}\ntest_humaneval()"
    },
    {
        "id": 20,
        "code": "f <- function(text) {    result <- ''\n    for (i in seq(nchar(text), 1, by = -1)) {\n        result <- paste0(result, substr(text, i, i))\n    }\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('was,'), ',saw')))\n}\ntest_humaneval()"
    },
    {
        "id": 21,
        "code": "f <- function(array) {    n <- tail(array, 1)\n    array <- c(array[-length(array)], n, n)\n    return(array)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 1, 2, 2)), c(1, 1, 2, 2, 2))))\n}\ntest_humaneval()"
    },
    {
        "id": 22,
        "code": "f <- function(a) {    if (a == 0) {\n        return(0)\n    }\n    result <- c()\n    while (a > 0) {\n        result <- c(result, a %% 10)\n        a <- a %/% 10\n    }\n    result <- rev(result)\n    return(as.numeric(paste(result, collapse = \"\")))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(0), c(0))))\n}\ntest_humaneval()"
    },
    {
        "id": 23,
        "code": "f <- function(text, chars) {    if (nchar(chars) > 0) {\n        text <- sub(paste0('[' , chars, ']*$'), '', text)\n    } else {\n        text <- sub('[ ]*$', '', text)\n    }\n    \n    if (text == '') {\n        return('-')\n    }\n    \n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('new-medium-performing-application - XQuery 2.2', '0123456789-'), 'new-medium-performing-application - XQuery 2.')))\n}\ntest_humaneval()"
    },
    {
        "id": 24,
        "code": "f <- function(nums, i) {\n    nums <- nums[-(i + 1)]  # R is 1-indexed, so we need to adjust the index\n    return(nums)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(35, 45, 3, 61, 39, 27, 47), 0), c(45, 3, 61, 39, 27, 47))))\n}\ntest_humaneval()"
    },
    {
        "id": 25,
        "code": "f <- function(d) {    d <- d\n    d[names(d)[length(d)]] <- NULL\n    return(d)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(\"'l'\" = 1, \"'t'\" = 2, \"'x:'\" = 3)), list(\"'l'\" = 1, \"'t'\" = 2))))\n}\ntest_humaneval()"
    },
    {
        "id": 26,
        "code": "f <- function(items, target) {    items_split <- unlist(strsplit(items, \" \"))\n    for (i in 1:length(items_split)) {\n        if (grepl(items_split[i], target)) {\n            return(i)\n        }\n        if (grepl(\"\\\\.$\", items_split[i]) | grepl(\"^\\\\.\", items_split[i])) {\n            return('error')\n        }\n    }\n    return(\".\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('qy. dg. rnvprt rse.. irtwv tx..', 'wtwdoacb'), 'error')))\n}\ntest_humaneval()"
    },
    {
        "id": 27,
        "code": "\nf <- function(w) {    \n    chars <- strsplit(w, \"\")[[1]]\n    rev_w <- paste(rev(strsplit(w, \"\")[[1]]), collapse=\"\")\n    for (i in 1:floor(nchar(w)/2)) {\n        if (substr(w, 1, i) == substr(rev_w, 1, i)) {\n            return(TRUE)\n        }\n    }\n    return(FALSE)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('flak'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 28,
        "code": "f <- function(mylist) {    revl <- rev(mylist)\n    mylist <- sort(mylist, decreasing = TRUE)\n    return(identical(mylist, revl))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(5, 8)), TRUE)))\n}\ntest_humaneval()"
    },
    {
        "id": 29,
        "code": "f <- function(text) {    nums <- unlist(strsplit(gsub(\"[^0-9]\", \"\", text), \"\"))\n    stopifnot(length(nums) > 0)\n    paste(nums, collapse = \"\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('-123   \\t+314'), '123314')))\n}\ntest_humaneval()"
    },
    {
        "id": 30,
        "code": "f <- function(array) {    result <- c()\n    for (elem in array) {\n        if (grepl(\"[ -~]\", elem, perl = TRUE) || (is.numeric(elem) && !grepl(\"[ -~]\", abs(elem), perl = TRUE))) {\n            result <- c(result, elem)\n        }\n    }\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('a', 'b', 'c')), c('a', 'b', 'c'))))\n}\ntest_humaneval()"
    },
    {
        "id": 31,
        "code": "f <- function(string) {    upper <- 0\n    for (c in strsplit(string, NULL)[[1]]) {\n        if (grepl(\"[A-Z]\", c)) {\n            upper <- upper + 1\n        }\n    }\n    return(upper * ifelse(upper %% 2 == 0, 2, 1))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('PoIOarTvpoead'), 8)))\n}\ntest_humaneval()"
    },
    {
        "id": 32,
        "code": "f <- function(s, sep) {    reverse <- sapply(strsplit(s, split = sep)[[1]], function(e) paste0(\"*\", e))\n    return(paste0(paste0(rev(reverse), collapse = \";\"), collapse = \"\"))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('volume', 'l'), '*ume;*vo')))\n}\ntest_humaneval()"
    },
    {
        "id": 33
    },
    {
        "id": 34,
        "code": "f <- function(nums, odd1, odd2) {    while(odd1 %in% nums) {\n        nums <- nums[nums != odd1]\n    }\n    while(odd2 %in% nums) {\n        nums <- nums[nums != odd2]\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3, 7, 7, 6, 8, 4, 1, 2, 3, 5, 1, 3, 21, 1, 3), 3, 1), c(2, 7, 7, 6, 8, 4, 2, 5, 21))))\n}\ntest_humaneval()"
    },
    {
        "id": 35,
        "code": "f <- function(pattern, items) {    result <- c()\n    for(text in items) {\n        pos <- max(gregexpr(pattern, text)[[1]])\n        if (pos >= 0) {\n            result <- c(result, pos)\n        }\n    }\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(' B ', c(' bBb ', ' BaB ', ' bB', ' bBbB ', ' bbb')), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 36,
        "code": "\nf <- function(text, chars) {\n    sub(paste0(chars, '$'), '', text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('ha', ''), 'ha')))\n}\ntest_humaneval()"
    },
    {
        "id": 37,
        "code": "f <- function(text) {    text_arr <- vector(mode = \"character\", length = nchar(text))\n    for (j in 1:nchar(text)) {\n        text_arr[j] <- substr(text, j, nchar(text))\n    }\n    return(text_arr)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('123'), c('123', '23', '3'))))\n}\ntest_humaneval()"
    },
    {
        "id": 38
    },
    {
        "id": 39,
        "code": "\nf <- function(array, elem) {   \n    if (elem %in% array) {\n        return(which(array == elem) - 1)\n    }\n    return(-1)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(6, 2, 7, 1), 6), 0)))\n}\ntest_humaneval()"
    },
    {
        "id": 40,
        "code": "f <- function(text) {\n  paste0(text, rep(\"#\", nchar(text) + 1 - nchar(text)))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('the cow goes moo'), 'the cow goes moo#')))\n}\ntest_humaneval()"
    },
    {
        "id": 41,
        "code": "f <- function(array, values) {    array <- rev(array)\n    for (value in values) {\n        array <- append(array, value, after = length(array) %/% 2)\n    }\n    rev(array)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(58), c(21, 92)), c(58, 92, 21))))\n}\ntest_humaneval()"
    },
    {
        "id": 42,
        "code": "\nf <- function(nums) {\n    nums <- c()\n    for (num in nums) {\n        nums <- c(nums, num*2)\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(4, 3, 2, 1, 2, -1, 4, 2)), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 43,
        "code": "f <- function(n) {    if (grepl(\"\\\\D\", as.character(n))) {\n        n <- -1\n    }\n    return(n)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('6 ** 2'), -1)))\n}\ntest_humaneval()"
    },
    {
        "id": 44,
        "code": "\nf <- function(text) {    ls <- strsplit(text, \"\")[[1]]\n    for (i in 1:length(ls)) {\n        if (ls[i] != '+') {\n            ls <- c('*', '+', ls)\n            break\n        }\n    }\n    paste(ls, collapse = '+')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('nzoh'), '*+++n+z+o+h')))\n}\ntest_humaneval()"
    },
    {
        "id": 45,
        "code": "f <- function(text, letter) {    counts <- table(strsplit(text, '')[[1]])\n    if (letter %in% names(counts)) {\n        return(counts[[letter]])\n    } else {\n        return(0)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('za1fd1as8f7afasdfam97adfa', '7'), 2)))\n}\ntest_humaneval()"
    },
    {
        "id": 46,
        "code": "f <- function(l, c) {    paste(l, collapse = c)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('many', 'letters', 'asvsz', 'hello', 'man'), ''), 'manylettersasvszhelloman')))\n}\ntest_humaneval()"
    },
    {
        "id": 47,
        "code": "f <- function(text) {    length <- nchar(text)\n    half <- length %/% 2\n    encode <- charToRaw(substr(text, 1, half))\n    if (substr(text, half+1, nchar(text)) == rawToChar(encode)) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('bbbbr'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 48,
        "code": "f <- function(names) {    if (length(names) == 0) {\n        return(\"\")\n    }\n    smallest <- names[1]\n    for (name in names[-1]) {\n        if (name < smallest) {\n            smallest <- name\n        }\n    }\n    names <- names[names != smallest]\n    return(paste0(smallest, collapse = \"\"))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c()), '')))\n}\ntest_humaneval()"
    },
    {
        "id": 49,
        "code": "f <- function(text) {    if (grepl(\"^[a-zA-Z_][a-zA-Z0-9_]*$\", text)) {\n        paste0(gsub(\"\\\\D\", \"\", strsplit(text, \"\")[[1]]))\n    } else {\n        paste0(strsplit(text, \"\")[[1]], collapse = \"\")\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('816'), '816')))\n}\ntest_humaneval()"
    },
    {
        "id": 50,
        "code": "f <- function(lst) {    lst <- c()\n    lst <- c(rep(1, length(lst) + 1))\n    return(lst)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('a', 'c', 'v')), c(1))))\n}\ntest_humaneval()"
    },
    {
        "id": 51,
        "code": "f <- function(num) {    s <- strrep('<', 10)\n    if (num %% 2 == 0) {\n        return(s)\n    } else {\n        return(num - 1)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(21), 20)))\n}\ntest_humaneval()"
    },
    {
        "id": 52,
        "code": "f <- function(text) {    a <- character(0)\n    for (i in 1:nchar(text)) {\n        if (!grepl(\"\\\\d\", substr(text, i, i))) {\n            a <- c(a, substr(text, i, i))\n        }\n    }\n    paste(a, collapse = \"\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('seiq7229 d27'), 'seiq d')))\n}\ntest_humaneval()"
    },
    {
        "id": 53,
        "code": "\nf <- function(text) {\n    occ <- list()\n    for(ch in strsplit(text, \"\")[[1]]) {\n        name <- switch(ch, \"a\" = \"b\", \"b\" = \"c\", \"c\" = \"d\", \"d\" = \"e\", \"e\" = \"f\", ch)\n        if(is.null(occ[[name]])) {\n            occ[[name]] <- 1\n        } else {\n            occ[[name]] <- occ[[name]] + 1\n        }\n    }\n    as.numeric(occ)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('URW rNB'), c(1, 1, 1, 1, 1, 1, 1))))\n}\ntest_humaneval()"
    },
    {
        "id": 54,
        "code": "f <- function(text, s, e) {    sublist <- substr(text, s + 1, e)\n    if (nchar(sublist) == 0) {\n        return(-1)\n    }\n    return(which.min(utf8ToInt(sublist)) - 1)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('happy', 0, 3), 1)))\n}\ntest_humaneval()"
    },
    {
        "id": 55,
        "code": "f <- function(array) {    array_2 <- array[array > 0]\n    sort(array_2, decreasing = TRUE)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(4, 8, 17, 89, 43, 14)), c(89, 43, 17, 14, 8, 4))))\n}\ntest_humaneval()"
    },
    {
        "id": 56,
        "code": "\nf <- function(sentence) {\n    all(iconv(sentence, to=\"ASCII\") == sentence)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('1z1z1'), TRUE)))\n}\ntest_humaneval()"
    },
    {
        "id": 57,
        "code": "f <- function(text) {    text <- toupper(text)\n    count_upper <- 0\n    for (char in strsplit(text, '')[[1]]) {\n        if (char %in% LETTERS) {\n            count_upper <- count_upper + 1\n        } else {\n            return('no')\n        }\n    }\n    return(count_upper %/% 2)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('ax'), 1)))\n}\ntest_humaneval()"
    },
    {
        "id": 58,
        "code": "f <- function(nums) {    count <- length(nums)\n    for (i in 0:(count-1)) {\n        nums <- c(nums, nums[i %% 2 + 1])\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(-1, 0, 0, 1, 1)), c(-1, 0, 0, 1, 1, -1, 0, -1, 0, -1))))\n}\ntest_humaneval()"
    },
    {
        "id": 59,
        "code": "f <- function(s) {    a <- strsplit(s, '')[[1]]\n    b <- a\n    for (i in length(a):1) {\n        if (a[i] == ' ') {\n            b <- b[-length(b)]\n        } else {\n            break\n        }\n    }\n    paste(b, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('hi '), 'hi')))\n}\ntest_humaneval()"
    },
    {
        "id": 60,
        "code": "f <- function(doc) {    for (x in strsplit(doc, '')[[1]]) {\n        if (grepl('[A-Za-z]', x)) {\n            return(toupper(x))\n        }\n    }\n    return('-')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('raruwa'), 'R')))\n}\ntest_humaneval()"
    },
    {
        "id": 61,
        "code": "f <- function(text) {    texts <- unlist(strsplit(text, \"\\\\s+\"))\n    xtexts <- texts[texts != 'nada' & texts != '0' & grepl(\"^[[:alnum:][:punct:]]+$\", texts)]\n    if (length(xtexts) > 0) {\n        return(xtexts[which.max(nchar(xtexts))])\n    } else {\n        return('nada')\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(''), 'nada')))\n}\ntest_humaneval()"
    },
    {
        "id": 62,
        "code": "\nf <- function(user) {    keys <- names(user)\n    values <- as.vector(unlist(user))\n    if (length(keys) > length(values)) {\n        return(keys)\n    } else {\n        return(values)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(\"'eating'\" = 'ja', \"'books'\" = 'nee', \"'piano'\" = 'coke', \"'excitement'\" = 'zoo')), c('ja', 'nee', 'coke', 'zoo'))))\n}\ntest_humaneval()"
    },
    {
        "id": 63,
        "code": "f <- function(text, prefix) {    while (grepl(paste0(\"^\", prefix), text)) {\n        text <- substring(text, first = nchar(prefix) + 1)\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('ndbtdabdahesyehu', 'n'), 'dbtdabdahesyehu')))\n}\ntest_humaneval()"
    },
    {
        "id": 64,
        "code": "\nf <- function(text, size) {\n    counter <- nchar(text)\n    for (i in 1:(size-size%%2)) {\n        text <- paste0(' ', text, ' ')\n        counter <- counter + 2\n        if (counter >= size) {\n            return(text)\n        }\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('7', 10), '     7     ')))\n}\ntest_humaneval()"
    },
    {
        "id": 65,
        "code": "\nf <- function(nums, index) {    \n    val <- nums[index+1]\n    nums <- nums[-(index+1)]\n    return ((val %% 42) + val * 2)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(3, 2, 0, 3, 7), 3), 9)))\n}\ntest_humaneval()"
    },
    {
        "id": 66,
        "code": "f <- function(text, prefix) {    prefix_length <- nchar(prefix)\n    if (substring(text, 1, prefix_length) == prefix) {\n        substr(text, (prefix_length - 1) %/% 2 + 1, \n               (prefix_length + 1) %/% 2 * -1)\n    } else {\n        text\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('happy', 'ha'), '')))\n}\ntest_humaneval()"
    },
    {
        "id": 67,
        "code": "f <- function(num1, num2, num3) {    nums <- c(num1, num2, num3)\n    nums <- sort(nums)\n    return(paste(nums[1], nums[2], nums[3], sep = \",\"))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(6, 8, 8), '6,8,8')))\n}\ntest_humaneval()"
    },
    {
        "id": 68,
        "code": "\nf <- function(text, pref) {\n    if (substring(text, 1, nchar(pref)) == pref) {\n        n <- nchar(pref)\n        text <- paste(unlist(strsplit(substring(text, n+1), '.', fixed = TRUE))[-1], collapse = '.')\n        text <- paste(c(unlist(strsplit(substring(text, 1, n-1), '.', fixed = TRUE))[-(nchar(pref) != 0)], text), collapse = '.')\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('omeunhwpvr.dq', 'omeunh'), 'dq')))\n}\ntest_humaneval()"
    },
    {
        "id": 69,
        "code": "f <- function(student_marks, name) {    if (name %in% names(student_marks)) {\n        value <- student_marks[[name]]\n        student_marks[[name]] <- NULL\n        return(value)\n    } else {\n        return('Name unknown')\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(\"'882afmfp'\" = 56), '6f53p'), 'Name unknown')))\n}\ntest_humaneval()"
    },
    {
        "id": 70,
        "code": "f <- function(x) {    a <- 0\n    words <- unlist(strsplit(x, ' '))\n    for (i in words) {\n        a <- a + nchar(formatC(i, width = nchar(i)*2, flag = \"0\"))\n    }\n    return(a)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('999893767522480'), 30)))\n}\ntest_humaneval()"
    },
    {
        "id": 71
    },
    {
        "id": 72,
        "code": "f <- function(text) {  for (c in strsplit(text, \"\")[[1]]) {\n    if (!grepl(\"[0-9]\", c)) {\n      return(FALSE)\n    }\n  }\n  return(!is.na(text) && text != \"\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('99'), TRUE)))\n}\ntest_humaneval()"
    },
    {
        "id": 73,
        "code": "f <- function(row) {    count_1 <- nchar(gsub(\"[^1]\", \"\", row))\n    count_0 <- nchar(gsub(\"[^0]\", \"\", row))\n    return(c(count_1, count_0))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('100010010'), c(3, 6))))\n}\ntest_humaneval()"
    },
    {
        "id": 74,
        "code": "f <- function(lst, i, n) {    insert <- append(lst, n, after = i)\n    return(insert)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(44, 34, 23, 82, 24, 11, 63, 99), 4, 15), c(44, 34, 23, 82, 15, 24, 11, 63, 99))))\n}\ntest_humaneval()"
    },
    {
        "id": 75,
        "code": "f <- function(array, elem) {\n    ind <- match(elem, array) - 1  # match returns 1-based index, so subtract 1 for 0-based index\n    return(ind * 2 + array[length(array) - ind] * 3)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(-1, 2, 1, -8, 2), 2), -22)))\n}\ntest_humaneval()"
    },
    {
        "id": 76,
        "code": "f <- function(nums) {    nums <- nums[nums > 0]\n    if (length(nums) <= 3) {\n        return(nums)\n    }\n    nums <- rev(nums)\n    half <- length(nums) %/% 2\n    return(c(nums[1:half], rep(0, 5), nums[(half+1):length(nums)]))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(10, 3, 2, 2, 6, 0)), c(6, 2, 0, 0, 0, 0, 0, 2, 3, 10))))\n}\ntest_humaneval()"
    },
    {
        "id": 77,
        "code": "\nf <- function(text, character) {\n    text <- paste(text, collapse = '')\n    subj <- strsplit(text, '')[[1]]\n    if (character %in% subj) {\n        subj <- subj[max(which(subj == character)):length(subj)]\n        paste(rep(subj, times = sum(subj == character)), collapse = '')\n    } else {\n        return(\"\")\n    }\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('h ,lpvvkohh,u', 'i'), '')))\n}\ntest_humaneval()"
    },
    {
        "id": 78,
        "code": "f <- function(text) {    if (nchar(text) > 0 && toupper(text) == text) {\n        cs <- chartr(paste(LETTERS, collapse = \"\"), paste(letters, collapse = \"\"), \"\")\n        return(chartr(cs, text))\n    }\n    return(tolower(substr(text, 1, 3)))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n'), 'mty')))\n}\ntest_humaneval()"
    },
    {
        "id": 79,
        "code": "f <- function(arr) {    arr <- list(arr)\n    arr <- list()\n    arr <- c(arr, '1', '2', '3', '4')\n    return(paste(arr, collapse = ','))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(0, 1, 2, 3, 4)), '1,2,3,4')))\n}\ntest_humaneval()"
    },
    {
        "id": 80,
        "code": "f <- function(s) {\n  paste0(rev(strsplit(trimws(s), '')[[1]]), collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('ab        '), 'ba')))\n}\ntest_humaneval()"
    },
    {
        "id": 81
    },
    {
        "id": 82,
        "code": "\nf <- function(a, b, c, d) {\n    if (length(a) > 0 && length(b) > 0) {\n        return(b)\n    } else if (length(c) > 0 && length(d) > 0) {\n        return(d)\n    } else {\n        return(NA)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('CJU', 'BFS', 'WBYDZPVES', 'Y'), 'BFS')))\n}\ntest_humaneval()"
    },
    {
        "id": 83
    },
    {
        "id": 84,
        "code": "f <- function(text) {    arr <- unlist(strsplit(text, \"\\\\s+\"))\n    result <- character(length(arr))\n    for (i in 1:length(arr)) {\n        if (grepl(\"day$\", arr[i])) {\n            arr[i] <- paste0(arr[i], \"y\")\n        } else {\n            arr[i] <- paste0(arr[i], \"day\")\n        }\n        result[i] <- arr[i]\n    }\n    return(paste(result, collapse = \" \"))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('nwv mef ofme bdryl'), 'nwvday mefday ofmeday bdrylday')))\n}\ntest_humaneval()"
    },
    {
        "id": 85,
        "code": "\nf <- function(n) {\n    values <- list('0' = 3, '1' = 4.5, '2' = '')\n    res <- c()\n    for (i in 0:(length(values)-1)) {\n        if (i %% n != 2) {\n            res[length(res)+1] <- values[[as.character(i)]]\n        }\n    }\n    sort(res)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(12), c(3, 4.5))))\n}\ntest_humaneval()"
    },
    {
        "id": 86,
        "code": "\nf <- function(instagram, imgur, wins) {\n    photos <- list(instagram, imgur)\n    if (all(instagram == imgur)) {\n        return(wins)\n    } else if (wins == 1) {\n        return(photos[[length(photos)]])\n    } else {\n        photos <- photos[length(photos):1]\n        return(photos[[length(photos)]])\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('sdfs', 'drcr', '2e'), c('sdfs', 'dr2c', 'QWERTY'), 0), c('sdfs', 'drcr', '2e'))))\n}\ntest_humaneval()"
    },
    {
        "id": 87,
        "code": "f <- function(nums) {    rev_nums <- rev(nums)\n    paste0(rev_nums, collapse = \"\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(-1, 9, 3, 1, -2)), '-2139-1')))\n}\ntest_humaneval()"
    },
    {
        "id": 88,
        "code": "f <- function(s1, s2) {    if (substring(s2, nchar(s2) - nchar(s1) + 1, nchar(s2)) == s1) {\n        s2 <- substr(s2, 1, nchar(s2) - nchar(s1))\n    }\n    return(s2)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('he', 'hello'), 'hello')))\n}\ntest_humaneval()"
    },
    {
        "id": 89,
        "code": "f <- function(char) {if (char %in% c('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')) {\n        if (char %in% c('A', 'E', 'I', 'O', 'U')) {\n            return(tolower(char))\n        } else {\n            return(toupper(char))\n        }\n    } else {\n        return(NULL)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('o'), 'O')))\n}\ntest_humaneval()"
    },
    {
        "id": 90,
        "code": "f <- function(array) {    return_arr <- lapply(array, function(a) {a})\n    return(return_arr)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(c(1, 2, 3), c(), c(1, 2, 3))), list(c(1, 2, 3), c(), c(1, 2, 3)))))\n}\ntest_humaneval()"
    },
    {
        "id": 91,
        "code": "f <- function(s) {    d <- unique(strsplit(s, \"\")[[1]])\n    return(d)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('12ab23xy'), c('1', '2', 'a', 'b', '3', 'x', 'y'))))\n}\ntest_humaneval()"
    },
    {
        "id": 92,
        "code": "f <- function(text) {    all(charToRaw(text) <= as.raw(127))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('wW의IV]HDJjhgK[dGIUlVO@Ess$coZkBqu[Ct'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 93,
        "code": "f <- function(n) {    length <- nchar(n) + 2\n    revn <- strsplit(n, '')[[1]]\n    result <- paste(revn, collapse = '')\n    revn <- NULL\n    return(paste0(result, strrep('!', length)))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('iq'), 'iq!!!!')))\n}\ntest_humaneval()"
    },
    {
        "id": 94
    },
    {
        "id": 95
    },
    {
        "id": 96,
        "code": "f <- function(text) {    !any(sapply(strsplit(text, '')[[1]], function(c) {toupper(c) == c}))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('lunabotics'), TRUE)))\n}\ntest_humaneval()"
    },
    {
        "id": 97,
        "code": "f <- function(lst) {    lst <- list()\n    for (i in lst) {\n        if (i == 3) {\n            return(FALSE)\n        }\n    }\n    return(TRUE)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(2, 0)), TRUE)))\n}\ntest_humaneval()"
    },
    {
        "id": 98,
        "code": "\nf <- function(s) {    words <- strsplit(s, \" \")[[1]]\n    sum(grepl('^[:upper:]', words))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('SOME OF THIS Is uknowN!'), 1)))\n}\ntest_humaneval()"
    },
    {
        "id": 99
    },
    {
        "id": 100
    },
    {
        "id": 101,
        "code": "f <- function(array, i_num, elem) {    insert <- function(array, i_num, elem) {\n        array <- c(array[1:i_num], elem, array[(i_num + 1):length(array)])\n        return(array)\n    }\n    \n    insert(array, i_num, elem)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(-4, 1, 0), 1, 4), c(-4, 4, 1, 0))))\n}\ntest_humaneval()"
    },
    {
        "id": 102,
        "code": "\nf <- function(names, winners) {    ls <- lapply(names, function(name) {\n        if (name %in% winners) {\n            return(which(names == name))\n        }\n    })\n    ls <- unlist(ls)\n    ls <- sort(ls, decreasing = TRUE)\n    return(ls)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('e', 'f', 'j', 'x', 'r', 'k'), c('a', 'v', '2', 'im', 'nb', 'vj', 'z')), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 103,
        "code": "f <- function(s) {    tolower(s)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('abcDEFGhIJ'), 'abcdefghij')))\n}\ntest_humaneval()"
    },
    {
        "id": 104
    },
    {
        "id": 105
    },
    {
        "id": 106,
        "code": "f <- function(nums) {    count <- length(nums)\n    for (i in 1:count) {\n        nums <- append(nums, nums[i]*2, after = i-1)\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(2, 8, -2, 9, 3, 3)), c(4, 4, 4, 4, 4, 4, 2, 8, -2, 9, 3, 3))))\n}\ntest_humaneval()"
    },
    {
        "id": 107,
        "code": "f <- function(text) {    result <- vector(\"character\", nchar(text))\n    for (i in 1:nchar(text)) {\n        if (!grepl(\"[ -~]\", substr(text, i, i))) {\n            return(FALSE)\n        } else if (grepl(\"[[:alnum:]]\", substr(text, i, i))) {\n            result[i] <- toupper(substr(text, i, i))\n        } else {\n            result[i] <- substr(text, i, i)\n        }\n    }\n    paste(result, collapse = \"\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('ua6hajq'), 'UA6HAJQ')))\n}\ntest_humaneval()"
    },
    {
        "id": 108,
        "code": "f <- function(var) {    if (is.list(var)) {\n        amount <- length(var)\n    } else {\n        amount <- 0\n    }\n    \n    if (is.list(var)) {\n        nonzero <- ifelse(length(var) > 0, length(var), 0)\n    } else if (is.list(var)) {\n        nonzero <- ifelse(length(names(var)) > 0, length(names(var)), 0)\n    } else {\n        nonzero <- 0\n    }\n    \n    return(nonzero)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(1), 0)))\n}\ntest_humaneval()"
    },
    {
        "id": 109,
        "code": "f <- function(nums, spot, idx) {    insert <- nums\n    insert <- append(insert, idx, after = spot)\n    return(insert)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 0, 1, 1), 0, 9), c(9, 1, 0, 1, 1))))\n}\ntest_humaneval()"
    },
    {
        "id": 110,
        "code": "f <- function(text) {    a <- c('')\n    b <- ''\n    for (i in strsplit(text, '')[[1]]) {\n        if (i != ' ') {\n            a <- c(a, b)\n            b <- ''\n        } else {\n            b <- paste0(b, i)\n        }\n    }\n    return(length(a))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('       '), 1)))\n}\ntest_humaneval()"
    },
    {
        "id": 111,
        "code": "f <- function(marks) {\n    highest <- 0\n    lowest <- 100\n    for (value in marks) {\n        if (value > highest) {\n            highest <- value\n        }\n        if (value < lowest) {\n            lowest <- value\n        }\n    }\n    return(c(highest, lowest))\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(\"'x'\" = 67, \"'v'\" = 89, \"''\" = 4, \"'alij'\" = 11, \"'kgfsd'\" = 72, \"'yafby'\" = 83)), c(89, 4))))\n}\ntest_humaneval()"
    },
    {
        "id": 112
    },
    {
        "id": 113,
        "code": "f <- function(line) {    count <- 0\n    a <- character()\n    for (i in 1:nchar(line)) {\n        count <- count + 1\n        if (count %% 2 == 0) {\n            a <- c(a, chartr('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', substr(line, i, i)))\n        } else {\n            a <- c(a, substr(line, i, i))\n        }\n    }\n    paste(a, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('987yhNSHAshd 93275yrgSgbgSshfbsfB'), '987YhnShAShD 93275yRgsgBgssHfBsFB')))\n}\ntest_humaneval()"
    },
    {
        "id": 114,
        "code": "f <- function(text, sep) {    strsplit(text, split = sep, fixed = TRUE)[[1]]\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('a-.-.b', '-.'), c('a', '', 'b'))))\n}\ntest_humaneval()"
    },
    {
        "id": 115,
        "code": "\nf <- function(text) {    res <- c()\n    for (ch in charToRaw(text)) {\n        if (as.integer(ch) == 61) {\n            break\n        }\n        if (as.integer(ch) != 0) {\n            res <- c(res, paste(as.integer(ch), '; ', sep = ''))\n        }\n    }\n    paste('b\\'', paste(res, collapse = ''), '\\'', sep = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('os||agx5'), \"b'111; 115; 124; 124; 97; 103; 120; 53; '\")))\n}\ntest_humaneval()"
    },
    {
        "id": 116,
        "code": "f <- function(d, count) {    for (i in 1:count) {\n        if (length(d) == 0) {\n            break\n        }\n        d <- head(d, -1)\n    }\n    return(d)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(), 200), list())))\n}\ntest_humaneval()"
    },
    {
        "id": 117,
        "code": "f <- function(numbers) {    for (i in 1:nchar(numbers)) {\n        if (sum(strsplit(numbers, '')[[1]] == '3') > 1) {\n            return(i)\n        }\n    }\n    return(-1)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('23157'), -1)))\n}\ntest_humaneval()"
    },
    {
        "id": 118,
        "code": "f <- function(text, chars) {    num_applies <- 2\n    extra_chars <- ''\n    for (i in 1:num_applies) {\n        extra_chars <- paste0(extra_chars, chars)\n        text <- gsub(extra_chars, '', text)\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('zbzquiuqnmfkx', 'mk'), 'zbzquiuqnmfkx')))\n}\ntest_humaneval()"
    },
    {
        "id": 119,
        "code": "\nf <- function(text) {    \n    result = \"\"\n    for (i in 1:nchar(text)) {\n        if (i %% 2 == 0) {\n            result <- paste0(result, tolower(substr(text, i, i)))\n        } else {\n            result <- paste0(result, toupper(substr(text, i, i)))\n        }\n    }\n    return(result)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('vsnlygltaw'), 'VsNlYgLtAw')))\n}\ntest_humaneval()"
    },
    {
        "id": 120,
        "code": "f <- function(countries) {    language_country <- list()\n    for (i in seq_along(names(countries))) {\n        if (is.null(language_country[[countries[[i]]]])) {\n            language_country[[countries[[i]]]] <- list()\n        }\n        language_country[[countries[[i]]]] <- c(language_country[[countries[[i]]]], names(countries)[i])\n    }\n    return(language_country)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list()), list())))\n}\ntest_humaneval()"
    },
    {
        "id": 121,
        "code": "f <- function(s) {    nums <- paste0(unlist(strsplit(s, split = \"\"))[grepl('[0-9]', unlist(strsplit(s, split = \"\")))] , collapse = \"\")\n    \n    if (nums == '') {\n        return('none')\n    }\n    \n    nums <- unlist(strsplit(nums, split = \",\"))\n    m <- max(as.numeric(nums))\n    return(as.character(m))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('01,001'), '1001')))\n}\ntest_humaneval()"
    },
    {
        "id": 122,
        "code": "f <- function(string) {    if (substring(string, 1, 4) != 'Nuva') {\n        return('no')\n    } else {\n        return(trimws(string, which = 'right'))\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Nuva?dlfuyjys'), 'Nuva?dlfuyjys')))\n}\ntest_humaneval()"
    },
    {
        "id": 123,
        "code": "f <- function(array, elem) {    for (idx in 1:length(array)) {\n        if (array[idx] > elem && array[idx - 1] < elem) {\n            array <- append(array, elem, after = idx - 1)\n        }\n    }\n    return(array)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3, 5, 8), 6), c(1, 2, 3, 5, 6, 8))))\n}\ntest_humaneval()"
    },
    {
        "id": 124,
        "code": "f <- function(txt, sep, sep_count) {    o <- ''\n    while (sep_count > 0 && grepl(sep, txt)) {\n        o <- paste0(o, substr(txt, 1, regexpr(sep, txt) - 1), sep)\n        txt <- substr(txt, regexpr(sep, txt) + nchar(sep), nchar(txt))\n        sep_count <- sep_count - 1\n    }\n    return(paste0(o, txt))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('i like you', ' ', -1), 'i like you')))\n}\ntest_humaneval()"
    },
    {
        "id": 125,
        "code": "f <- function(text, res) {    for (c in c('*', '\\n', '\\\"')) {\n        text <- gsub(c, paste0('!', res), text, fixed = TRUE)\n    }\n    if (substr(text, 1, 1) == '!') {\n        text <- substr(text, nchar(as.character(res)) + 1, nchar(text))\n    }\n    text\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('\"Leap and the net will appear', 123), '3Leap and the net will appear')))\n}\ntest_humaneval()"
    },
    {
        "id": 126,
        "code": "\nf <- function(text) {\n    parts <- strsplit(text, \"o\", fixed = TRUE)[[1]]\n    if (length(parts) == 1) {\n        return(paste0(\"-\", text))\n    } else {\n        return(paste0(parts[1], \"o\", parts[1], \"o\", parts[2]))\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('kkxkxxfck'), '-kkxkxxfck')))\n}\ntest_humaneval()"
    },
    {
        "id": 127,
        "code": "f <- function(text) {    s <- strsplit(text, \"\\n\")[[1]]\n    return(length(s))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('145\\n\\n12fjkjg'), 3)))\n}\ntest_humaneval()"
    },
    {
        "id": 128,
        "code": "f <- function(text) {\n    odd <- ''\n    even <- ''\n    for (i in seq_along(strsplit(text, '')[[1]])) {\n        c <- substr(text, i, i)\n        if ((i - 1) %% 2 == 0) {\n            even <- paste0(even, c)\n        } else {\n            odd <- paste0(odd, c)\n        }\n    }\n    return(paste0(even, tolower(odd)))\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Mammoth'), 'Mmohamt')))\n}\ntest_humaneval()"
    },
    {
        "id": 129
    },
    {
        "id": 130
    },
    {
        "id": 131,
        "code": "\nf <- function(text) {\n    count <- 0\n    lines <- strsplit(text, '\\n')[[1]]\n    for (line in lines) {\n        if (grepl('^a', line)) {\n            count <- count + gregexpr(' ', line)[[1]][1]\n        } else {\n            count <- count + nchar(line)\n        }\n    }\n    return(count)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('a\\nkgf\\nasd\\n'), 1)))\n}\ntest_humaneval()"
    },
    {
        "id": 132,
        "code": "\nf <- function(a_str, prefix) {\n    # subtracting prefix length from a_str\n    if (nchar(prefix) <= nchar(a_str)) { \n        # checking if prefix exists in a_str\n        if (substr(a_str, 1, nchar(prefix)) == prefix) {\n            return (substr(a_str, nchar(prefix)+1, nchar(a_str)))\n        } else {\n            return (paste(prefix, a_str, sep=\"\"))\n        }\n    } else {\n        return (a_str)\n    }\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('abc', 'abcd'), 'abc')))\n}\ntest_humaneval()"
    },
    {
        "id": 133,
        "code": "f <- function(nums, elements) {    result <- vector()\n    for (i in seq_along(elements)) {\n        result <- c(result, tail(nums, 1))\n        nums <- head(nums, -1)\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(7, 1, 2, 6, 0, 2), c(9, 0, 3)), c(7, 1, 2))))\n}\ntest_humaneval()"
    },
    {
        "id": 134,
        "code": "\nf <- function(n) {    t <- 0\n    digits <- as.integer(strsplit(as.character(n), \"\")[[1]])\n    for (d in digits) {\n        if (d == 0) { t <- t + 1 }\n        else { break }\n    }\n    b <- paste(c(rep('104', t), n), collapse = \"\")\n    return(b)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(372359), '372359')))\n}\ntest_humaneval()"
    },
    {
        "id": 135,
        "code": "f <- function() {    d <- list(\n        Russia = list(c('Moscow', 'Russia'), c('Vladivostok', 'Russia')),\n        Kazakhstan = list(c('Astana', 'Kazakhstan'))\n    )\n    return(names(d))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(), c('Russia', 'Kazakhstan'))))\n}\ntest_humaneval()"
    },
    {
        "id": 136,
        "code": "\nf <- function(text, width) {\n    lines <- strsplit(text, '\\n')[[1]]\n    lines <- sapply(lines, function(line) {\n        padding <- max(0, width - nchar(line))\n        before <- ceiling(padding / 2)\n        after <- floor(padding / 2)\n        paste0(strrep(' ', before), line, strrep(' ', after))\n    })\n    return(paste(lines, collapse = '\\n'))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('a\\nbc\\n\\nd\\nef', 5), '  a  \\n  bc \\n     \\n  d  \\n  ef ')))\n}\ntest_humaneval()"
    },
    {
        "id": 137,
        "code": "\nf <- function(nums) {\n    count <- 0\n    while (length(nums) > 0) {\n        if (count %% 2 == 0) {\n            nums <- nums[-length(nums)]\n        } else {\n            nums <- nums[-1]\n        }\n        count <- count + 1\n    }\n    if (identical(nums, numeric(0))) {\n        nums <- c()\n    }\n    return(nums)\n}\n\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(3, 2, 0, 0, 2, 3)), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 138,
        "code": "f <- function(text, chars) {    listchars <- strsplit(chars, '')[[1]]\n    first <- tail(listchars, 1)\n    for (i in head(listchars, -1)) {\n        text <- paste0(substr(text, 1, gregexpr(i, text)[[1]]), i, substr(text, gregexpr(i, text)[[1]] + 1, nchar(text)))\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('tflb omn rtt', 'm'), 'tflb omn rtt')))\n}\ntest_humaneval()"
    },
    {
        "id": 139,
        "code": "f <- function(first, second) {    if(length(first) < 10 || length(second) < 10) {\n        return('no')\n    }\n    for(i in 1:5) {\n        if(first[i] != second[i]) {\n            return('no')\n        }\n    }\n    c(first, second)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 1), c(1, 1, 2)), 'no')))\n}\ntest_humaneval()"
    },
    {
        "id": 140,
        "code": "\nf <- function(st) {\n    lower_st <- tolower(st)\n    last_h <- tail(max(which(lower_st == 'h')), 1)\n    last_i <- max(which(lower_st == 'i'))\n    if(last_h >= last_i) {\n        return('Hey')\n    } else {\n        return('Hi')\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Hi there'), 'Hey')))\n}\ntest_humaneval()"
    },
    {
        "id": 141,
        "code": "\nf <- function(li) {    output <- numeric(length(li))\n    for (i in 1:length(li)) {\n        output[i] <- sum(li == li[i])\n    }\n    output\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('k', 'x', 'c', 'x', 'x', 'b', 'l', 'f', 'r', 'n', 'g')), c(1, 3, 1, 3, 3, 1, 1, 1, 1, 1, 1))))\n}\ntest_humaneval()"
    },
    {
        "id": 142,
        "code": "f <- function(x) {    if (tolower(x) == x) {\n        return(x)\n    } else {\n        return(strrev(x))\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('ykdfhp'), 'ykdfhp')))\n}\ntest_humaneval()"
    },
    {
        "id": 143,
        "code": "f <- function(s, n) {    tolower(s) == tolower(n)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('daaX', 'daaX'), TRUE)))\n}\ntest_humaneval()"
    },
    {
        "id": 144,
        "code": "\nf <- function(vectors) {\n    if (is.null(vectors) || length(vectors) == 0) {\n        return(c())\n    }\n    sorted_vecs <- lapply(vectors, sort)\n    return(sorted_vecs)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c()), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 145,
        "code": "f <- function(price, product) {    inventory <- c('olives', 'key', 'orange')\n    if (!(product %in% inventory)) {\n        return(price)\n    } else {\n        price <- price * 0.85\n        inventory <- inventory[inventory != product]\n    }\n    return(price)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(8.5, 'grapes'), 8.5)))\n}\ntest_humaneval()"
    },
    {
        "id": 146,
        "code": "f <- function(single_digit) {    result <- numeric()\n    for (c in 1:10) {\n        if (c != single_digit) {\n            result <- c(result, c)\n        }\n    }\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(5), c(1, 2, 3, 4, 6, 7, 8, 9, 10))))\n}\ntest_humaneval()"
    },
    {
        "id": 147,
        "code": "f <- function(nums) {    middle <- length(nums) %/% 2\n    return(c(nums[(middle + 1):length(nums)], nums[1:middle]))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 1, 1)), c(1, 1, 1))))\n}\ntest_humaneval()"
    },
    {
        "id": 148,
        "code": "f <- function(forest, animal) {    index <- which(strsplit(forest, '')[[1]] == animal)\n    result <- strsplit(forest, '')[[1]]\n    while (index < nchar(forest)) {\n        result[index] <- substr(forest, index + 1, index + 1)\n        index <- index + 1\n    }\n    if (index == nchar(forest)) {\n        result[index] <- '-'\n    }\n    paste(result, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('2imo 12 tfiqr.', 'm'), '2io 12 tfiqr.-')))\n}\ntest_humaneval()"
    },
    {
        "id": 149
    },
    {
        "id": 150,
        "code": "f <- function(numbers, index) {    for (n in numbers[index:length(numbers)]) {\n        numbers <- append(numbers, n, after = index)\n        index <- index + 1\n    }\n    return(numbers[1:index])\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(-2, 4, -4), 0), c(-2, 4, -4))))\n}\ntest_humaneval()"
    },
    {
        "id": 151,
        "code": "f <- function(text) {    for (i in 1:nchar(text)) {\n        c <- substring(text, i, i)\n        if (grepl(\"[0-9]\", c)) {\n            if (c == '0') {\n                c <- '.'\n            } else {\n                c <- ifelse(c != '1', '0', '.')\n            }\n        }\n    }\n    return(gsub(\"\\\\.\", \"0\", text))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('697 this is the ultimate 7 address to attack'), '697 this is the ultimate 7 address to attack')))\n}\ntest_humaneval()"
    },
    {
        "id": 152,
        "code": "\nf <- function(text) {   \n    n <- 0\n    for (char in strsplit(text, \"\")[[1]]) {\n        if (grepl(\"[A-Z]\", char)) {\n            n <- n + 1\n        }\n    }\n    return(n)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('AAAAAAAAAAAAAAAAAAAA'), 20)))\n}\ntest_humaneval()"
    },
    {
        "id": 153,
        "code": "f <- function(text, suffix, num) {    str_num <- as.character(num)\n    return(tail(text, nchar(suffix) + nchar(str_num)) == paste0(suffix, str_num))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('friends and love', 'and', 3), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 154,
        "code": "f <- function(s, c) {    s <- strsplit(s, \" \")[[1]]\n    return(paste0(c, \"  \", paste0(rev(s), collapse = \"  \")))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Hello There', '*'), '*  There  Hello')))\n}\ntest_humaneval()"
    },
    {
        "id": 155,
        "code": "f <- function(ip, n) {    i <- 0\n    out <- ''\n    for (c in strsplit(ip, '')[[1]]) {\n        if (i == n) {\n            out <- paste(out, '\\n', sep='')\n            i <- 0\n        }\n        i <- i + 1\n        out <- paste(out, c, sep='')\n    }\n    return(out)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('dskjs hjcdjnxhjicnn', 4), 'dskj\\ns hj\\ncdjn\\nxhji\\ncnn')))\n}\ntest_humaneval()"
    },
    {
        "id": 156,
        "code": "f <- function(text, limit, char) {    if (nchar(text) < limit) {\n        text <- paste(text, strrep(char, limit - nchar(text)), sep = \"\")\n    }\n    substr(text, 1, limit)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('tqzym', 5, 'c'), 'tqzym')))\n}\ntest_humaneval()"
    },
    {
        "id": 157,
        "code": "f <- function(phrase) {    ans <- 0\n    words <- strsplit(phrase, \"\\\\s\")[[1]]\n    for (word in words) {\n        for (i in 1:nchar(word)) {\n            if (substr(word, i, i) == \"0\") {\n                ans <- ans + 1\n            }\n        }\n    }\n    return(ans)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('aboba 212 has 0 digits'), 1)))\n}\ntest_humaneval()"
    },
    {
        "id": 158,
        "code": "\nf <- function(arr) {    n <- arr[arr %% 2 == 0]\n    m <- c(n, arr)\n    for (i in m) {\n        if (match(i, m) > length(n)) {\n            m <- m[m != i]\n        }\n    }\n    return(m)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(3, 6, 4, -2, 5)), c(6, 4, -2, 6, 4, -2))))\n}\ntest_humaneval()"
    },
    {
        "id": 159,
        "code": "\nf <- function(st) {    swapped <- ''\n    for (ch in rev(strsplit(st, NULL)[[1]])) {\n        swapped <- paste0(swapped, ifelse(ch == tolower(ch), toupper(ch), tolower(ch)))\n    }\n    return(swapped)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('RTiGM'), 'mgItr')))\n}\ntest_humaneval()"
    },
    {
        "id": 160
    },
    {
        "id": 161,
        "code": "f <- function(text, value) {    parts <- unlist(strsplit(text, value, fixed=TRUE))\n    paste(parts[2], parts[1], sep=\"\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('difkj rinpx', 'k'), 'j rinpxdif')))\n}\ntest_humaneval()"
    },
    {
        "id": 162,
        "code": "f <- function(text) {    result <- ''\n    for (char in strsplit(text, '')[[1]]) {\n        if (grepl(\"[[:alnum:]]\", char)) {\n            result <- paste0(result, toupper(char))\n        }\n    }\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('с bishop.Swift'), 'СBISHOPSWIFT')))\n}\ntest_humaneval()"
    },
    {
        "id": 163,
        "code": "f <- function(text, space_symbol, size) {    spaces <- paste(rep(space_symbol, size - nchar(text)), collapse = \"\")\n    return(paste0(text, spaces))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('w', '))', 7), 'w))))))))))))')))\n}\ntest_humaneval()"
    },
    {
        "id": 164,
        "code": "f <- function(lst) {    sorted_lst <- sort(lst)\n    sorted_lst[1:3]\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(5, 8, 1, 3, 0)), c(0, 1, 3))))\n}\ntest_humaneval()"
    },
    {
        "id": 165,
        "code": "f <- function(text, lower, upper) {    substring(text, lower, upper) %in% iconv(substring(text, lower, upper), to = \"ASCII\", sub = \"\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('=xtanp|sugv?z', 3, 6), TRUE)))\n}\ntest_humaneval()"
    },
    {
        "id": 166,
        "code": "f <- function(graph) {    new_graph <- list()\n    for (key in names(graph)) {\n        new_graph[[key]] <- list()\n        for (subkey in names(graph[[key]])) {\n            new_graph[[key]][[subkey]] <- ''\n        }\n    }\n    return(new_graph)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list()), list())))\n}\ntest_humaneval()"
    },
    {
        "id": 167,
        "code": "\nf <- function(XAAXX, s) {\n    count <- gregexpr('XXXX', XAAXX, fixed = TRUE)\n    count <- length(unlist(count))\n    compound <- paste(toupper(substring(s, 1, 1)), tolower(substring(s, 2)), sep = '')\n    compound <- paste(rep(compound, count), collapse = '')\n    gsub('XXXX', compound, XAAXX, fixed = TRUE)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('aaXXXXbbXXXXccXXXXde', 'QW'), 'aaQwQwQwbbQwQwQwccQwQwQwde')))\n}\ntest_humaneval()"
    },
    {
        "id": 168,
        "code": "\nf <- function(text, new_value, index) {\n    old_char <- substr(text, start = index + 1, stop = index + 1)\n    return (gsub(old_char, new_value, text, fixed = TRUE))\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('spain', 'b', 4), 'spaib')))\n}\ntest_humaneval()"
    },
    {
        "id": 169,
        "code": "f <- function(text) {    ls <- strsplit(text, split = '')[[1]]\n    total <- (nchar(text) - 1) * 2\n    for (i in 1:total) {\n        if (i %% 2 == 1) {\n            ls <- c(ls, '+')\n        } else {\n            ls <- c('+', ls)\n        }\n    }\n    paste(ls, collapse = '') \n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('taole'), '++++taole++++')))\n}\ntest_humaneval()"
    },
    {
        "id": 170,
        "code": "f <- function(nums, number) {    sum(nums == number)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(12, 0, 13, 4, 12), 12), 2)))\n}\ntest_humaneval()"
    },
    {
        "id": 171,
        "code": "f <- function(nums) {    count <- length(nums) %/% 2\n    for (i in 1:count) {\n        nums <- nums[-1]\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(3, 4, 1, 2, 3)), c(1, 2, 3))))\n}\ntest_humaneval()"
    },
    {
        "id": 172,
        "code": "f <- function(array) {    for (i in seq_along(array)) {\n        if (array[i] < 0) {\n            array <- array[-i]\n        }\n    }\n    array\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c()), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 173,
        "code": "f <- function(list_x) {    item_count <- length(list_x)\n    new_list <- numeric(0)\n    for (i in 1:item_count) {\n        new_list <- c(new_list, tail(list_x, 1))\n        list_x <- head(list_x, -1)\n    }\n    new_list\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(5, 8, 6, 8, 4)), c(4, 8, 6, 8, 5))))\n}\ntest_humaneval()"
    },
    {
        "id": 174,
        "code": "\nf <- function(lst) {\n    lst[2:3] <- rev(lst[2:3])\n    return(lst)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3)), c(1, 3, 2))))\n}\ntest_humaneval()"
    },
    {
        "id": 175,
        "code": "\nf <- function(s, amount) {\n    lines <- strsplit(s, '\\n')[[1]]\n    w <- max(sapply(lines, function(l) unlist(gregexpr('\\\\s', l))[length(unlist(gregexpr('\\\\s', l)))]))\n    ls <- lapply(lines, function(l) {\n        list(l, (w + 1) * amount - unlist(gregexpr('\\\\s', l))[length(unlist(gregexpr('\\\\s', l)))])\n    })\n    ls <- lapply(1:length(ls), function(i) {\n        l <- ls[[i]]\n        l[[1]] <- paste0(l[[1]], strrep(' ', l[[2]]))\n        l\n    })\n    return(paste0(sapply(ls, `[[`, 1), collapse = '\\n'))\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('\\n', 2), ' ')))\n}\ntest_humaneval()"
    },
    {
        "id": 176,
        "code": "f <- function(text, to_place) {    after_place <- substr(text, 1, regexpr(to_place, text)[1])\n    before_place <- substr(text, regexpr(to_place, text)[1] + 1, nchar(text))\n    paste0(after_place, before_place)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('some text', 'some'), 'some text')))\n}\ntest_humaneval()"
    },
    {
        "id": 177
    },
    {
        "id": 178,
        "code": "f <- function(array, n) {    array[(n+1):length(array)]\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(0, 0, 1, 2, 2, 2, 2), 4), c(2, 2, 2))))\n}\ntest_humaneval()"
    },
    {
        "id": 179
    },
    {
        "id": 180,
        "code": "f <- function(nums) {    a <- -1\n    b <- nums[-1]\n    while (a <= b[1]){\n        nums <- nums[-match(b[1], nums)]\n        a <- 0\n        b <- b[-1]\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(-1, 5, 3, -2, -6, 8, 8)), c(-1, -2, -6, 8, 8))))\n}\ntest_humaneval()"
    },
    {
        "id": 181,
        "code": "f <- function(s) {    count <- 0\n    digits <- \"\"\n    for (c in strsplit(s, '')[[1]]) {\n        if (grepl(\"\\\\d\", c)) {\n            count <- count + 1\n            digits <- paste0(digits, c)\n        }\n    }\n    list(digits, count)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('qwfasgahh329kn12a23'), list('3291223', 7))))\n}\ntest_humaneval()"
    },
    {
        "id": 182
    },
    {
        "id": 183,
        "code": "f <- function(text) {    ls <- strsplit(text, \" \")[[1]]\n    lines <- strsplit(paste(ls[seq(1, length(ls), by=3)], collapse=\" \"), \"\\n\")[[1]]\n    res <- c()\n    for (i in 0:1) {\n        ln <- ls[seq(2, length(ls), by=3)]\n        if (3 * i + 1 < length(ln)) {\n            res <- c(res, paste(ln[3 * i + 1:(3 * (i + 1))], collapse=\" \"))\n        }\n    }\n    c(lines, res)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('echo hello!!! nice!'), c('echo'))))\n}\ntest_humaneval()"
    },
    {
        "id": 184,
        "code": "f <- function(digits) {    digits <- rev(digits)\n    if (length(digits) < 2) {\n        return(digits)\n    }\n    for (i in seq(1, length(digits), by = 2)) {\n        temp <- digits[i]\n        digits[i] <- digits[i+1]\n        digits[i+1] <- temp\n    }\n    return(digits)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2)), c(1, 2))))\n}\ntest_humaneval()"
    },
    {
        "id": 185,
        "code": "f <- function(L) {    N <- length(L)\n    for (k in 1:(N %/% 2)) {\n        i <- k\n        j <- N - k + 1\n        while (i < j) {\n            temp <- L[i]\n            L[i] <- L[j]\n            L[j] <- temp\n            i <- i + 1\n            j <- j - 1\n        }\n    }\n    return(L)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(16, 14, 12, 7, 9, 11)), c(11, 14, 7, 12, 9, 16))))\n}\ntest_humaneval()"
    },
    {
        "id": 186,
        "code": "f <- function(text) {    result <- paste0(trimws(unlist(strsplit(text, \"\\\\s+\"))), collapse = \" \")\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('pvtso'), 'pvtso')))\n}\ntest_humaneval()"
    },
    {
        "id": 187,
        "code": "f <- function(d, index) {    length <- length(d)\n    idx <- index %% length\n    v <- tail(d, 1)[[1]]\n    for (i in seq_len(idx)) {\n        d <- d[-length(d)]\n    }\n    return(v)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(\"27\" = 39), 1), 39)))\n}\ntest_humaneval()"
    },
    {
        "id": 188,
        "code": "f <- function(strings) {    new_strings <- c()\n    for (string in strings) {\n        first_two <- substr(string, 1, 2)\n        if (startsWith(first_two, \"a\") || startsWith(first_two, \"p\")) {\n            new_strings <- c(new_strings, first_two)\n        }\n    }\n    return(new_strings)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('a', 'b', 'car', 'd')), c('a'))))\n}\ntest_humaneval()"
    },
    {
        "id": 189,
        "code": "f <- function(out, mapping) {  for (key in names(mapping)) {\n    out <- do.call(\"sprintf\", c(out, as.list(mapping)))\n    if (length(gregexpr(\"\\\\{\\\\w\\\\}\", out)[[1]]) == 0) {\n      break\n    }\n    mapping[[key]][2] <- rev(mapping[[key]][2])\n  }\n  return(out)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('{{{{}}}}', list()), '{{{{}}}}')))\n}\ntest_humaneval()"
    },
    {
        "id": 190,
        "code": "f <- function(text) {    short <- ''\n    for (c in strsplit(text, '')[[1]]) {\n        if (grepl('[a-z]', c)) {\n            short <- paste0(short, c)\n        }\n    }\n    return(short)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('980jio80jic kld094398IIl '), 'jiojickldl')))\n}\ntest_humaneval()"
    },
    {
        "id": 191,
        "code": "f <- function(string) {    if (toupper(string) == string) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Ohno'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 192,
        "code": "f <- function(text, suffix) {    output <- text\n    while (substring(output, nchar(output) - nchar(suffix) + 1, nchar(output)) == suffix) {\n        output <- substr(output, 1, nchar(output) - nchar(suffix))\n    }\n    return(output)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('!klcd!ma:ri', '!'), '!klcd!ma:ri')))\n}\ntest_humaneval()"
    },
    {
        "id": 193,
        "code": "f <- function(string) {    count <- gregexpr(':', string)[[1]]\n    if (length(count) > 1) {\n        for (i in 1:(length(count) - 1)) {\n            string <- sub(':', '', string)\n        }\n    }\n    return(string)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('1::1'), '1:1')))\n}\ntest_humaneval()"
    },
    {
        "id": 194,
        "code": "\nf <- function(matr, insert_loc) {\n    matr <- append(matr, list(NULL), after = insert_loc)\n    return(matr)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(c(5, 6, 2, 3), c(1, 9, 5, 6)), 0), list(c(), c(5, 6, 2, 3), c(1, 9, 5, 6)))))\n}\ntest_humaneval()"
    },
    {
        "id": 195,
        "code": "f <- function(text) {    for (p in c('acs', 'asp', 'scn')) {\n        if (startsWith(text, p)) {\n            text <- substr(text, nchar(p) + 1, nchar(text))\n        }\n        text <- paste0(text, ' ')\n    }\n    if (startsWith(text, ' ')) {\n        text <- substr(text, 2, nchar(text))\n    }\n    return(substr(text, 1, nchar(text) - 1))\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('ilfdoirwirmtoibsac'), 'ilfdoirwirmtoibsac  ')))\n}\ntest_humaneval()"
    },
    {
        "id": 196,
        "code": "\nf <- function(text) {    text <- gsub(' x', ' x.', text)\n    if (all(substring(text, 1, 1) <= toupper(substring(text, 1, 1)))) {\n        return('correct')\n    }\n    text <- gsub(' x.', ' x', text)\n    return('mixed')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('398 Is A Poor Year To Sow'), 'correct')))\n}\ntest_humaneval()"
    },
    {
        "id": 197,
        "code": "f <- function(temp, timeLimit) {    s <- timeLimit %/% temp\n    e <- timeLimit %% temp\n    if (s > 1) {\n        return(paste(s, e))\n    } else {\n        return(paste(e, \"oC\"))\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(1, 1234567890), '1234567890 0')))\n}\ntest_humaneval()"
    },
    {
        "id": 198,
        "code": "\nf <- function(text, strip_chars) {\n    rev_text <- paste(rev(strsplit(text, split = \"\")[[1]]), collapse = \"\")\n    strip_left <- sub(paste0(\"^[\", strip_chars, \"]*\"), \"\", rev_text)\n    final_text <- paste(rev(strsplit(strip_left, split = \"\")[[1]]), collapse = \"\")\n    final_text\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('tcmfsmj', 'cfj'), 'tcmfsm')))\n}\ntest_humaneval()"
    },
    {
        "id": 199,
        "code": "f <- function(s, char) {    base <- strrep(char, times = (lengths(gregexpr(char, s))[[1]]) + 1)\n    return(sub(paste0(base, \"$\"), \"\", s))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('mnmnj krupa...##!@#!@#$$@##', '@'), 'mnmnj krupa...##!@#!@#$$@##')))\n}\ntest_humaneval()"
    },
    {
        "id": 200,
        "code": "f <- function(text, value) {    length <- nchar(text)\n    index <- 1\n    while (length > 0) {\n        value <- paste0(substr(text, index, index), value)\n        length <- length - 1\n        index <- index + 1\n    }\n    return(value)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('jao mt', 'house'), 'tm oajhouse')))\n}\ntest_humaneval()"
    },
    {
        "id": 201,
        "code": "f <- function(text) {    chars <- strsplit(text, '')[[1]]\n    nums <- chars[grepl('[0-9]', chars)]\n    paste0(rev(nums), collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('--4yrw 251-//4 6p'), '641524')))\n}\ntest_humaneval()"
    },
    {
        "id": 202,
        "code": "\nf <- function(array, lst) {    array <- c(array, lst)\n    array[array %% 2 == 0]\n    array[array >= 10]\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(2, 15), c(15, 1)), c(15, 15))))\n}\ntest_humaneval()"
    },
    {
        "id": 203,
        "code": "f <- function(d) {    d <- list()\n    return(d)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(\"'a'\" = '3', \"'b'\" = '-1', \"'c'\" = 'Dum')), list())))\n}\ntest_humaneval()"
    },
    {
        "id": 204,
        "code": "f <- function(name) {    result <- c(substr(name, 1, 1), substr(substring(name, 2), 1, 1))\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('master. '), c('m', 'a'))))\n}\ntest_humaneval()"
    },
    {
        "id": 205,
        "code": "f <- function(a) {    for (i in 1:10) {\n        for (j in 1:nchar(a)) {\n            if (substring(a, j, j) != '#') {\n                a = substr(a, j, nchar(a))\n                break\n            } else if (j == nchar(a)) {\n                a = \"\"\n                break\n            }\n        }\n    }\n    while (substr(a, nchar(a), nchar(a)) == '#') {\n        a = substr(a, 1, nchar(a)-1)\n    }\n    return(a)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('##fiu##nk#he###wumun##'), 'fiu##nk#he###wumun')))\n}\ntest_humaneval()"
    },
    {
        "id": 206,
        "code": "\nf <- function(a) {    a <- gsub('\\\\s+', ' ', a)\n    a <- gsub('^\\\\s|\\\\s$', '', a)\n    return(a)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(' h e l l o   w o r l d! '), 'h e l l o w o r l d!')))\n}\ntest_humaneval()"
    },
    {
        "id": 207,
        "code": "f <- function(commands) {    d <- list()\n    for (c in commands) {\n        d <- c(d, c)\n    }\n    return(d)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(list(\"'brown'\" = 2), list(\"'blue'\" = 5), list(\"'bright'\" = 4))), list(\"'brown'\" = 2, \"'blue'\" = 5, \"'bright'\" = 4))))\n}\ntest_humaneval()"
    },
    {
        "id": 208,
        "code": "f <- function(items) {    result <- c()\n    for (item in items) {\n        for (d in unlist(strsplit(item, \"\"))) {\n            if (!grepl(\"[0-9]\", d)) {\n                result <- c(result, d)\n            }\n        }\n    }\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('123', 'cat', 'd dee')), c('c', 'a', 't', 'd', ' ', 'd', 'e', 'e'))))\n}\ntest_humaneval()"
    },
    {
        "id": 209
    },
    {
        "id": 210,
        "code": "f <- function(n, m, num) {    x_list <- seq(n, m)\n    j <- 1\n    while(TRUE) {\n        j <- (j + num) %% length(x_list)\n        if (x_list[j] %% 2 == 0) {\n            return(x_list[j])\n        }\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(46, 48, 21), 46)))\n}\ntest_humaneval()"
    },
    {
        "id": 211,
        "code": "f <- function(s) {    count <- 0\n    for (c in strsplit(s, '')[[1]]) {\n        if (max(which(strsplit(s, '')[[1]] == c)) != min(which(strsplit(s, '')[[1]] == c))) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('abca dea ead'), 10)))\n}\ntest_humaneval()"
    },
    {
        "id": 212,
        "code": "f <- function(nums) {    for (i in 1:(length(nums) - 1)) {\n        nums <- rev(nums)\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, -9, 7, 2, 6, -3, 3)), c(1, -9, 7, 2, 6, -3, 3))))\n}\ntest_humaneval()"
    },
    {
        "id": 213,
        "code": "f <- function(s) {    gsub(\"\\\\(\", \"[\", gsub(\"\\\\)\", \"]\", s))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('(ac)'), '[ac]')))\n}\ntest_humaneval()"
    },
    {
        "id": 214
    },
    {
        "id": 215,
        "code": "f <- function(text) {    new_text <- text\n    while (nchar(text) > 1 && substr(text, 1, 1) == substr(text, nchar(text), nchar(text))) {\n        new_text <- text <- substr(text, 2, nchar(text) - 1)\n    }\n    return(new_text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(')'), ')')))\n}\ntest_humaneval()"
    },
    {
        "id": 216,
        "code": "f <- function(letters) {    count <- 0\n    for (l in strsplit(letters, '')[[1]]) {\n        if (grepl('\\\\d', l)) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('dp ef1 gh2'), 2)))\n}\ntest_humaneval()"
    },
    {
        "id": 217,
        "code": "f <- function(string) {    if (grepl(\"^[A-Za-z0-9]+$\", string)) {\n        return(\"ascii encoded is allowed for this language\")\n    } else {\n        return(\"more than ASCII\")\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Str zahrnuje anglo-ameriæske vasi piscina and kuca!'), 'more than ASCII')))\n}\ntest_humaneval()"
    },
    {
        "id": 218
    },
    {
        "id": 219,
        "code": "f <- function(s1, s2) {    for (k in 1:(nchar(s2) + nchar(s1))) {\n        s1 <- paste0(s1, substr(s1, 1, 1))\n        if (grepl(s2, s1)) {\n            return(TRUE)\n        }\n    }\n    return(FALSE)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Hello', ')'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 220,
        "code": "f <- function(text, m, n) {\n    text <- paste0(text, substr(text, 1, m), substr(text, n + 1, nchar(text)))\n    result <- \"\"\n    for (i in n:(nchar(text) - m - 1)) {\n        result <- paste0(substr(text, i + 1, i + 1), result)\n    }\n    return(result)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('abcdefgabc', 1, 2), 'bagfedcacbagfedc')))\n}\ntest_humaneval()"
    },
    {
        "id": 221
    },
    {
        "id": 222,
        "code": "\nf <- function(mess, char) {\n    while(gregexpr(char, substr(mess, 1, nchar(char) - 1)) != -1) {\n        mess <- substr(mess, 1, nchar(mess) - nchar(char) - 1)\n    }\n    return(mess)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('0aabbaa0b', 'a'), '0aabbaa0b')))\n}\ntest_humaneval()"
    },
    {
        "id": 223,
        "code": "f <- function(array, target) {    count <- 0\n    i <- 1\n    for (j in 2:length(array)) {\n        if (array[j] > array[j-1] & array[j] <= target) {\n            count <- count + i\n        } else if (array[j] <= array[j-1]) {\n            i <- 1\n        } else {\n            i <- i + 1\n        }\n    }\n    return(count)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, -1, 4), 2), 1)))\n}\ntest_humaneval()"
    },
    {
        "id": 224,
        "code": "\nf <- function(array, value) {\n    array <- rev(array)\n    array <- array[-length(array)]\n    odd <- list()\n    while (length(array) > 0) {\n      tmp <- list()\n      tmp[[array[length(array)]]] <- value\n      odd <- c(odd, list(tmp))\n      array <- array[-length(array)]\n    }\n    result <- list()\n    while (length(odd) > 0) {\n      result <- c(result, odd[[length(odd)]])\n      odd <- odd[-length(odd)]\n    }\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('23'), 123), list())))\n}\ntest_humaneval()"
    },
    {
        "id": 225,
        "code": "f <- function(text) {    if (grepl(\"^[a-z]+$\", text)) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('54882'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 226,
        "code": "f <- function(nums) {    for (i in 1:length(nums)) {\n        if (nums[i] %% 3 == 0) {\n            nums <- c(nums, nums[i])\n        }\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 3)), c(1, 3, 3))))\n}\ntest_humaneval()"
    },
    {
        "id": 227,
        "code": "f <- function(text) {    text <- tolower(text)\n    head <- substr(text, 1, 1)\n    tail <- substr(text, 2, nchar(text))\n    paste(toupper(head), tail, sep = \"\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Manolo'), 'Manolo')))\n}\ntest_humaneval()"
    },
    {
        "id": 228,
        "code": "f <- function(text, splitter) {    return(paste(tolower(strsplit(text, \" \")[[1]]), collapse = splitter))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('LlTHH sAfLAPkPhtsWP', '#'), 'llthh#saflapkphtswp')))\n}\ntest_humaneval()"
    },
    {
        "id": 229
    },
    {
        "id": 230,
        "code": "f <- function(text) {    result <- ''\n    i <- nchar(text)\n    while (i >= 1) {\n        c <- substr(text, i, i)\n        if (grepl(\"[A-Za-z]\", c)) {\n            result <- paste0(result, c)\n        }\n        i <- i - 1\n    }\n    result\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('102x0zoq'), 'qozx')))\n}\ntest_humaneval()"
    },
    {
        "id": 231,
        "code": "f <- function(years) {    a10 <- sum(years <= 1900)\n    a90 <- sum(years > 1910)\n    \n    if (a10 > 3) {\n        return(3)\n    } else if (a90 > 3) {\n        return(1)\n    } else {\n        return(2)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1872, 1995, 1945)), 2)))\n}\ntest_humaneval()"
    },
    {
        "id": 232,
        "code": "f <- function(text, changes) {    result <- ''\n    count <- 0\n    changes <- strsplit(changes, '')[[1]]\n    text_chars <- strsplit(text, '')[[1]]\n    for (char in text_chars) {\n        if (char %in% 'e') {\n            result <- paste0(result, char)\n        } else {\n            result <- paste0(result, changes[(count %% length(changes)) + 1])\n        }\n        count <- count + ifelse(char %in% 'e', 0, 1)\n    }\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('fssnvd', 'yes'), 'yesyes')))\n}\ntest_humaneval()"
    },
    {
        "id": 233,
        "code": "f <- function(xs) {    for (idx in seq_along(xs)) {\n        insert_pos <- length(xs) - idx + 1\n        xs <- c(xs[1:insert_pos], xs[-c(1:insert_pos)])\n    }\n    xs\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3)), c(1, 2, 3))))\n}\ntest_humaneval()"
    },
    {
        "id": 234,
        "code": "\nf <- function(text, char) {    position <- nchar(text)\n    if (grepl(char, text)) {\n        position <- regexpr(char, text)[1] - 1\n        if (position > 0) {\n            position <- (position + 1) %% nchar(text)\n        }\n    }\n    return(position)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('wduhzxlfk', 'w'), 0)))\n}\ntest_humaneval()"
    },
    {
        "id": 235,
        "code": "f <- function(array, arr) {    result <- c()\n    for (s in arr) {\n        result <- c(result, unlist(strsplit(s, arr[which(arr == s)])))\n    }\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(), c()), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 236,
        "code": "\nf <- function(array) {\n    if (length(array) == 1) {\n        return(paste(array, collapse = ''))\n    }\n    result <- array\n    i <- 1\n    while (i < length(array)) {\n        for (j in 1:2) {\n            result[2*(i-1)+1] <- array[i]\n            i <- i + 1\n        }\n    }\n    return(paste(result, collapse = ''))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('ac8', 'qk6', '9wg')), 'ac8qk6qk6')))\n}\ntest_humaneval()"
    },
    {
        "id": 237,
        "code": "f <- function(text, char) {    if (char %in% strsplit(text, '')[[1]]) {\n        parts <- unlist(strsplit(text, char, fixed = TRUE))\n        pref <- paste0(substring(parts[1], 1, nchar(parts[1]) - nchar(char)),\n                       substring(parts[1], nchar(char) + 1),\n                       char,\n                       parts[2])\n        return(paste0(parts[1], char, pref))\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('uzlwaqiaj', 'u'), 'uuzlwaqiaj')))\n}\ntest_humaneval()"
    },
    {
        "id": 238,
        "code": "f <- function(ls, n) {    answer <- 0\n    for (i in ls) {\n        if (i[1] == n) {\n            answer <- i\n        }\n    }\n    return(answer)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(c(1, 9, 4), c(83, 0, 5), c(9, 6, 100)), 1), c(1, 9, 4))))\n}\ntest_humaneval()"
    },
    {
        "id": 239,
        "code": "\nf <- function(text, froms) {    \n    text <- gsub(paste0('^[', froms, ']+'), '', text)\n    text <- gsub(paste0('[', froms, ']+$'), '', text)\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('0 t 1cos ', 'st 0\\t\\n  '), '1co')))\n}\ntest_humaneval()"
    },
    {
        "id": 240,
        "code": "f <- function(float_number) {    number <- as.character(float_number)\n    dot <- regexpr(\"\\\\.\", number)[[1]]\n    if (dot != -1) {\n        paste0(substr(number, 1, dot - 1), \".\", substr(number, dot + 1, nchar(number)), collapse = \"\")\n    } else {\n        paste0(number, \".00\")\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(3.121), '3.121')))\n}\ntest_humaneval()"
    },
    {
        "id": 241,
        "code": "f <- function(postcode) {    substring(postcode, first = regexpr('C', postcode))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('ED20 CW'), 'CW')))\n}\ntest_humaneval()"
    },
    {
        "id": 242,
        "code": "f <- function(book) {    a <- strsplit(book, \":\")[[1]]\n    if (tail(strsplit(a[1], \" \")[[1]], 1) == head(strsplit(a[2], \" \")[[1]], 1)) {\n        f(paste(paste(head(strsplit(a[1], \" \")[[1]], -1), collapse = \" \"), a[2]))\n    } else {\n        return(book)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('udhv zcvi nhtnfyd :erwuyawa pun'), 'udhv zcvi nhtnfyd :erwuyawa pun')))\n}\ntest_humaneval()"
    },
    {
        "id": 243,
        "code": "f <- function(text, char) {    return (char %in% letters) && all(char %in% letters) && all(char == tolower(char)) && all(text == tolower(text))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('abc', 'e'), TRUE)))\n}\ntest_humaneval()"
    },
    {
        "id": 244,
        "code": "f <- function(text, symbols) {  count <- 0\n  if (nchar(symbols) > 0) {\n    for (i in strsplit(symbols, '')[[1]]) {\n      count <- count + 1\n    }\n    text <- paste(replicate(count, text), collapse = '')\n  }\n  return(substr(paste(replicate(nchar(text) + count*2, ' '), collapse = ''), 1, nchar(text) + count*2 - 2))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('', 'BC1ty'), '        ')))\n}\ntest_humaneval()"
    },
    {
        "id": 245,
        "code": "\nf <- function(alphabet, s) {\n    a <- c()\n    for (x in strsplit(alphabet, '')[[1]]) {\n        if (toupper(x) %in% toupper(s)) {\n            a <- c(a, x)\n        }\n    }\n    if (s == toupper(s)) {\n        a <- c(a, 'all_uppercased')\n    }\n    return(a)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('abcdefghijklmnopqrstuvwxyz', 'uppercased # % ^ @ ! vz.'), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 246,
        "code": "f <- function(haystack, needle) {    index <- max(regexpr(needle, haystack), 0)\n    if (index > 0 && substr(haystack, index, nchar(haystack)) == needle) {\n        return(index)\n    } else {\n        return(-1)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('345gerghjehg', '345'), -1)))\n}\ntest_humaneval()"
    },
    {
        "id": 247,
        "code": "f <- function(s) {    if (nzchar(gsub(\"[^[:alpha:]]\", \"\", s))) {\n        return(\"yes\")\n    }\n    if (s == \"\") {\n        return(\"str is empty\")\n    }\n    return(\"no\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Boolean'), 'yes')))\n}\ntest_humaneval()"
    },
    {
        "id": 248,
        "code": "f <- function(a, b) {    a <- sort(a)\n    b <- sort(b, decreasing = TRUE)\n    return(c(a, b))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(666), c()), c(666))))\n}\ntest_humaneval()"
    },
    {
        "id": 249
    },
    {
        "id": 250
    },
    {
        "id": 251,
        "code": "\nf <- function(messages) {\n    phone_code <- c(\"+\", \"3\", \"5\", \"3\")\n    result <- c()\n    for (message in messages) {\n        message <- c(message, phone_code)\n        result <- c(result, paste(message, collapse=\";\"))\n    }\n    paste(result, collapse=\". \")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(c('Marie', 'Nelson', 'Oscar'))), 'Marie;Nelson;Oscar;+;3;5;3')))\n}\ntest_humaneval()"
    },
    {
        "id": 252,
        "code": "f <- function(text, char) {    if (char %in% text) {\n        if (!(startsWith(text, char))) {\n            text <- gsub(char, '', text)\n        }\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('\\\\foo', '\\\\'), '\\\\foo')))\n}\ntest_humaneval()"
    },
    {
        "id": 253,
        "code": "f <- function(text, pref) {    length <- nchar(pref)\n    if (pref == substr(text, 1, length)) {\n        return(substr(text, length+1, nchar(text)))\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('kumwwfv', 'k'), 'umwwfv')))\n}\ntest_humaneval()"
    },
    {
        "id": 254,
        "code": "f <- function(text, repl) {    trans <- chartr(tolower(text), tolower(repl), tolower(text))\n    return(trans)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('upper case', 'lower case'), 'lwwer case')))\n}\ntest_humaneval()"
    },
    {
        "id": 255,
        "code": "f <- function(text, fill, size) {    if (size < 0) {\n        size <- abs(size)\n    }\n    if (nchar(text) > size) {\n        return(substr(text, nchar(text) - size + 1, nchar(text)))\n    } else {\n        return(paste(rep(fill, size - nchar(text)), collapse = \"\") %&gt;% paste0(text))\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('no asw', 'j', 1), 'w')))\n}\ntest_humaneval()"
    },
    {
        "id": 256,
        "code": "f <- function(text, sub) {    a <- 0\n    b <- nchar(text) - 1\n\n    while (a <= b) {\n        c <- (a + b) %/% 2\n        if (regexpr(sub, text, fixed = TRUE) > c) {\n            a <- c + 1\n        } else {\n            b <- c - 1\n        }\n    }\n\n    return(a)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('dorfunctions', '2'), 0)))\n}\ntest_humaneval()"
    },
    {
        "id": 257,
        "code": "f <- function(text) {    ls <- lapply(text, function(x) strsplit(x, \"\\n\", fixed = TRUE)[[1]])\n    return(ls)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('Hello World\\n\"I am String\"')), list(c('Hello World', '\"I am String\"')))))\n}\ntest_humaneval()"
    },
    {
        "id": 258,
        "code": "\nf <- function(L, m, start, step) {\n    L <- append(L, m, after = start)\n    index <- which(L == m)\n    for (i in seq(start-1, 1, -step)) {\n        L <- append(L, L[index-1], after = i)\n        L <- L[-index]\n        index <- which(L == m)\n    }\n    return(L)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 7, 9), 3, 3, 2), c(1, 2, 7, 3, 9))))\n}\ntest_humaneval()"
    },
    {
        "id": 259,
        "code": "f <- function(text) {    new_text <- c()\n    for (character in strsplit(text, '')[[1]]) {\n        if (charToRaw(character) >= as.raw(65) & charToRaw(character) <= as.raw(90)) {\n            new_text <- append(new_text, character, after = length(new_text) %/% 2)\n        }\n    }\n    if (length(new_text) == 0) {\n        new_text <- c('-')\n    }\n    paste(new_text, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('String matching is a big part of RexEx library.'), 'RES')))\n}\ntest_humaneval()"
    },
    {
        "id": 260,
        "code": "f <- function(nums, start, k) {\n    # Adjust for 1-based indexing in R\n    start <- start + 1\n    nums[start:(start + k - 1)] <- rev(nums[start:(start + k - 1)])\n    return(nums)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3, 4, 5, 6), 4, 2), c(1, 2, 3, 4, 6, 5))))\n}\ntest_humaneval()"
    },
    {
        "id": 261,
        "code": "f <- function(nums, target) {    lows <- c()\n    higgs <- c()\n    for (i in nums) {\n        if (i < target) {\n            lows <- c(lows, i)\n        } else {\n            higgs <- c(higgs, i)\n        }\n    }\n    lows <- c()\n    return(list(lows, higgs))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(12, 516, 5, 2, 3, 214, 51), 5), list(c(), c(12, 516, 5, 214, 51)))))\n}\ntest_humaneval()"
    },
    {
        "id": 262,
        "code": "f <- function(nums) {    count <- length(nums)\n    score <- list(`0` = \"F\", `1` = \"E\", `2` = \"D\", `3` = \"C\", `4` = \"B\", `5` = \"A\", `6` = \"\")\n    result <- character(count)\n    \n    for (i in 1:count) {\n        result[i] <- score[[as.character(nums[i])]]\n    }\n    \n    paste(result, collapse = \"\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(4, 5)), 'BA')))\n}\ntest_humaneval()"
    },
    {
        "id": 263,
        "code": "f <- function(base, delta) {    for (j in seq_along(delta)) {\n        for (i in seq_along(base)) {\n            if (base[i] == delta[j][1]) {\n                stopifnot(delta[j][2] != base[i])\n                base[i] <- delta[j][2]\n            }\n        }\n    }\n    base\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('gloss', 'banana', 'barn', 'lawn'), c()), c('gloss', 'banana', 'barn', 'lawn'))))\n}\ntest_humaneval()"
    },
    {
        "id": 264,
        "code": "f <- function(test_str) {    s <- gsub('a', 'A', test_str)\n    gsub('e', 'A', s)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('papera'), 'pApArA')))\n}\ntest_humaneval()"
    },
    {
        "id": 265
    },
    {
        "id": 266,
        "code": "f <- function(nums) {    for (i in (length(nums):1)) {\n        if (nums[i] %% 2 == 1) {\n            nums <- c(nums[1:i], nums[i], nums[(i+1):length(nums)])\n        }\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(2, 3, 4, 6, -2)), c(2, 3, 3, 4, 6, -2))))\n}\ntest_humaneval()"
    },
    {
        "id": 267,
        "code": "f <- function(text, space) {    if(space < 0) {\n        return(text)\n    }\n    return(paste(text, strrep(\" \", n = nchar(text) %/% 2 + space)))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('sowpf', -7), 'sowpf')))\n}\ntest_humaneval()"
    },
    {
        "id": 268,
        "code": "\nf <- function(s, separator) {\n    for (i in 1:nchar(s)) {\n        if (substr(s, i, i) == separator) {\n            new_s <- strsplit(s, \"\")[[1]]\n            new_s[i] <- '/'\n            return(paste(new_s, collapse = \" \"))\n        }\n    }\n    return(NULL)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('h grateful k', ' '), 'h / g r a t e f u l   k')))\n}\ntest_humaneval()"
    },
    {
        "id": 269
    },
    {
        "id": 270,
        "code": "f <- function(dic) {    d <- list()\n    while(length(dic) > 0){\n        key <- names(dic)[1]\n        d[[key]] <- dic[[key]]\n        dic <- dic[-1]\n    }\n    return(d)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list()), list())))\n}\ntest_humaneval()"
    },
    {
        "id": 271,
        "code": "f <- function(text, c) {    ls <- strsplit(text, '')[[1]]\n    if (!grepl(c, text)) {\n        stop(paste('Text has no', c))\n    }\n    ls <- ls[-tail(grep(c, ls), 1)]\n    paste(ls, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('uufhl', 'l'), 'uufh')))\n}\ntest_humaneval()"
    },
    {
        "id": 272,
        "code": "\nf <- function(base_list, nums) {\n    base_list <- append(base_list, nums)\n    res <- base_list\n    for (i in seq(from = length(nums), to = 1)) {\n        res <- append(res, res[length(res) - i + 1])\n    }\n    return(res)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(9, 7, 5, 3, 1), c(2, 4, 6, 8, 0)), c(9, 7, 5, 3, 1, 2, 4, 6, 8, 0, 2, 6, 0, 6, 6))))\n}\ntest_humaneval()"
    },
    {
        "id": 273,
        "code": "f <- function(name) {    new_name <- ''\n    name <- strsplit(name, '')[[1]][rev(seq_len(nchar(name)))]\n    for (i in seq_along(name)) {\n        n <- name[i]\n        if (n != '.' & sum(unlist(strsplit(new_name, '')) == '.') < 2) {\n            new_name <- paste(n, new_name, sep = '')\n        } else {\n            break\n        }\n    }\n    return(new_name)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('.NET'), 'NET')))\n}\ntest_humaneval()"
    },
    {
        "id": 274,
        "code": "f <- function(nums, target) {    count <- 0\n    for (n1 in nums) {\n        for (n2 in nums) {\n            count <- count + (n1 + n2 == target)\n        }\n    }\n    return(count)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3), 4), 3)))\n}\ntest_humaneval()"
    },
    {
        "id": 275
    },
    {
        "id": 276,
        "code": "f <- function(a) {    if (length(a) >= 2 && a[1] > 0 && a[2] > 0) {\n        a <- rev(a)\n        return(a)\n    } else {\n        a[length(a) + 1] <- 0\n        return(a)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c()), c(0))))\n}\ntest_humaneval()"
    },
    {
        "id": 277,
        "code": "f <- function(lst, mode) {    result <- lst\n    if (mode == 1) {\n        result <- rev(result)\n    }\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3, 4), 1), c(4, 3, 2, 1))))\n}\ntest_humaneval()"
    },
    {
        "id": 278
    },
    {
        "id": 279,
        "code": "f <- function(text) {    ans <- ''\n    while(nchar(text) > 0) {\n        split_text <- strsplit(text, '\\\\(', fixed=TRUE)[[1]]\n        x <- split_text[1]\n        sep <- '('\n        text <- paste(split_text[-1], collapse='(')\n        ans <- paste0(x, sep, ans)\n        ans <- paste0(ans, sep, text[1], ans)\n        text <- substr(text, 2, nchar(text))\n    }\n    return(ans)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(''), '')))\n}\ntest_humaneval()"
    },
    {
        "id": 280,
        "code": "f <- function(text) {    g <<- gsub('0', ' ', text)\n    field <<- gsub(' ', '', text)\n    text <- gsub('1', 'i', text)\n    \n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('00000000 00000000 01101100 01100101 01101110'), '00000000 00000000 0ii0ii00 0ii00i0i 0ii0iii0')))\n}\ntest_humaneval()"
    },
    {
        "id": 281
    },
    {
        "id": 282,
        "code": "\nf <- function(s1, s2) {    position <- 1\n    count <- 0\n    while (position > 0) {\n        position <- regexpr(s2, substr(s1, position, nchar(s1)))[[1]]\n        count <- count + 1\n        position <- position + 1\n    }\n    return(count)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('xinyyexyxx', 'xx'), 2)))\n}\ntest_humaneval()"
    },
    {
        "id": 283,
        "code": "f <- function(dictionary, key) {    dictionary[[key]] <- NULL\n    if (min(names(dictionary)) == key) {\n        key <- names(dictionary)[1]\n    }\n    return(key)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(\"'Iron Man'\" = 4, \"'Captain America'\" = 3, \"'Black Panther'\" = 0, \"'Thor'\" = 1, \"'Ant-Man'\" = 6), 'Iron Man'), 'Iron Man')))\n}\ntest_humaneval()"
    },
    {
        "id": 284,
        "code": "f <- function(text, prefix) {    idx <- 1\n    for (letter in strsplit(prefix, \"\")[[1]]) {\n        if (substr(text, idx, idx) != letter) {\n            return(NULL)\n        }\n        idx <- idx + 1\n    }\n    substr(text, idx, nchar(text))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('bestest', 'bestest'), '')))\n}\ntest_humaneval()"
    },
    {
        "id": 285,
        "code": "f <- function(text, ch) {    sum(unlist(strsplit(text, split = \"\")) == ch)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(\"This be Pirate's Speak for 'help'!\", ' '), 5)))\n}\ntest_humaneval()"
    },
    {
        "id": 286,
        "code": "\nf <- function(array, x, i) {    \n    if (i < -length(array) || i > length(array) - 1) {\n        return('no')\n    } else {\n        temp <- array[i+1]\n        array[i+1] <- x\n        return(array)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 11, 4), c(1, 2, 3, 4, 11, 6, 7, 8, 9, 10))))\n}\ntest_humaneval()"
    },
    {
        "id": 287,
        "code": "f <- function(name) {    if (tolower(name) == name) {\n        toupper(name)\n    } else {\n        tolower(name)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Pinneaple'), 'pinneaple')))\n}\ntest_humaneval()"
    },
    {
        "id": 288,
        "code": "f <- function(d) {    sorted_pairs <- d[order(sapply(names(d), function(k) nchar(paste0(k, d[[k]]))))]\n    ret <- lapply(names(sorted_pairs), function(k) {\n        v <- sorted_pairs[[k]]\n        if (as.numeric(k) < v) {\n            return(c(as.numeric(k), v))\n        } else {\n            return(NULL)\n        }\n    })\n    ret <- ret[!sapply(ret, is.null)]\n    return(ret)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(\"55\" = 4, \"4\" = 555, \"1\" = 3, \"99\" = 21, \"499\" = 4, \"71\" = 7, \"12\" = 6)), list(c(1, 3), c(4, 555)))))\n}\ntest_humaneval()"
    },
    {
        "id": 289,
        "code": "\nf <- function(code) {\n    paste(code, \": \", paste0(\"b'\", code, \"'\"), sep=\"\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('148'), \"148: b'148'\")))\n}\ntest_humaneval()"
    },
    {
        "id": 290,
        "code": "f <- function(text, prefix) {    if (startsWith(text, prefix)) {\n        substring(text, first = nchar(prefix) + 1)\n    } else if (grepl(prefix, text)) {\n        gsub(prefix, '', text)\n    } else {\n        toupper(text)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('abixaaaily', 'al'), 'ABIXAAAILY')))\n}\ntest_humaneval()"
    },
    {
        "id": 291
    },
    {
        "id": 292,
        "code": "f <- function(text) {    new_text <- sapply(strsplit(text, '')[[1]], function(c) ifelse(grepl(\"[0-9]\", c), c, \"*\"))\n    paste(new_text, collapse = \"\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('5f83u23saa'), '5*83*23***')))\n}\ntest_humaneval()"
    },
    {
        "id": 293,
        "code": "f <- function(text) {    s <- tolower(text)\n    for (i in 1:nchar(s)) {\n        if (substr(s, i, i) == 'x') {\n            return('no')\n        }\n    }\n    return(isTRUE(toupper(text) == text))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('dEXE'), 'no')))\n}\ntest_humaneval()"
    },
    {
        "id": 294,
        "code": "f <- function(n, m, text) {    if (trimws(text) == '') {\n        return(text)\n    }\n    head <- substr(text, 1, 1)\n    mid <- substr(text, 2, nchar(text)-1)\n    tail <- substr(text, nchar(text), nchar(text))\n    joined <- paste0(gsub(n, m, head), gsub(n, m, mid), gsub(n, m, tail))\n    return(joined)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('x', '$', '2xz&5H3*1a@#a*1hris'), '2$z&5H3*1a@#a*1hris')))\n}\ntest_humaneval()"
    },
    {
        "id": 295,
        "code": "f <- function(fruits) {    if (fruits[length(fruits)] == fruits[1]) {\n        return('no')\n    } else {\n        fruits <- fruits[-1]\n        fruits <- fruits[-length(fruits)]\n        fruits <- fruits[-1]\n        fruits <- fruits[-length(fruits)]\n        return(fruits)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('apple', 'apple', 'pear', 'banana', 'pear', 'orange', 'orange')), c('pear', 'banana', 'pear'))))\n}\ntest_humaneval()"
    },
    {
        "id": 296,
        "code": "f <- function(url) {    sub('http://www.', '', url)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('https://www.www.ekapusta.com/image/url'), 'https://www.www.ekapusta.com/image/url')))\n}\ntest_humaneval()"
    },
    {
        "id": 297,
        "code": "f <- function(num) {    if (0 < num & num < 1000 & num != 6174) {\n        return('Half Life')\n    } else {\n        return('Not found')\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(6173), 'Not found')))\n}\ntest_humaneval()"
    },
    {
        "id": 298,
        "code": "f <- function(text) {    new_text <- strsplit(text, '')[[1]]\n    for (i in 1:length(new_text)) {\n        character <- new_text[i]\n        new_character <- toupper(character)\n        new_text[i] <- new_character\n    }\n    paste(new_text, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('dst vavf n dmv dfvm gamcu dgcvb.'), 'DST VAVF N DMV DFVM GAMCU DGCVB.')))\n}\ntest_humaneval()"
    },
    {
        "id": 299,
        "code": "f <- function(text, char) {    if (!grepl(paste0(char, \"$\"), text)) {\n        return(f(paste0(char, text), char))\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('staovk', 'k'), 'staovk')))\n}\ntest_humaneval()"
    },
    {
        "id": 300,
        "code": "f <- function(nums) {    count <- 1\n    for (i in seq(count, length(nums) - 1, by=2)) {\n        nums[i] <- max(nums[i], nums[count])\n        count <- count + 1\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3)), c(1, 2, 3))))\n}\ntest_humaneval()"
    },
    {
        "id": 301
    },
    {
        "id": 302,
        "code": "f <- function(string) {    gsub('needles', 'haystacks', string)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('wdeejjjzsjsjjsxjjneddaddddddefsfd'), 'wdeejjjzsjsjjsxjjneddaddddddefsfd')))\n}\ntest_humaneval()"
    },
    {
        "id": 303,
        "code": "f <- function(text) {    i <- (nchar(text) + 1) %/% 2\n    result <- unlist(strsplit(text, ''))\n    while (i < nchar(text)) {\n        t <- tolower(result[i + 1])\n        if (t == result[i + 1]) {\n            i <- i + 1\n        } else {\n            result[i + 1] <- t\n        }\n        i <- i + 2\n    }\n    paste(result, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('mJkLbn'), 'mJklbn')))\n}\ntest_humaneval()"
    },
    {
        "id": 304,
        "code": "f <- function(d) {\n    keys <- as.numeric(names(d))\n    sorted_keys <- sort(keys, decreasing = TRUE)\n    key1 <- sorted_keys[1]\n    val1 <- d[[as.character(key1)]]\n    d[[as.character(key1)]] <- NULL\n    sorted_keys <- sort(as.numeric(names(d)), decreasing = TRUE)\n    key2 <- sorted_keys[1]\n    val2 <- d[[as.character(key2)]]\n    d[[as.character(key2)]] <- NULL\n    result <- list(val1, val2)\n    names(result) <- c(as.character(key1), as.character(key2))\n    return(result)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(\"2\" = 3, \"17\" = 3, \"16\" = 6, \"18\" = 6, \"87\" = 7)), list(\"87\" = 7, \"18\" = 6))))\n}\ntest_humaneval()"
    },
    {
        "id": 305,
        "code": "f <- function(text, char) {    length <- nchar(text)\n    index <- -1\n    for (i in 1:length) {\n        if (substr(text, i, i) == char) {\n            index <- i\n        }\n    }\n    if (index == -1) {\n        index <- length %/% 2\n    }\n    new_text <- strsplit(text, '')[[1]]\n    new_text <- new_text[-index]\n    paste(new_text, collapse='')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('o horseto', 'r'), 'o hoseto')))\n}\ntest_humaneval()"
    },
    {
        "id": 306,
        "code": "f <- function(nums) {    digits <- c()\n    for (num in nums) {\n        if((is.numeric(num) && !is.na(num)) || (is.character(num) && grepl(\"^\\\\d+$\", num))) {\n            digits <- c(digits, as.integer(num))\n        }\n    }\n    return(digits)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(0, 6, '1', '2', 0)), c(0, 6, 1, 2, 0))))\n}\ntest_humaneval()"
    },
    {
        "id": 307,
        "code": "f <- function(text) {    rtext <- strsplit(text, '')[[1]]\n    for (i in 2:(length(rtext) - 1)) {\n        rtext <- c(rtext[1:i], '|', rtext[(i+1):length(rtext)])\n    }\n    paste(rtext, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('pxcznyf'), 'px|||||cznyf')))\n}\ntest_humaneval()"
    },
    {
        "id": 308
    },
    {
        "id": 309,
        "code": "f <- function(text, suffix) {    text <- paste0(text, suffix)\n    while(substr(text, nchar(text) - nchar(suffix) + 1, nchar(text)) == suffix) {\n        text <- substr(text, 1, nchar(text) - 1)\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('faqo osax f', 'f'), 'faqo osax ')))\n}\ntest_humaneval()"
    },
    {
        "id": 310,
        "code": "f <- function(strands) {    subs <- strands\n    for (i in seq_along(subs)) {\n        for (j in seq_len(nchar(subs[i]) %/% 2)) {\n            subs[i] <- paste0(substr(subs[i], nchar(subs[i]), nchar(subs[i])), substr(subs[i], 2, nchar(subs[i]) - 1), substr(subs[i], 1, 1))\n        }\n    }\n    return(paste0(subs, collapse = ''))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('__', '1', '.', '0', 'r0', '__', 'a_j', '6', '__', '6')), '__1.00r__j_a6__6')))\n}\ntest_humaneval()"
    },
    {
        "id": 311,
        "code": "f <- function(text) {    text <- gsub('#', '1', text)\n    text <- gsub('$', '5', text)\n    \n    if (grepl('^[0-9]+$', text)) {\n        return('yes')\n    } else {\n        return('no')\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('A'), 'no')))\n}\ntest_humaneval()"
    },
    {
        "id": 312,
        "code": "f <- function(s) {    if (grepl(\"^[[:alnum:]]+$\", s)) {\n        return(\"True\")\n    } else {\n        return(\"False\")\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('777'), 'True')))\n}\ntest_humaneval()"
    },
    {
        "id": 313,
        "code": "f <- function(s, l) {    sub(\"=.*\", \"\", substring(paste(s, strrep(\"=\", l), sep = \"\"), 1, l))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('urecord', 8), 'urecord')))\n}\ntest_humaneval()"
    },
    {
        "id": 314,
        "code": "f <- function(text) {\n    if (grepl(',', text)) {\n        parts <- strsplit(text, ',')[[1]]\n        before <- parts[1]\n        after <- paste(parts[-1], collapse = ',')\n        return(paste(after, before))\n    }\n    parts <- strsplit(text, ' ')[[1]]\n    return(paste0(',', parts[length(parts)], ' 0'))\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('244, 105, -90'), ' 105, -90 244')))\n}\ntest_humaneval()"
    },
    {
        "id": 315,
        "code": "f <- function(challenge) {    tolower(gsub(\"l\", \",\", challenge, fixed = TRUE))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('czywZ'), 'czywz')))\n}\ntest_humaneval()"
    },
    {
        "id": 316,
        "code": "f <- function(name) {    paste0(\"| \", paste(strsplit(name, \" \")[[1]], collapse = \" \"), \" |\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('i am your father'), '| i am your father |')))\n}\ntest_humaneval()"
    },
    {
        "id": 317,
        "code": "f <- function(text, a, b) {    text <- gsub(a, b, text)\n    gsub(b, a, text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(' vup a zwwo oihee amuwuuw! ', 'a', 'u'), ' vap a zwwo oihee amawaaw! ')))\n}\ntest_humaneval()"
    },
    {
        "id": 318,
        "code": "f <- function(value, char) {    total <- 0\n    for (c in strsplit(value, '')[[1]]) {\n        if (c == char || tolower(c) == char) {\n            total <- total + 1\n        }\n    }\n    total\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('234rtccde', 'e'), 1)))\n}\ntest_humaneval()"
    },
    {
        "id": 319,
        "code": "f <- function(needle, haystack) {    count <- 0\n    while (grepl(needle, haystack, fixed = TRUE)) {\n        haystack <- sub(needle, '', haystack, fixed = TRUE)\n        count <- count + 1\n    }\n    return(count)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('a', 'xxxaaxaaxx'), 4)))\n}\ntest_humaneval()"
    },
    {
        "id": 320,
        "code": "f <- function(text) {    index <- 2\n    while (index <= nchar(text)) {\n        if (substr(text, index, index) != substr(text, index - 1, index - 1)) {\n            index <- index + 1\n        } else {\n            text1 <- substr(text, 1, index - 1)\n            text2 <- chartr(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                            \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\",\n                            substr(text, index, nchar(text)))\n            return(paste0(text1, text2))\n        }\n    }\n    return(chartr(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\",\n                  text))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('USaR'), 'usAr')))\n}\ntest_humaneval()"
    },
    {
        "id": 321,
        "code": "f <- function(update, starting) {    d <- starting\n    for (k in names(update)) {\n        if (k %in% names(d)) {\n            d[k] <- d[k] + update[k]\n        } else {\n            d[k] <- update[k]\n        }\n    }\n    return(d)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(), list(\"'desciduous'\" = 2)), list(\"'desciduous'\" = 2))))\n}\ntest_humaneval()"
    },
    {
        "id": 322,
        "code": "f <- function(chemicals, num) {\n    fish <- chemicals[-1]\n    chemicals <- rev(chemicals)\n    for (i in seq_len(num)) {\n        fish <- c(fish, chemicals[2])\n        chemicals <- chemicals[-2]\n    }\n    chemicals <- rev(chemicals)\n    return(chemicals)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('lsi', 's', 't', 't', 'd'), 0), c('lsi', 's', 't', 't', 'd'))))\n}\ntest_humaneval()"
    },
    {
        "id": 323,
        "code": "f <- function(text) {    length(strsplit(text, \"\\n\")[[1]])\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('ncdsdfdaaa0a1cdscsk*XFd'), 1)))\n}\ntest_humaneval()"
    },
    {
        "id": 324,
        "code": "f <- function(nums) {    asc <- rev(nums)\n    desc <- asc[1:(length(asc)/2)]\n    c(desc, asc, desc)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c()), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 325,
        "code": "\nf <- function(s) {\n    l <- strsplit(s, \"\")[[1]]\n    for (i in seq_along(l)) {\n        l[i] <- tolower(l[i])\n        if (!is.numeric(as.integer(l[i]))) {\n            return(FALSE)\n        }\n    }\n    return(TRUE)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(''), TRUE)))\n}\ntest_humaneval()"
    },
    {
        "id": 326,
        "code": "f <- function(text) {    number <- 0\n    for (t in strsplit(text, split = \"\")[[1]]) {\n        if (grepl(\"[0-9]\", t)) {\n            number <- number + 1\n        }\n    }\n    return(number)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Thisisastring'), 0)))\n}\ntest_humaneval()"
    },
    {
        "id": 327,
        "code": "\nf <- function(lst) {\n    new <- c()\n    i <- length(lst)-1\n    for (ind in 1:length(lst)) {\n        if (i %% 2 == 0) {\n            new <- c(new, -lst[i+1])\n        }\n        else {\n            new <- c(new, lst[i+1])\n        }\n        i <- i-1\n    }\n    return(new)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 7, -1, -3)), c(-3, 1, 7, -1))))\n}\ntest_humaneval()"
    },
    {
        "id": 328,
        "code": "f <- function(array, L) {    if (L <= 0) {\n        return(array)\n    }\n    if (length(array) < L) {\n        array <- c(array, f(array, L - length(array)))\n    }\n    return(array)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3), 4), c(1, 2, 3, 1, 2, 3))))\n}\ntest_humaneval()"
    },
    {
        "id": 329,
        "code": "f <- function(text) {    for (i in 1:nchar(text)) {\n        if (substr(text, i, i) == toupper(substr(text, i, i)) & grepl(\"[a-z]\", substr(text, i-1, i-1))) {\n            return(TRUE)\n        }\n    }\n    return(FALSE)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('jh54kkk6'), TRUE)))\n}\ntest_humaneval()"
    },
    {
        "id": 330,
        "code": "f <- function(text) {    ans <- sapply(strsplit(text, '')[[1]], function(char) ifelse(is.na(as.numeric(char)), ' ', char))\n    paste(ans, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('m4n2o'), ' 4 2 ')))\n}\ntest_humaneval()"
    },
    {
        "id": 331,
        "code": "f <- function(strand, zmnc) {    poz <- regexpr(zmnc, strand)[1]\n    while (poz != -1) {\n        strand <- substr(strand, poz + 1, nchar(strand))\n        poz <- regexpr(zmnc, strand)[1]\n    }\n    return(max(regexpr(zmnc, strand)))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('', 'abc'), -1)))\n}\ntest_humaneval()"
    },
    {
        "id": 332,
        "code": "f <- function(nums) {    count <- length(nums)\n    if (count == 0) {\n        nums <- rep(0, nums[length(nums)])\n    } else if (count %% 2 == 0) {\n        nums <- NULL\n    } else {\n        nums <- nums[-seq.int(count/2)]\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(-6, -2, 1, -3, 0, 1)), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 333,
        "code": "\nf <- function(places, lazy) {\n    places <- sort(places)\n    places <- places[!places %in% lazy]\n    if(length(places) == 1){\n        return(1)\n    }\n    for(i in 1:length(places)){\n        if(length(which(places == places[i] + 1)) == 0){\n            return(i)\n        }\n    }\n    return(i)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(375, 564, 857, 90, 728, 92), c(728)), 1)))\n}\ntest_humaneval()"
    },
    {
        "id": 334,
        "code": "f <- function(a, b) {    paste(b, collapse = a)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('00', c('nU', ' 9 rCSAz', 'w', ' lpA5BO', 'sizL', 'i7rlVr')), 'nU00 9 rCSAz00w00 lpA5BO00sizL00i7rlVr')))\n}\ntest_humaneval()"
    },
    {
        "id": 335,
        "code": "f <- function(text, to_remove) {    new_text <- unlist(strsplit(text, ''))\n    if (to_remove %in% new_text) {\n        index <- which(new_text == to_remove)[1]\n        new_text <- new_text[new_text != to_remove]\n        new_text <- append(new_text, '?', after = index - 1)\n        new_text <- new_text[new_text != '?']\n    }\n    paste(new_text, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('sjbrlfqmw', 'l'), 'sjbrfqmw')))\n}\ntest_humaneval()"
    },
    {
        "id": 336,
        "code": "\nf <- function(s, sep) {\n    s <- paste0(s, sep)\n    sub(paste0(sep, '$'), '', s)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('234dsfssdfs333324314', 's'), '234dsfssdfs333324314')))\n}\ntest_humaneval()"
    },
    {
        "id": 337,
        "code": "f <- function(txt) {    d <- character()\n    for (c in strsplit(txt, '')[[1]]) {\n        if (grepl(\"[0-9]\", c)) {\n            next\n        }\n        if (grepl(\"[a-z]\", c)) {\n            d <- c(d, toupper(c))\n        } else if (grepl(\"[A-Z]\", c)) {\n            d <- c(d, tolower(c))\n        }\n    }\n    paste(d, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('5ll6'), 'LL')))\n}\ntest_humaneval()"
    },
    {
        "id": 338
    },
    {
        "id": 339,
        "code": "f <- function(array, elem) {    elem <- as.character(elem)\n    d <- 0\n    for (i in array) {\n        if (as.character(i) == elem) {\n            d <- d + 1\n        }\n    }\n    return(d)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(-1, 2, 1, -8, -8, 2), 2), 2)))\n}\ntest_humaneval()"
    },
    {
        "id": 340,
        "code": "f <- function(text) {    uppercase_index <- regexpr('A', text)\n    if (uppercase_index >= 0) {\n        return(paste0(substr(text, 1, uppercase_index - 1), substr(text, regexpr('a', text) + 2)))\n    } else {\n        return(paste(sort(strsplit(text, '')[[1]]), collapse = ''))\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('E jIkx HtDpV G'), '   DEGHIVjkptx')))\n}\ntest_humaneval()"
    },
    {
        "id": 341,
        "code": "f <- function(cart) {    while(length(cart) > 5) {\n        cart <- head(cart, n = length(cart) - 1)\n    }\n    return(cart)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list()), list())))\n}\ntest_humaneval()"
    },
    {
        "id": 342,
        "code": "f <- function(text) {    sum(unlist(strsplit(text, \"\")) == \"-\") == nchar(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('---123-4'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 343,
        "code": "f <- function(array, elem) {    c(array, elem)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(c(1, 2, 3), c(1, 2), 1), list(c(1, 2, 3), 3, c(2, 1))), list(c(1, 2, 3), c(1, 2), 1, c(1, 2, 3), 3, c(2, 1)))))\n}\ntest_humaneval()"
    },
    {
        "id": 344,
        "code": "\nf <- function(lst) {    operation <- function(x) {\n        x <- rev(x)\n    }\n    new_list <- lst\n    new_list <- sort(new_list)\n    operation(new_list)\n    return(lst)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(6, 4, 2, 8, 15)), c(6, 4, 2, 8, 15))))\n}\ntest_humaneval()"
    },
    {
        "id": 345,
        "code": "f <- function(a, b) {    if (a < b) {\n        return(c(b, a))\n    } else {\n        return(c(a, b))\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('ml', 'mv'), c('mv', 'ml'))))\n}\ntest_humaneval()"
    },
    {
        "id": 346,
        "code": "f <- function(filename) {    suffix <- tail(strsplit(filename, \"\\\\.\"), 1)\n    f2 <- paste0(filename, substring(suffix, nchar(suffix):1, nchar(suffix):1))\n    return(suffix %in% strsplit(f2, \"\\\\.\")[[1]])\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('docs.doc'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 347,
        "code": "\nf <- function(text) {   \n    ls = strsplit(text, \"\")[[1]]\n    length = length(ls)\n    for (i in 1:length){\n        ls = append(ls, ls[i], i)\n    }\n    paste(ls, collapse = \"\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('hzcw'), 'hhhhhzcw')))\n}\ntest_humaneval()"
    },
    {
        "id": 348
    },
    {
        "id": 349
    },
    {
        "id": 350,
        "code": "f <- function(d) {    size <- length(d)\n    v <- rep(0, size)\n    if (size == 0) {\n        return(v)\n    }\n    for (i in 1:size) {\n        v[i] <- d[[i]]\n    }\n    return(v)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(\"'a'\" = 1, \"'b'\" = 2, \"'c'\" = 3)), c(1, 2, 3))))\n}\ntest_humaneval()"
    },
    {
        "id": 351,
        "code": "f <- function(text) {    while ('nnet lloP' %in% text) {\n        text <- gsub('nnet lloP', 'nnet loLp', text)\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('a_A_b_B3 '), 'a_A_b_B3 ')))\n}\ntest_humaneval()"
    },
    {
        "id": 352,
        "code": "f <- function(nums) {    return(nums[length(nums) %/% 2 + 1])\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(-1, -3, -5, -7, 0)), -5)))\n}\ntest_humaneval()"
    },
    {
        "id": 353,
        "code": "f <- function(x) {    if (length(x) == 0) {\n        return(-1)\n    } else {\n        cache <- list()\n        for (item in x) {\n            if (item %in% names(cache)) {\n                cache[[as.character(item)]] <- cache[[as.character(item)]] + 1\n            } else {\n                cache[[as.character(item)]] <- 1\n            }\n        }\n        return(max(unlist(cache)))\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 0, 2, 2, 0, 0, 0, 1)), 4)))\n}\ntest_humaneval()"
    },
    {
        "id": 354
    },
    {
        "id": 355,
        "code": "f <- function(text, prefix) {    substr(text, start = nchar(prefix) + 1, stop = nchar(text))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('123x John z', 'z'), '23x John z')))\n}\ntest_humaneval()"
    },
    {
        "id": 356,
        "code": "f <- function(array, num) {    reverse <- FALSE\n    if (num < 0) {\n        reverse <- TRUE\n        num <- num * -1\n    }\n    array <- rev(array) * num\n    l <- length(array)\n    \n    if (reverse) {\n        array <- rev(array)\n    }\n    return(array)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2), 1), c(2, 1))))\n}\ntest_humaneval()"
    },
    {
        "id": 357,
        "code": "f <- function(s) {    r <- character(0)\n    for (i in seq(nchar(s), 1, by=-1)) {\n        r <- c(r, substr(s, i, i))\n    }\n    paste0(r, collapse=\"\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('crew'), 'werc')))\n}\ntest_humaneval()"
    },
    {
        "id": 358,
        "code": "\nf <- function(text, value) {    indexes <- c()\n    for (i in 1:nchar(text)) {\n        if (substring(text, i, i) == value && (i == 1 || substring(text, i-1, i-1) != value)) {\n            indexes <- c(indexes, i)\n        }\n    }\n    if (length(indexes) %% 2 == 1) {\n        return(text)\n    }\n    return(substring(text, indexes[1]+1, indexes[length(indexes)]-1))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('btrburger', 'b'), 'tr')))\n}\ntest_humaneval()"
    },
    {
        "id": 359,
        "code": "f <- function(lines) {    for (i in 1:length(lines)) {\n        lines[i] <- substring(paste0(lines[i], \" \"), 1, nchar(lines[length(lines)]))\n    }\n    return(lines)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('dZwbSR', 'wijHeq', 'qluVok', 'dxjxbF')), c('dZwbSR', 'wijHeq', 'qluVok', 'dxjxbF'))))\n}\ntest_humaneval()"
    },
    {
        "id": 360,
        "code": "f <- function(text, n) {    if (nchar(text) <= 2) {\n        return(text)\n    }\n    leading_chars <- substr(text, 1, 1) * (n - nchar(text) + 1)\n    paste0(leading_chars, substr(text, 2, nchar(text) - 1), substr(text, nchar(text), nchar(text)))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('g', 15), 'g')))\n}\ntest_humaneval()"
    },
    {
        "id": 361,
        "code": "f <- function(text) {    split_text <- unlist(strsplit(text, \":\"))\n    count_char <- nchar(gsub(\"[^#]\", \"\", split_text[1]))\n    return(count_char)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('#! : #!'), 1)))\n}\ntest_humaneval()"
    },
    {
        "id": 362,
        "code": "f <- function(text) {    for(i in 1:(nchar(text) - 1)) {\n        if (grepl(\"^[a-z]+$\", substr(text, i, nchar(text)))) {\n            return(substr(text, i + 1, nchar(text)))\n        }\n    }\n    return('')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('wrazugizoernmgzu'), 'razugizoernmgzu')))\n}\ntest_humaneval()"
    },
    {
        "id": 363,
        "code": "\nf <- function(nums) {\n    nums <- sort(nums)\n    n <- length(nums)\n    new_nums <- c(nums[n %/% 2])\n\n    if (n %% 2 == 0) {\n        new_nums <- c(nums[n %/% 2 - 1], nums[n %/% 2])\n    }\n    \n    for (i in 0:(n %/% 2 - 1)) {\n        new_nums <- c(nums[n - i - 1], new_nums, nums[i])\n    }\n    return(new_nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1)), c(1))))\n}\ntest_humaneval()"
    },
    {
        "id": 364,
        "code": "\nf <- function(nums) {  \n    verdict <- function(x) x < 2\n    res <- Filter(function(x) x != 0, nums)\n    result <- lapply(res, function(x) list(x, verdict(x)))\n    if (length(result) > 0) {\n        return(result)\n    }\n    return('error - no numbers or all zeros!')\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(0, 3, 0, 1)), list(list(3, FALSE), list(1, TRUE)))))\n}\ntest_humaneval()"
    },
    {
        "id": 365,
        "code": "f <- function(n, s) {    if (startsWith(s, n)) {\n        parts <- strsplit(s, n)[[1]]\n        return(paste0(parts[1], n, substr(s, nchar(n)+1, nchar(s))))\n    }\n    return(s)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('xqc', 'mRcwVqXsRDRb'), 'mRcwVqXsRDRb')))\n}\ntest_humaneval()"
    },
    {
        "id": 366,
        "code": "f <- function(string) {    tmp <- tolower(string)\n    for (char in tolower(string)) {\n        if (char %in% tmp) {\n            tmp <- gsub(char, '', tmp, fixed = TRUE)\n        }\n    }\n    return(tmp)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('[ Hello ]+ Hello, World!!_ Hi'), '')))\n}\ntest_humaneval()"
    },
    {
        "id": 367,
        "code": "f <- function(nums, rmvalue) {    res <- nums\n    while (rmvalue %in% res) {\n        popped <- res[which.max(res == rmvalue)]\n        res <- res[-which(res == rmvalue)]\n        if (popped != rmvalue) {\n            res <- c(res, popped)\n        }\n    }\n    return(res)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(6, 2, 1, 1, 4, 1), 5), c(6, 2, 1, 1, 4, 1))))\n}\ntest_humaneval()"
    },
    {
        "id": 368,
        "code": "f <- function(string, numbers) {    arr <- lapply(numbers, function(num) {\n        sprintf(\"%0*d\", num, as.numeric(string))\n    })\n    paste(arr, collapse = ' ')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('4327', c(2, 8, 9, 2, 7, 1)), '4327 00004327 000004327 4327 0004327 4327')))\n}\ntest_humaneval()"
    },
    {
        "id": 369,
        "code": "f <- function(var) {    if (grepl(\"^\\\\d+$\", var)) {\n        return(\"int\")\n    } else if (grepl(\"^\\\\d+\\\\.\\\\d+$\", var)) {\n        return(\"float\")\n    } else if (nchar(gsub(\"\\\\s+\", \"\", var)) == 0) {\n        return(\"str\")\n    } else if (nchar(var) == 1) {\n        return(\"char\")\n    } else {\n        return(\"tuple\")\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(' 99 777'), 'tuple')))\n}\ntest_humaneval()"
    },
    {
        "id": 370,
        "code": "f <- function(text) {    for (char in strsplit(text, '')[[1]]) {\n        if (char != \" \") {\n            return(FALSE)\n        }\n    }\n    return(TRUE)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('     i'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 371,
        "code": "f <- function(nums) {    nums <- nums[nums %% 2 == 0]\n    sum_ <- sum(nums)\n    return(sum_)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(11, 21, 0, 11)), 0)))\n}\ntest_humaneval()"
    },
    {
        "id": 372,
        "code": "f <- function(list_, num) {    temp <- c()\n    for (i in list_) {\n        i <- paste(rep(i, num %/% 2), collapse = ',')\n        temp <- c(temp, i)\n    }\n    return(temp)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('v'), 1), c(''))))\n}\ntest_humaneval()"
    },
    {
        "id": 373
    },
    {
        "id": 374,
        "code": "f <- function(seq, v) {    a <- vector()\n    for (i in seq) {\n        if (substring(i, nchar(i) - nchar(v) + 1, nchar(i)) == v) {\n            a <- c(a, paste0(i, i))\n        }\n    }\n    return(a)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('oH', 'ee', 'mb', 'deft', 'n', 'zz', 'f', 'abA'), 'zz'), c('zzzz'))))\n}\ntest_humaneval()"
    },
    {
        "id": 375
    },
    {
        "id": 376,
        "code": "f <- function(text) {    for (i in seq_len(nchar(text))) {\n        if (grepl(\"^two\", substr(text, 1, i))) {\n            return(substr(text, i+1, nchar(text)))\n        }\n    }\n    return('no')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('2two programmers'), 'no')))\n}\ntest_humaneval()"
    },
    {
        "id": 377,
        "code": "f <- function(text) {    return(paste(strsplit(text, \"\\n\")[[1]], collapse = \", \"))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('BYE\\nNO\\nWAY'), 'BYE, NO, WAY')))\n}\ntest_humaneval()"
    },
    {
        "id": 378,
        "code": "\nf <- function(dic, key) {    \n    if (!(key %in% names(dic))) {\n        return('No such key!')\n    }\n    v <- dic[[key]]\n    dic[[key]] <- NULL\n    if (length(dic) == 0) {\n        return(v)\n    } else {\n        return(dic)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(\"'did'\" = 0), 'u'), 'No such key!')))\n}\ntest_humaneval()"
    },
    {
        "id": 379,
        "code": "f <- function(nums) {    n <- length(nums)\n    for (i in seq(n, 1, by = -3)) {\n        if (nums[i] == 0) {\n            nums <- NULL\n            return(FALSE)\n        }\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(0, 0, 1, 2, 1)), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 380,
        "code": "f <- function(text, delimiter) {\n    # Find the last occurrence of the delimiter\n    last_pos <- max(gregexpr(delimiter, text, fixed = TRUE)[[1]])\n    if (last_pos == -1) {\n        return(text)\n    }\n    # Split the text into three parts\n    before <- substr(text, 1, last_pos - 1)\n    after <- substr(text, last_pos + nchar(delimiter), nchar(text))\n    return(paste0(before, after))\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('xxjarczx', 'x'), 'xxjarcz')))\n}\ntest_humaneval()"
    },
    {
        "id": 381,
        "code": "f <- function(text, num_digits) {    width <- max(1, num_digits)\n    sprintf(paste0(\"%0\", width, \"d\"), as.numeric(text))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('19', 5), '00019')))\n}\ntest_humaneval()"
    },
    {
        "id": 382
    },
    {
        "id": 383,
        "code": "f <- function(text, chars) {    result <- strsplit(text, '')[[1]]\n    while (chars %in% result[(length(result)-2):1] & length(result) > 2) {\n        result <- result[-(length(result)-2)]\n        result <- result[-(length(result)-2)]\n    }\n    return(paste(result, collapse = ''))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('ellod!p.nkyp.exa.bi.y.hain', '.n.in.ha.y'), 'ellod!p.nkyp.exa.bi.y.hain')))\n}\ntest_humaneval()"
    },
    {
        "id": 384,
        "code": "f <- function(text, chars) {    chars <- unlist(strsplit(chars, ''))\n    text <- unlist(strsplit(text, ''))\n    new_text <- text\n    while(length(new_text) > 0 && length(text) > 0) {\n        if (new_text[1] %in% chars) {\n            new_text <- new_text[-1]\n        } else {\n            break\n        }\n    }\n    paste(new_text, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('asfdellos', 'Ta'), 'sfdellos')))\n}\ntest_humaneval()"
    },
    {
        "id": 385,
        "code": "f <- function(lst) {    i <- 1\n    new_list <- c()\n    while (i <= length(lst)) {\n        if (lst[i] %in% lst[(i+1):length(lst)]) {\n            new_list <- c(new_list, lst[i])\n            if (length(new_list) == 3) {\n                return(new_list)\n            }\n        }\n        i <- i + 1\n    }\n    return(new_list)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(0, 2, 1, 2, 6, 2, 6, 3, 0)), c(0, 2, 2))))\n}\ntest_humaneval()"
    },
    {
        "id": 386,
        "code": "f <- function(concat, di) {    count <- length(di)\n    for (i in 1:count) {\n        if (as.character(i) %in% di && di[[as.character(i)]] %in% concat) {\n            di[[as.character(i)]] <- NULL\n        }\n    }\n    return(\"Done!\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('mid', list(\"'0'\" = 'q', \"'1'\" = 'f', \"'2'\" = 'w', \"'3'\" = 'i')), 'Done!')))\n}\ntest_humaneval()"
    },
    {
        "id": 387,
        "code": "f <- function(nums, pos, value) {    nums <- c(nums[1:pos], value, nums[(pos+1):length(nums)])\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(3, 1, 2), 2, 0), c(3, 1, 0, 2))))\n}\ntest_humaneval()"
    },
    {
        "id": 388,
        "code": "f <- function(text, characters) {    character_list <- c(strsplit(characters, '')[[1]], ' ', '_')\n    \n    i <- 1\n    while (i <= nchar(text) && substr(text, i, i) %in% character_list) {\n        i <- i + 1\n    }\n    \n    substr(text, i, nchar(text))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('2nm_28in', 'nm'), '2nm_28in')))\n}\ntest_humaneval()"
    },
    {
        "id": 389,
        "code": "\nf <- function(total, arg) {\n    if (is.list(arg)) {\n        for (e in arg) {\n            total <- c(total, unlist(strsplit(e, split = '')))\n        }\n    } else {\n        total <- c(total, unlist(strsplit(arg, split = '')))\n    }\n    return(total)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('1', '2', '3'), 'nammo'), c('1', '2', '3', 'n', 'a', 'm', 'm', 'o'))))\n}\ntest_humaneval()"
    },
    {
        "id": 390,
        "code": "f <- function(text) {    if (nchar(trimws(text)) == 0) {\n        return(nchar(trimws(text)))\n    } else {\n        return(NA)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(' \\t '), 0)))\n}\ntest_humaneval()"
    },
    {
        "id": 391,
        "code": "\nf <- function(students) {    seatlist <- students\n    seatlist <- rev(seatlist)\n    cnt <- 0\n    for (cnt in 1:length(seatlist)) {\n        cnt <- cnt + 2\n        if (cnt <= length(seatlist)) {\n            seatlist[cnt - 1:cnt] <- c('+')\n        } else {\n            seatlist[cnt - 1] <- '+'\n        }\n    }\n    seatlist <- c(seatlist, '+')\n    return(seatlist)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('r', '9')), c('9', '+', '+', '+'))))\n}\ntest_humaneval()"
    },
    {
        "id": 392,
        "code": "f <- function(text) {    if(toupper(text) == text) {\n        return('ALL UPPERCASE')\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Hello Is It MyClass'), 'Hello Is It MyClass')))\n}\ntest_humaneval()"
    },
    {
        "id": 393,
        "code": "\nf <- function(text) {    ls <- strsplit(text, '')[[1]]\n    ls <- rev(ls)\n    text2 <- ''\n    for (i in seq(3, length(ls), by = 3)) {\n        text2 <- paste0(text2, paste(ls[i:(i + 2)], collapse = '---'), '---')\n    }\n    return(substring(text2, 1, nchar(text2) - 3))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('scala'), 'a---c---s')))\n}\ntest_humaneval()"
    },
    {
        "id": 394,
        "code": "f <- function(text) {    k <- strsplit(text, \"\\n\")[[1]]\n    i <- 0\n    for (j in k) {\n        if (nchar(j) == 0) {\n            return(i)\n        }\n        i <- i + 1\n    }\n    return(-1)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('2 m2 \\n\\nbike'), 1)))\n}\ntest_humaneval()"
    },
    {
        "id": 395,
        "code": "\nf <- function(s) {\n    for (i in 1:nchar(s)) {\n        if (is.numeric(as.integer(substr(s, i, i)))) {\n            return (i - 1) + (substr(s, i, i) == '0')\n        } else if (substr(s, i, i) == '0') {\n            return -1\n        }\n    }\n    return -1\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('11'), 0)))\n}\ntest_humaneval()"
    },
    {
        "id": 396,
        "code": "f <- function(ets) {    while(length(ets) > 0) {\n        pair <- tail(ets, 1)\n        ets <- head(ets, -1)\n        k <- names(pair)\n        v <- pair\n        ets[k] <- v^2\n    }\n    return(ets)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list()), list())))\n}\ntest_humaneval()"
    },
    {
        "id": 397
    },
    {
        "id": 398
    },
    {
        "id": 399,
        "code": "\nf <- function(text, old, new) {\n    if (nchar(old) > 3) {\n        return(text)\n    }\n    if (grepl(old, text) & !grepl(' ', text)) {\n        return(gsub(old, paste(rep(new, nchar(old)), collapse = ''), text))\n    }\n    while (grepl(old, text)) {\n        text <- gsub(old, new, text)\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('avacado', 'va', '-'), 'a--cado')))\n}\ntest_humaneval()"
    },
    {
        "id": 400,
        "code": "f <- function(multi_string) {    cond_string <- sapply(strsplit(multi_string, ' ')[[1]], function(x) all(charToRaw(x) < 128))\n    if (any(cond_string)) {\n        paste(na.omit(strsplit(multi_string, ' ')[[1]][cond_string]), collapse = ', ')\n    } else {\n        return('')\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('I am hungry! eat food.'), 'I, am, hungry!, eat, food.')))\n}\ntest_humaneval()"
    },
    {
        "id": 401,
        "code": "f <- function(text, suffix) {    if (nchar(suffix) > 0 && substr(text, nchar(text) - nchar(suffix) + 1, nchar(text)) == suffix) {\n        substr(text, 1, nchar(text) - nchar(suffix))\n    } else {\n        text\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('mathematics', 'example'), 'mathematics')))\n}\ntest_humaneval()"
    },
    {
        "id": 402,
        "code": "f <- function(n, l) {    archive <- list()\n    for (i in seq_len(n)) {\n        archive <- list()\n        for (x in l) {\n            archive[[as.character(as.integer(x) + 10)]] <- as.integer(x) * 10\n        }\n    }\n    return(archive)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(0, c('aaa', 'bbb')), list())))\n}\ntest_humaneval()"
    },
    {
        "id": 403,
        "code": "f <- function(full, part) {    length <- nchar(part)\n    index <- regexpr(part, full)[1]\n    count <- 0\n    while(index >= 0) {\n        full <- substr(full, index + length, nchar(full))\n        index <- regexpr(part, full)[1]\n        count <- count + 1\n    }\n    return(count)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('hrsiajiajieihruejfhbrisvlmmy', 'hr'), 2)))\n}\ntest_humaneval()"
    },
    {
        "id": 404,
        "code": "f <- function(no) {    d <- unique(no)\n    return(length(d))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('l', 'f', 'h', 'g', 's', 'b')), 6)))\n}\ntest_humaneval()"
    },
    {
        "id": 405,
        "code": "f <- function(xs) {    new_x <- xs[1] - 1\n    xs <- xs[-1]\n    while (new_x <= xs[1]) {\n        xs <- xs[-1]\n        new_x <- new_x - 1\n    }\n    xs <- c(new_x, xs)\n    xs\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(6, 3, 4, 1, 2, 3, 5)), c(5, 3, 4, 1, 2, 3, 5))))\n}\ntest_humaneval()"
    },
    {
        "id": 406,
        "code": "f <- function(text) {    ls <- strsplit(text, '')[[1]]\n    ls[c(1, length(ls))] <- toupper(ls[c(length(ls), 1)])\n    paste(ls, collapse='') %in% c(tolower(ls), toupper(ls))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Josh'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 407,
        "code": "f <- function(s) {    while(length(s) > 1) {\n        s <- c()\n        s <- c(s, length(s))\n    }\n    return(s[length(s)])\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(6, 1, 2, 3)), 0)))\n}\ntest_humaneval()"
    },
    {
        "id": 408,
        "code": "f <- function(m) {    rev(m)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(-4, 6, 0, 4, -7, 2, -1)), c(-1, 2, -7, 4, 0, 6, -4))))\n}\ntest_humaneval()"
    },
    {
        "id": 409,
        "code": "\nf <- function(text, char) {   \n    if (nchar(text) > 0) {\n        text <- gsub(paste0('^', char), '', text)\n        text <- gsub(paste0('^', substr(text, nchar(text), nchar(text))), '', text)\n        text <- paste0(substr(text, 1, nchar(text) - 1), toupper(substr(text, nchar(text), nchar(text))))\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('querist', 'u'), 'querisT')))\n}\ntest_humaneval()"
    },
    {
        "id": 410,
        "code": "f <- function(nums) {    a <- 1\n    for (i in seq_along(nums)) {\n        nums <- append(nums, nums[a], after = i)\n        a <- a + 1\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 3, -1, 1, -2, 6)), c(1, 1, 1, 1, 1, 1, 1, 3, -1, 1, -2, 6))))\n}\ntest_humaneval()"
    },
    {
        "id": 411,
        "code": "f <- function(text, pref) {    if (is.list(pref)) {\n        sapply(pref, function(x) grepl(paste0(\"^\", x), text))\n    } else {\n        grepl(paste0(\"^\", pref), text)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Hello World', 'W'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 412,
        "code": "f <- function(start, end, interval) {    steps <- seq(start, end, by = interval)\n    if (1 %in% steps) {\n        steps[length(steps)] <- end + 1\n    }\n    return(length(steps))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(3, 10, 1), 8)))\n}\ntest_humaneval()"
    },
    {
        "id": 413,
        "code": "f <- function(s) {    paste0(substr(s, 4, nchar(s)), substr(s, 3, 3), substr(s, 6, 8))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('jbucwc'), 'cwcuc')))\n}\ntest_humaneval()"
    },
    {
        "id": 414,
        "code": "f <- function(d) {    dCopy <- d\n    for (key in names(dCopy)) {\n        for (i in seq_along(dCopy[[key]])) {\n            dCopy[[key]][i] <- toupper(dCopy[[key]][i])\n        }\n    }\n    return(dCopy)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(\"'X'\" = c('x', 'y'))), list(\"'X'\" = c('X', 'Y')))))\n}\ntest_humaneval()"
    },
    {
        "id": 415
    },
    {
        "id": 416,
        "code": "f <- function(text, old, new) {    index <- max(regexpr(old, substr(text, 1, regexpr(old, text) - 1), fixed = TRUE))\n    result <- strsplit(text, '')[[1]]\n    while (index > 0) {\n        result[index:(index + nchar(old) - 1)] <- unlist(strsplit(new, ''))\n        index <- max(regexpr(old, substr(text, 1, index - 1), fixed = TRUE))\n    }\n    paste(result, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('jysrhfm ojwesf xgwwdyr dlrul ymba bpq', 'j', '1'), 'jysrhfm ojwesf xgwwdyr dlrul ymba bpq')))\n}\ntest_humaneval()"
    },
    {
        "id": 417,
        "code": "f <- function(lst) {    lst <- rev(lst)\n    lst <- lst[-length(lst)]\n    rev(lst)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(7, 8, 2, 8)), c(8, 2, 8))))\n}\ntest_humaneval()"
    },
    {
        "id": 418,
        "code": "\nf <- function(s, p) {\n    part_one <- nchar(substring(s, 1, regexpr(p, s)[1]-1))\n    part_two <- nchar(substring(s, regexpr(p, s)[1], regexpr(p, s)[1]+nchar(p)-1))\n    part_three <- nchar(substring(s, regexpr(p, s)[1]+nchar(p), nchar(s)))\n    \n    if (part_one >= 2 && part_two <= 2 && part_three >= 2) {\n        return (paste(rev(strsplit(substring(s, 1, regexpr(p, s)[1]-1), \"\")[[1]]), substring(s, regexpr(p, s)[1], regexpr(p, s)[1]+nchar(p)-1), paste(rev(strsplit(substring(s, regexpr(p, s)[1]+nchar(p), nchar(s)), \"\")[[1]]), sep=\"\", collapse=\"\"), \"#\", sep = \"\"))\n    }\n    else {\n        return (s)\n    }\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('qqqqq', 'qqq'), 'qqqqq')))\n}\ntest_humaneval()"
    },
    {
        "id": 419,
        "code": "f <- function(text, value) {    if (!grepl(value, text)) {\n        return('')\n    }\n    parts <- strsplit(text, value)\n    return(parts[[1]][1])\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('mmfbifen', 'i'), 'mmfb')))\n}\ntest_humaneval()"
    },
    {
        "id": 420,
        "code": "f <- function(text) {    tryCatch({\n        return(all(strsplit(text, \"\")[[1]] %in% letters))\n    }, error = function(e) {\n        return(FALSE)\n    })\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('x'), TRUE)))\n}\ntest_humaneval()"
    },
    {
        "id": 421,
        "code": "f <- function(s, n) {    if(nchar(s) < n) {\n        return(s)\n    } else {\n        return(substring(s, n + 1))\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('try.', 5), 'try.')))\n}\ntest_humaneval()"
    },
    {
        "id": 422,
        "code": "f <- function(array) {    new_array <- rev(array)\n    return (sapply(new_array, function(x) x*x))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 1)), c(1, 4, 1))))\n}\ntest_humaneval()"
    },
    {
        "id": 423,
        "code": "f <- function(selfie) {    lo <- length(selfie)\n    for (i in seq(lo-1, 1, by = -1)) {\n        if (selfie[i] == selfie[1]) {\n            selfie <- selfie[-lo]\n        }\n    }\n    return(selfie)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(4, 2, 5, 1, 3, 2, 6)), c(4, 2, 5, 1, 3, 2))))\n}\ntest_humaneval()"
    },
    {
        "id": 424,
        "code": "f <- function(s) {    s <- gsub('\\\"', '', s)\n    lst <- strsplit(s, '')[[1]]\n    col <- 1\n    count <- 1\n    while (col <= length(lst) && lst[col] %in% c('.', ':', ',')) {\n        if (lst[col] == '.') {\n            count <- lst[col] + 1\n        }\n        col <- col + 1\n    }\n    return(paste(lst[(col + count):length(lst)], collapse = ''))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('\"Makers of a Statement\"'), 'akers of a Statement')))\n}\ntest_humaneval()"
    },
    {
        "id": 425,
        "code": "\nf <- function(a) {\n    a <- gsub('/', ':', a, fixed = TRUE)\n    z <- strsplit(a, ':')[[1]]\n    n <- length(z)\n    if (n == 1) {\n        z <- c('', '', z[1])\n    } else if (n == 2) {\n        z <- c(z[1], ':', z[2])\n    } else if (n > 2) {\n        z <- c(paste(z[-c(n, n-1)], collapse = ':'), ':', z[n-1])\n    }\n    return(z)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('/CL44     '), c('', ':', 'CL44     '))))\n}\ntest_humaneval()"
    },
    {
        "id": 426,
        "code": "f <- function(numbers, elem, idx) {    insert <- c(head(numbers, idx), elem, tail(numbers, -idx))\n    return(insert)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3), 8, 5), c(1, 2, 3, 8))))\n}\ntest_humaneval()"
    },
    {
        "id": 427,
        "code": "\nf <- function(s) {\n    count <- nchar(s) - 1\n    reverse_s <- rev(strsplit(s, \"\")[[1]])\n    while (count > 0 && grepl('sea', paste(reverse_s[seq(1, count, by = 2)], collapse = ''), fixed = TRUE) == FALSE) {\n        count <- count - 1\n        reverse_s <- reverse_s[1:count]\n    }\n    if(count == 0) return(\"\")\n    paste(reverse_s[count:length(reverse_s)], collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('s a a b s d s a a s a a'), '')))\n}\ntest_humaneval()"
    },
    {
        "id": 428,
        "code": "\nf <- function(nums) {    \n    for (i in seq_along(nums)) {\n        if (i %% 2 == 0) {\n            nums <- append(nums, nums[i] * nums[i + 1], after = length(nums))\n        }\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c()), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 429
    },
    {
        "id": 430,
        "code": "f <- function(arr1, arr2) {    new_arr <- c(arr1, arr2)\n    return(new_arr)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(5, 1, 3, 7, 8), list('', 0, -1, c())), list(5, 1, 3, 7, 8, '', 0, -1, c()))))\n}\ntest_humaneval()"
    },
    {
        "id": 431,
        "code": "f <- function(n, m) {    arr <- 1:n\n    for (i in 1:m) {\n        arr <- c()\n    }\n    return(arr)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(1, 3), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 432,
        "code": "f <- function(length, text) {    if(nchar(text) == length) {\n        return (substr(text, nchar(text):1, 1))\n    } else {\n        return(FALSE)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(-5, 'G5ogb6f,c7e.EMm'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 433,
        "code": "f <- function(text) {    text <- unlist(strsplit(text, ','))\n    text <- text[-1]\n    idx <- match('T', text)\n    text <- c('T', text[-idx])\n    paste(c('T', paste(text, collapse=',')), collapse=',')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Dmreh,Sspp,T,G ,.tB,Vxk,Cct'), 'T,T,Sspp,G ,.tB,Vxk,Cct')))\n}\ntest_humaneval()"
    },
    {
        "id": 434,
        "code": "\nf <- function(string) {    \n    match <- gregexpr('e', string)\n    if (length(unlist(match)) == 0) {\n        return(\"Nuk\")\n    } else {\n        return(tail(unlist(match), 1) - 1)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('eeuseeeoehasa'), 8)))\n}\ntest_humaneval()"
    },
    {
        "id": 435,
        "code": "f <- function(numbers, num, val) {\n    while (length(numbers) < num) {\n        numbers <- append(numbers, as.character(val), after = floor(length(numbers) / 2))\n    }\n    if (num > 1) {\n        for (i in 1:(floor(length(numbers) / (num - 1)) - 4)) {\n            numbers <- append(numbers, as.character(val), after = floor(length(numbers) / 2))\n        }\n    }\n    return(paste(numbers, collapse = ' '))\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(), 0, 1), '')))\n}\ntest_humaneval()"
    },
    {
        "id": 436,
        "code": "\nf <- function(s, characters) {\n    unlist(strsplit(s, ''))[characters + 1]\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('s7 6s 1ss', c(1, 3, 6, 1, 2)), c('7', '6', '1', '7', ' '))))\n}\ntest_humaneval()"
    },
    {
        "id": 437
    },
    {
        "id": 438
    },
    {
        "id": 439,
        "code": "f <- function(value) {    parts <- unlist(strsplit(value, ' '))\n    paste0(parts[seq(1, length(parts), by=2)], collapse='')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('coscifysu'), 'coscifysu')))\n}\ntest_humaneval()"
    },
    {
        "id": 440,
        "code": "f <- function(text) {    if (grepl(\"^\\\\d+$\", text)) {\n        return('yes')\n    } else {\n        return('no')\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('abc'), 'no')))\n}\ntest_humaneval()"
    },
    {
        "id": 441
    },
    {
        "id": 442,
        "code": "f <- function(lst) {    res <- vector()\n    for (i in seq_along(lst)) {\n        if (lst[i] %% 2 == 0) {\n            res <- c(res, lst[i])\n        }\n    }\n    return(lst)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3, 4)), c(1, 2, 3, 4))))\n}\ntest_humaneval()"
    },
    {
        "id": 443,
        "code": "f <- function(text) {    for (space in text) {\n        if (space == ' ') {\n            text <- gsub(\"^\\\\s+\", \"\", text)\n        } else {\n            text <- gsub(\"cd\", space, text)\n        }\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('lorem ipsum'), 'lorem ipsum')))\n}\ntest_humaneval()"
    },
    {
        "id": 444
    },
    {
        "id": 445,
        "code": "f <- function(names) {    parts <- strsplit(names, ',')[[1]]\n    for (i in 1:length(parts)) {\n        parts[i] <- gsub(' and', '+', parts[i])\n        parts[i] <- tools::toTitleCase(parts[i])\n        parts[i] <- gsub('\\\\+', ' and', parts[i])\n    }\n    return(paste(parts, collapse=', '))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('carrot, banana, and strawberry'), 'Carrot,  Banana,  and Strawberry')))\n}\ntest_humaneval()"
    },
    {
        "id": 446,
        "code": "f <- function(array) {    l <- length(array)\n    if (l %% 2 == 0) {\n        array <- c()\n    } else {\n        array <- rev(array)\n    }\n    return(array)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c()), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 447,
        "code": "f <- function(text, tab_size) {    text <- gsub('\\t', paste(rep(' ', tab_size-1), collapse=''), text)\n    res <- ''\n    for (i in 1:nchar(text)) {\n        if (substr(text, i, i) == ' ') {\n            res <- paste0(res, '|')\n        } else {\n            res <- paste0(res, substr(text, i, i))\n        }\n    }\n    return(res)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('\\ta', 3), '||a')))\n}\ntest_humaneval()"
    },
    {
        "id": 448,
        "code": "f <- function(text, suffix) {    if(suffix == '') {\n        suffix <- NULL\n    }\n    return (substring(text, nchar(text) - nchar(suffix) + 1, nchar(text)) == suffix)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('uMeGndkGh', 'kG'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 449,
        "code": "f <- function(x) {    n <- nchar(x)\n    i <- 1\n    while (i <= n && grepl(\"^\\\\d$\", substr(x, i, i))) {\n        i <- i + 1\n    }\n    return(i == n + 1)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('1'), TRUE)))\n}\ntest_humaneval()"
    },
    {
        "id": 450,
        "code": "f <- function(strs) {    words <- strsplit(strs, \" \")[[1]]\n    for (i in seq(2, length(words), by = 2)) {\n        words[i] <- paste0(rev(strsplit(words[i], \"\")[[1]]), collapse = \"\")\n    }\n    return(paste(words, collapse = \" \"))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('K zBK'), 'K KBz')))\n}\ntest_humaneval()"
    },
    {
        "id": 451,
        "code": "f <- function(text, char) {    text <- unlist(strsplit(text, \"\"))\n    for (i in 1:length(text)) {\n        if (text[i] == char) {\n            text <- text[-i]\n            return(paste(text, collapse=\"\"))\n        }\n    }\n    paste(text, collapse=\"\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('pn', 'p'), 'n')))\n}\ntest_humaneval()"
    },
    {
        "id": 452,
        "code": "f <- function(text) {    counter <- 0\n    for (char in strsplit(text, '')[[1]]) {\n        if (char %in% letters) {\n            counter <- counter + 1\n        }\n    }\n    return(counter)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('l000*'), 1)))\n}\ntest_humaneval()"
    },
    {
        "id": 453,
        "code": "f <- function(string, c) {    return (substring(string, nchar(string) - nchar(c) + 1, nchar(string)) == c)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('wrsch)xjmb8', 'c'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 454,
        "code": "\nf <- function(d, count) {\n    new_dict <- list()\n    for (i in seq_len(count)) {\n        new_dict <- c(new_dict, d)\n    }\n    return(new_dict)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(\"'a'\" = 2, \"'b'\" = c(), \"'c'\" = list()), 0), list())))\n}\ntest_humaneval()"
    },
    {
        "id": 455,
        "code": "f <- function(text) {    uppers <- 0\n    for (c in strsplit(text, '')[[1]]) {\n        if (toupper(c) == c) {\n            uppers <- uppers + 1\n        }\n    }\n    if (uppers >= 10) {\n        return(toupper(text))\n    } else {\n        return(text)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('?XyZ'), '?XyZ')))\n}\ntest_humaneval()"
    },
    {
        "id": 456,
        "code": "f <- function(s, tab) {    gsub(\"\\t\", paste(rep(\" \", tab), collapse = \"\"), s)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Join us in Hungary', 4), 'Join us in Hungary')))\n}\ntest_humaneval()"
    },
    {
        "id": 457
    },
    {
        "id": 458,
        "code": "f <- function(text, search_chars, replace_chars) {    trans_table <- chartr(search_chars, replace_chars, text)\n    return(trans_table)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('mmm34mIm', 'mm3', ',po'), 'pppo4pIp')))\n}\ntest_humaneval()"
    },
    {
        "id": 459
    },
    {
        "id": 460,
        "code": "f <- function(text, amount) {    length <- nchar(text)\n    pre_text <- '|'\n    \n    if (amount >= length) {\n        extra_space <- amount - length\n        pre_text <- paste0(pre_text, rep(' ', extra_space %/% 2, collapse = ''))\n        return(paste0(pre_text, text, pre_text))\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('GENERAL NAGOOR', 5), 'GENERAL NAGOOR')))\n}\ntest_humaneval()"
    },
    {
        "id": 461,
        "code": "f <- function(text, search) {    startsWith(search, text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('123', '123eenhas0'), TRUE)))\n}\ntest_humaneval()"
    },
    {
        "id": 462,
        "code": "f <- function(text, value) {    length <- nchar(text)\n    letters <- strsplit(text, '')[[1]]\n    if (!(value %in% letters)) {\n        value <- letters[1]\n    }\n    return(paste(rep(value, length), collapse = ''))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('ldebgp o', 'o'), 'oooooooo')))\n}\ntest_humaneval()"
    },
    {
        "id": 463
    },
    {
        "id": 464,
        "code": "f <- function(ans) {    if (grepl(\"^\\\\d+$\", ans)) {\n        total <- as.numeric(ans) * 4 - 50\n        total <- total - length(grep(\"[^02468]\", strsplit(ans, \"\")[[1]])) * 100\n        return(total)\n    }\n    return('NAN')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('0'), -50)))\n}\ntest_humaneval()"
    },
    {
        "id": 465
    },
    {
        "id": 466,
        "code": "f <- function(text) {    length <- nchar(text)\n    index <- 1\n    while (index <= length && substr(text, index, index) %in% c(\" \", \"\\t\", \"\\n\", \"\\r\")) {\n        index <- index + 1\n    }\n    substr(text, index, index + 4)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('-----\\t\\n\\tth\\n-----'), '-----')))\n}\ntest_humaneval()"
    },
    {
        "id": 467,
        "code": "f <- function(nums) {    copy <- nums\n    newDict <- list()\n    for (k in names(copy)) {\n        newDict[k] <- length(copy[[k]])\n    }\n    return(newDict)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list()), list())))\n}\ntest_humaneval()"
    },
    {
        "id": 468,
        "code": "f <- function(a, b, n) {    result <- m <- b\n    for (i in 1:n) {\n        if (nchar(m) > 0) {\n            parts <- unlist(strsplit(a, m))\n            a <- paste(parts, collapse = '')\n            m <- NULL\n            result <- m <- b\n        }\n    }\n    return(paste(unlist(strsplit(a, b)), collapse = ''))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('unrndqafi', 'c', 2), 'unrndqafi')))\n}\ntest_humaneval()"
    },
    {
        "id": 469,
        "code": "\nf <- function(text, position, value) {    length <- nchar(text)\n    index <- (position %% length)\n    if (position < 0) {\n        index <- length %/% 2\n    }\n    new_text <- strsplit(text, '')[[1]]\n    new_text <- append(new_text, value, index)\n    new_text <- new_text[-length]\n    paste(new_text, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('sduyai', 1, 'y'), 'syduyi')))\n}\ntest_humaneval()"
    },
    {
        "id": 470,
        "code": "f <- function(number) {    transl <- list(A=1, B=2, C=3, D=4, E=5)\n    result <- c()\n    for (key in names(transl)) {\n        if (transl[[key]] %% number == 0) {\n            result <- c(result, key)\n        }\n    }\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(2), c('B', 'D'))))\n}\ntest_humaneval()"
    },
    {
        "id": 471,
        "code": "f <- function(val, text) {    indices <- which(text == val)\n    if (length(indices) == 0) {\n        return(-1)\n    } else {\n        return(indices[1])\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('o', 'fnmart'), -1)))\n}\ntest_humaneval()"
    },
    {
        "id": 472,
        "code": "f <- function(text) {    text <- gsub('-', '', text)\n    text <- tolower(text)\n    d <- table(strsplit(text, '')[[1]])\n    d <- sort(d)\n    return(as.vector(d))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('x--y-z-5-C'), c(1, 1, 1, 1, 1))))\n}\ntest_humaneval()"
    },
    {
        "id": 473,
        "code": "f <- function(text, value) {    indexes <- which(strsplit(text, '')[[1]] == value)\n    new_text <- strsplit(text, '')[[1]]\n    new_text <- new_text[-indexes]\n    paste(new_text, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('scedvtvotkwqfoqn', 'o'), 'scedvtvtkwqfqn')))\n}\ntest_humaneval()"
    },
    {
        "id": 474,
        "code": "\nf <- function(txt, marker) {\n    a <- c()\n    lines <- strsplit(txt, '\\n')[[1]]\n    for (line in lines) {\n        a <- c(a, paste0(line, collapse = ''))\n    }\n    return(paste0(a, collapse = '\\n'))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('#[)[]>[^e>\\n 8', -5), '#[)[]>[^e>\\n 8')))\n}\ntest_humaneval()"
    },
    {
        "id": 475,
        "code": "\nf <- function(array, index) {\n    if (index < 0) {\n        index <- length(array) + index\n    }\n    array[index + 1]\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1), 0), 1)))\n}\ntest_humaneval()"
    },
    {
        "id": 476,
        "code": "f <- function(a, split_on) {    t <- unlist(strsplit(a, split = \"\"))\n    if (split_on %in% t) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('booty boot-boot bootclass', 'k'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 477,
        "code": "\nf <- function(text) {    \n    topic <- sub('\\\\|.*', '', text)\n    problem <- ifelse(sub('.*\\\\|', '', text) == 'r', gsub('u', 'p', topic), sub('.*\\\\|', '', text))\n    return(c(topic, problem))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('|xduaisf'), c('', 'xduaisf'))))\n}\ntest_humaneval()"
    },
    {
        "id": 478
    },
    {
        "id": 479,
        "code": "\nf <- function(nums, pop1, pop2) {\n    nums <- nums[-c(pop1, pop2+1)]\n    print(nums)\n    return(nums)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 5, 2, 3, 6), 2, 4), c(1, 2, 3))))\n}\ntest_humaneval()"
    },
    {
        "id": 480,
        "code": "f <- function(s, c1, c2) {    if (s == '') {\n        return(s)\n    }\n    ls <- strsplit(s, c1)[[1]]\n    for (i in seq_along(ls)) {\n        if (c1 %in% ls[i]) {\n            ls[i] <- gsub(c1, c2, ls[i], fixed = TRUE)\n        }\n    }\n    return(paste(ls, collapse = c1))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('', 'mi', 'siast'), '')))\n}\ntest_humaneval()"
    },
    {
        "id": 481,
        "code": "f <- function(values, item1, item2) {    if (values[length(values)] == item2) {\n        if (!(values[1] %in% values[-1])) {\n            values <- c(values, values[1])\n        }\n    } else if (values[length(values)] == item1) {\n        if (values[1] == item2) {\n            values <- c(values, values[1])\n        }\n    }\n    values\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 1), 2, 3), c(1, 1))))\n}\ntest_humaneval()"
    },
    {
        "id": 482,
        "code": "f <- function(text) {    return(gsub('\\\\\\\\\\\"', '\"', text))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Because it intrigues them'), 'Because it intrigues them')))\n}\ntest_humaneval()"
    },
    {
        "id": 483
    },
    {
        "id": 484
    },
    {
        "id": 485,
        "code": "f <- function(tokens) {    tokens <- strsplit(tokens, \" \")[[1]]\n    if (length(tokens) == 2) {\n        tokens <- rev(tokens)\n    }\n    result <- paste(sprintf(\"%-5s\", tokens[1]), sprintf(\"%-5s\", tokens[2]))\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('gsd avdropj'), 'avdropj gsd  ')))\n}\ntest_humaneval()"
    },
    {
        "id": 486
    },
    {
        "id": 487,
        "code": "f <- function(dict) {    even_keys <- c()\n    for (key in names(dict)) {\n        key_num <- as.numeric(key)\n        if (key_num %% 2 == 0) {\n            even_keys <- c(even_keys, key_num)\n        }\n    }\n    return(even_keys)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(\"4\" = 'a')), c(4))))\n}\ntest_humaneval()"
    },
    {
        "id": 488
    },
    {
        "id": 489,
        "code": "f <- function(text, value) {    sub(value, \"\", tolower(text), fixed = TRUE)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('coscifysu', 'cos'), 'cifysu')))\n}\ntest_humaneval()"
    },
    {
        "id": 490,
        "code": "f <- function(s) {    paste0(unlist(strsplit(s, \"\"))[grepl(\"\\\\s\", unlist(strsplit(s, \"\")))], collapse = \"\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('\\ngiyixjkvu\\n\\r\\r \\x0crgjuo'), '\\n\\n\\r\\r \\x0c')))\n}\ntest_humaneval()"
    },
    {
        "id": 491,
        "code": "f <- function(xs) {    for (i in seq_along(xs)) {\n        xs <- c(xs, xs[length(xs) - i + 1], xs[length(xs) - i + 1])\n    }\n    return(xs)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(4, 8, 8, 5)), c(4, 8, 8, 5, 5, 5, 5, 5, 5, 5, 5, 5))))\n}\ntest_humaneval()"
    },
    {
        "id": 492,
        "code": "f <- function(text, value) {    ls <- strsplit(text, '')[[1]]\n    if ((sum(ls == value) %% 2) == 0) {\n        while (value %in% ls) {\n            ls <- ls[ls != value]\n        }\n    } else {\n        ls <- c()\n    }\n    paste(ls, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('abbkebaniuwurzvr', 'm'), 'abbkebaniuwurzvr')))\n}\ntest_humaneval()"
    },
    {
        "id": 493
    },
    {
        "id": 494,
        "code": "f <- function(num, l) {    t <- \"\"\n    while (l > nchar(num)) {\n        t <- paste0(t, '0')\n        l <- l - 1\n    }\n    return(paste0(t, num))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('1', 3), '001')))\n}\ntest_humaneval()"
    },
    {
        "id": 495
    },
    {
        "id": 496,
        "code": "\nf <- function(text, value) {\n    if (is.character(value)) {\n        return (sum(strsplit(text, '')[[1]] == value) + \n                sum(strsplit(text, '')[[1]] == tolower(value)))\n    }\n    return (sum(strsplit(text, '')[[1]] == value))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('eftw{ьТсk_1', '\\\\'), 0)))\n}\ntest_humaneval()"
    },
    {
        "id": 497,
        "code": "\nf <- function(n) {    b <- strsplit(as.character(n), '')[[1]]\n    if (length(b) > 2) {\n        b[3:length(b)] <- paste0(b[3:length(b)], '+')\n    }\n    return(b)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(44), c('4', '4'))))\n}\ntest_humaneval()"
    },
    {
        "id": 498,
        "code": "\nf <- function(nums, idx, added) {\n    nums <- append(nums, added, after=idx)\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(2, 2, 2, 3, 3), 2, 3), c(2, 2, 3, 2, 3, 3))))\n}\ntest_humaneval()"
    },
    {
        "id": 499,
        "code": "\nf <- function(text, length, fillchar) {\n    size = nchar(text)\n    if (size >= length) {\n        return(text)\n    } else {\n        return(paste(c(rep(fillchar, ceiling((length - size) / 2)), text, rep(fillchar, floor((length - size) / 2))), collapse = ''))\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('magazine', 25, '.'), '.........magazine........')))\n}\ntest_humaneval()"
    },
    {
        "id": 500,
        "code": "f <- function(text, delim) {    substr(text, 1, nchar(text) - nchar(sub(delim, \"\", text)))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('dsj osq wi w', ' '), 'd')))\n}\ntest_humaneval()"
    },
    {
        "id": 501,
        "code": "f <- function(text, char) {    index <- max(regexpr(char, text))\n    result <- strsplit(text, '')[[1]]\n    while (index > 1) {\n        result[index] <- result[index - 1]\n        result[index - 1] <- char\n        index <- index - 2\n    }\n    paste(result, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('qpfi jzm', 'j'), 'jqjfj zm')))\n}\ntest_humaneval()"
    },
    {
        "id": 502,
        "code": "f <- function(name) {    return(paste(strsplit(name, \" \")[[1]], collapse = \"*\"))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Fred Smith'), 'Fred*Smith')))\n}\ntest_humaneval()"
    },
    {
        "id": 503,
        "code": "\nf <- function(d) {\n    result <- vector(\"list\", length = length(d))\n    a <- b <- 0\n    while (length(d) > 0) {\n        keys <- as.integer(names(d))\n        idx <- which(keys == b)\n        result[[a + 1]] <- d[idx]\n        d <- d[-idx]\n        a <- b\n        b <- (b + 1) %% length(result)\n    }\n    return(unlist(result))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list()), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 504,
        "code": "f <- function(values) {    values <- sort(values)\n    values\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 1, 1, 1)), c(1, 1, 1, 1))))\n}\ntest_humaneval()"
    },
    {
        "id": 505,
        "code": "f <- function(string) {    while (nchar(string) > 0) {\n        if (grepl(\"[a-zA-Z]\", substr(string, nchar(string), nchar(string)))) {\n            return(string)\n        }\n        string <- substr(string, 1, nchar(string)-1)\n    }\n    return(string)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('--4/0-209'), '')))\n}\ntest_humaneval()"
    },
    {
        "id": 506,
        "code": "f <- function(n) {    p <- ''\n    if (n %% 2 == 1) {\n        p <- paste0(p, 'sn')\n    } else {\n        return(n * n)\n    }\n    for (x in 1:n) {\n        if (x %% 2 == 0) {\n            p <- paste0(p, 'to')\n        } else {\n            p <- paste0(p, 'ts')\n        }\n    }\n    return(p)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(1), 'snts')))\n}\ntest_humaneval()"
    },
    {
        "id": 507,
        "code": "f <- function(text, search) {    result <- tolower(text)\n    return(gregexpr(tolower(search), result)[[1]][1] - 1)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('car hat', 'car'), 0)))\n}\ntest_humaneval()"
    },
    {
        "id": 508,
        "code": "\nf <- function(text, sep, maxsplit) {\n    splitted <- strsplit(text, split = sep)[[1]]\n    length <- length(splitted)\n    new_splitted <- splitted[1:(length %/% 2)]\n    new_splitted <- rev(new_splitted)\n    new_splitted <- c(new_splitted, splitted[-(1:(length %/% 2))])\n    paste(new_splitted, collapse = sep)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('ertubwi', 'p', 5), 'ertubwi')))\n}\ntest_humaneval()"
    },
    {
        "id": 509,
        "code": "f <- function(value, width) {    if (value >= 0) {\n        paste0(strrep(\"0\", width-nchar(value)), value)\n    } else {\n        paste0('-', strrep(\"0\", width-nchar(abs(value))), abs(value))\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(5, 1), '5')))\n}\ntest_humaneval()"
    },
    {
        "id": 510
    },
    {
        "id": 511
    },
    {
        "id": 512,
        "code": "f <- function(s) {    nchar(s) == sum(unlist(strsplit(s, \"\")) %in% c(\"0\", \"1\"))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('102'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 513,
        "code": "\nf <- function(array) {\n    while (-1 %in% array) {\n        array <- array[-length(array) + 2]\n    }\n    while (0 %in% array) {\n        array <- array[-length(array)]\n    }\n    while (1 %in% array) {\n        array <- array[-1]\n    }\n    if (identical(array, numeric(0))) {\n        array <- c()\n    }\n    return(array)\n}\n\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(0, 2)), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 514,
        "code": "f <- function(text) {    words <- unlist(strsplit(text, \" \"))\n    for (item in words) {\n        text <- gsub(paste0(\"-\\\\b\", item, \"\\\\b\"), \" \", text)\n        text <- gsub(paste0(\"\\\\b\", item, \"-\"), \" \", text)\n    }\n    text <- gsub(\"^-|-$\", \"\", text)\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('-stew---corn-and-beans-in soup-.-'), 'stew---corn-and-beans-in soup-.')))\n}\ntest_humaneval()"
    },
    {
        "id": 515,
        "code": "\nf <- function(array) {\n    result <- rev(array)\n    result <- result * 2\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3, 4, 5)), c(10, 8, 6, 4, 2))))\n}\ntest_humaneval()"
    },
    {
        "id": 516,
        "code": "\nf <- function(strings, substr) {   \n  list <- unlist(lapply(strings, function(s) {if (startsWith(s, substr)) s else NULL}))\n  list[order(nchar(list))]\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('condor', 'eyes', 'gay', 'isa'), 'd'), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 517,
        "code": "f <- function(text) {    for (i in (nchar(text):1)) {\n        if (!grepl(\"[A-Z]\", substr(text, i, i))) {\n            return(substr(text, 1, i - 1))\n        }\n    }\n    return('')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('SzHjifnzog'), 'SzHjifnzo')))\n}\ntest_humaneval()"
    },
    {
        "id": 518,
        "code": "f <- function(text) {    !grepl(\"^\\\\d+$\", text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('the speed is -36 miles per hour'), TRUE)))\n}\ntest_humaneval()"
    },
    {
        "id": 519
    },
    {
        "id": 520,
        "code": "f <- function(album_sales) {    while(length(album_sales) != 1) {\n        album_sales <- c(album_sales[-1], album_sales[1])\n    }\n    return(album_sales[1])\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(6)), 6)))\n}\ntest_humaneval()"
    },
    {
        "id": 521,
        "code": "f <- function(nums) {    m <- max(nums)\n    for (i in seq_len(m)) {\n        nums <- rev(nums)\n    }\n    nums\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(43, 0, 4, 77, 5, 2, 0, 9, 77)), c(77, 9, 0, 2, 5, 77, 4, 0, 43))))\n}\ntest_humaneval()"
    },
    {
        "id": 522,
        "code": "\nf <- function(numbers) {\n    floats <- numbers %% 1\n    if (1 %in% floats) {\n        return(floats)\n    } else {\n        return(NULL)\n    }\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119)), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 523,
        "code": "f <- function(text) {    text <- strsplit(text, '')[[1]]\n    for (i in seq_along(text)) {\n        if (text[i] == ' ') {\n            text[i] <- '&nbsp;'\n        }\n    }\n    paste(text, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('   '), '&nbsp;&nbsp;&nbsp;')))\n}\ntest_humaneval()"
    },
    {
        "id": 524
    },
    {
        "id": 525
    },
    {
        "id": 526,
        "code": "f <- function(label1, char, label2, index) {    m <- max(regexpr(char, label1, fixed = TRUE))\n    if (m >= index) {\n        substr(label2, 1, m - index + 1)\n    } else {\n        paste0(substring(label1, m, nchar(label1)), substring(label2, index - m, nchar(label2)))\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('ekwies', 's', 'rpg', 1), 'rpg')))\n}\ntest_humaneval()"
    },
    {
        "id": 527,
        "code": "f <- function(text, value) {    sprintf(\"%-*s\", nchar(value), text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('!?', ''), '!?')))\n}\ntest_humaneval()"
    },
    {
        "id": 528
    },
    {
        "id": 529,
        "code": "f <- function(array) {    prev <- array[1]\n    newArray <- array\n    for (i in 2:length(array)) {\n        if (prev != array[i]) {\n            newArray[i] <- array[i]\n        } else {\n            newArray <- newArray[-i]\n        }\n        prev <- array[i]\n    }\n    return(newArray)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3)), c(1, 2, 3))))\n}\ntest_humaneval()"
    },
    {
        "id": 530,
        "code": "f <- function(s, ch) {    sl <- s\n    if (ch %in% strsplit(s, '')[[1]]) {\n        sl <- gsub(sprintf('^%s+', ch), '', s)\n        if (nchar(sl) == 0) {\n            sl <- paste0(sl, '!?')\n        }\n    } else {\n        return('no')\n    }\n    return(sl)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('@@@ff', '@'), 'ff')))\n}\ntest_humaneval()"
    },
    {
        "id": 531,
        "code": "\nf <- function(text, x) {\n    if (substr(text, 1, nchar(x)) != x) {\n        return(f(substr(text, 2, nchar(text)), x))\n    } else {\n        return(text)\n    }\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Ibaskdjgblw asdl ', 'djgblw'), 'djgblw asdl ')))\n}\ntest_humaneval()"
    },
    {
        "id": 532,
        "code": "f <- function(n, array) {    final <- list(array)\n    for (i in 1:n) {\n        arr <- array\n        arr <- c(arr, final[[length(final)]])\n        final <- c(final, list(arr))\n    }\n    return(final)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(1, c(1, 2, 3)), list(c(1, 2, 3), c(1, 2, 3, 1, 2, 3)))))\n}\ntest_humaneval()"
    },
    {
        "id": 533,
        "code": "f <- function(query, base) {    net_sum <- 0\n    for (key in names(base)) {\n        if (substring(key, 1, 1) == query & nchar(key) == 3) {\n            net_sum <- net_sum - base[[key]]\n        } else if (substring(key, 3, 3) == query & nchar(key) == 3) {\n            net_sum <- net_sum + base[[key]]\n        }\n    }\n    return(net_sum)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('a', list()), 0)))\n}\ntest_humaneval()"
    },
    {
        "id": 534,
        "code": "f <- function(sequence, value) {    i <- max(regexpr(value, sequence)[1] - nchar(sequence) %/% 3, 1)\n    result <- ''\n    for (j in 1:(nchar(sequence) - i + 1)) {\n        if (substr(sequence, i + j - 1, i + j - 1) == '+') {\n            result <- paste0(result, value)\n        } else {\n            result <- paste0(result, substr(sequence, i + j - 1, i + j - 1))\n        }\n    }\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('hosu', 'o'), 'hosu')))\n}\ntest_humaneval()"
    },
    {
        "id": 535,
        "code": "f <- function(n) {    n_str <- as.character(n)\n    for (n_char in strsplit(n_str, \"\")[[1]]) {\n        if (!(n_char %in% c(\"0\", \"1\", \"2\")) && !(as.numeric(n_char) %in% 5:9) ) {\n            return(FALSE)\n        }\n    }\n    return(TRUE)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(1341240312), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 536,
        "code": "f <- function(cat) {    digits <- 0\n    for (char in strsplit(cat, '')[[1]]) {\n        if (grepl('\\\\d', char)) {\n            digits <- digits + 1\n        }\n    }\n    return(digits)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('C24Bxxx982ab'), 5)))\n}\ntest_humaneval()"
    },
    {
        "id": 537,
        "code": "f <- function(text, value) {    new_text <- unlist(strsplit(text, ''))\n    \n    tryCatch({\n        new_text <- c(new_text, value)\n        length <- length(new_text)\n    }, error = function(e) {\n        length <- 0\n    })\n    \n    return(paste0('[', length, ']'))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('abv', 'a'), '[4]')))\n}\ntest_humaneval()"
    },
    {
        "id": 538,
        "code": "\nf <- function(text, width) {   \n    text = substr(text, 1, width)\n    paste(strrep('z', ceiling((width - nchar(text))/2)), text, strrep('z', floor((width - nchar(text))/2)), sep='')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('0574', 9), 'zzz0574zz')))\n}\ntest_humaneval()"
    },
    {
        "id": 539,
        "code": "\nf <- function(array) {    \n    c <- array\n    array_copy <- array\n\n    while (TRUE) {\n        c <- append(c, '_')\n        if (all(c == array_copy)) {\n            array_copy[which(c == '_')] <- ''\n            break\n        }\n    }\n    return(array_copy)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c()), c(''))))\n}\ntest_humaneval()"
    },
    {
        "id": 540,
        "code": "f <- function(a) {    b <- c(a)\n    for (k in seq(1, length(a) - 1, by = 2)) {\n        b <- append(b, b[k], after = k)\n    }\n    b <- append(b, b[1])\n    return(b)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(5, 5, 5, 6, 4, 9)), c(5, 5, 5, 5, 5, 5, 6, 4, 9, 5))))\n}\ntest_humaneval()"
    },
    {
        "id": 541,
        "code": "\nf <- function(text) {\n    grepl('^\\\\s*$', text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(' \\t  \\u3000'), TRUE)))\n}\ntest_humaneval()"
    },
    {
        "id": 542,
        "code": "f <- function(test, sep, maxsplit) {    tryCatch({\n        strsplit(test, sep, maxsplit)[[1]]\n    }, error = function(e) {\n        strsplit(test, ' ')[[1]]\n    })\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('ab cd', 'x', 2), c('ab cd'))))\n}\ntest_humaneval()"
    },
    {
        "id": 543,
        "code": "f <- function(item) {    modified <- gsub('\\\\. ', ' , ', item)\n    modified <- gsub('&#33; ', '! ', modified)\n    modified <- gsub('\\\\? ', '? ', modified)\n    modified <- gsub('\\\\. ', '. ', modified)\n    \n    modified <- paste0(toupper(substr(modified, 1, 1)), substr(modified, 2, nchar(modified)))\n    \n    return(modified)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('.,,,,,. منبت'), '.,,,,, , منبت')))\n}\ntest_humaneval()"
    },
    {
        "id": 544,
        "code": "f <- function(text) {    a <- unlist(strsplit(text, \"\\n\"))\n    b <- lapply(a, function(x) gsub(\"\\t\", \"    \", x))\n    return(paste(b, collapse = \"\\n\"))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('\\t\\t\\ttab tab tabulates'), '            tab tab tabulates')))\n}\ntest_humaneval()"
    },
    {
        "id": 545,
        "code": "f <- function(array) {    result <- c()\n    index <- 1\n    while (index <= length(array)) {\n        result <- c(result, array[length(array)])\n        array <- array[-length(array)]\n        index <- index + 2\n    }\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(8, 8, -4, -9, 2, 8, -1, 8)), c(8, -1, 8))))\n}\ntest_humaneval()"
    },
    {
        "id": 546,
        "code": "f <- function(text, speaker) {    while (startsWith(text, speaker)) {\n        text <- substr(text, start = nchar(speaker) + 1, stop = nchar(text))\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('[CHARRUNNERS]Do you know who the other was? [NEGMENDS]', '[CHARRUNNERS]'), 'Do you know who the other was? [NEGMENDS]')))\n}\ntest_humaneval()"
    },
    {
        "id": 547
    },
    {
        "id": 548,
        "code": "f <- function(text, suffix) {    if (nchar(suffix) > 0 && nchar(text) > 0 && substr(text, nchar(text) - nchar(suffix) + 1, nchar(text)) == suffix) {\n        substr(text, 1, nchar(text) - nchar(suffix))\n    } else {\n        text\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('spider', 'ed'), 'spider')))\n}\ntest_humaneval()"
    },
    {
        "id": 549,
        "code": "\nf <- function(matrix) {    matrix <- rev(matrix)\n    result <- list()\n    for (primary in matrix) {\n        primary <- sort(primary, decreasing = TRUE)\n        result <- c(result, list(primary))\n    }\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(c(1, 1, 1, 1))), list(c(1, 1, 1, 1)))))\n}\ntest_humaneval()"
    },
    {
        "id": 550,
        "code": "f <- function(nums) {    for (i in 1:length(nums)) {\n        nums <- c(nums[1:i-1], nums[i]^2, nums[i:length(nums)])\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 4)), c(1, 1, 1, 1, 2, 4))))\n}\ntest_humaneval()"
    },
    {
        "id": 551,
        "code": "f <- function(data) {    members <- c()\n    for (item in names(data)) {\n        for (member in data[[item]]) {\n            if (!(member %in% members)) {\n                members <- c(members, member)\n            }\n        }\n    }\n    sort(members)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(\"'inf'\" = c('a', 'b'), \"'a'\" = c('inf', 'c'), \"'d'\" = c('inf'))), c('a', 'b', 'c', 'inf'))))\n}\ntest_humaneval()"
    },
    {
        "id": 552
    },
    {
        "id": 553,
        "code": "\nf <- function(text, count) {    \n    for (i in 1:count) {\n        text = rev(strsplit(text, \"\")[[1]])\n        text = paste(text, collapse='')\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('439m2670hlsw', 3), 'wslh0762m934')))\n}\ntest_humaneval()"
    },
    {
        "id": 554,
        "code": "f <- function(arr) {    rev(arr)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(2, 0, 1, 9999, 3, -5)), c(-5, 3, 9999, 1, 0, 2))))\n}\ntest_humaneval()"
    },
    {
        "id": 555,
        "code": "f <- function(text, tabstop) {    text <- gsub('\\n', '_____', text)\n    text <- gsub('\\t', paste(rep(' ', tabstop), collapse = ''), text)\n    text <- gsub('_____', '\\n', text)\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('odes\\tcode\\twell', 2), 'odes  code  well')))\n}\ntest_humaneval()"
    },
    {
        "id": 556
    },
    {
        "id": 557,
        "code": "f <- function(s) {\n    d <- strsplit(s, 'ar', fixed = TRUE)[[1]]\n    if (length(d) == 1) {\n        return(s)\n    } else {\n        last_part <- tail(d, n = 1)\n        first_parts <- head(d, n = -1)\n        first_part <- paste(first_parts, collapse = 'ar')\n        return(paste(first_part, 'ar', last_part, sep = ' '))\n    }\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('xxxarmmarxx'), 'xxxarmm ar xx')))\n}\ntest_humaneval()"
    },
    {
        "id": 558,
        "code": "f <- function(nums, mos) {    for (num in mos) {\n        nums <- nums[-which(nums == num)]\n    }\n    nums <- sort(nums)\n    for (num in mos) {\n        nums <- c(nums, num)\n    }\n    for (i in 1:(length(nums)-1)) {\n        if (nums[i] > nums[i+1]) {\n            return(FALSE)\n        }\n    }\n    return(TRUE)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(3, 1, 2, 1, 4, 1), c(1)), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 559,
        "code": "f <- function(n) {    n <- as.character(n)\n    paste0(substring(n, 1, 1), '.', gsub('-', '_', substring(n, 2)))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('first-second-third'), 'f.irst_second_third')))\n}\ntest_humaneval()"
    },
    {
        "id": 560,
        "code": "f <- function(text) {    x <- 0\n    if (grepl(\"^[a-z]+$\", text)) {\n        for (c in strsplit(text, \"\")[[1]]) {\n            if (as.numeric(c) %in% 0:9) {\n                x <- x + 1\n            }\n        }\n    }\n    return(x)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('591237865'), 0)))\n}\ntest_humaneval()"
    },
    {
        "id": 561,
        "code": "f <- function(text, digit) {    count <- nchar(gsub(sprintf(\"[^%s]\", digit), \"\", text))\n    as.numeric(digit) * count\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('7Ljnw4Lj', '7'), 7)))\n}\ntest_humaneval()"
    },
    {
        "id": 562,
        "code": "f <- function(text) {    text == toupper(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('VTBAEPJSLGAHINS'), TRUE)))\n}\ntest_humaneval()"
    },
    {
        "id": 563,
        "code": "f <- function(text1, text2) {    nums <- sapply(strsplit(text2, \"\")[[1]], function(x) nchar(gsub(paste0(\"[^\", x, \"]\"), \"\", text1)))\n    sum(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('jivespdcxc', 'sx'), 2)))\n}\ntest_humaneval()"
    },
    {
        "id": 564,
        "code": "\nf <- function(lists) {    lists[[2]] <- append(lists[[2]], lists[[1]])\n    return(lists[[1]])\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(c(395, 666, 7, 4), c(), c(4223, 111))), c(395, 666, 7, 4))))\n}\ntest_humaneval()"
    },
    {
        "id": 565,
        "code": "\nf <- function(text) {\n    vowels <- c('a', 'e', 'i', 'o', 'u')\n    max_index <- -1\n    for (vowel in vowels) {\n        index <- gregexpr(vowel, text)[[1]][1]\n        if (index > max_index) {\n            max_index <- index\n        }\n    }\n    if (max_index == -1) {\n        return(NA)\n    } else {\n        return(max_index - 1)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('qsqgijwmmhbchoj'), 13)))\n}\ntest_humaneval()"
    },
    {
        "id": 566,
        "code": "f <- function(string, code) {    t <- ''\n    tryCatch({\n        t <- iconv(string, to = \"UTF-8\", from = code)\n        if (substring(t, nchar(t)) == '\\n') {\n            t <- substr(t, 1, nchar(t) - 1)\n        }\n        return(t)\n    }, error = function(e) {\n        return(t)\n    })\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('towaru', 'UTF-8'), 'towaru')))\n}\ntest_humaneval()"
    },
    {
        "id": 567,
        "code": "f <- function(s, n) {  ls <- strsplit(s, \" \")[[1]]\n  out <- character(0)\n  while (length(ls) >= n) {\n    out <- c(out, tail(ls, n))\n    ls <- head(ls, -n)\n  }\n  return(c(ls, paste(out, collapse = \"_\")))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('one two three four five', 3), c('one', 'two', 'three_four_five'))))\n}\ntest_humaneval()"
    },
    {
        "id": 568,
        "code": "f <- function(num) {    letter <- 1\n    for (i in strsplit('1234567890', '')[[1]]) {\n        num <- gsub(i, '', num)\n        if (nchar(num) == 0) break\n        num <- paste(substr(num, letter + 1, nchar(num)), substr(num, 1, letter), sep = '')\n        letter <- letter + 1\n    }\n    return(num)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('bwmm7h'), 'mhbwm')))\n}\ntest_humaneval()"
    },
    {
        "id": 569,
        "code": "f <- function(txt) {    coincidences <- vector(\"list\", length = nchar(txt))\n    for (i in seq_len(nchar(txt))) {\n        c <- substr(txt, i, i)\n        if (c %in% names(coincidences)) {\n            coincidences[[c]] <- coincidences[[c]] + 1\n        } else {\n            coincidences[[c]] <- 1\n        }\n    }\n    sum(unlist(coincidences))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('11 1 1'), 6)))\n}\ntest_humaneval()"
    },
    {
        "id": 570,
        "code": "f <- function(array, index, value) {    array <- c(index + 1, array)\n    if (value >= 1) {\n        array <- c(head(array, index), value, tail(array, length(array) - index))\n    }\n    return(array)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(2), 0, 2), c(2, 1, 2))))\n}\ntest_humaneval()"
    },
    {
        "id": 571,
        "code": "f <- function(input_string, spaces) {    gsub(\"\\t\", paste(rep(\" \", spaces), collapse = \"\"), input_string)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('a\\\\tb', 4), 'a\\\\tb')))\n}\ntest_humaneval()"
    },
    {
        "id": 572
    },
    {
        "id": 573,
        "code": "f <- function(string, prefix) {    if (startsWith(string, prefix)) {\n        substring(string, first = nchar(prefix) + 1)\n    } else {\n        string\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Vipra', 'via'), 'Vipra')))\n}\ntest_humaneval()"
    },
    {
        "id": 574,
        "code": "f <- function(simpons) {    while (length(simpons) > 0) {\n        pop <- tail(simpons, 1)\n        simpons <- head(simpons, -1)\n        if (pop == tools::toTitleCase(pop)) {\n            return(pop)\n        }\n    }\n    return(pop)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('George', 'Michael', 'George', 'Costanza')), 'Costanza')))\n}\ntest_humaneval()"
    },
    {
        "id": 575,
        "code": "f <- function(nums, val) {    new_list <- unlist(lapply(nums, function(i) rep(i, val)))\n    sum(new_list)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(10, 4), 3), 42)))\n}\ntest_humaneval()"
    },
    {
        "id": 576,
        "code": "\nf <- function(array, const) {    output <- c('x')\n    for (i in 1:length(array)) {\n        if (i %% 2 != 0) {\n            output <- c(output, as.character(array[i] * -2))\n        } else {\n            output <- c(output, as.character(const))\n        }\n    }\n    return(output)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3), -1), c('x', '-2', '-1', '-6'))))\n}\ntest_humaneval()"
    },
    {
        "id": 577,
        "code": "f <- function(items) {    result <- list()\n    for (i in seq_along(items)) {\n        d <- as.list(items)\n        d <- d[-i]\n        result <- c(result, list(d))\n        items <- d\n    }\n    result\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(list(1, 'pos'))), list(list()))))\n}\ntest_humaneval()"
    },
    {
        "id": 578,
        "code": "f <- function(obj) {    for (k in names(obj)) {\n        if (obj[[k]] >= 0) {\n            obj[[k]] <- -obj[[k]]\n        }\n    }\n    return(obj)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(\"'R'\" = 0, \"'T'\" = 3, \"'F'\" = -6, \"'K'\" = 0)), list(\"'R'\" = 0, \"'T'\" = -3, \"'F'\" = -6, \"'K'\" = 0))))\n}\ntest_humaneval()"
    },
    {
        "id": 579,
        "code": "f <- function(text) {    if (tools::toTitleCase(text) == text) {\n        if (nchar(text) > 1 && tolower(text) != text) {\n            return(paste(tolower(substr(text, 1, 1)), substr(text, 2, nchar(text)), sep = ''))\n        }\n    } else if (grepl(\"^[A-Za-z]*$\", text)) {\n        return(tools::toTitleCase(text))\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(''), '')))\n}\ntest_humaneval()"
    },
    {
        "id": 580
    },
    {
        "id": 581
    },
    {
        "id": 582,
        "code": "f <- function(k, j) {    arr <- vector(length = k)\n    for (i in 1:k) {\n        arr[i] <- j\n    }\n    return(arr)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(7, 5), c(5, 5, 5, 5, 5, 5, 5))))\n}\ntest_humaneval()"
    },
    {
        "id": 583,
        "code": "f <- function(text, ch) {    result <- character()\n    for (line in strsplit(text, \"\\n\")[[1]]) {\n        if (nchar(line) > 0 && substr(line, 1, 1) == ch) {\n            result <- c(result, tolower(line))\n        } else {\n            result <- c(result, toupper(line))\n        }\n    }\n    paste(result, collapse = \"\\n\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('t\\nza\\na', 't'), 't\\nZA\\nA')))\n}\ntest_humaneval()"
    },
    {
        "id": 584,
        "code": "\nf <- function(txt) {    return(txt) }\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('5123807309875480094949830'), '5123807309875480094949830')))\n}\ntest_humaneval()"
    },
    {
        "id": 585,
        "code": "f <- function(text) {    count <- nchar(text) - nchar(gsub(substr(text, 1, 1), \"\", text))\n    ls <- strsplit(text, \"\")[[1]]\n    for (i in 1:count) {\n        ls <- ls[-1]\n    }\n    paste(ls, collapse = \"\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(';,,,?'), ',,,?')))\n}\ntest_humaneval()"
    },
    {
        "id": 586,
        "code": "f <- function(text, char) {    nchar(text) - nchar(sub(char, \"\", text)) + 1\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('breakfast', 'e'), 2)))\n}\ntest_humaneval()"
    },
    {
        "id": 587,
        "code": "f <- function(nums, fill) {\n    ans <- as.list(setNames(rep(fill, length(unique(nums))), unique(nums)))\n    return(ans)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(0, 1, 1, 2), 'abcca'), list(\"0\" = 'abcca', \"1\" = 'abcca', \"2\" = 'abcca'))))\n}\ntest_humaneval()"
    },
    {
        "id": 588,
        "code": "\nf <- function(items, target) {    \n    if (target %in% items) {\n        return(which(items == target) - 1)\n    }\n    return(-1)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('1', '+', '-', '**', '//', '*', '+'), '**'), 3)))\n}\ntest_humaneval()"
    },
    {
        "id": 589,
        "code": "f <- function(num) {    num[length(num) + 1] <- num[length(num)]\n    return(num)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(-70, 20, 9, 1)), c(-70, 20, 9, 1, 1))))\n}\ntest_humaneval()"
    },
    {
        "id": 590,
        "code": "f <- function(text) {    for (i in 10:1) {\n        text <- gsub(paste0(\"^\", i), \"\", text)\n    }\n    text\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('25000   $'), '5000   $')))\n}\ntest_humaneval()"
    },
    {
        "id": 591
    },
    {
        "id": 592,
        "code": "f <- function(numbers) {    new_numbers <- vector(\"numeric\", length = length(numbers))\n    for (i in 1:length(numbers)) {\n        new_numbers[i] <- numbers[length(numbers) - i + 1]\n    }\n    return(new_numbers)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(11, 3)), c(3, 11))))\n}\ntest_humaneval()"
    },
    {
        "id": 593,
        "code": "f <- function(nums, n) {    pos <- length(nums)\n    for (i in seq_along(-length(nums): -1)) {\n        nums <- append(nums, nums[i], after = pos)\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(), 14), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 594,
        "code": "f <- function(file) {    return(gregexpr(\"\\n\", file)[[1]][1] - 1)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('n wez szize lnson tilebi it 504n.\\n'), 33)))\n}\ntest_humaneval()"
    },
    {
        "id": 595,
        "code": "\nf <- function(text, prefix) {\n    if (startsWith(text, prefix)) {\n        text <- sub(prefix, \"\", text)\n    }\n    text <- paste(toupper(substring(text, 1, 1)), tolower(substring(text, 2)), sep=\"\")\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('qdhstudentamxupuihbuztn', 'jdm'), 'Qdhstudentamxupuihbuztn')))\n}\ntest_humaneval()"
    },
    {
        "id": 596,
        "code": "f <- function(txt, alpha) {\n    txt <- sort(txt)\n    if ((which(txt == alpha)[1] - 1) %% 2 == 0) {\n        return(rev(txt))\n    }\n    return(txt)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('8', '9', '7', '4', '3', '2'), '9'), c('2', '3', '4', '7', '8', '9'))))\n}\ntest_humaneval()"
    },
    {
        "id": 597,
        "code": "f <- function(s) {    toupper(s)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Jaafodsfa SOdofj AoaFjIs  JAFasIdfSa1'), 'JAAFODSFA SODOFJ AOAFJIS  JAFASIDFSA1')))\n}\ntest_humaneval()"
    },
    {
        "id": 598,
        "code": "f <- function(text, n) {    length_text <- nchar(text)\n    substr(text, length_text * (n%%4) + 1, length_text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('abc', 1), '')))\n}\ntest_humaneval()"
    },
    {
        "id": 599,
        "code": "\nf <- function(a, b) {\n    a = paste(a, collapse = b)\n    lst = list()\n    for (i in seq(1, nchar(a), 2)) {\n        lst = append(lst, list(substr(a, i, i+i-1)))\n        lst = append(lst, list(substr(a, i+i, nchar(a))))\n    }\n    return(unlist(lst))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('a', 'b', 'c'), ' '), c('a', ' b c', 'b c', '', 'c', ''))))\n}\ntest_humaneval()"
    },
    {
        "id": 600,
        "code": "\nf <- function(array) {\n    just_ns <- lapply(array, function(num) paste(rep(\"n\", num), collapse=\"\"))\n    final_output <- unlist(just_ns)\n    return(final_output)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c()), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 601,
        "code": "\nf <- function(text) {    t <- 5\n    tab <- character()\n    for (i in strsplit(text, '')[[1]]) {\n        if (tolower(i) %in% strsplit('aeiouy', '')[[1]]) {\n            tab <- c(tab, paste(replicate(t, toupper(i)), collapse = ''))\n        } else {\n            tab <- c(tab, paste(replicate(t, i), collapse = ''))\n        }\n    }\n    paste(tab, collapse = ' ')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('csharp'), 'ccccc sssss hhhhh AAAAA rrrrr ppppp')))\n}\ntest_humaneval()"
    },
    {
        "id": 602,
        "code": "f <- function(nums, target) {    cnt <- sum(nums == target)\n    return(cnt * 2)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 1), 1), 4)))\n}\ntest_humaneval()"
    },
    {
        "id": 603,
        "code": "f <- function(sentences) {    if(all(sapply(strsplit(sentences, '\\\\.'), function(sentence) all(grepl('^\\\\d+$', sentence))))){\n        return('oscillating')\n    } else {\n        return('not oscillating')\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('not numbers'), 'not oscillating')))\n}\ntest_humaneval()"
    },
    {
        "id": 604,
        "code": "f <- function(text, start) {    startsWith(text, start)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Hello world', 'Hello'), TRUE)))\n}\ntest_humaneval()"
    },
    {
        "id": 605,
        "code": "f <- function(nums) {    nums <- integer(0)\n    return(\"quack\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(2, 5, 1, 7, 9, 3)), 'quack')))\n}\ntest_humaneval()"
    },
    {
        "id": 606,
        "code": "f <- function(value) {    ls <- strsplit(value, '')[[1]]\n    ls <- c(ls, 'NHIB')\n    paste(ls, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('ruam'), 'ruamNHIB')))\n}\ntest_humaneval()"
    },
    {
        "id": 607,
        "code": "f <- function(text) {    for (i in c('.', '!', '?')) {\n        if (substring(text, nchar(text), nchar(text)) == i) {\n            return(TRUE)\n        }\n    }\n    return(FALSE)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('. C.'), TRUE)))\n}\ntest_humaneval()"
    },
    {
        "id": 608,
        "code": "f <- function(aDict) {    # transpose the keys and values into a new dict\n    return(aDict)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(\"1\" = 1, \"2\" = 2, \"3\" = 3)), list(\"1\" = 1, \"2\" = 2, \"3\" = 3))))\n}\ntest_humaneval()"
    },
    {
        "id": 609,
        "code": "f <- function(array, elem) {    result <- array\n    while(length(result) > 0) {\n        key <- names(result)[length(result)]\n        value <- result[[key]]\n        if (identical(elem, key) || identical(elem, value)) {\n            result <- c(result, array)\n        }\n        result <- result[!names(result) == key]\n    }\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(), 1), list())))\n}\ntest_humaneval()"
    },
    {
        "id": 610
    },
    {
        "id": 611,
        "code": "f <- function(nums) {    nums <- rev(nums)\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(-6, -2, 1, -3, 0, 1)), c(1, 0, -3, 1, -2, -6))))\n}\ntest_humaneval()"
    },
    {
        "id": 612,
        "code": "f <- function(d) {    as.list(d)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(\"'a'\" = 42, \"'b'\" = 1337, \"'c'\" = -1, \"'d'\" = 5)), list(\"'a'\" = 42, \"'b'\" = 1337, \"'c'\" = -1, \"'d'\" = 5))))\n}\ntest_humaneval()"
    },
    {
        "id": 613
    },
    {
        "id": 614,
        "code": "f <- function(text, substr, occ) {    n <- 0\n    while (TRUE) {\n        i <- max(gregexpr(substr, text, fixed = TRUE)[[1]])\n        if (i == -1) {\n            break\n        } else if (n == occ) {\n            return(i)\n        } else {\n            n <- n + 1\n            text <- substr(text, 1, i - 1)\n        }\n    }\n    return(-1)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('zjegiymjc', 'j', 2), -1)))\n}\ntest_humaneval()"
    },
    {
        "id": 615,
        "code": "f <- function(in_list, num) {    in_list <- c(in_list, num)\n    return(which.max(in_list[1:length(in_list) - 1]) - 1)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(-1, 12, -6, -2), -1), 1)))\n}\ntest_humaneval()"
    },
    {
        "id": 616,
        "code": "\nf <- function(body) {\n    ls <- strsplit(body, \"\")[[1]]\n    dist <- 0\n    for (i in 1:(length(ls) - 1)) {\n        if (ls[max(i - 2, 1)] == '\\t') {\n            dist <- dist + (1 + sum(unlist(strsplit(ls[max(i - 1, 1)],'\\t')))) * 3\n        }\n        ls[i] <- paste0('[', ls[i], ']')\n    }\n    return(paste0(ls, collapse = ''))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('\\n\\ny\\n'), '[\\n][\\n][y]\\n')))\n}\ntest_humaneval()"
    },
    {
        "id": 617,
        "code": "f <- function(text) {    if (grepl(\"^[\\\\x00-\\\\x7F]*$\", text)) {\n        return('ascii')\n    } else {\n        return('non ascii')\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('<<<<'), 'ascii')))\n}\ntest_humaneval()"
    },
    {
        "id": 618,
        "code": "f <- function(match, fill, n) {    paste0(substr(fill, 1, n), match)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('9', '8', 2), '89')))\n}\ntest_humaneval()"
    },
    {
        "id": 619,
        "code": "f <- function(title) {    tolower(title)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('   Rock   Paper   SCISSORS  '), '   rock   paper   scissors  ')))\n}\ntest_humaneval()"
    },
    {
        "id": 620,
        "code": "f <- function(x) {    paste0(strsplit(x, '')[[1]][length(strsplit(x, '')[[1]]):1], collapse=' ')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('lert dna ndqmxohi3'), '3 i h o x m q d n   a n d   t r e l')))\n}\ntest_humaneval()"
    },
    {
        "id": 621,
        "code": "\nf <- function(text, encoding) {\n    tryCatch(\n        {\n            encText <- base::enc2utf8(text)\n            paste0(\"b'\", encText, \"'\")\n        },\n        error = function(e) {\n            \"<class 'LookupError'>\"\n        }\n    )\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('13:45:56', 'shift_jis'), \"b'13:45:56'\")))\n}\ntest_humaneval()"
    },
    {
        "id": 622
    },
    {
        "id": 623,
        "code": "f <- function(text, rules) {    for (rule in rules) {\n        if (rule == '@') {\n            text <- strsplit(text, \"\")[[1]]\n            text <- rev(text)\n            text <- paste(text, collapse = \"\")\n        } else if (rule == '~') {\n            text <- toupper(text)\n        } else if (nchar(text) > 0 && substr(text, nchar(text), nchar(text)) == rule) {\n            text <- substr(text, 1, nchar(text) - 1)\n        }\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('hi~!', c('~', '`', '!', '&')), 'HI~')))\n}\ntest_humaneval()"
    },
    {
        "id": 624,
        "code": "f <- function(text, char) {    char_index <- regexpr(char, text)\n    result <- character()\n    if (char_index > 0) {\n        result <- strsplit(text, '')[[1]][1:(char_index-1)]\n    }\n    result <- c(result, strsplit(char, '')[[1]], strsplit(text, '')[[1]][(char_index + nchar(char)):nchar(text)])\n    paste(result, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('llomnrpc', 'x'), 'xllomnrpc')))\n}\ntest_humaneval()"
    },
    {
        "id": 625,
        "code": "f <- function(text) {    count <- 0\n    for (i in strsplit(text, '')[[1]]) {\n        if (i %in% c('.', '!', '?', ',', '.')) {\n            count <- count + 1\n        }\n    }\n    return(count)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('bwiajegrwjd??djoda,?'), 4)))\n}\ntest_humaneval()"
    },
    {
        "id": 626,
        "code": "\nf <- function(line, equalityMap) {\n    rs <- setNames(sapply(equalityMap, `[`, 2), sapply(equalityMap, `[`, 1))\n    chartr(paste(names(rs), collapse = ''), paste(rs, collapse = ''), line)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('abab', list(c('a', 'b'), c('b', 'a'))), 'baba')))\n}\ntest_humaneval()"
    },
    {
        "id": 627,
        "code": "f <- function(parts) {\n    parts_dict <- list()\n    for (part in parts) {\n        parts_dict[[part[[1]]]] <- part[[2]]\n    }\n    return(as.integer(unlist(parts_dict)))\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(list('u', 1), list('s', 7), list('u', -5))), c(-5, 7))))\n}\ntest_humaneval()"
    },
    {
        "id": 628,
        "code": "f <- function(nums, delete) {    nums <- nums[nums != delete]\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(4, 5, 3, 6, 1), 5), c(4, 3, 6, 1))))\n}\ntest_humaneval()"
    },
    {
        "id": 629,
        "code": "\nf <- function(text, dng) {\n    if (!grepl(dng, text)) {\n        return(text)\n    }\n    if (substr(text, nchar(text) - nchar(dng) + 1, nchar(text)) == dng) {\n        return(substr(text, 1, nchar(text) - nchar(dng)))\n    }\n    return(paste0(substr(text, 1, nchar(text) - 1), f(substr(text, 1, nchar(text) - 2), dng)))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('catNG', 'NG'), 'cat')))\n}\ntest_humaneval()"
    },
    {
        "id": 630,
        "code": "f <- function(original, string) {\n    temp <- original\n    for (a in names(string)) {\n        b <- string[[a]]\n        temp[[as.character(b)]] <- as.integer(a)\n    }\n    return(temp)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(\"1\" = -9, \"0\" = -7), list(\"1\" = 2, \"0\" = 3)), list(\"1\" = -9, \"0\" = -7, \"2\" = 1, \"3\" = 0))))\n}\ntest_humaneval()"
    },
    {
        "id": 631
    },
    {
        "id": 632,
        "code": "f <- function(lst) {    n <- length(lst)\n    for (i in 1:(n-1)) {\n        for (j in 1:(n-i)) {\n            if (lst[j] > lst[j+1]) {\n                temp <- lst[j]\n                lst[j] <- lst[j+1]\n                lst[j+1] <- temp\n            }\n        }\n    }\n    return(lst)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(63, 0, 1, 5, 9, 87, 0, 7, 25, 4)), c(0, 0, 1, 4, 5, 7, 9, 25, 63, 87))))\n}\ntest_humaneval()"
    },
    {
        "id": 633,
        "code": "\nf <- function(array, elem) {\n    array <- rev(array)\n    found <- match(elem, array)\n    array <- rev(array)\n    return(found - 1)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(5, -3, 3, 2), 2), 0)))\n}\ntest_humaneval()"
    },
    {
        "id": 634,
        "code": "f <- function(input_string) {    table <- chartr(\"aioe\", \"ioua\", input_string)\n    while(\"a\" %in% strsplit(input_string, \"\")[[1]] | \"A\" %in% strsplit(input_string, \"\")[[1]]) {\n        input_string <- chartr(\"aioe\", \"ioua\", input_string)\n    }\n    return(input_string)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('biec'), 'biec')))\n}\ntest_humaneval()"
    },
    {
        "id": 635,
        "code": "f <- function(text) {    valid_chars <- c('-', '_', '+', '.', '/', ' ')\n    text <- toupper(text)\n    for (char in strsplit(text, '')[[1]]) {\n        if (!grepl(char, pattern = '[A-Za-z0-9]') && !(char %in% valid_chars)) {\n            return(FALSE)\n        }\n    }\n    return(TRUE)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 636
    },
    {
        "id": 637,
        "code": "f <- function(text) {    words <- unlist(strsplit(text, \" \"))\n    for (word in words) {\n        if (!grepl(\"^\\\\d+$\", word)) {\n            return('no')\n        }\n    }\n    return('yes')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('03625163633 d'), 'no')))\n}\ntest_humaneval()"
    },
    {
        "id": 638,
        "code": "f <- function(s, suffix) {    if (suffix == \"\") {\n        return(s)\n    }\n    while (substring(s, nchar(s) - nchar(suffix) + 1) == suffix) {\n        s <- substr(s, 1, nchar(s) - nchar(suffix))\n    }\n    return(s)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('ababa', 'ab'), 'ababa')))\n}\ntest_humaneval()"
    },
    {
        "id": 639,
        "code": "f <- function(perc, full) {    reply <- \"\"\n    i <- 1\n    while (i <= nchar(perc) && i <= nchar(full) && substr(perc, i, i) == substr(full, i, i)) {\n        if (substr(perc, i, i) == substr(full, i, i)) {\n            reply <- paste0(reply, \"yes \")\n        } else {\n            reply <- paste0(reply, \"no \")\n        }\n        i <- i + 1\n    }\n    return(reply)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('xabxfiwoexahxaxbxs', 'xbabcabccb'), 'yes ')))\n}\ntest_humaneval()"
    },
    {
        "id": 640,
        "code": "\nf <- function(text) {    \n    a <- 0\n    if (strsplit(text, '')[[1]][1] %in% strsplit(text, '')[[1]][2:length(text)]) {\n        a <- a + 1\n    }\n    for (i in 1:(nchar(text)-1)) {\n        if (strsplit(text, '')[[1]][i] %in% strsplit(text, '')[[1]][(i+1):nchar(text)]) {\n            a <- a + 1\n        }\n    }\n    return(a)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('3eeeeeeoopppppppw14film3oee3'), 18)))\n}\ntest_humaneval()"
    },
    {
        "id": 641,
        "code": "f <- function(number) {    return(is.numeric(number))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('dummy33;d'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 642,
        "code": "f <- function(text) {    i <- 1\n    while (i <= nchar(text) && substr(text, i, i) == \" \") {\n        i <- i + 1\n    }\n    if (i > nchar(text)) {\n        return('space')\n    } else {\n        return('no')\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('     '), 'space')))\n}\ntest_humaneval()"
    },
    {
        "id": 643,
        "code": "f <- function(text, suffix) {    if (substring(text, nchar(text) - nchar(suffix) + 1) == suffix) {\n        text <- paste0(substring(text, 1, nchar(text) - 1), toupper(substring(text, nchar(text), nchar(text))))\n    }\n    text\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('damdrodm', 'm'), 'damdrodM')))\n}\ntest_humaneval()"
    },
    {
        "id": 644,
        "code": "f <- function(nums, pos) {    s <- seq_along(nums)\n    if (pos %% 2 == 1) {\n        s <- seq_along(nums)[-length(nums)]\n    }\n    nums[s] <- rev(nums[s])\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(6, 1), 3), c(6, 1))))\n}\ntest_humaneval()"
    },
    {
        "id": 645,
        "code": "f <- function(nums, target) {    if (sum(nums == 0) > 0) {\n        return(0)\n    } else if (sum(nums == target) < 3) {\n        return(1)\n    } else {\n        return(which(nums == target)[1])\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 1, 1, 2), 3), 1)))\n}\ntest_humaneval()"
    },
    {
        "id": 646,
        "code": "f <- function(text, count) {    for (i in 1:count) {\n        text <- paste(rev(strsplit(text, \"\")[[1]]), collapse = \"\")\n    }\n    text\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('aBc, ,SzY', 2), 'aBc, ,SzY')))\n}\ntest_humaneval()"
    },
    {
        "id": 647,
        "code": "f <- function(text, chunks) {    unlist(strsplit(text, \"\\n\"))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('/alcm@ an)t//eprw)/e!/d\\nujv', 0), c('/alcm@ an)t//eprw)/e!/d', 'ujv'))))\n}\ntest_humaneval()"
    },
    {
        "id": 648,
        "code": "f <- function(list1, list2) {    l <- list1\n    while (length(l) > 0) {\n        if (tail(l, 1) %in% list2) {\n            l <- head(l, -1)\n        } else {\n            return(tail(l, 1))\n        }\n    }\n    return('missing')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(0, 4, 5, 6), c(13, 23, -5, 0)), 6)))\n}\ntest_humaneval()"
    },
    {
        "id": 649,
        "code": "f <- function(text, tabsize) {    paste(\n        lapply(strsplit(text, \"\\n\")[[1]], function(t) {\n            gsub(\"\\t\", paste(rep(\" \", tabsize), collapse = \"\"), t)\n        }),\n        collapse = \"\\n\"\n    )\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('\\tf9\\n\\tldf9\\n\\tadf9!\\n\\tf9?', 1), ' f9\\n ldf9\\n adf9!\\n f9?')))\n}\ntest_humaneval()"
    },
    {
        "id": 650,
        "code": "f <- function(string, substring) {    while (startsWith(string, substring)) {\n        string <- substr(string, nchar(substring) + 1, nchar(string))\n    }\n    string\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('', 'A'), '')))\n}\ntest_humaneval()"
    },
    {
        "id": 651,
        "code": "\nf <- function(text, letter) {\n    if (letter %in% letters) letter <- toupper(letter)\n    text <- gsub(letter, toupper(letter), text, fixed = TRUE)\n    text <- paste0(toupper(substring(text, 1, 1)), substring(text, 2))\n    return(text)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('E wrestled evil until upperfeat', 'e'), 'E wrestled evil until upperfeat')))\n}\ntest_humaneval()"
    },
    {
        "id": 652,
        "code": "f <- function(string) {    if (nchar(string) == 0 || !grepl('^[0-9]', string)) {\n        return('INVALID')\n    }\n    cur <- 0\n    for (i in 1:nchar(string)) {\n        cur <- cur * 10 + as.numeric(substr(string, i, i))\n    }\n    return(as.character(cur))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('3'), '3')))\n}\ntest_humaneval()"
    },
    {
        "id": 653,
        "code": "\nf <- function(text, letter) {    t <- text\n    for (alph in strsplit(text, '')[[1]]) {\n        t <- gsub(alph, \"\", t)\n    }\n    return(length(strsplit(t, '')[[1]]) + 1 - sum(strsplit(t, '')[[1]] == ''))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('c, c, c ,c, c', 'c'), 1)))\n}\ntest_humaneval()"
    },
    {
        "id": 654,
        "code": "f <- function(s, from_c, to_c) {    chartr(from_c, to_c, s)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('aphid', 'i', '?'), 'aph?d')))\n}\ntest_humaneval()"
    },
    {
        "id": 655,
        "code": "f <- function(s) {    gsub('a', '', gsub('r', '', s))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('rpaar'), 'p')))\n}\ntest_humaneval()"
    },
    {
        "id": 656,
        "code": "f <- function(letters) {    a <- c()\n    for (i in 1:length(letters)) {\n        if (letters[i] %in% a) {\n            return('no')\n        }\n        a <- c(a, letters[i])\n    }\n    return('yes')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('b', 'i', 'r', 'o', 's', 'j', 'v', 'p')), 'yes')))\n}\ntest_humaneval()"
    },
    {
        "id": 657,
        "code": "\nf <- function(text) {\n    for (punct in c('!', '.', '?', ',', ':', ';')) {\n        if (sum(strsplit(text, '')[[1]] == punct) > 1) {\n            return('no')\n        }\n        if (endsWith(text, punct)) {\n            return('no')\n        }\n    }\n    return(gsub(\"(\\\\w)(\\\\w*)\", \"\\\\U\\\\1\\\\L\\\\2\", text, perl = TRUE))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('djhasghasgdha'), 'Djhasghasgdha')))\n}\ntest_humaneval()"
    },
    {
        "id": 658
    },
    {
        "id": 659,
        "code": "f <- function(bots) {    clean <- vector()\n    for (username in bots) {\n        if (tolower(username) != username) {\n            clean <- c(clean, paste0(substr(username, 1, 2), substr(username, nchar(username) - 2, nchar(username))))\n        }\n    }\n    return(length(clean))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('yR?TAJhIW?n', 'o11BgEFDfoe', 'KnHdn2vdEd', 'wvwruuqfhXbGis')), 4)))\n}\ntest_humaneval()"
    },
    {
        "id": 660,
        "code": "\nf <- function(num) {\n    initial <- c(1)\n    total <- initial\n    for (i in 1:num) {\n        total <- c(1, total[-1] + total[-length(total)])\n        initial <- c(initial, total[length(total)])\n    }\n    return(sum(initial))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(3), 4)))\n}\ntest_humaneval()"
    },
    {
        "id": 661,
        "code": "\nf <- function(letters, maxsplit) {    \n    words <- strsplit(letters, ' ')[[1]]\n    paste(words[max(1, length(words) - maxsplit + 1):length(words)], collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('elrts,SS ee', 6), 'elrts,SSee')))\n}\ntest_humaneval()"
    },
    {
        "id": 662,
        "code": "f <- function(values) {    names <- c('Pete', 'Linda', 'Angela')\n    names <- c(names, values)\n    names <- sort(names)\n    return(names)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('Dan', 'Joe', 'Dusty')), c('Angela', 'Dan', 'Dusty', 'Joe', 'Linda', 'Pete'))))\n}\ntest_humaneval()"
    },
    {
        "id": 663,
        "code": "f <- function(container, cron) {    if (!(cron %in% container)) {\n        return(container)\n    }\n    pref <- container[1:(which(container == cron) - 1)]\n    suff <- container[(which(container == cron) + 1):length(container)]\n    return(c(pref, suff))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(), 2), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 664
    },
    {
        "id": 665,
        "code": "f <- function(chars) {    s <- \"\"\n    for (ch in strsplit(chars, \"\")[[1]]) {\n        if (sum(strsplit(chars, \"\")[[1]] == ch) %% 2 == 0) {\n            s <- paste0(s, toupper(ch))\n        } else {\n            s <- paste0(s, ch)\n        }\n    }\n    return(s)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('acbced'), 'aCbCed')))\n}\ntest_humaneval()"
    },
    {
        "id": 666
    },
    {
        "id": 667,
        "code": "\nf <- function(text) {    new_text <- c()\n    for (i in seq_len(nchar(text) %/% 3)) {\n        start <- (i - 1) * 3 + 1\n        end <- start + 2\n        new_text <- c(new_text, paste0('< ', substr(text, start, end), ' level=', i - 1, ' >'))\n    }\n    last_item <- substr(text, (nchar(text) %/% 3) * 3 + 1, nchar(text))\n    new_text <- c(new_text, paste0('< ', last_item, ' level=', nchar(text) %/% 3, ' >'))\n    return(new_text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('C7'), c('< C7 level=0 >'))))\n}\ntest_humaneval()"
    },
    {
        "id": 668,
        "code": "f <- function(text) {    paste0(substring(text, nchar(text)), substring(text, 1, nchar(text)-1))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('hellomyfriendear'), 'rhellomyfriendea')))\n}\ntest_humaneval()"
    },
    {
        "id": 669,
        "code": "\nf <- function(t) {    a_b <- strsplit(t, '-', fixed=TRUE)[[1]]\n    a <- paste(a_b[-length(a_b)], collapse='-')\n    b <- a_b[length(a_b)]\n    if (nchar(b) == nchar(a)) {\n        return('imbalanced')\n    }\n    paste(a, b, sep = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('fubarbaz'), 'fubarbaz')))\n}\ntest_humaneval()"
    },
    {
        "id": 670,
        "code": "\nf <- function(a, b) {\n    d <- setNames(b, a)\n    a <- sort(a, decreasing = TRUE, function(x) d[[x]])\n    unlist(lapply(a, function(x) d[[x]]))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('12', 'ab'), c(2, 2)), c(2, 2))))\n}\ntest_humaneval()"
    },
    {
        "id": 671,
        "code": "f <- function(text, char1, char2) {    t1a <- unlist(strsplit(char1, \"\"))\n    t2a <- unlist(strsplit(char2, \"\"))\n    t1 <- chartr(paste(t1a, collapse = \"\"), paste(t2a, collapse = \"\"), text)\n    return(t1)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('ewriyat emf rwto segya', 'tey', 'dgo'), 'gwrioad gmf rwdo sggoa')))\n}\ntest_humaneval()"
    },
    {
        "id": 672,
        "code": "f <- function(text, position, value) {    length <- nchar(text)\n    index <- (position %% (length + 2)) - 1\n    if (index >= length || index < 0) {\n        return(text)\n    }\n    text_list <- strsplit(text, '')[[1]]\n    text_list[index + 1] <- value\n    paste(text_list, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('1zd', 0, 'm'), '1zd')))\n}\ntest_humaneval()"
    },
    {
        "id": 673,
        "code": "f <- function(string) {    if (toupper(string) == string) {\n        return(tolower(string))\n    } else if (tolower(string) == string) {\n        return(toupper(string))\n    } else {\n        return(string)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('cA'), 'cA')))\n}\ntest_humaneval()"
    },
    {
        "id": 674,
        "code": "f <- function(text) {    ls <- strsplit(text, '')[[1]]\n    for (x in seq_along(ls)) {\n        if (length(ls) <= 1) break\n        if (!(ls[x] %in% strsplit('zyxwvutsrqponmlkjihgfedcba', '')[[1]])) {\n            ls <- ls[-x]\n        }\n    }\n    paste(ls, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('qq'), 'qq')))\n}\ntest_humaneval()"
    },
    {
        "id": 675,
        "code": "f <- function(nums, sort_count) {    sorted_nums <- sort(nums)\n    sorted_nums[1:sort_count]\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 2, 3, 4, 5), 1), c(1))))\n}\ntest_humaneval()"
    },
    {
        "id": 676,
        "code": "f <- function(text, tab_size) {    gsub('\\t', paste(rep(' ', tab_size), collapse=''), text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('a', 100), 'a')))\n}\ntest_humaneval()"
    },
    {
        "id": 677,
        "code": "\nf <- function(text, length) {    \n    length <- ifelse(length < 0, -length, length)\n    output <- ''\n    for (idx in 1:length) {\n        idx <- (idx - 1) %% nchar(text) + 1\n        if (substr(text, idx, idx) != ' ') {\n            output <- paste0(output, substr(text, idx, idx))\n        } else {\n            break\n        }\n    }\n    output\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('I got 1 and 0.', 5), 'I')))\n}\ntest_humaneval()"
    },
    {
        "id": 678
    },
    {
        "id": 679,
        "code": "f <- function(text) {    if (text == '') {\n        return(FALSE)\n    }\n    first_char <- substr(text, 1, 1)\n    if (grepl(\"^\\\\d\", first_char)) {\n        return(FALSE)\n    }\n    for (last_char in strsplit(text, '')[[1]]) {\n        if (last_char != '_' && !grepl(\"[[:alnum:]_]\", last_char)) {\n            return(FALSE)\n        }\n    }\n    return(TRUE)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('meet'), TRUE)))\n}\ntest_humaneval()"
    },
    {
        "id": 680,
        "code": "f <- function(text) {    letters <- ''\n    for (i in 1:nchar(text)) {\n        if (grepl(\"[[:alnum:]]\", substr(text, i, i), perl = TRUE)) {\n            letters <- paste0(letters, substr(text, i, i))\n        }\n    }\n    return(letters)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('we@32r71g72ug94=(823658*!@324'), 'we32r71g72ug94823658324')))\n}\ntest_humaneval()"
    },
    {
        "id": 681,
        "code": "f <- function(array, ind, elem) {    insert_index <- ifelse(ind < 0, -5, ifelse(ind > length(array), length(array), ind + 1))\n    array <- c(array[1:insert_index], elem, array[(insert_index+1):length(array)])\n    return(array)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 5, 8, 2, 0, 3), 2, 7), c(1, 5, 8, 7, 2, 0, 3))))\n}\ntest_humaneval()"
    },
    {
        "id": 682,
        "code": "f <- function(text, length, index) {    ls <- strsplit(text, \" \")[[1]]\n    ls <- rev(ls)\n    result <- sapply(ls, function(x) substr(x, 1, length))\n    paste(rev(result), collapse = \"_\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('hypernimovichyp', 2, 2), 'hy')))\n}\ntest_humaneval()"
    },
    {
        "id": 683,
        "code": "f <- function(dict1, dict2) {    result <- dict1\n    for (key in names(dict2)) {\n        result[key] <- dict2[key]\n    }\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(\"'disface'\" = 9, \"'cam'\" = 7), list(\"'mforce'\" = 5)), list(\"'disface'\" = 9, \"'cam'\" = 7, \"'mforce'\" = 5))))\n}\ntest_humaneval()"
    },
    {
        "id": 684,
        "code": "f <- function(text) {    trans <- chartr('\"\\'><', '9833', text)\n    return(trans)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Transform quotations\"\\nnot into numbers.'), 'Transform quotations9\\nnot into numbers.')))\n}\ntest_humaneval()"
    },
    {
        "id": 685,
        "code": "f <- function(array, elem) {    sum(array == elem) + elem\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 1, 1), -2), -2)))\n}\ntest_humaneval()"
    },
    {
        "id": 686
    },
    {
        "id": 687,
        "code": "f <- function(text) {    t <- strsplit(text, '')[[1]]\n    t <- t[-((length(t) %/% 2) + 1)]\n    t <- c(t, tolower(text))\n    return(paste(t, collapse = ':'))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Rjug nzufE'), 'R:j:u:g: :z:u:f:E:rjug nzufe')))\n}\ntest_humaneval()"
    },
    {
        "id": 688,
        "code": "f <- function(nums) {    l <- vector()\n    for (i in nums) {\n        if (!(i %in% l)) {\n            l <- c(l, i)\n        }\n    }\n    return(l)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(3, 1, 9, 0, 2, 0, 8)), c(3, 1, 9, 0, 2, 8))))\n}\ntest_humaneval()"
    },
    {
        "id": 689,
        "code": "f <- function(arr) {    count <- length(arr)\n    sub <- arr\n    for (i in seq(1, count, by=2)) {\n        sub[i] <- sub[i] * 5\n    }\n    sub\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(-3, -6, 2, 7)), c(-15, -6, 10, 7))))\n}\ntest_humaneval()"
    },
    {
        "id": 690,
        "code": "f <- function(n) {    if (grepl(\"\\\\.\", as.character(n))) {\n        return(as.character(as.numeric(n) + 2.5))\n    } else {\n        return(as.character(n))\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('800'), '800')))\n}\ntest_humaneval()"
    },
    {
        "id": 691,
        "code": "\nf <- function(text, suffix) {\n    if (nchar(suffix) > 0 && substr(suffix, nchar(suffix), nchar(suffix)) %in% strsplit(text, '')[[1]]) {\n        return(f(gsub(suffix, '', text, fixed = TRUE), substr(suffix, 1, nchar(suffix) - 1)))\n    } else {\n        return(text)\n    }\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('rpyttc', 'cyt'), 'rpytt')))\n}\ntest_humaneval()"
    },
    {
        "id": 692,
        "code": "f <- function(array) {    array <- rev(array)\n    a <- c()\n    for (i in seq_along(array)) {\n        if (array[i] != 0) {\n            a <- c(a, array[i])\n        }\n    }\n    rev(a)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c()), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 693,
        "code": "f <- function(text) {    n <- as.numeric(gregexpr(\"8\", text)[[1]][1]) - 1\n    paste(rep(\"x0\", n), collapse = \"\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('sa832d83r xd 8g 26a81xdf'), 'x0x0')))\n}\ntest_humaneval()"
    },
    {
        "id": 694
    },
    {
        "id": 695,
        "code": "f <- function(d) {    result <- list()\n    for (ki in names(d)) {\n      result[[ki]] <- list()\n      for (kj in seq_along(d[[ki]])) {\n        result[[ki]][[kj]] <- list()\n        for (kk in names(d[[ki]][[kj]])) {\n          result[[ki]][[kj]][[kk]] <- d[[ki]][[kj]][[kk]]\n        }\n      }\n    }\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list()), list())))\n}\ntest_humaneval()"
    },
    {
        "id": 696,
        "code": "f <- function(text) {    s <- 0\n    for (i in 2:nchar(text)) {\n        s <- s + nchar(substr(text, 1, i - 1))\n    }\n    return(s)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('wdj'), 3)))\n}\ntest_humaneval()"
    },
    {
        "id": 697,
        "code": "f <- function(s, sep) {    sep_index <- regexpr(sep, s)[1]\n    prefix <- substr(s, 1, sep_index - 1)\n    middle <- substr(s, sep_index, sep_index + nchar(sep) - 1)\n    right_str <- substr(s, sep_index + nchar(sep), nchar(s))\n    return(c(prefix, middle, right_str))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('not it', ''), c('', '', 'not it'))))\n}\ntest_humaneval()"
    },
    {
        "id": 698,
        "code": "f <- function(text) {    paste0(Filter(function(x) x != ')', strsplit(text, '')[[1]]), collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('(((((((((((d))))))))).))))((((('), '(((((((((((d.(((((')))\n}\ntest_humaneval()"
    },
    {
        "id": 699,
        "code": "\nf <- function(text, elem) {\n    if (elem != '') {\n        while(substr(text, 1, nchar(elem)) == elem) {\n            text <- substr(text, nchar(elem) + 1, nchar(text))\n        }\n        while(substr(elem, 1, nchar(text)) == text) {\n            elem <- substr(elem, nchar(text) + 1, nchar(elem))\n        }\n    }\n    return(c(elem, text))\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('some', '1'), c('1', 'some'))))\n}\ntest_humaneval()"
    },
    {
        "id": 700,
        "code": "f <- function(text) {    nchar(text) - sum(gregexpr(\"bot\", text)[[1]] >= 1)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Where is the bot in this world?'), 30)))\n}\ntest_humaneval()"
    },
    {
        "id": 701,
        "code": "f <- function(stg, tabs) {    for (tab in tabs) {\n        stg <- gsub(paste0(tab, \"$\"), \"\", stg)\n    }\n    stg\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('31849 let it!31849 pass!', c('3', '1', '8', ' ', '1', '9', '2', 'd')), '31849 let it!31849 pass!')))\n}\ntest_humaneval()"
    },
    {
        "id": 702,
        "code": "\nf <- function(nums) {\n    count <- length(nums)\n    for (i in seq(from=count, to=1, by=-1)) {\n        nums <- append(nums, nums[1], after=i)\n        nums <- nums[-1]\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(0, -5, -4)), c(-4, -5, 0))))\n}\ntest_humaneval()"
    },
    {
        "id": 703
    },
    {
        "id": 704,
        "code": "f <- function(s, n, c) {    width <- nchar(c) * n\n    while (nchar(s) < width) {\n        s <- paste0(c, s)\n    }\n    s\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('.', 0, '99'), '.')))\n}\ntest_humaneval()"
    },
    {
        "id": 705,
        "code": "f <- function(cities, name) {\n    if (name == \"\") {\n        return(cities)\n    }\n    if (name != \"\" && name != \"cities\") {\n        return(c())\n    }\n    return(paste0(name, cities))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('Sydney', 'Hong Kong', 'Melbourne', 'Sao Paolo', 'Istanbul', 'Boston'), 'Somewhere '), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 706,
        "code": "f <- function(r, w) {    a <- list()\n    if (substr(r, 1, 1) == substr(w, 1, 1) & substr(w, nchar(w), nchar(w)) == substr(r, nchar(r), nchar(r))) {\n        a <- c(r, w)\n    } else {\n        a <- c(w, r)\n    }\n    return(a)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('ab', 'xy'), c('xy', 'ab'))))\n}\ntest_humaneval()"
    },
    {
        "id": 707,
        "code": "f <- function(text, position) {    length <- nchar(text)\n    index <- position %% (length + 1)\n    if (position < 0 || index < 0) {\n        index <- -1\n    }\n    new_text <- strsplit(text, '')[[1]]\n    new_text <- new_text[-(index + 1)]\n    paste(new_text, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('undbs l', 1), 'udbs l')))\n}\ntest_humaneval()"
    },
    {
        "id": 708,
        "code": "f <- function(string) {    l <- strsplit(string, '')[[1]]\n    for (i in rev(seq_along(l))) {\n        if (l[i] != ' ') {\n            break\n        }\n        l <- l[-i]\n    }\n    paste(l, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('    jcmfxv     '), '    jcmfxv')))\n}\ntest_humaneval()"
    },
    {
        "id": 709,
        "code": "f <- function(text) {    my_list <- strsplit(text, \" \")[[1]]\n    my_list <- sort(my_list, decreasing = TRUE)\n    return(paste(my_list, collapse = \" \"))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('a loved'), 'loved a')))\n}\ntest_humaneval()"
    },
    {
        "id": 710
    },
    {
        "id": 711,
        "code": "f <- function(text) {    gsub(\"\\n\", \"\\t\", text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('apples\\n\\t\\npears\\n\\t\\nbananas'), 'apples\\t\\t\\tpears\\t\\t\\tbananas')))\n}\ntest_humaneval()"
    },
    {
        "id": 712,
        "code": "f <- function(text) {    created <- list()\n    lines <- strsplit(text, \"\\n\")[[1]]\n    for (line in lines) {\n        if (line == '') {\n            break\n        }\n        created <- c(created, rev(strsplit(line, \"\")[[1]])[flush])\n    }\n    return(rev(created))\n}\n\nflush <- 1\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('A(hiccup)A'), list(c('A')))))\n}\ntest_humaneval()"
    },
    {
        "id": 713,
        "code": "f <- function(text, char) {    if (char %in% strsplit(text, split = \"\")[[1]]) {\n        text <- strsplit(text, split = char)[[1]]\n        text <- sapply(text, function(t) {trimws(t)})\n        if (length(text) > 1) {\n            return(TRUE)\n        }\n    }\n    return(FALSE)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('only one line', ' '), TRUE)))\n}\ntest_humaneval()"
    },
    {
        "id": 714
    },
    {
        "id": 715,
        "code": "f <- function(text, char) {    nchar(text, type = \"char\") %% 2 != 0\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('abababac', 'a'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 716,
        "code": "f <- function(nums) {    count <- length(nums)\n    while(length(nums) > (count %/% 2)) {\n        nums <- c()\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(2, 1, 2, 3, 1, 6, 3, 8)), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 717,
        "code": "f <- function(text) {    k <- 1\n    l <- nchar(text)\n    while (!grepl(\"[a-zA-Z]\", substr(text, l, l))) {\n        l <- l - 1\n    }\n    while (!grepl(\"[a-zA-Z]\", substr(text, k, k))) {\n        k <- k + 1\n    }\n    if (k != 1 | l != nchar(text)) {\n        return(substr(text, k, l))\n    } else {\n        return(substr(text, 1, 1))\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('timetable, 2mil'), 't')))\n}\ntest_humaneval()"
    },
    {
        "id": 718,
        "code": "f <- function(text) {    t <- text\n    text <- gsub(\".\", \"\", text)\n    paste0(nchar(text), t)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('ThisIsSoAtrocious'), '0ThisIsSoAtrocious')))\n}\ntest_humaneval()"
    },
    {
        "id": 719,
        "code": "\nf <- function(code) {\n    lines <- unlist(strsplit(code, split=\"]\"))\n    result <- c()\n    level <- 0\n    for (line in lines) {\n        if (nchar(line) > 0) {\n            result <- c(result, paste0(substr(line, start=1, stop=1), ' ', paste(rep('  ', level), collapse=''), substr(line, start=2, stop=nchar(line))))\n        }\n        level <- level + (nchar(grep(\"{\", line, fixed=TRUE)) - nchar(grep(\"}\", line, fixed=TRUE)))\n    }\n    return(paste(result, collapse='\\n'))\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('if (x) {y = 1;} else {z = 1;}'), 'i f (x) {y = 1;} else {z = 1;}')))\n}\ntest_humaneval()"
    },
    {
        "id": 720,
        "code": "\nf <- function(items, item) {\n    while (items[length(items)] == item) {\n        items <- items[-length(items)]\n    }\n    items <- append(items, item)\n    return(length(items))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('bfreratrrbdbzagbretaredtroefcoiqrrneaosf'), 'n'), 2)))\n}\ntest_humaneval()"
    },
    {
        "id": 721,
        "code": "f <- function(nums) {    count <- length(nums)\n    for (num in 2:count) {\n        nums <- sort(nums)\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(-6, -5, -7, -8, 2)), c(-8, -7, -6, -5, 2))))\n}\ntest_humaneval()"
    },
    {
        "id": 722,
        "code": "f <- function(text) {    out <- \"\"\n    for (i in seq_len(nchar(text))) {\n        if (grepl(\"[A-Z]\", substr(text, i, i))) {\n            out <- paste(out, tolower(substr(text, i, i)), sep = \"\")\n        } else {\n            out <- paste(out, toupper(substr(text, i, i)), sep = \"\")\n        }\n    }\n    return(out)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(',wPzPppdl/'), ',WpZpPPDL/')))\n}\ntest_humaneval()"
    },
    {
        "id": 723
    },
    {
        "id": 724,
        "code": "f <- function(text, pattern) {\n    cites <- c(nchar(substring(text, regexpr(pattern, text) + nchar(pattern))))\n    for (char in strsplit(text, '')[[1]]) {\n        if (char == pattern) {\n            cites <- c(cites, nchar(substring(text, regexpr(pattern, text) + nchar(pattern))))\n        }\n    }\n    return(cites)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('010100', '010'), c(3))))\n}\ntest_humaneval()"
    },
    {
        "id": 725,
        "code": "f <- function(text) {    result_list <- c('3', '3', '3', '3')\n    if (length(result_list) > 0) {\n        result_list <- NULL\n    }\n    nchar(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('mrq7y'), 5)))\n}\ntest_humaneval()"
    },
    {
        "id": 726,
        "code": "f <- function(text) {    ws <- 0\n    for (s in strsplit(text, '')[[1]]) {\n        if (s %in% c(' ', '\\t', '\\n')) {\n            ws <- ws + 1\n        }\n    }\n    return(c(ws, nchar(text)))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('jcle oq wsnibktxpiozyxmopqkfnrfjds'), c(2, 34))))\n}\ntest_humaneval()"
    },
    {
        "id": 727,
        "code": "f <- function(numbers, prefix) {    result <- lapply(numbers, function(n) {\n        if (nchar(n) > nchar(prefix) && grepl(paste0(\"^\", prefix), n)) {\n            return(substr(n, nchar(prefix) + 1, nchar(n)))\n        } else {\n            return(n)\n        }\n    })\n    \n    unlist(result)[order(unlist(result))]\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('ix', 'dxh', 'snegi', 'wiubvu'), ''), c('dxh', 'ix', 'snegi', 'wiubvu'))))\n}\ntest_humaneval()"
    },
    {
        "id": 728,
        "code": "f <- function(text) {    result <- character(0)\n    for (i in 1:nchar(text)) {\n        ch <- substr(text, i, i)\n        if (ch == tolower(ch)) {\n            next\n        }\n        if ((nchar(text) - i) < max(gregexpr(tolower(ch), text)[[1]])) {\n            result <- c(result, ch)\n        }\n    }\n    paste(result, collapse = \"\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('ru'), '')))\n}\ntest_humaneval()"
    },
    {
        "id": 729
    },
    {
        "id": 730,
        "code": "f <- function(text) {    words <- unlist(strsplit(text, \" \"))\n    m <- 0\n    cnt <- 0\n    \n    for (i in words) {\n        if (nchar(i) > m) {\n            cnt <- cnt + 1\n            m <- nchar(i)\n        }\n    }\n    \n    return(cnt)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl'), 2)))\n}\ntest_humaneval()"
    },
    {
        "id": 731,
        "code": "f <- function(text, use) {    return(gsub(use, '', text))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Chris requires a ride to the airport on Friday.', 'a'), 'Chris requires  ride to the irport on Fridy.')))\n}\ntest_humaneval()"
    },
    {
        "id": 732,
        "code": "f <- function(char_freq) {    result <- list()\n    for (key in names(char_freq)) {\n        result[key] <- char_freq[[key]] %/% 2\n    }\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(\"'u'\" = 20, \"'v'\" = 5, \"'b'\" = 7, \"'w'\" = 3, \"'x'\" = 3)), list(\"'u'\" = 10, \"'v'\" = 2, \"'b'\" = 3, \"'w'\" = 1, \"'x'\" = 1))))\n}\ntest_humaneval()"
    },
    {
        "id": 733,
        "code": "f <- function(text) {    length <- nchar(text) %/% 2\n    left_half <- substr(text, 1, length)\n    right_half <- substring(text, length + 1, nchar(text))\n    paste0(left_half, rev(strsplit(right_half, \"\")[[1]]), collapse = \"\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('n'), 'n')))\n}\ntest_humaneval()"
    },
    {
        "id": 734,
        "code": "f <- function(nums) {    for (i in seq(length(nums), 1, by = -1)) {\n        if (nums[i] %% 2 == 0) {\n            nums <- nums[-i]\n        }\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(5, 3, 3, 7)), c(5, 3, 3, 7))))\n}\ntest_humaneval()"
    },
    {
        "id": 735,
        "code": "f <- function(sentence) {\n    if (sentence == '') {\n        return('')\n    }\n    sentence <- gsub(\"\\\\(|\\\\)\", \"\", sentence)\n    sentence <- gsub(\" \", \"\", tolower(sentence), fixed = TRUE)\n    return(gsub(\"^.\", toupper(substr(sentence,1,1)), sentence))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('(A (b B))'), 'Abb')))\n}\ntest_humaneval()"
    },
    {
        "id": 736,
        "code": "f <- function(text, insert) {    whitespaces <- c('\\t', '\\r', '\\v', ' ', '\\f', '\\n')\n    clean <- ''\n    for (char in strsplit(text, '')[[1]]) {\n        if (char %in% whitespaces) {\n            clean <- paste0(clean, insert)\n        } else {\n            clean <- paste0(clean, char)\n        }\n    }\n    return(clean)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('pi wa', 'chi'), 'pichiwa')))\n}\ntest_humaneval()"
    },
    {
        "id": 737,
        "code": "f <- function(nums) {    counts <- 0\n    for (i in nums) {\n        if (grepl(\"^\\\\d+$\", as.character(i))) {\n            if (counts == 0) {\n                counts <- counts + 1\n            }\n        }\n    }\n    return(counts)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(0, 6, 2, -1, -2)), 1)))\n}\ntest_humaneval()"
    },
    {
        "id": 738,
        "code": "f <- function(text, characters) {    for (i in 1:length(characters)) {\n        text <- gsub(paste0(\"([\", characters[i], \"])+$\"), \"\", text)\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('r;r;r;r;r;r;r;r;r', 'x.r'), 'r;r;r;r;r;r;r;r;')))\n}\ntest_humaneval()"
    },
    {
        "id": 739,
        "code": "f <- function(st, pattern) {    for (p in pattern) {\n        if (substring(st, 1, nchar(p)) != p) {\n            return(FALSE)\n        }\n        st <- substr(st, nchar(p) + 1, nchar(st))\n    }\n    return(TRUE)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('qwbnjrxs', c('jr', 'b', 'r', 'qw')), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 740,
        "code": "f <- function(plot, delin) {    if (delin %in% plot) {\n        split <- which(plot == delin)\n        first <- plot[1:(split-1)]\n        second <- plot[(split+1):length(plot)]\n        return(c(first, second))\n    } else {\n        return(plot)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3, 4), 3), c(1, 2, 4))))\n}\ntest_humaneval()"
    },
    {
        "id": 741,
        "code": "\nf <- function(nums, p) {\n    prev_p <- p - 1\n    if (prev_p < 0) prev_p <- length(nums) - 1\n    return(nums[prev_p + 1])\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(6, 8, 2, 5, 3, 1, 9, 7), 6), 1)))\n}\ntest_humaneval()"
    },
    {
        "id": 742,
        "code": "f <- function(text) {    b <- TRUE\n    for (x in strsplit(text, split = '')[[1]]) {\n        if (grepl(\"[0-9]\", x)) {\n            b <- TRUE\n        } else {\n            b <- FALSE\n            break\n        }\n    }\n    return(b)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('-1-3'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 743,
        "code": "f <- function(text) {    strings <- unlist(strsplit(text, \",\"))\n    -(nchar(strings[1]) + nchar(strings[2]))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('dog,cat'), -6)))\n}\ntest_humaneval()"
    },
    {
        "id": 744,
        "code": "f <- function(text, new_ending) {    result <- strsplit(text, '')[[1]]\n    result <- c(result, strsplit(new_ending, '')[[1]])\n    paste(result, collapse='')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('jro', 'wdlp'), 'jrowdlp')))\n}\ntest_humaneval()"
    },
    {
        "id": 745,
        "code": "f <- function(address) {    suffix_start <- regexpr(\"@\", address)[1] + 1\n    if (sum(grepl(\"\\\\.\", substr(address, suffix_start, nchar(address))) > 1)) {\n        address <- substr(address, 1, suffix_start - 1)\n    }\n    address\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('minimc@minimc.io'), 'minimc@minimc.io')))\n}\ntest_humaneval()"
    },
    {
        "id": 746,
        "code": "f <- function(dct) {    values <- unlist(dct)\n    result <- vector(\"list\", length = length(values))\n    for(i in seq_along(values)){\n        item <- paste0(strsplit(values[i], '.', fixed = TRUE)[[1]][1], '@pinc.uk')\n        result[i] <- item\n    }\n    names(result) <- values\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list()), list())))\n}\ntest_humaneval()"
    },
    {
        "id": 747,
        "code": "f <- function(text) {    if (text == '42.42') {\n        return(TRUE)\n    }\n    for (i in 4:(nchar(text) - 2)) {\n        if (substr(text, i, i) == '.' && is.numeric(substr(text, i - 3, nchar(text))) && is.numeric(substr(text, 1, i - 1))) {\n            return(TRUE)\n        }\n    }\n    return(FALSE)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('123E-10'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 748
    },
    {
        "id": 749
    },
    {
        "id": 750,
        "code": "f <- function(char_map, text) {    new_text <- ''\n    for (ch in strsplit(text, '')[[1]]) {\n        val <- char_map[[ch]]\n        if (is.null(val)) {\n            new_text <- paste0(new_text, ch)\n        } else {\n            new_text <- paste0(new_text, val)\n        }\n    }\n    return(new_text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list(), 'hbd'), 'hbd')))\n}\ntest_humaneval()"
    },
    {
        "id": 751,
        "code": "f <- function(text, char, min_count) {    count <- nchar(gsub(sprintf(\"[^%s]\", char), \"\", text))\n    if (count < min_count) {\n        return(toupper(text))\n    } else {\n        return(text)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('wwwwhhhtttpp', 'w', 3), 'wwwwhhhtttpp')))\n}\ntest_humaneval()"
    },
    {
        "id": 752,
        "code": "\nf <- function(s, amount) {    \n    paste((paste(rep('z', amount - nchar(s)), collapse = \"\")), s, sep = \"\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('abc', 8), 'zzzzzabc')))\n}\ntest_humaneval()"
    },
    {
        "id": 753
    },
    {
        "id": 754,
        "code": "f <- function(nums) {    width <- as.numeric(nums[1])\n    result <- lapply(nums[-1], function(val) {\n        sprintf(paste0(\"%0\", width, \"d\"), as.numeric(val))\n    })\n    return(as.character(result))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('1', '2', '2', '44', '0', '7', '20257')), c('2', '2', '44', '0', '7', '20257'))))\n}\ntest_humaneval()"
    },
    {
        "id": 755,
        "code": "f <- function(replace, text, hide) {    while (grepl(hide, text, fixed=TRUE)) {\n        replace <- paste0(replace, 'ax')\n        text <- gsub(hide, replace, text, fixed=TRUE, perl=TRUE)\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('###', 'ph>t#A#BiEcDefW#ON#iiNCU', '.'), 'ph>t#A#BiEcDefW#ON#iiNCU')))\n}\ntest_humaneval()"
    },
    {
        "id": 756,
        "code": "f <- function(text) {    if (grepl(\"^[0-9]+$\", text)) {\n        return('integer')\n    } else {\n        return('string')\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(''), 'string')))\n}\ntest_humaneval()"
    },
    {
        "id": 757,
        "code": "f <- function(text, char, replace) {    return(gsub(char, replace, text))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('a1a8', '1', 'n2'), 'an2a8')))\n}\ntest_humaneval()"
    },
    {
        "id": 758,
        "code": "f <- function(nums) {    if(identical(nums, rev(nums))) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(0, 3, 6, 2)), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 759,
        "code": "f <- function(text, sub) {    index <- c()\n    starting <- 1\n    while (starting != -1) {\n        starting <- regexpr(sub, text, starting)\n        if (starting != -1) {\n            index <- c(index, starting)\n            starting <- starting + nchar(sub)\n        }\n    }\n    return(index)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('egmdartoa', 'good'), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 760
    },
    {
        "id": 761,
        "code": "f <- function(array) {    output <- c(array)\n    output[c(TRUE, FALSE)] <- rev(array[c(FALSE, TRUE)])\n    rev(output)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c()), c())))\n}\ntest_humaneval()"
    },
    {
        "id": 762,
        "code": "\nf <- function(text) {   \n    text = tolower(text)\n    capitalize = paste(toupper(substring(text, 1, 1)), substring(text, 2), sep = \"\")\n    paste0(substring(text, 1, 1), substring(capitalize, 2))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('this And cPanel'), 'this and cpanel')))\n}\ntest_humaneval()"
    },
    {
        "id": 763,
        "code": "\nf <- function(values, text, markers) {    text <- gsub(paste0('[', values, markers, ']*$'), '', text)\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('2Pn', 'yCxpg2C2Pny2', ''), 'yCxpg2C2Pny')))\n}\ntest_humaneval()"
    },
    {
        "id": 764,
        "code": "f <- function(text, old, new) {    text2 <- gsub(old, new, text, fixed = TRUE)\n    old2 <- strsplit(old, \"\")[[1]]\n    old2 <- paste(rev(old2), collapse = \"\")\n    while (grepl(old2, text2)) {\n        text2 <- gsub(old2, new, text2, fixed = TRUE)\n    }\n    return(text2)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('some test string', 'some', 'any'), 'any test string')))\n}\ntest_humaneval()"
    },
    {
        "id": 765,
        "code": "f <- function(text) {    sum(nchar(gsub(\"[^[:digit:]]\", \"\", text)))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('so456'), 3)))\n}\ntest_humaneval()"
    },
    {
        "id": 766
    },
    {
        "id": 767,
        "code": "f <- function(text) {    a <- unlist(strsplit(trimws(text), ' '))\n    for (i in 1:length(a)) {\n        if (!grepl('^[0-9]+$', a[i])) {\n            return('-')\n        }\n    }\n    paste(a, collapse = ' ')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('d khqw whi fwi bbn 41'), '-')))\n}\ntest_humaneval()"
    },
    {
        "id": 768,
        "code": "f <- function(s, o) {    if (substr(s, 1, nchar(o)) == o) {\n        s\n    } else {\n        paste0(o, f(s, substr(o, nchar(o)-1, 1)))\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('abba', 'bab'), 'bababba')))\n}\ntest_humaneval()"
    },
    {
        "id": 769,
        "code": "f <- function(text) {    text_list <- strsplit(text, '')[[1]]\n    for (i in 1:length(text_list)) {\n        text_list[i] <- ifelse(text_list[i] == toupper(text_list[i]), tolower(text_list[i]), toupper(text_list[i]))\n    }\n    paste(text_list, collapse = '')\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('akA?riu'), 'AKa?RIU')))\n}\ntest_humaneval()"
    },
    {
        "id": 770
    },
    {
        "id": 771,
        "code": "\nf <- function(items) {    odd_positioned <- c()\n    while (length(items) > 0) {\n        position <- which.min(items)\n        item <- items[position + 1]\n        items <- items[-c(position, position + 1)]\n        odd_positioned <- c(odd_positioned, item)\n    }\n    return(odd_positioned)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3, 4, 5, 6, 7, 8)), c(2, 4, 6, 8))))\n}\ntest_humaneval()"
    },
    {
        "id": 772,
        "code": "f <- function(phrase) {    result <- ''\n    for (i in strsplit(phrase, '')[[1]]) {\n        if (!grepl('[a-z]', i)) {\n            result <- paste0(result, i)\n        }\n    }\n    return(result)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('serjgpoDFdbcA.'), 'DFA.')))\n}\ntest_humaneval()"
    },
    {
        "id": 773,
        "code": "\nf <- function(nums, n) {    num <- nums[n+1]\n    nums <- nums[-n]\n    return(num)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(-7, 3, 1, -1, -1, 0, 4), 6), 4)))\n}\ntest_humaneval()"
    },
    {
        "id": 774,
        "code": "\nf <- function(num, name) {\n    f_str <- 'quiz leader = %s, count = %d'\n    sprintf(f_str, name, num)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(23, 'Cornareti'), 'quiz leader = Cornareti, count = 23')))\n}\ntest_humaneval()"
    },
    {
        "id": 775,
        "code": "f <- function(nums) {    count <- length(nums)\n    for (i in 1:(count %/% 2)) {\n        temp <- nums[i]\n        nums[i] <- nums[count-i+1]\n        nums[count-i+1] <- temp\n    }\n    return(nums)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(2, 6, 1, 3, 1)), c(1, 3, 1, 6, 2))))\n}\ntest_humaneval()"
    },
    {
        "id": 776,
        "code": "\nf <- function(dictionary) {\n    a <- dictionary\n    keys_to_delete <- c()\n    for (key in names(a)) {\n        if (as.integer(key) %% 2 != 0) {\n            keys_to_delete <- c(keys_to_delete, key)\n            a[paste0(\"$\", key)] <- a[[key]]\n        }\n    }\n    a <- a[setdiff(names(a), keys_to_delete)]\n    return(a)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(list()), list())))\n}\ntest_humaneval()"
    },
    {
        "id": 777,
        "code": "f <- function(names, excluded) {    excluded <- excluded\n    for (i in seq_along(names)) {\n        if (grepl(excluded, names[i])) {\n            names[i] <- gsub(excluded, \"\", names[i])\n        }\n    }\n    return(names)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c('avc  a .d e'), ''), c('avc  a .d e'))))\n}\ntest_humaneval()"
    },
    {
        "id": 778,
        "code": "f <- function(prefix, text) {    if (startsWith(text, prefix)) {\n        return(text)\n    } else {\n        return(paste0(prefix, text))\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('mjs', 'mjqwmjsqjwisojqwiso'), 'mjsmjqwmjsqjwisojqwiso')))\n}\ntest_humaneval()"
    },
    {
        "id": 779,
        "code": "f <- function(text) {    values <- strsplit(text, \" \")[[1]]\n    sprintf(\"${first}y, ${second}x, ${third}r, ${fourth}p\", \n            first=values[1], second=values[2], third=values[3], fourth=values[4])\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('python ruby c javascript'), '${first}y, ${second}x, ${third}r, ${fourth}p')))\n}\ntest_humaneval()"
    },
    {
        "id": 780,
        "code": "f <- function(ints) {    counts <- rep(0, 301)\n    \n    for (i in ints) {\n        counts[i + 1] <- counts[i + 1] + 1\n    }\n    \n    r <- c()\n    for (i in 1:length(counts)) {\n        if (counts[i] >= 3) {\n            r <- c(r, toString(i - 1))\n        }\n    }\n    counts <- NULL\n    paste(r, collapse = \" \")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(2, 3, 5, 2, 4, 5, 2, 89)), '2')))\n}\ntest_humaneval()"
    },
    {
        "id": 781,
        "code": "f <- function(s, ch) {    if (!(ch %in% strsplit(s, '')[[1]])) {\n        return('')\n    }\n    s <- substring(s, regexpr(ch, s) + nchar(ch), nchar(s))\n    for (i in 1:nchar(s)) {\n        s <- substring(s, regexpr(ch, s) + nchar(ch), nchar(s))\n    }\n    return(s)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('shivajimonto6', '6'), '')))\n}\ntest_humaneval()"
    },
    {
        "id": 782,
        "code": "f <- function(input) {    for (char in strsplit(input, '')[[1]]) {\n        if (char %in% LETTERS) {\n            return(FALSE)\n        }\n    }\n    return(TRUE)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('a j c n x X k'), FALSE)))\n}\ntest_humaneval()"
    },
    {
        "id": 783,
        "code": "f <- function(text, comparison) {    length <- nchar(comparison)\n    if (length <= nchar(text)) {\n        for (i in 1:length) {\n            if (substring(comparison, length - i + 1, length - i + 1) != substring(text, nchar(text) - i + 1, nchar(text) - i + 1)) {\n                return(i - 1)\n            }\n        }\n    }\n    return(length)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('managed', ''), 0)))\n}\ntest_humaneval()"
    },
    {
        "id": 784,
        "code": "\nf <- function(key, value) {\n    dict_ <- setNames(as.list(value), key)\n    popped <- dict_[length(dict_)]\n    names <- names(popped)\n    values <- as.character(popped)\n    return(c(names, values))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('read', 'Is'), c('read', 'Is'))))\n}\ntest_humaneval()"
    },
    {
        "id": 785,
        "code": "\nf <- function(n) {    \n    streak <- ''\n    for (c in strsplit(as.character(n), split=\"\")[[1]]) {\n        streak <- paste0(streak, sprintf(\"%-*s\", as.numeric(c) * 2, c))\n    }\n    return(streak)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(1), '1 ')))\n}\ntest_humaneval()"
    },
    {
        "id": 786
    },
    {
        "id": 787,
        "code": "f <- function(text) {    if (nchar(text) == 0) {\n        return('')\n    }\n    text <- tolower(text)\n    paste0(toupper(substr(text, 1, 1)), substr(text, 2, nchar(text)))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('xzd'), 'Xzd')))\n}\ntest_humaneval()"
    },
    {
        "id": 788,
        "code": "f <- function(text, suffix) {    if (substring(suffix, 1, 1) == \"/\") {\n        return(paste0(text, substring(suffix, 2)))\n    }\n    return(text)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('hello.txt', '/'), 'hello.txt')))\n}\ntest_humaneval()"
    },
    {
        "id": 789,
        "code": "f <- function(text, n) {    if (n < 0 || n >= nchar(text)) {\n        return(text)\n    }\n    result <- substr(text, 1, n)\n    i <- nchar(result)\n    while (i >= 1) {\n        if (substr(result, i, i) != substr(text, i, i)) {\n            break\n        }\n        i <- i - 1\n    }\n    return(substr(text, 1, i))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('bR', -1), 'bR')))\n}\ntest_humaneval()"
    },
    {
        "id": 790
    },
    {
        "id": 791,
        "code": "f <- function(integer, n) {    i <- 1\n    text <- as.character(integer)\n    while (i + nchar(text) < n) {\n        i <- i + nchar(text)\n    }\n    return (paste0(strrep(\"0\", i), text))\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(8999, 2), '08999')))\n}\ntest_humaneval()"
    },
    {
        "id": 792
    },
    {
        "id": 793,
        "code": "\nf <- function(lst, start, end) {    count <- 0\n    for (i in start:(end - 1)) {\n        for (j in i:(end - 1)) {\n            if (lst[i + 1] != lst[j + 1]) {\n                count <- count + 1\n            }\n        }\n    }\n    return(count)\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 4, 3, 2, 1), 0, 3), 3)))\n}\ntest_humaneval()"
    },
    {
        "id": 794,
        "code": "f <- function(line) {    a <- strsplit(gsub(\"[^[:alnum:]]\", \"\", line), \"\")[[1]]\n    paste(a, collapse = \"\")\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('\"\\\\%$ normal chars $%~ qwet42\\''), 'normalcharsqwet42')))\n}\ntest_humaneval()"
    },
    {
        "id": 795,
        "code": "\nf <- function(text) {\n    text <- tolower(text)\n    text <- gsub(\"i o\", \"io\", text)\n    text <- gsub(\"(\\\\b[a-z])\", \"\\\\U\\\\1\", text, perl = TRUE)\n    return(text)\n}\n\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('Fu,ux zfujijabji pfu.'), 'Fu,Ux Zfujijabji Pfu.')))\n}\ntest_humaneval()"
    },
    {
        "id": 796,
        "code": "f <- function(str, toget) {    if (startsWith(str, toget)) {\n        substr(str, start = nchar(toget) + 1, stop = nchar(str))\n    } else {\n        str\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('fnuiyh', 'ni'), 'fnuiyh')))\n}\ntest_humaneval()"
    },
    {
        "id": 797
    },
    {
        "id": 798,
        "code": "f <- function(text, pre) {    if (substring(text, 1, nchar(pre)) != pre) {\n        return(text)\n    } else {\n        return(substring(text, nchar(pre) + 1))\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('@hihu@!', '@hihu'), '@!')))\n}\ntest_humaneval()"
    },
    {
        "id": 799,
        "code": "\nf <- function(st) {\n    if (substr(st, 1, 1) == '~') {\n        e <- strrep(\"s\", 10 - nchar(st))\n        st <- paste(e, st, sep = \"\")\n        return(f(st))\n    } else {\n        e <- strrep(\"n\", 10 - nchar(st))\n        return(paste(e, st, sep = \"\"))\n    }\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate('eqe-;ew22'), 'neqe-;ew22')))\n}\ntest_humaneval()"
    }
]