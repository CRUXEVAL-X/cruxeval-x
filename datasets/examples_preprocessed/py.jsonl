{"id": 0, "prompt": "from typing import List\n\ndef f(my_list: List[str]) -> int:\n    ", "tests": "def check(candidate):\n    assert candidate(['mq', 'px', 'zy']) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n", "input_reasoning": "def check(candidate):\n    assert candidate(????) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n", "output_reasoning": "def check(candidate):\n    assert candidate(['mq', 'px', 'zy']) == ????\n\ndef test_check():\n    check(f)\n\ntest_check()\n"}
{"id": 1, "prompt": "def f(s1: str, s2: str) -> str:\n    ", "tests": "def check(candidate):\n    assert candidate('ba', 'nana') == 'banana'\n\ndef test_check():\n    check(f)\n\ntest_check()\n", "input_reasoning": "def check(candidate):\n    assert candidate(????) == 'banana'\n\ndef test_check():\n    check(f)\n\ntest_check()\n", "output_reasoning": "def check(candidate):\n    assert candidate('ba', 'nana') == ????\n\ndef test_check():\n    check(f)\n\ntest_check()\n"}
{"id": 2, "prompt": "from typing import Dict, Tuple\n\ndef f(d: Dict[str, int]) -> Tuple[int, int]:\n    ", "tests": "def check(candidate):\n    assert candidate({ 'x': 5, 'y': 12 }) == (5, 12)\n\ndef test_check():\n    check(f)\n\ntest_check()\n", "input_reasoning": "def check(candidate):\n    assert candidate(????) == (5, 12)\n\ndef test_check():\n    check(f)\n\ntest_check()\n", "output_reasoning": "def check(candidate):\n    assert candidate({ 'x': 5, 'y': 12 }) == ????\n\ndef test_check():\n    check(f)\n\ntest_check()\n"}
